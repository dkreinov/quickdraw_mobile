=== W&B Sweep Run: LR=0.000730 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007303567889964249
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000730
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9276 | LR: 1.48e-05 | GradNorm: 1.433
  Batch    4/48 | Loss: 3.9308 | LR: 4.50e-05 | GradNorm: 1.040
  Batch    8/48 | Loss: 3.9210 | LR: 7.51e-05 | GradNorm: 0.738
  Batch   12/48 | Loss: 3.9143 | LR: 1.05e-04 | GradNorm: 0.598
  Batch   16/48 | Loss: 3.9199 | LR: 1.35e-04 | GradNorm: 0.550
  Batch   20/48 | Loss: 3.9184 | LR: 1.65e-04 | GradNorm: 0.592
  Batch   24/48 | Loss: 3.9101 | LR: 1.96e-04 | GradNorm: 0.563
  Batch   28/48 | Loss: 3.9120 | LR: 2.26e-04 | GradNorm: 0.568
  Batch   32/48 | Loss: 3.8796 | LR: 2.56e-04 | GradNorm: 0.502
  Batch   36/48 | Loss: 3.8387 | LR: 2.86e-04 | GradNorm: 0.663
  Batch   40/48 | Loss: 3.9069 | LR: 3.16e-04 | GradNorm: 3.444
  Batch   44/48 | Loss: 3.7975 | LR: 3.46e-04 | GradNorm: 2.632
Epoch 1/10: Train=2.95%, Val=6.45%, Gap=-3.50%, LR=3.69e-04
  Batch    0/48 | Loss: 3.7571 | LR: 3.76e-04 | GradNorm: 2.572
  Batch    4/48 | Loss: 3.7705 | LR: 4.06e-04 | GradNorm: 3.432
  Batch    8/48 | Loss: 3.7106 | LR: 4.37e-04 | GradNorm: 2.504
  Batch   12/48 | Loss: 3.6621 | LR: 4.67e-04 | GradNorm: 2.482
  Batch   16/48 | Loss: 3.7726 | LR: 4.97e-04 | GradNorm: 17.175
  Batch   20/48 | Loss: 3.6677 | LR: 5.27e-04 | GradNorm: 1.823
  Batch   24/48 | Loss: 3.6022 | LR: 5.57e-04 | GradNorm: 2.613
  Batch   28/48 | Loss: 3.5864 | LR: 5.87e-04 | GradNorm: 2.051
  Batch   32/48 | Loss: 3.6068 | LR: 6.17e-04 | GradNorm: 4.494
  Batch   36/48 | Loss: 3.5641 | LR: 6.48e-04 | GradNorm: 1.334
  Batch   40/48 | Loss: 3.8146 | LR: 6.78e-04 | GradNorm: 8.151
  Batch   44/48 | Loss: 3.6854 | LR: 7.08e-04 | GradNorm: 4.944
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.98%, Val=3.77%, Gap=3.21%, LR=7.30e-04
  Batch    0/48 | Loss: 3.8524 | LR: 7.30e-04 | GradNorm: 1.582
  Batch    4/48 | Loss: 3.7367 | LR: 7.30e-04 | GradNorm: 2.464
  Batch    8/48 | Loss: 3.6251 | LR: 7.29e-04 | GradNorm: 1.590
  Batch   12/48 | Loss: 3.8777 | LR: 7.28e-04 | GradNorm: 4.874
  Batch   16/48 | Loss: 3.8710 | LR: 7.27e-04 | GradNorm: 2.821
  Batch   20/48 | Loss: 3.7905 | LR: 7.25e-04 | GradNorm: 1.862
  Batch   24/48 | Loss: 3.6695 | LR: 7.23e-04 | GradNorm: 1.192
  Batch   28/48 | Loss: 3.6001 | LR: 7.20e-04 | GradNorm: 1.355
  Batch   32/48 | Loss: 3.6276 | LR: 7.17e-04 | GradNorm: 3.492
  Batch   36/48 | Loss: 3.5388 | LR: 7.14e-04 | GradNorm: 2.028
  Batch   40/48 | Loss: 3.5387 | LR: 7.10e-04 | GradNorm: 3.880
  Batch   44/48 | Loss: 3.5489 | LR: 7.06e-04 | GradNorm: 3.721
Epoch 3/10: Train=7.55%, Val=11.10%, Gap=-3.55%, LR=7.03e-04
  Batch    0/48 | Loss: 3.4560 | LR: 7.01e-04 | GradNorm: 1.945
  Batch    4/48 | Loss: 3.3996 | LR: 6.97e-04 | GradNorm: 1.596
  Batch    8/48 | Loss: 3.4230 | LR: 6.91e-04 | GradNorm: 1.978
  Batch   12/48 | Loss: 3.4010 | LR: 6.86e-04 | GradNorm: 3.015
  Batch   16/48 | Loss: 3.3673 | LR: 6.80e-04 | GradNorm: 2.387
  Batch   20/48 | Loss: 3.3670 | LR: 6.74e-04 | GradNorm: 3.156
  Batch   24/48 | Loss: 3.3351 | LR: 6.67e-04 | GradNorm: 2.629
  Batch   28/48 | Loss: 3.3067 | LR: 6.60e-04 | GradNorm: 2.961
  Batch   32/48 | Loss: 3.3281 | LR: 6.53e-04 | GradNorm: 2.403
  Batch   36/48 | Loss: 3.2856 | LR: 6.46e-04 | GradNorm: 2.235
  Batch   40/48 | Loss: 3.3281 | LR: 6.38e-04 | GradNorm: 3.238
  Batch   44/48 | Loss: 3.3045 | LR: 6.30e-04 | GradNorm: 2.506
Epoch 4/10: Train=14.07%, Val=11.35%, Gap=2.72%, LR=6.23e-04
  Batch    0/48 | Loss: 3.2414 | LR: 6.21e-04 | GradNorm: 1.582
  Batch    4/48 | Loss: 3.2453 | LR: 6.13e-04 | GradNorm: 4.217
  Batch    8/48 | Loss: 3.2078 | LR: 6.04e-04 | GradNorm: 1.612
  Batch   12/48 | Loss: 3.1884 | LR: 5.95e-04 | GradNorm: 2.504
  Batch   16/48 | Loss: 3.2055 | LR: 5.85e-04 | GradNorm: 1.191
  Batch   20/48 | Loss: 3.1759 | LR: 5.75e-04 | GradNorm: 1.791
  Batch   24/48 | Loss: 3.1467 | LR: 5.66e-04 | GradNorm: 1.415
  Batch   28/48 | Loss: 3.1638 | LR: 5.55e-04 | GradNorm: 2.482
  Batch   32/48 | Loss: 3.1761 | LR: 5.45e-04 | GradNorm: 2.848
  Batch   36/48 | Loss: 3.1886 | LR: 5.35e-04 | GradNorm: 3.299
  Batch   40/48 | Loss: 3.1713 | LR: 5.24e-04 | GradNorm: 2.422
  Batch   44/48 | Loss: 3.1781 | LR: 5.13e-04 | GradNorm: 3.114
Epoch 5/10: Train=18.53%, Val=15.23%, Gap=3.30%, LR=5.05e-04
  Batch    0/48 | Loss: 3.1648 | LR: 5.02e-04 | GradNorm: 5.908
  Batch    4/48 | Loss: 3.0308 | LR: 4.91e-04 | GradNorm: 1.471
  Batch    8/48 | Loss: 3.0886 | LR: 4.80e-04 | GradNorm: 3.853
  Batch   12/48 | Loss: 3.0839 | LR: 4.68e-04 | GradNorm: 1.972
  Batch   16/48 | Loss: 3.0516 | LR: 4.57e-04 | GradNorm: 3.211
  Batch   20/48 | Loss: 3.0301 | LR: 4.45e-04 | GradNorm: 2.735
  Batch   24/48 | Loss: 3.0733 | LR: 4.34e-04 | GradNorm: 4.038
  Batch   28/48 | Loss: 2.9972 | LR: 4.22e-04 | GradNorm: 2.508
  Batch   32/48 | Loss: 3.0056 | LR: 4.10e-04 | GradNorm: 2.371
  Batch   36/48 | Loss: 3.0384 | LR: 3.98e-04 | GradNorm: 1.849
  Batch   40/48 | Loss: 3.0265 | LR: 3.86e-04 | GradNorm: 3.668
  Batch   44/48 | Loss: 3.0709 | LR: 3.74e-04 | GradNorm: 1.954
Epoch 6/10: Train=21.66%, Val=12.88%, Gap=8.78%, LR=3.65e-04
  Batch    0/48 | Loss: 3.0326 | LR: 3.62e-04 | GradNorm: 3.102
  Batch    4/48 | Loss: 2.9934 | LR: 3.50e-04 | GradNorm: 2.010
  Batch    8/48 | Loss: 2.9862 | LR: 3.38e-04 | GradNorm: 2.441
  Batch   12/48 | Loss: 2.9084 | LR: 3.26e-04 | GradNorm: 1.667
  Batch   16/48 | Loss: 2.9690 | LR: 3.15e-04 | GradNorm: 2.986
  Batch   20/48 | Loss: 2.9814 | LR: 3.03e-04 | GradNorm: 1.553
  Batch   24/48 | Loss: 2.9869 | LR: 2.91e-04 | GradNorm: 3.152
  Batch   28/48 | Loss: 2.9619 | LR: 2.79e-04 | GradNorm: 1.539
  Batch   32/48 | Loss: 2.9500 | LR: 2.68e-04 | GradNorm: 2.221
  Batch   36/48 | Loss: 2.9783 | LR: 2.56e-04 | GradNorm: 1.873
  Batch   40/48 | Loss: 2.9338 | LR: 2.45e-04 | GradNorm: 1.693
  Batch   44/48 | Loss: 2.9342 | LR: 2.34e-04 | GradNorm: 3.589
Epoch 7/10: Train=24.86%, Val=14.24%, Gap=10.62%, LR=2.25e-04
  Batch    0/48 | Loss: 2.9029 | LR: 2.23e-04 | GradNorm: 2.131
  Batch    4/48 | Loss: 2.8634 | LR: 2.12e-04 | GradNorm: 4.119
  Batch    8/48 | Loss: 2.8611 | LR: 2.01e-04 | GradNorm: 2.530
  Batch   12/48 | Loss: 2.9325 | LR: 1.90e-04 | GradNorm: 3.121
  Batch   16/48 | Loss: 2.9051 | LR: 1.80e-04 | GradNorm: 4.056
  Batch   20/48 | Loss: 2.8319 | LR: 1.70e-04 | GradNorm: 1.760
  Batch   24/48 | Loss: 2.7966 | LR: 1.60e-04 | GradNorm: 3.446
  Batch   28/48 | Loss: 2.8368 | LR: 1.50e-04 | GradNorm: 1.233
  Batch   32/48 | Loss: 2.8540 | LR: 1.41e-04 | GradNorm: 3.798
  Batch   36/48 | Loss: 2.8356 | LR: 1.31e-04 | GradNorm: 2.614
  Batch   40/48 | Loss: 2.7329 | LR: 1.22e-04 | GradNorm: 1.923
  Batch   44/48 | Loss: 2.8112 | LR: 1.13e-04 | GradNorm: 2.057
Epoch 8/10: Train=28.84%, Val=16.39%, Gap=12.45%, LR=1.07e-04
  Batch    0/48 | Loss: 2.7504 | LR: 1.05e-04 | GradNorm: 1.286
  Batch    4/48 | Loss: 2.7723 | LR: 9.67e-05 | GradNorm: 1.448
  Batch    8/48 | Loss: 2.8306 | LR: 8.87e-05 | GradNorm: 2.350
  Batch   12/48 | Loss: 2.7456 | LR: 8.11e-05 | GradNorm: 2.037
  Batch   16/48 | Loss: 2.7032 | LR: 7.37e-05 | GradNorm: 2.806
  Batch   20/48 | Loss: 2.7321 | LR: 6.67e-05 | GradNorm: 2.832
  Batch   24/48 | Loss: 2.7480 | LR: 6.00e-05 | GradNorm: 2.897
  Batch   28/48 | Loss: 2.7797 | LR: 5.36e-05 | GradNorm: 1.448
  Batch   32/48 | Loss: 2.7366 | LR: 4.75e-05 | GradNorm: 1.685
  Batch   36/48 | Loss: 2.7596 | LR: 4.18e-05 | GradNorm: 2.124
  Batch   40/48 | Loss: 2.7305 | LR: 3.64e-05 | GradNorm: 1.531
  Batch   44/48 | Loss: 2.7445 | LR: 3.14e-05 | GradNorm: 1.290
Epoch 9/10: Train=31.48%, Val=17.13%, Gap=14.35%, LR=2.79e-05
  Batch    0/48 | Loss: 2.7406 | LR: 2.68e-05 | GradNorm: 1.888
  Batch    4/48 | Loss: 2.7136 | LR: 2.25e-05 | GradNorm: 1.690
  Batch    8/48 | Loss: 2.6776 | LR: 1.85e-05 | GradNorm: 1.793
  Batch   12/48 | Loss: 2.7346 | LR: 1.50e-05 | GradNorm: 2.310
  Batch   16/48 | Loss: 2.6878 | LR: 1.18e-05 | GradNorm: 1.329
  Batch   20/48 | Loss: 2.7250 | LR: 8.97e-06 | GradNorm: 1.291
  Batch   24/48 | Loss: 2.7126 | LR: 6.55e-06 | GradNorm: 1.720
  Batch   28/48 | Loss: 2.7392 | LR: 4.50e-06 | GradNorm: 1.044
  Batch   32/48 | Loss: 2.7322 | LR: 2.85e-06 | GradNorm: 1.537
  Batch   36/48 | Loss: 2.6993 | LR: 1.58e-06 | GradNorm: 0.885
  Batch   40/48 | Loss: 2.6714 | LR: 6.99e-07 | GradNorm: 1.406
  Batch   44/48 | Loss: 2.7009 | LR: 2.10e-07 | GradNorm: 1.149
Epoch 10/10: Train=32.82%, Val=17.19%, Gap=15.63%, LR=1.00e-07
Best validation accuracy: 17.19%
