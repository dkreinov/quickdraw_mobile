=== W&B Sweep Run: LR=0.000730 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007295087932812134
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000730
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9383 | LR: 1.48e-05 | GradNorm: 1.273
  Batch    4/48 | Loss: 3.9200 | LR: 4.49e-05 | GradNorm: 0.891
  Batch    8/48 | Loss: 3.9255 | LR: 7.50e-05 | GradNorm: 0.724
  Batch   12/48 | Loss: 3.9100 | LR: 1.05e-04 | GradNorm: 0.515
  Batch   16/48 | Loss: 3.9189 | LR: 1.35e-04 | GradNorm: 0.525
  Batch   20/48 | Loss: 3.9187 | LR: 1.65e-04 | GradNorm: 0.597
  Batch   24/48 | Loss: 3.9112 | LR: 1.95e-04 | GradNorm: 0.571
  Batch   28/48 | Loss: 3.9141 | LR: 2.25e-04 | GradNorm: 0.564
  Batch   32/48 | Loss: 3.8910 | LR: 2.56e-04 | GradNorm: 0.563
  Batch   36/48 | Loss: 3.8419 | LR: 2.86e-04 | GradNorm: 0.593
  Batch   40/48 | Loss: 4.0394 | LR: 3.16e-04 | GradNorm: 2.789
  Batch   44/48 | Loss: 3.8304 | LR: 3.46e-04 | GradNorm: 3.558
Epoch 1/10: Train=2.71%, Val=2.19%, Gap=0.52%, LR=3.68e-04
  Batch    0/48 | Loss: 3.8608 | LR: 3.76e-04 | GradNorm: 3.975
  Batch    4/48 | Loss: 3.7894 | LR: 4.06e-04 | GradNorm: 2.194
  Batch    8/48 | Loss: 3.7286 | LR: 4.36e-04 | GradNorm: 0.922
  Batch   12/48 | Loss: 3.8385 | LR: 4.66e-04 | GradNorm: 5.793
  Batch   16/48 | Loss: 3.8942 | LR: 4.96e-04 | GradNorm: 3.460
  Batch   20/48 | Loss: 3.7215 | LR: 5.26e-04 | GradNorm: 0.782
  Batch   24/48 | Loss: 3.7118 | LR: 5.56e-04 | GradNorm: 1.718
  Batch   28/48 | Loss: 3.7398 | LR: 5.87e-04 | GradNorm: 9.196
  Batch   32/48 | Loss: 3.7296 | LR: 6.17e-04 | GradNorm: 2.993
  Batch   36/48 | Loss: 3.6215 | LR: 6.47e-04 | GradNorm: 0.843
  Batch   40/48 | Loss: 3.6875 | LR: 6.77e-04 | GradNorm: 4.848
  Batch   44/48 | Loss: 3.5778 | LR: 7.07e-04 | GradNorm: 3.196
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.70%, Val=6.21%, Gap=0.49%, LR=7.30e-04
  Batch    0/48 | Loss: 3.7089 | LR: 7.29e-04 | GradNorm: 8.392
  Batch    4/48 | Loss: 3.6786 | LR: 7.29e-04 | GradNorm: 2.748
  Batch    8/48 | Loss: 3.5717 | LR: 7.29e-04 | GradNorm: 1.991
  Batch   12/48 | Loss: 3.8489 | LR: 7.27e-04 | GradNorm: 6.602
  Batch   16/48 | Loss: 3.6425 | LR: 7.26e-04 | GradNorm: 1.128
  Batch   20/48 | Loss: 3.6098 | LR: 7.24e-04 | GradNorm: 3.723
  Batch   24/48 | Loss: 4.3758 | LR: 7.22e-04 | GradNorm: 4.535
  Batch   28/48 | Loss: 3.5677 | LR: 7.19e-04 | GradNorm: 1.471
  Batch   32/48 | Loss: 3.5815 | LR: 7.16e-04 | GradNorm: 1.981
  Batch   36/48 | Loss: 3.5454 | LR: 7.13e-04 | GradNorm: 1.646
  Batch   40/48 | Loss: 3.6775 | LR: 7.09e-04 | GradNorm: 4.538
  Batch   44/48 | Loss: 3.5123 | LR: 7.05e-04 | GradNorm: 1.748
Epoch 3/10: Train=8.37%, Val=12.06%, Gap=-3.69%, LR=7.02e-04
  Batch    0/48 | Loss: 3.4546 | LR: 7.01e-04 | GradNorm: 1.396
  Batch    4/48 | Loss: 3.4025 | LR: 6.96e-04 | GradNorm: 1.390
  Batch    8/48 | Loss: 3.3437 | LR: 6.91e-04 | GradNorm: 1.088
  Batch   12/48 | Loss: 3.3668 | LR: 6.85e-04 | GradNorm: 2.725
  Batch   16/48 | Loss: 3.3348 | LR: 6.79e-04 | GradNorm: 2.280
  Batch   20/48 | Loss: 3.2724 | LR: 6.73e-04 | GradNorm: 2.310
  Batch   24/48 | Loss: 3.2490 | LR: 6.66e-04 | GradNorm: 1.979
  Batch   28/48 | Loss: 3.3228 | LR: 6.60e-04 | GradNorm: 4.361
  Batch   32/48 | Loss: 3.2850 | LR: 6.52e-04 | GradNorm: 2.606
  Batch   36/48 | Loss: 3.2180 | LR: 6.45e-04 | GradNorm: 1.973
  Batch   40/48 | Loss: 3.2263 | LR: 6.37e-04 | GradNorm: 2.972
  Batch   44/48 | Loss: 3.2013 | LR: 6.29e-04 | GradNorm: 2.272
Epoch 4/10: Train=15.65%, Val=8.88%, Gap=6.77%, LR=6.23e-04
  Batch    0/48 | Loss: 3.1667 | LR: 6.21e-04 | GradNorm: 1.945
  Batch    4/48 | Loss: 3.1502 | LR: 6.12e-04 | GradNorm: 2.341
  Batch    8/48 | Loss: 3.1019 | LR: 6.03e-04 | GradNorm: 1.547
  Batch   12/48 | Loss: 3.1520 | LR: 5.94e-04 | GradNorm: 2.956
  Batch   16/48 | Loss: 3.1540 | LR: 5.84e-04 | GradNorm: 2.168
  Batch   20/48 | Loss: 3.1013 | LR: 5.75e-04 | GradNorm: 1.509
  Batch   24/48 | Loss: 3.1334 | LR: 5.65e-04 | GradNorm: 2.475
  Batch   28/48 | Loss: 3.1536 | LR: 5.55e-04 | GradNorm: 2.537
  Batch   32/48 | Loss: 3.1054 | LR: 5.45e-04 | GradNorm: 2.757
  Batch   36/48 | Loss: 3.1446 | LR: 5.34e-04 | GradNorm: 1.941
  Batch   40/48 | Loss: 3.1242 | LR: 5.23e-04 | GradNorm: 1.949
  Batch   44/48 | Loss: 3.1276 | LR: 5.13e-04 | GradNorm: 3.107
Epoch 5/10: Train=19.90%, Val=10.55%, Gap=9.35%, LR=5.04e-04
  Batch    0/48 | Loss: 3.1087 | LR: 5.02e-04 | GradNorm: 3.889
  Batch    4/48 | Loss: 3.0696 | LR: 4.90e-04 | GradNorm: 4.663
  Batch    8/48 | Loss: 3.0873 | LR: 4.79e-04 | GradNorm: 2.987
  Batch   12/48 | Loss: 3.0384 | LR: 4.68e-04 | GradNorm: 1.999
  Batch   16/48 | Loss: 2.9905 | LR: 4.56e-04 | GradNorm: 1.534
  Batch   20/48 | Loss: 3.0181 | LR: 4.45e-04 | GradNorm: 3.426
  Batch   24/48 | Loss: 3.0261 | LR: 4.33e-04 | GradNorm: 2.333
  Batch   28/48 | Loss: 2.9404 | LR: 4.21e-04 | GradNorm: 1.513
  Batch   32/48 | Loss: 2.9386 | LR: 4.09e-04 | GradNorm: 1.694
  Batch   36/48 | Loss: 3.0231 | LR: 3.98e-04 | GradNorm: 2.837
  Batch   40/48 | Loss: 2.9732 | LR: 3.86e-04 | GradNorm: 1.740
  Batch   44/48 | Loss: 3.0249 | LR: 3.74e-04 | GradNorm: 1.902
Epoch 6/10: Train=22.77%, Val=12.25%, Gap=10.52%, LR=3.65e-04
  Batch    0/48 | Loss: 2.9666 | LR: 3.62e-04 | GradNorm: 2.463
  Batch    4/48 | Loss: 2.9210 | LR: 3.50e-04 | GradNorm: 2.657
  Batch    8/48 | Loss: 2.9250 | LR: 3.38e-04 | GradNorm: 2.152
  Batch   12/48 | Loss: 2.8929 | LR: 3.26e-04 | GradNorm: 2.392
  Batch   16/48 | Loss: 2.9095 | LR: 3.14e-04 | GradNorm: 4.622
  Batch   20/48 | Loss: 2.9231 | LR: 3.02e-04 | GradNorm: 1.936
  Batch   24/48 | Loss: 2.9374 | LR: 2.91e-04 | GradNorm: 3.138
  Batch   28/48 | Loss: 2.9574 | LR: 2.79e-04 | GradNorm: 4.512
  Batch   32/48 | Loss: 2.9302 | LR: 2.68e-04 | GradNorm: 1.795
  Batch   36/48 | Loss: 2.9318 | LR: 2.56e-04 | GradNorm: 2.298
  Batch   40/48 | Loss: 2.9132 | LR: 2.45e-04 | GradNorm: 2.072
  Batch   44/48 | Loss: 2.8831 | LR: 2.34e-04 | GradNorm: 1.764
Epoch 7/10: Train=26.00%, Val=14.97%, Gap=11.03%, LR=2.25e-04
  Batch    0/48 | Loss: 2.8765 | LR: 2.22e-04 | GradNorm: 3.086
  Batch    4/48 | Loss: 2.8247 | LR: 2.12e-04 | GradNorm: 3.674
  Batch    8/48 | Loss: 2.8154 | LR: 2.01e-04 | GradNorm: 2.115
  Batch   12/48 | Loss: 2.8655 | LR: 1.90e-04 | GradNorm: 2.148
  Batch   16/48 | Loss: 2.8973 | LR: 1.80e-04 | GradNorm: 2.957
  Batch   20/48 | Loss: 2.8147 | LR: 1.70e-04 | GradNorm: 3.873
  Batch   24/48 | Loss: 2.7662 | LR: 1.60e-04 | GradNorm: 2.148
  Batch   28/48 | Loss: 2.8037 | LR: 1.50e-04 | GradNorm: 1.545
  Batch   32/48 | Loss: 2.7950 | LR: 1.40e-04 | GradNorm: 3.655
  Batch   36/48 | Loss: 2.7954 | LR: 1.31e-04 | GradNorm: 2.629
  Batch   40/48 | Loss: 2.6974 | LR: 1.22e-04 | GradNorm: 1.432
  Batch   44/48 | Loss: 2.7829 | LR: 1.13e-04 | GradNorm: 1.807
Epoch 8/10: Train=30.06%, Val=14.75%, Gap=15.31%, LR=1.07e-04
  Batch    0/48 | Loss: 2.7489 | LR: 1.05e-04 | GradNorm: 3.467
  Batch    4/48 | Loss: 2.7240 | LR: 9.66e-05 | GradNorm: 2.171
  Batch    8/48 | Loss: 2.7853 | LR: 8.86e-05 | GradNorm: 3.916
  Batch   12/48 | Loss: 2.7212 | LR: 8.10e-05 | GradNorm: 3.011
  Batch   16/48 | Loss: 2.6532 | LR: 7.37e-05 | GradNorm: 1.507
  Batch   20/48 | Loss: 2.6710 | LR: 6.66e-05 | GradNorm: 2.417
  Batch   24/48 | Loss: 2.7185 | LR: 5.99e-05 | GradNorm: 1.733
  Batch   28/48 | Loss: 2.7079 | LR: 5.35e-05 | GradNorm: 2.271
  Batch   32/48 | Loss: 2.6999 | LR: 4.75e-05 | GradNorm: 2.706
  Batch   36/48 | Loss: 2.7102 | LR: 4.18e-05 | GradNorm: 1.737
  Batch   40/48 | Loss: 2.6707 | LR: 3.64e-05 | GradNorm: 1.868
  Batch   44/48 | Loss: 2.6972 | LR: 3.14e-05 | GradNorm: 2.036
Epoch 9/10: Train=32.77%, Val=16.45%, Gap=16.32%, LR=2.79e-05
  Batch    0/48 | Loss: 2.7210 | LR: 2.67e-05 | GradNorm: 2.287
  Batch    4/48 | Loss: 2.6916 | LR: 2.24e-05 | GradNorm: 1.754
  Batch    8/48 | Loss: 2.6336 | LR: 1.85e-05 | GradNorm: 1.109
  Batch   12/48 | Loss: 2.6629 | LR: 1.49e-05 | GradNorm: 1.528
  Batch   16/48 | Loss: 2.6706 | LR: 1.18e-05 | GradNorm: 2.396
  Batch   20/48 | Loss: 2.6856 | LR: 8.96e-06 | GradNorm: 1.500
  Batch   24/48 | Loss: 2.6764 | LR: 6.54e-06 | GradNorm: 1.509
  Batch   28/48 | Loss: 2.6875 | LR: 4.50e-06 | GradNorm: 1.601
  Batch   32/48 | Loss: 2.6807 | LR: 2.84e-06 | GradNorm: 1.172
  Batch   36/48 | Loss: 2.6663 | LR: 1.58e-06 | GradNorm: 1.461
  Batch   40/48 | Loss: 2.6320 | LR: 6.98e-07 | GradNorm: 0.951
  Batch   44/48 | Loss: 2.6627 | LR: 2.10e-07 | GradNorm: 1.585
Epoch 10/10: Train=34.15%, Val=16.57%, Gap=17.58%, LR=1.00e-07
Best validation accuracy: 16.57%
