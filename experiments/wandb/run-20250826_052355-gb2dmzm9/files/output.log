=== W&B Sweep Run: LR=0.000930 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000930426778562869
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000930
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9406 | LR: 1.89e-05 | GradNorm: 1.465
  Batch    4/48 | Loss: 3.9232 | LR: 5.73e-05 | GradNorm: 0.916
  Batch    8/48 | Loss: 3.9247 | LR: 9.57e-05 | GradNorm: 0.689
  Batch   12/48 | Loss: 3.9117 | LR: 1.34e-04 | GradNorm: 0.503
  Batch   16/48 | Loss: 3.9189 | LR: 1.72e-04 | GradNorm: 0.505
  Batch   20/48 | Loss: 3.9178 | LR: 2.11e-04 | GradNorm: 0.564
  Batch   24/48 | Loss: 3.9182 | LR: 2.49e-04 | GradNorm: 0.599
  Batch   28/48 | Loss: 3.9165 | LR: 2.88e-04 | GradNorm: 0.573
  Batch   32/48 | Loss: 3.8883 | LR: 3.26e-04 | GradNorm: 0.571
  Batch   36/48 | Loss: 3.8382 | LR: 3.64e-04 | GradNorm: 0.809
  Batch   40/48 | Loss: 3.8276 | LR: 4.03e-04 | GradNorm: 1.732
  Batch   44/48 | Loss: 3.8278 | LR: 4.41e-04 | GradNorm: 2.390
Epoch 1/10: Train=3.14%, Val=5.50%, Gap=-2.36%, LR=4.70e-04
  Batch    0/48 | Loss: 3.7553 | LR: 4.79e-04 | GradNorm: 1.001
  Batch    4/48 | Loss: 3.7766 | LR: 5.18e-04 | GradNorm: 2.630
  Batch    8/48 | Loss: 3.6816 | LR: 5.56e-04 | GradNorm: 1.462
  Batch   12/48 | Loss: 3.6513 | LR: 5.95e-04 | GradNorm: 2.066
  Batch   16/48 | Loss: 3.6616 | LR: 6.33e-04 | GradNorm: 1.661
  Batch   20/48 | Loss: 3.7333 | LR: 6.71e-04 | GradNorm: 2.015
  Batch   24/48 | Loss: 3.6850 | LR: 7.10e-04 | GradNorm: 2.322
  Batch   28/48 | Loss: 3.8656 | LR: 7.48e-04 | GradNorm: 9.147
  Batch   32/48 | Loss: 3.7515 | LR: 7.87e-04 | GradNorm: 6.197
  Batch   36/48 | Loss: 3.7383 | LR: 8.25e-04 | GradNorm: 1.862
  Batch   40/48 | Loss: 3.7614 | LR: 8.63e-04 | GradNorm: 0.686
  Batch   44/48 | Loss: 3.7614 | LR: 9.02e-04 | GradNorm: 1.769
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.18%, Val=7.34%, Gap=-1.16%, LR=9.30e-04
  Batch    0/48 | Loss: 3.7169 | LR: 9.30e-04 | GradNorm: 2.239
  Batch    4/48 | Loss: 3.6869 | LR: 9.30e-04 | GradNorm: 1.011
  Batch    8/48 | Loss: 3.6030 | LR: 9.29e-04 | GradNorm: 1.184
  Batch   12/48 | Loss: 3.6285 | LR: 9.28e-04 | GradNorm: 1.856
  Batch   16/48 | Loss: 3.5761 | LR: 9.26e-04 | GradNorm: 1.482
  Batch   20/48 | Loss: 3.7439 | LR: 9.24e-04 | GradNorm: 4.125
  Batch   24/48 | Loss: 3.5757 | LR: 9.21e-04 | GradNorm: 1.079
  Batch   28/48 | Loss: 4.1635 | LR: 9.17e-04 | GradNorm: 12.053
  Batch   32/48 | Loss: 3.5806 | LR: 9.14e-04 | GradNorm: 2.102
  Batch   36/48 | Loss: 3.5588 | LR: 9.09e-04 | GradNorm: 2.355
  Batch   40/48 | Loss: 3.5177 | LR: 9.05e-04 | GradNorm: 1.623
  Batch   44/48 | Loss: 3.5315 | LR: 8.99e-04 | GradNorm: 4.393
Epoch 3/10: Train=8.68%, Val=8.78%, Gap=-0.10%, LR=8.95e-04
  Batch    0/48 | Loss: 3.4358 | LR: 8.94e-04 | GradNorm: 1.459
  Batch    4/48 | Loss: 3.3884 | LR: 8.87e-04 | GradNorm: 0.791
  Batch    8/48 | Loss: 3.4203 | LR: 8.81e-04 | GradNorm: 1.843
  Batch   12/48 | Loss: 3.3970 | LR: 8.74e-04 | GradNorm: 1.852
  Batch   16/48 | Loss: 3.3959 | LR: 8.66e-04 | GradNorm: 2.641
  Batch   20/48 | Loss: 3.4005 | LR: 8.58e-04 | GradNorm: 2.995
  Batch   24/48 | Loss: 3.3089 | LR: 8.50e-04 | GradNorm: 1.895
  Batch   28/48 | Loss: 3.2553 | LR: 8.41e-04 | GradNorm: 2.479
  Batch   32/48 | Loss: 3.2460 | LR: 8.32e-04 | GradNorm: 1.396
  Batch   36/48 | Loss: 3.3023 | LR: 8.22e-04 | GradNorm: 2.524
  Batch   40/48 | Loss: 3.2676 | LR: 8.12e-04 | GradNorm: 2.647
  Batch   44/48 | Loss: 3.2160 | LR: 8.02e-04 | GradNorm: 2.413
Epoch 4/10: Train=15.01%, Val=10.69%, Gap=4.32%, LR=7.94e-04
  Batch    0/48 | Loss: 3.1511 | LR: 7.91e-04 | GradNorm: 0.976
  Batch    4/48 | Loss: 3.1702 | LR: 7.80e-04 | GradNorm: 2.873
  Batch    8/48 | Loss: 3.1621 | LR: 7.69e-04 | GradNorm: 1.961
  Batch   12/48 | Loss: 3.1647 | LR: 7.57e-04 | GradNorm: 5.547
  Batch   16/48 | Loss: 3.2949 | LR: 7.45e-04 | GradNorm: 4.068
  Batch   20/48 | Loss: 3.3615 | LR: 7.33e-04 | GradNorm: 5.365
  Batch   24/48 | Loss: 3.2292 | LR: 7.21e-04 | GradNorm: 1.738
  Batch   28/48 | Loss: 3.1632 | LR: 7.08e-04 | GradNorm: 1.538
  Batch   32/48 | Loss: 3.1093 | LR: 6.95e-04 | GradNorm: 2.259
  Batch   36/48 | Loss: 3.1851 | LR: 6.81e-04 | GradNorm: 2.586
  Batch   40/48 | Loss: 3.1605 | LR: 6.68e-04 | GradNorm: 1.414
  Batch   44/48 | Loss: 3.1360 | LR: 6.54e-04 | GradNorm: 2.737
Epoch 5/10: Train=18.88%, Val=9.40%, Gap=9.48%, LR=6.43e-04
  Batch    0/48 | Loss: 3.0790 | LR: 6.40e-04 | GradNorm: 1.983
  Batch    4/48 | Loss: 3.0315 | LR: 6.26e-04 | GradNorm: 2.145
  Batch    8/48 | Loss: 3.0891 | LR: 6.11e-04 | GradNorm: 2.961
  Batch   12/48 | Loss: 3.0438 | LR: 5.97e-04 | GradNorm: 1.588
  Batch   16/48 | Loss: 3.0233 | LR: 5.82e-04 | GradNorm: 1.936
  Batch   20/48 | Loss: 3.0069 | LR: 5.67e-04 | GradNorm: 2.154
  Batch   24/48 | Loss: 2.9995 | LR: 5.52e-04 | GradNorm: 1.918
  Batch   28/48 | Loss: 3.0053 | LR: 5.37e-04 | GradNorm: 2.842
  Batch   32/48 | Loss: 2.9573 | LR: 5.22e-04 | GradNorm: 1.341
  Batch   36/48 | Loss: 3.0431 | LR: 5.07e-04 | GradNorm: 2.925
  Batch   40/48 | Loss: 2.9882 | LR: 4.92e-04 | GradNorm: 1.375
  Batch   44/48 | Loss: 3.1031 | LR: 4.77e-04 | GradNorm: 2.634
Epoch 6/10: Train=22.21%, Val=10.29%, Gap=11.92%, LR=4.65e-04
  Batch    0/48 | Loss: 2.9746 | LR: 4.61e-04 | GradNorm: 2.045
  Batch    4/48 | Loss: 2.9320 | LR: 4.46e-04 | GradNorm: 1.000
  Batch    8/48 | Loss: 2.9290 | LR: 4.31e-04 | GradNorm: 1.494
  Batch   12/48 | Loss: 2.8972 | LR: 4.16e-04 | GradNorm: 2.594
  Batch   16/48 | Loss: 2.9497 | LR: 4.01e-04 | GradNorm: 3.664
  Batch   20/48 | Loss: 2.9221 | LR: 3.86e-04 | GradNorm: 1.497
  Batch   24/48 | Loss: 2.9753 | LR: 3.71e-04 | GradNorm: 2.206
  Batch   28/48 | Loss: 2.9656 | LR: 3.56e-04 | GradNorm: 2.041
  Batch   32/48 | Loss: 2.9343 | LR: 3.41e-04 | GradNorm: 2.534
  Batch   36/48 | Loss: 2.9354 | LR: 3.27e-04 | GradNorm: 1.881
  Batch   40/48 | Loss: 2.8962 | LR: 3.12e-04 | GradNorm: 1.848
  Batch   44/48 | Loss: 2.8393 | LR: 2.98e-04 | GradNorm: 1.487
Epoch 7/10: Train=25.94%, Val=13.42%, Gap=12.52%, LR=2.87e-04
  Batch    0/48 | Loss: 2.8792 | LR: 2.84e-04 | GradNorm: 2.264
  Batch    4/48 | Loss: 2.8374 | LR: 2.70e-04 | GradNorm: 3.528
  Batch    8/48 | Loss: 2.8065 | LR: 2.56e-04 | GradNorm: 1.938
  Batch   12/48 | Loss: 2.8416 | LR: 2.43e-04 | GradNorm: 1.567
  Batch   16/48 | Loss: 2.8617 | LR: 2.29e-04 | GradNorm: 1.325
  Batch   20/48 | Loss: 2.7724 | LR: 2.16e-04 | GradNorm: 1.386
  Batch   24/48 | Loss: 2.7434 | LR: 2.04e-04 | GradNorm: 1.058
  Batch   28/48 | Loss: 2.7935 | LR: 1.91e-04 | GradNorm: 1.771
  Batch   32/48 | Loss: 2.8093 | LR: 1.79e-04 | GradNorm: 2.507
  Batch   36/48 | Loss: 2.7530 | LR: 1.67e-04 | GradNorm: 2.115
  Batch   40/48 | Loss: 2.6835 | LR: 1.56e-04 | GradNorm: 1.461
  Batch   44/48 | Loss: 2.7694 | LR: 1.45e-04 | GradNorm: 1.305
Epoch 8/10: Train=30.33%, Val=16.02%, Gap=14.31%, LR=1.36e-04
  Batch    0/48 | Loss: 2.7066 | LR: 1.34e-04 | GradNorm: 2.485
  Batch    4/48 | Loss: 2.7180 | LR: 1.23e-04 | GradNorm: 2.714
  Batch    8/48 | Loss: 2.7286 | LR: 1.13e-04 | GradNorm: 1.916
  Batch   12/48 | Loss: 2.6813 | LR: 1.03e-04 | GradNorm: 1.825
  Batch   16/48 | Loss: 2.6325 | LR: 9.39e-05 | GradNorm: 2.869
  Batch   20/48 | Loss: 2.6501 | LR: 8.50e-05 | GradNorm: 1.488
  Batch   24/48 | Loss: 2.6802 | LR: 7.64e-05 | GradNorm: 2.963
  Batch   28/48 | Loss: 2.6629 | LR: 6.82e-05 | GradNorm: 2.748
  Batch   32/48 | Loss: 2.6814 | LR: 6.05e-05 | GradNorm: 3.867
  Batch   36/48 | Loss: 2.6744 | LR: 5.32e-05 | GradNorm: 2.417
  Batch   40/48 | Loss: 2.6169 | LR: 4.64e-05 | GradNorm: 2.021
  Batch   44/48 | Loss: 2.6512 | LR: 4.00e-05 | GradNorm: 1.316
Epoch 9/10: Train=33.91%, Val=15.51%, Gap=18.40%, LR=3.55e-05
  Batch    0/48 | Loss: 2.6679 | LR: 3.41e-05 | GradNorm: 2.202
  Batch    4/48 | Loss: 2.6466 | LR: 2.86e-05 | GradNorm: 1.516
  Batch    8/48 | Loss: 2.6058 | LR: 2.36e-05 | GradNorm: 1.412
  Batch   12/48 | Loss: 2.6317 | LR: 1.90e-05 | GradNorm: 1.592
  Batch   16/48 | Loss: 2.6256 | LR: 1.50e-05 | GradNorm: 1.415
  Batch   20/48 | Loss: 2.6277 | LR: 1.14e-05 | GradNorm: 2.028
  Batch   24/48 | Loss: 2.6729 | LR: 8.31e-06 | GradNorm: 1.800
  Batch   28/48 | Loss: 2.6474 | LR: 5.71e-06 | GradNorm: 0.935
  Batch   32/48 | Loss: 2.6566 | LR: 3.60e-06 | GradNorm: 1.483
  Batch   36/48 | Loss: 2.6223 | LR: 1.98e-06 | GradNorm: 1.235
  Batch   40/48 | Loss: 2.5958 | LR: 8.63e-07 | GradNorm: 1.246
  Batch   44/48 | Loss: 2.6103 | LR: 2.40e-07 | GradNorm: 1.214
Epoch 10/10: Train=35.69%, Val=15.80%, Gap=19.89%, LR=1.00e-07
Best validation accuracy: 16.02%
