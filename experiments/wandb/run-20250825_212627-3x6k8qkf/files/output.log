=== W&B Sweep Run: LR=0.000728 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007284926718102949
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000728
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9369 | LR: 1.48e-05 | GradNorm: 1.642
  Batch    4/48 | Loss: 3.9246 | LR: 4.48e-05 | GradNorm: 1.063
  Batch    8/48 | Loss: 3.9275 | LR: 7.49e-05 | GradNorm: 0.770
  Batch   12/48 | Loss: 3.9067 | LR: 1.05e-04 | GradNorm: 0.491
  Batch   16/48 | Loss: 3.9197 | LR: 1.35e-04 | GradNorm: 0.554
  Batch   20/48 | Loss: 3.9163 | LR: 1.65e-04 | GradNorm: 0.576
  Batch   24/48 | Loss: 3.9040 | LR: 1.95e-04 | GradNorm: 0.500
  Batch   28/48 | Loss: 3.9095 | LR: 2.25e-04 | GradNorm: 0.518
  Batch   32/48 | Loss: 3.8918 | LR: 2.55e-04 | GradNorm: 0.560
  Batch   36/48 | Loss: 3.8415 | LR: 2.85e-04 | GradNorm: 1.144
  Batch   40/48 | Loss: 3.9393 | LR: 3.15e-04 | GradNorm: 3.528
  Batch   44/48 | Loss: 3.7982 | LR: 3.45e-04 | GradNorm: 1.764
Epoch 1/10: Train=2.82%, Val=6.55%, Gap=-3.73%, LR=3.68e-04
  Batch    0/48 | Loss: 3.7645 | LR: 3.75e-04 | GradNorm: 2.499
  Batch    4/48 | Loss: 3.7348 | LR: 4.05e-04 | GradNorm: 2.195
  Batch    8/48 | Loss: 3.6969 | LR: 4.36e-04 | GradNorm: 3.276
  Batch   12/48 | Loss: 3.6535 | LR: 4.66e-04 | GradNorm: 0.916
  Batch   16/48 | Loss: 3.9425 | LR: 4.96e-04 | GradNorm: 4.996
  Batch   20/48 | Loss: 3.7788 | LR: 5.26e-04 | GradNorm: 2.069
  Batch   24/48 | Loss: 3.7265 | LR: 5.56e-04 | GradNorm: 1.459
  Batch   28/48 | Loss: 3.7471 | LR: 5.86e-04 | GradNorm: 3.515
  Batch   32/48 | Loss: 3.6584 | LR: 6.16e-04 | GradNorm: 2.662
  Batch   36/48 | Loss: 3.8819 | LR: 6.46e-04 | GradNorm: 3.466
  Batch   40/48 | Loss: 3.6987 | LR: 6.76e-04 | GradNorm: 0.960
  Batch   44/48 | Loss: 3.9878 | LR: 7.06e-04 | GradNorm: 6.131
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.87%, Val=7.58%, Gap=-1.71%, LR=7.28e-04
  Batch    0/48 | Loss: 3.6383 | LR: 7.28e-04 | GradNorm: 0.746
  Batch    4/48 | Loss: 3.7092 | LR: 7.28e-04 | GradNorm: 2.161
  Batch    8/48 | Loss: 3.8554 | LR: 7.28e-04 | GradNorm: 11.862
  Batch   12/48 | Loss: 3.6163 | LR: 7.26e-04 | GradNorm: 1.217
  Batch   16/48 | Loss: 3.7051 | LR: 7.25e-04 | GradNorm: 4.763
  Batch   20/48 | Loss: 3.5161 | LR: 7.23e-04 | GradNorm: 1.592
  Batch   24/48 | Loss: 3.5042 | LR: 7.21e-04 | GradNorm: 3.016
  Batch   28/48 | Loss: 3.5138 | LR: 7.18e-04 | GradNorm: 3.243
  Batch   32/48 | Loss: 3.5690 | LR: 7.15e-04 | GradNorm: 7.999
  Batch   36/48 | Loss: 3.4589 | LR: 7.12e-04 | GradNorm: 1.694
  Batch   40/48 | Loss: 3.4402 | LR: 7.08e-04 | GradNorm: 1.091
  Batch   44/48 | Loss: 3.4219 | LR: 7.04e-04 | GradNorm: 1.550
Epoch 3/10: Train=9.90%, Val=9.77%, Gap=0.13%, LR=7.01e-04
  Batch    0/48 | Loss: 3.3715 | LR: 7.00e-04 | GradNorm: 1.256
  Batch    4/48 | Loss: 3.3949 | LR: 6.95e-04 | GradNorm: 2.248
  Batch    8/48 | Loss: 3.3560 | LR: 6.90e-04 | GradNorm: 2.809
  Batch   12/48 | Loss: 3.3543 | LR: 6.84e-04 | GradNorm: 2.104
  Batch   16/48 | Loss: 3.3607 | LR: 6.78e-04 | GradNorm: 3.174
  Batch   20/48 | Loss: 3.3650 | LR: 6.72e-04 | GradNorm: 3.090
  Batch   24/48 | Loss: 3.3253 | LR: 6.65e-04 | GradNorm: 3.027
  Batch   28/48 | Loss: 3.2583 | LR: 6.59e-04 | GradNorm: 1.391
  Batch   32/48 | Loss: 3.2677 | LR: 6.51e-04 | GradNorm: 1.727
  Batch   36/48 | Loss: 3.2191 | LR: 6.44e-04 | GradNorm: 1.514
  Batch   40/48 | Loss: 3.2361 | LR: 6.36e-04 | GradNorm: 1.537
  Batch   44/48 | Loss: 3.1771 | LR: 6.28e-04 | GradNorm: 1.194
Epoch 4/10: Train=15.37%, Val=7.78%, Gap=7.59%, LR=6.22e-04
  Batch    0/48 | Loss: 3.2720 | LR: 6.20e-04 | GradNorm: 3.971
  Batch    4/48 | Loss: 3.2555 | LR: 6.11e-04 | GradNorm: 3.939
  Batch    8/48 | Loss: 3.1577 | LR: 6.02e-04 | GradNorm: 1.087
  Batch   12/48 | Loss: 3.1486 | LR: 5.93e-04 | GradNorm: 1.522
  Batch   16/48 | Loss: 3.1902 | LR: 5.84e-04 | GradNorm: 1.597
  Batch   20/48 | Loss: 3.1327 | LR: 5.74e-04 | GradNorm: 2.397
  Batch   24/48 | Loss: 3.1540 | LR: 5.64e-04 | GradNorm: 1.855
  Batch   28/48 | Loss: 3.1151 | LR: 5.54e-04 | GradNorm: 3.185
  Batch   32/48 | Loss: 3.1268 | LR: 5.44e-04 | GradNorm: 3.515
  Batch   36/48 | Loss: 3.1334 | LR: 5.33e-04 | GradNorm: 1.676
  Batch   40/48 | Loss: 3.1224 | LR: 5.23e-04 | GradNorm: 1.366
  Batch   44/48 | Loss: 3.1035 | LR: 5.12e-04 | GradNorm: 3.312
Epoch 5/10: Train=19.83%, Val=11.54%, Gap=8.29%, LR=5.04e-04
  Batch    0/48 | Loss: 3.0421 | LR: 5.01e-04 | GradNorm: 2.771
  Batch    4/48 | Loss: 2.9739 | LR: 4.90e-04 | GradNorm: 1.920
  Batch    8/48 | Loss: 3.0023 | LR: 4.79e-04 | GradNorm: 1.995
  Batch   12/48 | Loss: 3.0072 | LR: 4.67e-04 | GradNorm: 3.000
  Batch   16/48 | Loss: 2.9797 | LR: 4.56e-04 | GradNorm: 3.041
  Batch   20/48 | Loss: 3.0321 | LR: 4.44e-04 | GradNorm: 5.838
  Batch   24/48 | Loss: 2.9541 | LR: 4.32e-04 | GradNorm: 1.280
  Batch   28/48 | Loss: 2.9087 | LR: 4.21e-04 | GradNorm: 1.401
  Batch   32/48 | Loss: 2.9313 | LR: 4.09e-04 | GradNorm: 2.815
  Batch   36/48 | Loss: 2.9685 | LR: 3.97e-04 | GradNorm: 2.486
  Batch   40/48 | Loss: 2.9244 | LR: 3.85e-04 | GradNorm: 2.620
  Batch   44/48 | Loss: 3.0101 | LR: 3.73e-04 | GradNorm: 3.343
Epoch 6/10: Train=24.15%, Val=14.46%, Gap=9.69%, LR=3.64e-04
  Batch    0/48 | Loss: 2.8800 | LR: 3.61e-04 | GradNorm: 1.617
  Batch    4/48 | Loss: 2.8576 | LR: 3.49e-04 | GradNorm: 1.578
  Batch    8/48 | Loss: 2.8512 | LR: 3.38e-04 | GradNorm: 2.569
  Batch   12/48 | Loss: 2.7841 | LR: 3.26e-04 | GradNorm: 2.070
  Batch   16/48 | Loss: 2.8474 | LR: 3.14e-04 | GradNorm: 5.427
  Batch   20/48 | Loss: 2.8488 | LR: 3.02e-04 | GradNorm: 4.271
  Batch   24/48 | Loss: 2.8522 | LR: 2.90e-04 | GradNorm: 2.562
  Batch   28/48 | Loss: 2.8227 | LR: 2.79e-04 | GradNorm: 3.110
  Batch   32/48 | Loss: 2.8186 | LR: 2.67e-04 | GradNorm: 5.409
  Batch   36/48 | Loss: 2.8001 | LR: 2.56e-04 | GradNorm: 2.007
  Batch   40/48 | Loss: 2.8048 | LR: 2.44e-04 | GradNorm: 4.023
  Batch   44/48 | Loss: 2.7733 | LR: 2.33e-04 | GradNorm: 3.021
Epoch 7/10: Train=29.89%, Val=17.02%, Gap=12.87%, LR=2.25e-04
  Batch    0/48 | Loss: 2.7490 | LR: 2.22e-04 | GradNorm: 1.771
  Batch    4/48 | Loss: 2.7042 | LR: 2.11e-04 | GradNorm: 2.878
  Batch    8/48 | Loss: 2.7136 | LR: 2.01e-04 | GradNorm: 3.736
  Batch   12/48 | Loss: 2.7521 | LR: 1.90e-04 | GradNorm: 1.597
  Batch   16/48 | Loss: 2.7527 | LR: 1.80e-04 | GradNorm: 2.695
  Batch   20/48 | Loss: 2.6750 | LR: 1.69e-04 | GradNorm: 3.750
  Batch   24/48 | Loss: 2.7259 | LR: 1.59e-04 | GradNorm: 5.416
  Batch   28/48 | Loss: 2.7025 | LR: 1.50e-04 | GradNorm: 3.322
  Batch   32/48 | Loss: 2.7058 | LR: 1.40e-04 | GradNorm: 3.745
  Batch   36/48 | Loss: 2.6878 | LR: 1.31e-04 | GradNorm: 5.524
  Batch   40/48 | Loss: 2.6390 | LR: 1.22e-04 | GradNorm: 3.905
  Batch   44/48 | Loss: 2.6763 | LR: 1.13e-04 | GradNorm: 2.163
Epoch 8/10: Train=33.46%, Val=18.04%, Gap=15.42%, LR=1.07e-04
  Batch    0/48 | Loss: 2.6154 | LR: 1.05e-04 | GradNorm: 2.643
  Batch    4/48 | Loss: 2.6179 | LR: 9.65e-05 | GradNorm: 2.834
  Batch    8/48 | Loss: 2.6777 | LR: 8.85e-05 | GradNorm: 2.032
  Batch   12/48 | Loss: 2.6345 | LR: 8.09e-05 | GradNorm: 2.127
  Batch   16/48 | Loss: 2.5797 | LR: 7.36e-05 | GradNorm: 2.816
  Batch   20/48 | Loss: 2.5896 | LR: 6.65e-05 | GradNorm: 2.902
  Batch   24/48 | Loss: 2.6119 | LR: 5.98e-05 | GradNorm: 3.592
  Batch   28/48 | Loss: 2.6290 | LR: 5.35e-05 | GradNorm: 2.114
  Batch   32/48 | Loss: 2.5944 | LR: 4.74e-05 | GradNorm: 2.802
  Batch   36/48 | Loss: 2.6164 | LR: 4.17e-05 | GradNorm: 2.582
  Batch   40/48 | Loss: 2.5807 | LR: 3.64e-05 | GradNorm: 1.081
  Batch   44/48 | Loss: 2.6199 | LR: 3.13e-05 | GradNorm: 1.161
Epoch 9/10: Train=36.08%, Val=18.99%, Gap=17.09%, LR=2.78e-05
  Batch    0/48 | Loss: 2.6218 | LR: 2.67e-05 | GradNorm: 3.251
  Batch    4/48 | Loss: 2.5578 | LR: 2.24e-05 | GradNorm: 2.792
  Batch    8/48 | Loss: 2.5591 | LR: 1.85e-05 | GradNorm: 1.905
  Batch   12/48 | Loss: 2.5688 | LR: 1.49e-05 | GradNorm: 2.196
  Batch   16/48 | Loss: 2.5747 | LR: 1.18e-05 | GradNorm: 1.261
  Batch   20/48 | Loss: 2.5852 | LR: 8.95e-06 | GradNorm: 2.666
  Batch   24/48 | Loss: 2.6009 | LR: 6.53e-06 | GradNorm: 1.344
  Batch   28/48 | Loss: 2.6103 | LR: 4.49e-06 | GradNorm: 1.432
  Batch   32/48 | Loss: 2.5900 | LR: 2.84e-06 | GradNorm: 1.558
  Batch   36/48 | Loss: 2.5499 | LR: 1.57e-06 | GradNorm: 1.327
  Batch   40/48 | Loss: 2.5495 | LR: 6.97e-07 | GradNorm: 1.067
  Batch   44/48 | Loss: 2.5595 | LR: 2.10e-07 | GradNorm: 1.430
Epoch 10/10: Train=37.19%, Val=19.36%, Gap=17.83%, LR=1.00e-07
Best validation accuracy: 19.36%
