=== W&B Sweep Run: LR=0.000103 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0001032283269158434
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000103
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9316 | LR: 2.10e-06 | GradNorm: 1.553
  Batch    4/48 | Loss: 3.9292 | LR: 6.35e-06 | GradNorm: 1.150
  Batch    8/48 | Loss: 3.9187 | LR: 1.06e-05 | GradNorm: 1.024
  Batch   12/48 | Loss: 3.9155 | LR: 1.49e-05 | GradNorm: 0.893
  Batch   16/48 | Loss: 3.9232 | LR: 1.91e-05 | GradNorm: 0.952
  Batch   20/48 | Loss: 3.9152 | LR: 2.34e-05 | GradNorm: 0.835
  Batch   24/48 | Loss: 3.9123 | LR: 2.76e-05 | GradNorm: 0.866
  Batch   28/48 | Loss: 3.9183 | LR: 3.19e-05 | GradNorm: 0.824
  Batch   32/48 | Loss: 3.9102 | LR: 3.62e-05 | GradNorm: 0.773
  Batch   36/48 | Loss: 3.9138 | LR: 4.04e-05 | GradNorm: 0.720
  Batch   40/48 | Loss: 3.9063 | LR: 4.47e-05 | GradNorm: 0.765
  Batch   44/48 | Loss: 3.9031 | LR: 4.89e-05 | GradNorm: 0.754
Epoch 1/10: Train=2.22%, Val=2.00%, Gap=0.22%, LR=5.21e-05
  Batch    0/48 | Loss: 3.9058 | LR: 5.32e-05 | GradNorm: 0.813
  Batch    4/48 | Loss: 3.8932 | LR: 5.75e-05 | GradNorm: 1.011
  Batch    8/48 | Loss: 3.8717 | LR: 6.17e-05 | GradNorm: 1.468
  Batch   12/48 | Loss: 3.7976 | LR: 6.60e-05 | GradNorm: 3.327
  Batch   16/48 | Loss: 3.8176 | LR: 7.02e-05 | GradNorm: 3.062
  Batch   20/48 | Loss: 3.7946 | LR: 7.45e-05 | GradNorm: 1.191
  Batch   24/48 | Loss: 3.7857 | LR: 7.87e-05 | GradNorm: 3.477
  Batch   28/48 | Loss: 3.7785 | LR: 8.30e-05 | GradNorm: 5.140
  Batch   32/48 | Loss: 3.7728 | LR: 8.73e-05 | GradNorm: 8.742
  Batch   36/48 | Loss: 3.7753 | LR: 9.15e-05 | GradNorm: 9.261
  Batch   40/48 | Loss: 3.7846 | LR: 9.58e-05 | GradNorm: 8.375
  Batch   44/48 | Loss: 3.7584 | LR: 1.00e-04 | GradNorm: 7.710
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.99%, Val=5.34%, Gap=-0.35%, LR=1.03e-04
  Batch    0/48 | Loss: 3.7595 | LR: 1.03e-04 | GradNorm: 8.154
  Batch    4/48 | Loss: 3.7456 | LR: 1.03e-04 | GradNorm: 4.842
  Batch    8/48 | Loss: 3.7098 | LR: 1.03e-04 | GradNorm: 4.168
  Batch   12/48 | Loss: 3.7214 | LR: 1.03e-04 | GradNorm: 7.530
  Batch   16/48 | Loss: 3.7149 | LR: 1.03e-04 | GradNorm: 5.313
  Batch   20/48 | Loss: 3.6925 | LR: 1.02e-04 | GradNorm: 4.208
  Batch   24/48 | Loss: 3.6893 | LR: 1.02e-04 | GradNorm: 6.969
  Batch   28/48 | Loss: 3.6437 | LR: 1.02e-04 | GradNorm: 5.909
  Batch   32/48 | Loss: 3.6458 | LR: 1.01e-04 | GradNorm: 3.523
  Batch   36/48 | Loss: 3.6406 | LR: 1.01e-04 | GradNorm: 4.759
  Batch   40/48 | Loss: 3.6268 | LR: 1.00e-04 | GradNorm: 6.996
  Batch   44/48 | Loss: 3.6096 | LR: 9.98e-05 | GradNorm: 7.046
Epoch 3/10: Train=7.47%, Val=8.49%, Gap=-1.02%, LR=9.93e-05
  Batch    0/48 | Loss: 3.5729 | LR: 9.91e-05 | GradNorm: 5.236
  Batch    4/48 | Loss: 3.5404 | LR: 9.85e-05 | GradNorm: 5.995
  Batch    8/48 | Loss: 3.5120 | LR: 9.77e-05 | GradNorm: 5.265
  Batch   12/48 | Loss: 3.4850 | LR: 9.69e-05 | GradNorm: 6.733
  Batch   16/48 | Loss: 3.5019 | LR: 9.61e-05 | GradNorm: 7.520
  Batch   20/48 | Loss: 3.4909 | LR: 9.52e-05 | GradNorm: 7.944
  Batch   24/48 | Loss: 3.4799 | LR: 9.43e-05 | GradNorm: 10.039
  Batch   28/48 | Loss: 3.4160 | LR: 9.33e-05 | GradNorm: 2.876
  Batch   32/48 | Loss: 3.4427 | LR: 9.23e-05 | GradNorm: 6.472
  Batch   36/48 | Loss: 3.4225 | LR: 9.13e-05 | GradNorm: 4.060
  Batch   40/48 | Loss: 3.4274 | LR: 9.02e-05 | GradNorm: 7.100
  Batch   44/48 | Loss: 3.3829 | LR: 8.90e-05 | GradNorm: 3.634
Epoch 4/10: Train=13.41%, Val=14.18%, Gap=-0.77%, LR=8.81e-05
  Batch    0/48 | Loss: 3.3907 | LR: 8.78e-05 | GradNorm: 8.349
  Batch    4/48 | Loss: 3.3675 | LR: 8.66e-05 | GradNorm: 8.149
  Batch    8/48 | Loss: 3.3228 | LR: 8.53e-05 | GradNorm: 4.764
  Batch   12/48 | Loss: 3.3173 | LR: 8.40e-05 | GradNorm: 4.800
  Batch   16/48 | Loss: 3.4096 | LR: 8.27e-05 | GradNorm: 11.308
  Batch   20/48 | Loss: 3.4011 | LR: 8.14e-05 | GradNorm: 13.372
  Batch   24/48 | Loss: 3.3697 | LR: 8.00e-05 | GradNorm: 6.588
  Batch   28/48 | Loss: 3.3241 | LR: 7.85e-05 | GradNorm: 5.348
  Batch   32/48 | Loss: 3.3010 | LR: 7.71e-05 | GradNorm: 6.531
  Batch   36/48 | Loss: 3.3503 | LR: 7.56e-05 | GradNorm: 4.236
  Batch   40/48 | Loss: 3.3281 | LR: 7.41e-05 | GradNorm: 2.476
  Batch   44/48 | Loss: 3.3202 | LR: 7.26e-05 | GradNorm: 5.879
Epoch 5/10: Train=16.15%, Val=15.58%, Gap=0.57%, LR=7.14e-05
  Batch    0/48 | Loss: 3.2681 | LR: 7.10e-05 | GradNorm: 2.482
  Batch    4/48 | Loss: 3.2624 | LR: 6.94e-05 | GradNorm: 7.827
  Batch    8/48 | Loss: 3.2455 | LR: 6.78e-05 | GradNorm: 6.781
  Batch   12/48 | Loss: 3.2494 | LR: 6.62e-05 | GradNorm: 3.709
  Batch   16/48 | Loss: 3.2342 | LR: 6.46e-05 | GradNorm: 6.418
  Batch   20/48 | Loss: 3.2377 | LR: 6.30e-05 | GradNorm: 5.363
  Batch   24/48 | Loss: 3.2251 | LR: 6.13e-05 | GradNorm: 5.891
  Batch   28/48 | Loss: 3.2008 | LR: 5.96e-05 | GradNorm: 7.329
  Batch   32/48 | Loss: 3.1846 | LR: 5.80e-05 | GradNorm: 5.409
  Batch   36/48 | Loss: 3.2284 | LR: 5.63e-05 | GradNorm: 6.908
  Batch   40/48 | Loss: 3.2205 | LR: 5.46e-05 | GradNorm: 9.331
  Batch   44/48 | Loss: 3.2723 | LR: 5.29e-05 | GradNorm: 5.585
Epoch 6/10: Train=18.69%, Val=16.13%, Gap=2.56%, LR=5.17e-05
  Batch    0/48 | Loss: 3.2128 | LR: 5.12e-05 | GradNorm: 6.159
  Batch    4/48 | Loss: 3.2012 | LR: 4.96e-05 | GradNorm: 9.180
  Batch    8/48 | Loss: 3.1955 | LR: 4.79e-05 | GradNorm: 8.626
  Batch   12/48 | Loss: 3.1357 | LR: 4.62e-05 | GradNorm: 6.416
  Batch   16/48 | Loss: 3.1371 | LR: 4.45e-05 | GradNorm: 7.650
  Batch   20/48 | Loss: 3.1842 | LR: 4.28e-05 | GradNorm: 5.079
  Batch   24/48 | Loss: 3.1522 | LR: 4.12e-05 | GradNorm: 1.732
  Batch   28/48 | Loss: 3.1766 | LR: 3.95e-05 | GradNorm: 4.697
  Batch   32/48 | Loss: 3.2006 | LR: 3.79e-05 | GradNorm: 9.527
  Batch   36/48 | Loss: 3.1752 | LR: 3.63e-05 | GradNorm: 8.329
  Batch   40/48 | Loss: 3.1834 | LR: 3.47e-05 | GradNorm: 11.670
  Batch   44/48 | Loss: 3.1635 | LR: 3.31e-05 | GradNorm: 9.149
Epoch 7/10: Train=20.98%, Val=17.85%, Gap=3.13%, LR=3.19e-05
  Batch    0/48 | Loss: 3.1437 | LR: 3.15e-05 | GradNorm: 8.477
  Batch    4/48 | Loss: 3.1106 | LR: 3.00e-05 | GradNorm: 9.530
  Batch    8/48 | Loss: 3.1149 | LR: 2.85e-05 | GradNorm: 7.002
  Batch   12/48 | Loss: 3.1490 | LR: 2.70e-05 | GradNorm: 9.228
  Batch   16/48 | Loss: 3.1439 | LR: 2.55e-05 | GradNorm: 6.735
  Batch   20/48 | Loss: 3.0890 | LR: 2.41e-05 | GradNorm: 5.183
  Batch   24/48 | Loss: 3.0944 | LR: 2.27e-05 | GradNorm: 8.513
  Batch   28/48 | Loss: 3.1211 | LR: 2.13e-05 | GradNorm: 8.555
  Batch   32/48 | Loss: 3.1099 | LR: 1.99e-05 | GradNorm: 13.693
  Batch   36/48 | Loss: 3.1136 | LR: 1.86e-05 | GradNorm: 6.619
  Batch   40/48 | Loss: 3.0403 | LR: 1.73e-05 | GradNorm: 5.717
  Batch   44/48 | Loss: 3.0987 | LR: 1.61e-05 | GradNorm: 6.250
Epoch 8/10: Train=23.27%, Val=17.50%, Gap=5.77%, LR=1.52e-05
  Batch    0/48 | Loss: 3.0616 | LR: 1.49e-05 | GradNorm: 8.508
  Batch    4/48 | Loss: 3.0665 | LR: 1.37e-05 | GradNorm: 7.089
  Batch    8/48 | Loss: 3.1243 | LR: 1.26e-05 | GradNorm: 11.710
  Batch   12/48 | Loss: 3.0689 | LR: 1.15e-05 | GradNorm: 4.840
  Batch   16/48 | Loss: 3.0336 | LR: 1.05e-05 | GradNorm: 3.608
  Batch   20/48 | Loss: 3.0356 | LR: 9.51e-06 | GradNorm: 5.037
  Batch   24/48 | Loss: 3.0648 | LR: 8.56e-06 | GradNorm: 3.763
  Batch   28/48 | Loss: 3.0715 | LR: 7.65e-06 | GradNorm: 5.326
  Batch   32/48 | Loss: 3.0634 | LR: 6.80e-06 | GradNorm: 4.488
  Batch   36/48 | Loss: 3.0520 | LR: 5.99e-06 | GradNorm: 5.711
  Batch   40/48 | Loss: 3.0399 | LR: 5.23e-06 | GradNorm: 3.988
  Batch   44/48 | Loss: 3.0512 | LR: 4.52e-06 | GradNorm: 3.704
Epoch 9/10: Train=24.88%, Val=17.51%, Gap=7.37%, LR=4.03e-06
  Batch    0/48 | Loss: 3.0509 | LR: 3.87e-06 | GradNorm: 4.957
  Batch    4/48 | Loss: 3.0517 | LR: 3.26e-06 | GradNorm: 5.717
  Batch    8/48 | Loss: 3.0271 | LR: 2.70e-06 | GradNorm: 2.300
  Batch   12/48 | Loss: 3.0478 | LR: 2.20e-06 | GradNorm: 4.659
  Batch   16/48 | Loss: 3.0370 | LR: 1.75e-06 | GradNorm: 3.660
  Batch   20/48 | Loss: 3.0338 | LR: 1.35e-06 | GradNorm: 2.532
  Batch   24/48 | Loss: 3.0342 | LR: 1.01e-06 | GradNorm: 3.210
  Batch   28/48 | Loss: 3.0522 | LR: 7.22e-07 | GradNorm: 2.814
  Batch   32/48 | Loss: 3.0750 | LR: 4.88e-07 | GradNorm: 4.694
  Batch   36/48 | Loss: 3.0541 | LR: 3.09e-07 | GradNorm: 4.299
  Batch   40/48 | Loss: 3.0274 | LR: 1.85e-07 | GradNorm: 2.893
  Batch   44/48 | Loss: 3.0429 | LR: 1.16e-07 | GradNorm: 3.447
Epoch 10/10: Train=25.65%, Val=17.90%, Gap=7.75%, LR=1.00e-07
Best validation accuracy: 17.90%
