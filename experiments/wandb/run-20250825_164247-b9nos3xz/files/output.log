=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002909527309454995
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9355 | LR: 5.91e-06 | GradNorm: 1.303
  Batch    4/48 | Loss: 3.9245 | LR: 1.79e-05 | GradNorm: 0.978
  Batch    8/48 | Loss: 3.9190 | LR: 2.99e-05 | GradNorm: 0.775
  Batch   12/48 | Loss: 3.9095 | LR: 4.19e-05 | GradNorm: 0.636
  Batch   16/48 | Loss: 3.9229 | LR: 5.39e-05 | GradNorm: 0.727
  Batch   20/48 | Loss: 3.9189 | LR: 6.59e-05 | GradNorm: 0.663
  Batch   24/48 | Loss: 3.9165 | LR: 7.79e-05 | GradNorm: 0.689
  Batch   28/48 | Loss: 3.9126 | LR: 8.99e-05 | GradNorm: 0.544
  Batch   32/48 | Loss: 3.9107 | LR: 1.02e-04 | GradNorm: 0.581
  Batch   36/48 | Loss: 3.9051 | LR: 1.14e-04 | GradNorm: 0.555
  Batch   40/48 | Loss: 3.8890 | LR: 1.26e-04 | GradNorm: 0.583
  Batch   44/48 | Loss: 3.8501 | LR: 1.38e-04 | GradNorm: 0.739
Epoch 1/10: Train=2.60%, Val=4.08%, Gap=-1.48%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8078 | LR: 1.50e-04 | GradNorm: 1.162
  Batch    4/48 | Loss: 3.9144 | LR: 1.62e-04 | GradNorm: 5.924
  Batch    8/48 | Loss: 3.9227 | LR: 1.74e-04 | GradNorm: 4.879
  Batch   12/48 | Loss: 3.7978 | LR: 1.86e-04 | GradNorm: 3.674
  Batch   16/48 | Loss: 3.8331 | LR: 1.98e-04 | GradNorm: 2.628
  Batch   20/48 | Loss: 3.7796 | LR: 2.10e-04 | GradNorm: 1.420
  Batch   24/48 | Loss: 3.7100 | LR: 2.22e-04 | GradNorm: 0.826
  Batch   28/48 | Loss: 3.7251 | LR: 2.34e-04 | GradNorm: 4.198
  Batch   32/48 | Loss: 3.6881 | LR: 2.46e-04 | GradNorm: 1.843
  Batch   36/48 | Loss: 3.7100 | LR: 2.58e-04 | GradNorm: 2.513
  Batch   40/48 | Loss: 3.6912 | LR: 2.70e-04 | GradNorm: 1.978
  Batch   44/48 | Loss: 3.6985 | LR: 2.82e-04 | GradNorm: 5.010
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.56%, Val=7.32%, Gap=-1.76%, LR=2.91e-04
  Batch    0/48 | Loss: 3.6711 | LR: 2.91e-04 | GradNorm: 5.518
  Batch    4/48 | Loss: 3.6482 | LR: 2.91e-04 | GradNorm: 3.404
  Batch    8/48 | Loss: 3.5764 | LR: 2.91e-04 | GradNorm: 1.140
  Batch   12/48 | Loss: 3.6218 | LR: 2.90e-04 | GradNorm: 4.073
  Batch   16/48 | Loss: 3.5532 | LR: 2.90e-04 | GradNorm: 0.944
  Batch   20/48 | Loss: 3.5161 | LR: 2.89e-04 | GradNorm: 4.919
  Batch   24/48 | Loss: 3.4745 | LR: 2.88e-04 | GradNorm: 1.830
  Batch   28/48 | Loss: 3.4516 | LR: 2.87e-04 | GradNorm: 3.615
  Batch   32/48 | Loss: 3.4509 | LR: 2.86e-04 | GradNorm: 2.785
  Batch   36/48 | Loss: 3.4166 | LR: 2.84e-04 | GradNorm: 2.190
  Batch   40/48 | Loss: 3.4057 | LR: 2.83e-04 | GradNorm: 4.653
  Batch   44/48 | Loss: 3.3806 | LR: 2.81e-04 | GradNorm: 3.388
Epoch 3/10: Train=11.08%, Val=9.66%, Gap=1.42%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3291 | LR: 2.79e-04 | GradNorm: 2.053
  Batch    4/48 | Loss: 3.3257 | LR: 2.77e-04 | GradNorm: 1.549
  Batch    8/48 | Loss: 3.3476 | LR: 2.75e-04 | GradNorm: 5.015
  Batch   12/48 | Loss: 3.2693 | LR: 2.73e-04 | GradNorm: 2.998
  Batch   16/48 | Loss: 3.3112 | LR: 2.71e-04 | GradNorm: 4.942
  Batch   20/48 | Loss: 3.3267 | LR: 2.68e-04 | GradNorm: 4.368
  Batch   24/48 | Loss: 3.2679 | LR: 2.66e-04 | GradNorm: 3.065
  Batch   28/48 | Loss: 3.2210 | LR: 2.63e-04 | GradNorm: 2.079
  Batch   32/48 | Loss: 3.2515 | LR: 2.60e-04 | GradNorm: 3.846
  Batch   36/48 | Loss: 3.2147 | LR: 2.57e-04 | GradNorm: 3.020
  Batch   40/48 | Loss: 3.2243 | LR: 2.54e-04 | GradNorm: 2.342
  Batch   44/48 | Loss: 3.2053 | LR: 2.51e-04 | GradNorm: 3.995
Epoch 4/10: Train=16.46%, Val=13.03%, Gap=3.43%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1620 | LR: 2.48e-04 | GradNorm: 2.522
  Batch    4/48 | Loss: 3.1458 | LR: 2.44e-04 | GradNorm: 3.099
  Batch    8/48 | Loss: 3.1538 | LR: 2.41e-04 | GradNorm: 4.173
  Batch   12/48 | Loss: 3.1237 | LR: 2.37e-04 | GradNorm: 2.349
  Batch   16/48 | Loss: 3.1817 | LR: 2.33e-04 | GradNorm: 3.201
  Batch   20/48 | Loss: 3.1420 | LR: 2.29e-04 | GradNorm: 6.031
  Batch   24/48 | Loss: 3.1453 | LR: 2.25e-04 | GradNorm: 3.168
  Batch   28/48 | Loss: 3.1198 | LR: 2.21e-04 | GradNorm: 4.333
  Batch   32/48 | Loss: 3.0915 | LR: 2.17e-04 | GradNorm: 4.355
  Batch   36/48 | Loss: 3.1553 | LR: 2.13e-04 | GradNorm: 4.009
  Batch   40/48 | Loss: 3.1528 | LR: 2.09e-04 | GradNorm: 3.675
  Batch   44/48 | Loss: 3.0913 | LR: 2.04e-04 | GradNorm: 2.848
Epoch 5/10: Train=20.39%, Val=10.00%, Gap=10.39%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0776 | LR: 2.00e-04 | GradNorm: 4.244
  Batch    4/48 | Loss: 3.0958 | LR: 1.96e-04 | GradNorm: 5.815
  Batch    8/48 | Loss: 3.0432 | LR: 1.91e-04 | GradNorm: 3.316
  Batch   12/48 | Loss: 3.0258 | LR: 1.87e-04 | GradNorm: 2.631
  Batch   16/48 | Loss: 3.0000 | LR: 1.82e-04 | GradNorm: 2.237
  Batch   20/48 | Loss: 3.0281 | LR: 1.77e-04 | GradNorm: 5.937
  Batch   24/48 | Loss: 3.0051 | LR: 1.73e-04 | GradNorm: 4.183
  Batch   28/48 | Loss: 2.9490 | LR: 1.68e-04 | GradNorm: 3.778
  Batch   32/48 | Loss: 2.9424 | LR: 1.63e-04 | GradNorm: 2.691
  Batch   36/48 | Loss: 2.9784 | LR: 1.59e-04 | GradNorm: 3.704
  Batch   40/48 | Loss: 2.9476 | LR: 1.54e-04 | GradNorm: 2.614
  Batch   44/48 | Loss: 2.9852 | LR: 1.49e-04 | GradNorm: 1.831
Epoch 6/10: Train=24.18%, Val=13.33%, Gap=10.85%, LR=1.46e-04
  Batch    0/48 | Loss: 2.9214 | LR: 1.44e-04 | GradNorm: 3.607
  Batch    4/48 | Loss: 2.9674 | LR: 1.40e-04 | GradNorm: 7.239
  Batch    8/48 | Loss: 2.9138 | LR: 1.35e-04 | GradNorm: 2.631
  Batch   12/48 | Loss: 2.8274 | LR: 1.30e-04 | GradNorm: 2.126
  Batch   16/48 | Loss: 2.8525 | LR: 1.25e-04 | GradNorm: 4.576
  Batch   20/48 | Loss: 2.8809 | LR: 1.21e-04 | GradNorm: 3.179
  Batch   24/48 | Loss: 2.8830 | LR: 1.16e-04 | GradNorm: 3.190
  Batch   28/48 | Loss: 2.8864 | LR: 1.11e-04 | GradNorm: 3.986
  Batch   32/48 | Loss: 2.9047 | LR: 1.07e-04 | GradNorm: 6.198
  Batch   36/48 | Loss: 2.9075 | LR: 1.02e-04 | GradNorm: 5.952
  Batch   40/48 | Loss: 2.8544 | LR: 9.77e-05 | GradNorm: 5.050
  Batch   44/48 | Loss: 2.8451 | LR: 9.32e-05 | GradNorm: 5.865
Epoch 7/10: Train=28.89%, Val=18.42%, Gap=10.47%, LR=8.99e-05
  Batch    0/48 | Loss: 2.8283 | LR: 8.88e-05 | GradNorm: 4.217
  Batch    4/48 | Loss: 2.7642 | LR: 8.44e-05 | GradNorm: 2.439
  Batch    8/48 | Loss: 2.7812 | LR: 8.01e-05 | GradNorm: 5.080
  Batch   12/48 | Loss: 2.8443 | LR: 7.59e-05 | GradNorm: 6.500
  Batch   16/48 | Loss: 2.8353 | LR: 7.18e-05 | GradNorm: 4.166
  Batch   20/48 | Loss: 2.7708 | LR: 6.77e-05 | GradNorm: 5.785
  Batch   24/48 | Loss: 2.7493 | LR: 6.37e-05 | GradNorm: 3.972
  Batch   28/48 | Loss: 2.7804 | LR: 5.99e-05 | GradNorm: 3.653
  Batch   32/48 | Loss: 2.7806 | LR: 5.61e-05 | GradNorm: 4.808
  Batch   36/48 | Loss: 2.7745 | LR: 5.24e-05 | GradNorm: 4.999
  Batch   40/48 | Loss: 2.7039 | LR: 4.87e-05 | GradNorm: 3.623
  Batch   44/48 | Loss: 2.7436 | LR: 4.52e-05 | GradNorm: 3.927
Epoch 8/10: Train=31.75%, Val=17.91%, Gap=13.84%, LR=4.27e-05
  Batch    0/48 | Loss: 2.7279 | LR: 4.19e-05 | GradNorm: 3.147
  Batch    4/48 | Loss: 2.7102 | LR: 3.86e-05 | GradNorm: 3.492
  Batch    8/48 | Loss: 2.7750 | LR: 3.54e-05 | GradNorm: 5.253
  Batch   12/48 | Loss: 2.6973 | LR: 3.24e-05 | GradNorm: 3.890
  Batch   16/48 | Loss: 2.6504 | LR: 2.94e-05 | GradNorm: 2.617
  Batch   20/48 | Loss: 2.6584 | LR: 2.66e-05 | GradNorm: 2.687
  Batch   24/48 | Loss: 2.7132 | LR: 2.40e-05 | GradNorm: 2.953
  Batch   28/48 | Loss: 2.7008 | LR: 2.14e-05 | GradNorm: 2.538
  Batch   32/48 | Loss: 2.6914 | LR: 1.90e-05 | GradNorm: 3.446
  Batch   36/48 | Loss: 2.6940 | LR: 1.67e-05 | GradNorm: 2.759
  Batch   40/48 | Loss: 2.6691 | LR: 1.46e-05 | GradNorm: 2.549
  Batch   44/48 | Loss: 2.7062 | LR: 1.26e-05 | GradNorm: 3.092
Epoch 9/10: Train=34.44%, Val=17.95%, Gap=16.49%, LR=1.12e-05
  Batch    0/48 | Loss: 2.6852 | LR: 1.07e-05 | GradNorm: 2.810
  Batch    4/48 | Loss: 2.6701 | LR: 9.01e-06 | GradNorm: 2.739
  Batch    8/48 | Loss: 2.6480 | LR: 7.44e-06 | GradNorm: 2.209
  Batch   12/48 | Loss: 2.6526 | LR: 6.02e-06 | GradNorm: 2.012
  Batch   16/48 | Loss: 2.6457 | LR: 4.75e-06 | GradNorm: 1.768
  Batch   20/48 | Loss: 2.6832 | LR: 3.63e-06 | GradNorm: 3.580
  Batch   24/48 | Loss: 2.6846 | LR: 2.67e-06 | GradNorm: 3.477
  Batch   28/48 | Loss: 2.6934 | LR: 1.85e-06 | GradNorm: 2.025
  Batch   32/48 | Loss: 2.7074 | LR: 1.19e-06 | GradNorm: 3.608
  Batch   36/48 | Loss: 2.6708 | LR: 6.88e-07 | GradNorm: 2.356
  Batch   40/48 | Loss: 2.6525 | LR: 3.38e-07 | GradNorm: 2.043
  Batch   44/48 | Loss: 2.6594 | LR: 1.44e-07 | GradNorm: 2.487
Epoch 10/10: Train=35.37%, Val=17.71%, Gap=17.66%, LR=1.00e-07
Best validation accuracy: 18.42%
