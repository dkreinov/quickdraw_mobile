=== W&B Sweep Run: LR=0.000290 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00029027566219301087
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000290
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9529 | LR: 5.90e-06 | GradNorm: 1.607
  Batch    4/48 | Loss: 3.9273 | LR: 1.79e-05 | GradNorm: 1.100
  Batch    8/48 | Loss: 3.9167 | LR: 2.98e-05 | GradNorm: 0.913
  Batch   12/48 | Loss: 3.9101 | LR: 4.18e-05 | GradNorm: 0.605
  Batch   16/48 | Loss: 3.9213 | LR: 5.38e-05 | GradNorm: 0.685
  Batch   20/48 | Loss: 3.9185 | LR: 6.58e-05 | GradNorm: 0.697
  Batch   24/48 | Loss: 3.9129 | LR: 7.77e-05 | GradNorm: 0.635
  Batch   28/48 | Loss: 3.9103 | LR: 8.97e-05 | GradNorm: 0.504
  Batch   32/48 | Loss: 3.9043 | LR: 1.02e-04 | GradNorm: 0.478
  Batch   36/48 | Loss: 3.9101 | LR: 1.14e-04 | GradNorm: 0.525
  Batch   40/48 | Loss: 3.9012 | LR: 1.26e-04 | GradNorm: 0.574
  Batch   44/48 | Loss: 3.8803 | LR: 1.38e-04 | GradNorm: 0.625
Epoch 1/10: Train=2.55%, Val=4.47%, Gap=-1.92%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8373 | LR: 1.50e-04 | GradNorm: 0.862
  Batch    4/48 | Loss: 3.7917 | LR: 1.62e-04 | GradNorm: 3.082
  Batch    8/48 | Loss: 3.9335 | LR: 1.74e-04 | GradNorm: 6.347
  Batch   12/48 | Loss: 3.9352 | LR: 1.86e-04 | GradNorm: 5.172
  Batch   16/48 | Loss: 3.7904 | LR: 1.97e-04 | GradNorm: 2.561
  Batch   20/48 | Loss: 3.7848 | LR: 2.09e-04 | GradNorm: 1.407
  Batch   24/48 | Loss: 3.7542 | LR: 2.21e-04 | GradNorm: 2.594
  Batch   28/48 | Loss: 3.7216 | LR: 2.33e-04 | GradNorm: 1.772
  Batch   32/48 | Loss: 3.7069 | LR: 2.45e-04 | GradNorm: 1.768
  Batch   36/48 | Loss: 3.7524 | LR: 2.57e-04 | GradNorm: 3.490
  Batch   40/48 | Loss: 3.6411 | LR: 2.69e-04 | GradNorm: 0.970
  Batch   44/48 | Loss: 3.7791 | LR: 2.81e-04 | GradNorm: 13.676
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.85%, Val=7.80%, Gap=-1.95%, LR=2.90e-04
  Batch    0/48 | Loss: 3.6165 | LR: 2.90e-04 | GradNorm: 3.258
  Batch    4/48 | Loss: 3.5845 | LR: 2.90e-04 | GradNorm: 1.415
  Batch    8/48 | Loss: 3.5186 | LR: 2.90e-04 | GradNorm: 2.942
  Batch   12/48 | Loss: 3.5031 | LR: 2.89e-04 | GradNorm: 3.326
  Batch   16/48 | Loss: 3.5007 | LR: 2.89e-04 | GradNorm: 5.774
  Batch   20/48 | Loss: 3.4173 | LR: 2.88e-04 | GradNorm: 2.941
  Batch   24/48 | Loss: 3.4056 | LR: 2.87e-04 | GradNorm: 4.441
  Batch   28/48 | Loss: 3.3172 | LR: 2.86e-04 | GradNorm: 1.405
  Batch   32/48 | Loss: 3.4149 | LR: 2.85e-04 | GradNorm: 5.592
  Batch   36/48 | Loss: 3.3674 | LR: 2.84e-04 | GradNorm: 2.713
  Batch   40/48 | Loss: 3.3276 | LR: 2.82e-04 | GradNorm: 4.201
  Batch   44/48 | Loss: 3.3176 | LR: 2.81e-04 | GradNorm: 3.621
Epoch 3/10: Train=13.32%, Val=9.91%, Gap=3.41%, LR=2.79e-04
  Batch    0/48 | Loss: 3.3110 | LR: 2.79e-04 | GradNorm: 3.639
  Batch    4/48 | Loss: 3.2946 | LR: 2.77e-04 | GradNorm: 3.943
  Batch    8/48 | Loss: 3.2574 | LR: 2.75e-04 | GradNorm: 1.588
  Batch   12/48 | Loss: 3.3275 | LR: 2.73e-04 | GradNorm: 10.812
  Batch   16/48 | Loss: 3.2635 | LR: 2.70e-04 | GradNorm: 2.963
  Batch   20/48 | Loss: 3.2823 | LR: 2.68e-04 | GradNorm: 3.198
  Batch   24/48 | Loss: 3.2890 | LR: 2.65e-04 | GradNorm: 4.803
  Batch   28/48 | Loss: 3.2566 | LR: 2.62e-04 | GradNorm: 4.445
  Batch   32/48 | Loss: 3.2682 | LR: 2.60e-04 | GradNorm: 2.618
  Batch   36/48 | Loss: 3.2008 | LR: 2.57e-04 | GradNorm: 2.248
  Batch   40/48 | Loss: 3.2244 | LR: 2.53e-04 | GradNorm: 2.814
  Batch   44/48 | Loss: 3.1766 | LR: 2.50e-04 | GradNorm: 2.647
Epoch 4/10: Train=17.27%, Val=13.93%, Gap=3.34%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1458 | LR: 2.47e-04 | GradNorm: 2.192
  Batch    4/48 | Loss: 3.1429 | LR: 2.43e-04 | GradNorm: 4.813
  Batch    8/48 | Loss: 3.0961 | LR: 2.40e-04 | GradNorm: 2.159
  Batch   12/48 | Loss: 3.1184 | LR: 2.36e-04 | GradNorm: 3.824
  Batch   16/48 | Loss: 3.1604 | LR: 2.33e-04 | GradNorm: 2.797
  Batch   20/48 | Loss: 3.1475 | LR: 2.29e-04 | GradNorm: 4.706
  Batch   24/48 | Loss: 3.1346 | LR: 2.25e-04 | GradNorm: 5.348
  Batch   28/48 | Loss: 3.0755 | LR: 2.21e-04 | GradNorm: 2.523
  Batch   32/48 | Loss: 3.0748 | LR: 2.17e-04 | GradNorm: 3.987
  Batch   36/48 | Loss: 3.1056 | LR: 2.13e-04 | GradNorm: 1.862
  Batch   40/48 | Loss: 3.0936 | LR: 2.08e-04 | GradNorm: 2.363
  Batch   44/48 | Loss: 3.0903 | LR: 2.04e-04 | GradNorm: 5.596
Epoch 5/10: Train=21.25%, Val=13.86%, Gap=7.39%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0250 | LR: 2.00e-04 | GradNorm: 4.853
  Batch    4/48 | Loss: 2.9675 | LR: 1.95e-04 | GradNorm: 3.567
  Batch    8/48 | Loss: 2.9952 | LR: 1.91e-04 | GradNorm: 3.945
  Batch   12/48 | Loss: 2.9792 | LR: 1.86e-04 | GradNorm: 4.140
  Batch   16/48 | Loss: 2.9433 | LR: 1.82e-04 | GradNorm: 2.927
  Batch   20/48 | Loss: 2.9438 | LR: 1.77e-04 | GradNorm: 4.026
  Batch   24/48 | Loss: 2.9298 | LR: 1.72e-04 | GradNorm: 4.262
  Batch   28/48 | Loss: 2.8962 | LR: 1.68e-04 | GradNorm: 3.656
  Batch   32/48 | Loss: 2.8882 | LR: 1.63e-04 | GradNorm: 3.235
  Batch   36/48 | Loss: 2.9321 | LR: 1.58e-04 | GradNorm: 3.548
  Batch   40/48 | Loss: 2.9186 | LR: 1.53e-04 | GradNorm: 4.502
  Batch   44/48 | Loss: 2.9398 | LR: 1.49e-04 | GradNorm: 2.982
Epoch 6/10: Train=26.19%, Val=15.82%, Gap=10.37%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8830 | LR: 1.44e-04 | GradNorm: 3.754
  Batch    4/48 | Loss: 2.8635 | LR: 1.39e-04 | GradNorm: 5.380
  Batch    8/48 | Loss: 2.8397 | LR: 1.35e-04 | GradNorm: 2.252
  Batch   12/48 | Loss: 2.7662 | LR: 1.30e-04 | GradNorm: 3.339
  Batch   16/48 | Loss: 2.8081 | LR: 1.25e-04 | GradNorm: 2.119
  Batch   20/48 | Loss: 2.8553 | LR: 1.20e-04 | GradNorm: 4.780
  Batch   24/48 | Loss: 2.8412 | LR: 1.16e-04 | GradNorm: 4.446
  Batch   28/48 | Loss: 2.8496 | LR: 1.11e-04 | GradNorm: 4.819
  Batch   32/48 | Loss: 2.8344 | LR: 1.06e-04 | GradNorm: 5.124
  Batch   36/48 | Loss: 2.8647 | LR: 1.02e-04 | GradNorm: 8.567
  Batch   40/48 | Loss: 2.8126 | LR: 9.74e-05 | GradNorm: 3.128
  Batch   44/48 | Loss: 2.8030 | LR: 9.30e-05 | GradNorm: 5.627
Epoch 7/10: Train=30.24%, Val=19.40%, Gap=10.84%, LR=8.97e-05
  Batch    0/48 | Loss: 2.7999 | LR: 8.86e-05 | GradNorm: 3.608
  Batch    4/48 | Loss: 2.7436 | LR: 8.42e-05 | GradNorm: 5.667
  Batch    8/48 | Loss: 2.7434 | LR: 8.00e-05 | GradNorm: 3.220
  Batch   12/48 | Loss: 2.7740 | LR: 7.57e-05 | GradNorm: 4.049
  Batch   16/48 | Loss: 2.7848 | LR: 7.16e-05 | GradNorm: 5.047
  Batch   20/48 | Loss: 2.7060 | LR: 6.76e-05 | GradNorm: 4.110
  Batch   24/48 | Loss: 2.7209 | LR: 6.36e-05 | GradNorm: 7.097
  Batch   28/48 | Loss: 2.7489 | LR: 5.97e-05 | GradNorm: 6.668
  Batch   32/48 | Loss: 2.7733 | LR: 5.59e-05 | GradNorm: 6.416
  Batch   36/48 | Loss: 2.7102 | LR: 5.22e-05 | GradNorm: 3.522
  Batch   40/48 | Loss: 2.6560 | LR: 4.86e-05 | GradNorm: 3.735
  Batch   44/48 | Loss: 2.7047 | LR: 4.51e-05 | GradNorm: 2.663
Epoch 8/10: Train=33.08%, Val=17.48%, Gap=15.60%, LR=4.26e-05
  Batch    0/48 | Loss: 2.6865 | LR: 4.18e-05 | GradNorm: 4.603
  Batch    4/48 | Loss: 2.6771 | LR: 3.85e-05 | GradNorm: 5.426
  Batch    8/48 | Loss: 2.7169 | LR: 3.53e-05 | GradNorm: 4.471
  Batch   12/48 | Loss: 2.6487 | LR: 3.23e-05 | GradNorm: 2.769
  Batch   16/48 | Loss: 2.6264 | LR: 2.94e-05 | GradNorm: 3.411
  Batch   20/48 | Loss: 2.6245 | LR: 2.66e-05 | GradNorm: 3.208
  Batch   24/48 | Loss: 2.6586 | LR: 2.39e-05 | GradNorm: 3.026
  Batch   28/48 | Loss: 2.6617 | LR: 2.14e-05 | GradNorm: 3.406
  Batch   32/48 | Loss: 2.6415 | LR: 1.89e-05 | GradNorm: 3.185
  Batch   36/48 | Loss: 2.6523 | LR: 1.67e-05 | GradNorm: 3.850
  Batch   40/48 | Loss: 2.6191 | LR: 1.45e-05 | GradNorm: 3.119
  Batch   44/48 | Loss: 2.6574 | LR: 1.25e-05 | GradNorm: 2.630
Epoch 9/10: Train=35.62%, Val=18.95%, Gap=16.67%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6368 | LR: 1.07e-05 | GradNorm: 3.936
  Batch    4/48 | Loss: 2.6405 | LR: 8.99e-06 | GradNorm: 2.457
  Batch    8/48 | Loss: 2.6074 | LR: 7.42e-06 | GradNorm: 1.934
  Batch   12/48 | Loss: 2.6220 | LR: 6.01e-06 | GradNorm: 3.000
  Batch   16/48 | Loss: 2.6220 | LR: 4.74e-06 | GradNorm: 1.971
  Batch   20/48 | Loss: 2.6369 | LR: 3.63e-06 | GradNorm: 3.622
  Batch   24/48 | Loss: 2.6493 | LR: 2.66e-06 | GradNorm: 3.192
  Batch   28/48 | Loss: 2.6685 | LR: 1.85e-06 | GradNorm: 2.296
  Batch   32/48 | Loss: 2.6454 | LR: 1.19e-06 | GradNorm: 3.274
  Batch   36/48 | Loss: 2.6094 | LR: 6.87e-07 | GradNorm: 1.958
  Batch   40/48 | Loss: 2.6096 | LR: 3.38e-07 | GradNorm: 2.732
  Batch   44/48 | Loss: 2.6156 | LR: 1.44e-07 | GradNorm: 2.966
Epoch 10/10: Train=36.66%, Val=19.42%, Gap=17.24%, LR=1.00e-07
Best validation accuracy: 19.42%
