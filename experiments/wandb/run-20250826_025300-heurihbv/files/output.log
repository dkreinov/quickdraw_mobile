=== W&B Sweep Run: LR=0.000180 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00018030130175931364
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000180
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9415 | LR: 3.66e-06 | GradNorm: 1.347
  Batch    4/48 | Loss: 3.9478 | LR: 1.11e-05 | GradNorm: 1.198
  Batch    8/48 | Loss: 3.9255 | LR: 1.85e-05 | GradNorm: 0.908
  Batch   12/48 | Loss: 3.9151 | LR: 2.60e-05 | GradNorm: 0.752
  Batch   16/48 | Loss: 3.9205 | LR: 3.34e-05 | GradNorm: 0.706
  Batch   20/48 | Loss: 3.9193 | LR: 4.08e-05 | GradNorm: 0.775
  Batch   24/48 | Loss: 3.9113 | LR: 4.83e-05 | GradNorm: 0.723
  Batch   28/48 | Loss: 3.9186 | LR: 5.57e-05 | GradNorm: 0.595
  Batch   32/48 | Loss: 3.9088 | LR: 6.32e-05 | GradNorm: 0.547
  Batch   36/48 | Loss: 3.9135 | LR: 7.06e-05 | GradNorm: 0.536
  Batch   40/48 | Loss: 3.9122 | LR: 7.80e-05 | GradNorm: 0.592
  Batch   44/48 | Loss: 3.9117 | LR: 8.55e-05 | GradNorm: 0.654
Epoch 1/10: Train=2.16%, Val=2.53%, Gap=-0.37%, LR=9.11e-05
  Batch    0/48 | Loss: 3.9040 | LR: 9.29e-05 | GradNorm: 0.628
  Batch    4/48 | Loss: 3.8842 | LR: 1.00e-04 | GradNorm: 0.515
  Batch    8/48 | Loss: 3.8666 | LR: 1.08e-04 | GradNorm: 0.884
  Batch   12/48 | Loss: 3.8169 | LR: 1.15e-04 | GradNorm: 1.935
  Batch   16/48 | Loss: 3.7930 | LR: 1.23e-04 | GradNorm: 1.554
  Batch   20/48 | Loss: 3.8702 | LR: 1.30e-04 | GradNorm: 7.407
  Batch   24/48 | Loss: 3.9615 | LR: 1.38e-04 | GradNorm: 7.344
  Batch   28/48 | Loss: 3.9045 | LR: 1.45e-04 | GradNorm: 5.408
  Batch   32/48 | Loss: 3.8135 | LR: 1.52e-04 | GradNorm: 2.926
  Batch   36/48 | Loss: 3.7323 | LR: 1.60e-04 | GradNorm: 0.689
  Batch   40/48 | Loss: 3.7203 | LR: 1.67e-04 | GradNorm: 1.438
  Batch   44/48 | Loss: 3.7017 | LR: 1.75e-04 | GradNorm: 5.304
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.91%, Val=6.25%, Gap=-1.34%, LR=1.80e-04
  Batch    0/48 | Loss: 3.6525 | LR: 1.80e-04 | GradNorm: 4.063
  Batch    4/48 | Loss: 3.6466 | LR: 1.80e-04 | GradNorm: 3.565
  Batch    8/48 | Loss: 3.6041 | LR: 1.80e-04 | GradNorm: 2.939
  Batch   12/48 | Loss: 3.5785 | LR: 1.80e-04 | GradNorm: 0.943
  Batch   16/48 | Loss: 3.6211 | LR: 1.79e-04 | GradNorm: 4.379
  Batch   20/48 | Loss: 3.5446 | LR: 1.79e-04 | GradNorm: 2.476
  Batch   24/48 | Loss: 3.5627 | LR: 1.78e-04 | GradNorm: 4.158
  Batch   28/48 | Loss: 3.6073 | LR: 1.78e-04 | GradNorm: 9.699
  Batch   32/48 | Loss: 3.6258 | LR: 1.77e-04 | GradNorm: 11.051
  Batch   36/48 | Loss: 3.5376 | LR: 1.76e-04 | GradNorm: 2.028
  Batch   40/48 | Loss: 3.5182 | LR: 1.75e-04 | GradNorm: 4.670
  Batch   44/48 | Loss: 3.4895 | LR: 1.74e-04 | GradNorm: 3.146
Epoch 3/10: Train=9.83%, Val=7.10%, Gap=2.73%, LR=1.73e-04
  Batch    0/48 | Loss: 3.4542 | LR: 1.73e-04 | GradNorm: 3.877
  Batch    4/48 | Loss: 3.4107 | LR: 1.72e-04 | GradNorm: 0.907
  Batch    8/48 | Loss: 3.4084 | LR: 1.71e-04 | GradNorm: 2.610
  Batch   12/48 | Loss: 3.3455 | LR: 1.69e-04 | GradNorm: 1.830
  Batch   16/48 | Loss: 3.4064 | LR: 1.68e-04 | GradNorm: 6.700
  Batch   20/48 | Loss: 3.3489 | LR: 1.66e-04 | GradNorm: 1.888
  Batch   24/48 | Loss: 3.3334 | LR: 1.65e-04 | GradNorm: 3.538
  Batch   28/48 | Loss: 3.2928 | LR: 1.63e-04 | GradNorm: 3.070
  Batch   32/48 | Loss: 3.3405 | LR: 1.61e-04 | GradNorm: 4.081
  Batch   36/48 | Loss: 3.3051 | LR: 1.59e-04 | GradNorm: 3.021
  Batch   40/48 | Loss: 3.2901 | LR: 1.57e-04 | GradNorm: 3.596
  Batch   44/48 | Loss: 3.2639 | LR: 1.55e-04 | GradNorm: 4.487
Epoch 4/10: Train=14.93%, Val=10.47%, Gap=4.46%, LR=1.54e-04
  Batch    0/48 | Loss: 3.2364 | LR: 1.53e-04 | GradNorm: 1.756
  Batch    4/48 | Loss: 3.2231 | LR: 1.51e-04 | GradNorm: 3.213
  Batch    8/48 | Loss: 3.2228 | LR: 1.49e-04 | GradNorm: 5.400
  Batch   12/48 | Loss: 3.1933 | LR: 1.47e-04 | GradNorm: 4.103
  Batch   16/48 | Loss: 3.2739 | LR: 1.44e-04 | GradNorm: 5.997
  Batch   20/48 | Loss: 3.2047 | LR: 1.42e-04 | GradNorm: 3.973
  Batch   24/48 | Loss: 3.2129 | LR: 1.40e-04 | GradNorm: 2.421
  Batch   28/48 | Loss: 3.1812 | LR: 1.37e-04 | GradNorm: 3.925
  Batch   32/48 | Loss: 3.1539 | LR: 1.35e-04 | GradNorm: 3.341
  Batch   36/48 | Loss: 3.2448 | LR: 1.32e-04 | GradNorm: 5.972
  Batch   40/48 | Loss: 3.1979 | LR: 1.29e-04 | GradNorm: 2.817
  Batch   44/48 | Loss: 3.1916 | LR: 1.27e-04 | GradNorm: 5.707
Epoch 5/10: Train=18.90%, Val=10.12%, Gap=8.78%, LR=1.25e-04
  Batch    0/48 | Loss: 3.1511 | LR: 1.24e-04 | GradNorm: 5.681
  Batch    4/48 | Loss: 3.1336 | LR: 1.21e-04 | GradNorm: 5.426
  Batch    8/48 | Loss: 3.1258 | LR: 1.18e-04 | GradNorm: 3.260
  Batch   12/48 | Loss: 3.1458 | LR: 1.16e-04 | GradNorm: 6.001
  Batch   16/48 | Loss: 3.1402 | LR: 1.13e-04 | GradNorm: 7.380
  Batch   20/48 | Loss: 3.0846 | LR: 1.10e-04 | GradNorm: 2.633
  Batch   24/48 | Loss: 3.0847 | LR: 1.07e-04 | GradNorm: 3.921
  Batch   28/48 | Loss: 3.0694 | LR: 1.04e-04 | GradNorm: 6.218
  Batch   32/48 | Loss: 3.0451 | LR: 1.01e-04 | GradNorm: 4.119
  Batch   36/48 | Loss: 3.0789 | LR: 9.83e-05 | GradNorm: 3.710
  Batch   40/48 | Loss: 3.0825 | LR: 9.54e-05 | GradNorm: 6.123
  Batch   44/48 | Loss: 3.1195 | LR: 9.24e-05 | GradNorm: 4.523
Epoch 6/10: Train=21.39%, Val=13.80%, Gap=7.59%, LR=9.02e-05
  Batch    0/48 | Loss: 3.0473 | LR: 8.95e-05 | GradNorm: 4.833
  Batch    4/48 | Loss: 3.0359 | LR: 8.65e-05 | GradNorm: 4.337
  Batch    8/48 | Loss: 3.0188 | LR: 8.36e-05 | GradNorm: 2.850
  Batch   12/48 | Loss: 2.9834 | LR: 8.06e-05 | GradNorm: 5.736
  Batch   16/48 | Loss: 3.0090 | LR: 7.77e-05 | GradNorm: 9.946
  Batch   20/48 | Loss: 3.0163 | LR: 7.48e-05 | GradNorm: 2.988
  Batch   24/48 | Loss: 3.0035 | LR: 7.19e-05 | GradNorm: 5.668
  Batch   28/48 | Loss: 2.9932 | LR: 6.90e-05 | GradNorm: 2.698
  Batch   32/48 | Loss: 3.0382 | LR: 6.62e-05 | GradNorm: 7.919
  Batch   36/48 | Loss: 3.0231 | LR: 6.33e-05 | GradNorm: 10.859
  Batch   40/48 | Loss: 2.9927 | LR: 6.05e-05 | GradNorm: 5.730
  Batch   44/48 | Loss: 2.9738 | LR: 5.78e-05 | GradNorm: 5.666
Epoch 7/10: Train=25.10%, Val=18.37%, Gap=6.73%, LR=5.57e-05
  Batch    0/48 | Loss: 2.9948 | LR: 5.50e-05 | GradNorm: 6.882
  Batch    4/48 | Loss: 2.9503 | LR: 5.23e-05 | GradNorm: 8.022
  Batch    8/48 | Loss: 2.9587 | LR: 4.97e-05 | GradNorm: 7.756
  Batch   12/48 | Loss: 3.0022 | LR: 4.71e-05 | GradNorm: 9.993
  Batch   16/48 | Loss: 2.9594 | LR: 4.45e-05 | GradNorm: 3.589
  Batch   20/48 | Loss: 2.9160 | LR: 4.20e-05 | GradNorm: 7.757
  Batch   24/48 | Loss: 2.9090 | LR: 3.95e-05 | GradNorm: 4.570
  Batch   28/48 | Loss: 2.9447 | LR: 3.71e-05 | GradNorm: 4.633
  Batch   32/48 | Loss: 2.9351 | LR: 3.48e-05 | GradNorm: 6.195
  Batch   36/48 | Loss: 2.9335 | LR: 3.25e-05 | GradNorm: 3.474
  Batch   40/48 | Loss: 2.8674 | LR: 3.02e-05 | GradNorm: 5.254
  Batch   44/48 | Loss: 2.9146 | LR: 2.81e-05 | GradNorm: 7.470
Epoch 8/10: Train=27.60%, Val=16.34%, Gap=11.26%, LR=2.65e-05
  Batch    0/48 | Loss: 2.8702 | LR: 2.60e-05 | GradNorm: 3.467
  Batch    4/48 | Loss: 2.8710 | LR: 2.39e-05 | GradNorm: 2.751
  Batch    8/48 | Loss: 2.9368 | LR: 2.20e-05 | GradNorm: 2.824
  Batch   12/48 | Loss: 2.8955 | LR: 2.01e-05 | GradNorm: 2.566
  Batch   16/48 | Loss: 2.8556 | LR: 1.83e-05 | GradNorm: 2.782
  Batch   20/48 | Loss: 2.8516 | LR: 1.65e-05 | GradNorm: 4.779
  Batch   24/48 | Loss: 2.8742 | LR: 1.49e-05 | GradNorm: 3.155
  Batch   28/48 | Loss: 2.8827 | LR: 1.33e-05 | GradNorm: 4.280
  Batch   32/48 | Loss: 2.8646 | LR: 1.18e-05 | GradNorm: 5.035
  Batch   36/48 | Loss: 2.8616 | LR: 1.04e-05 | GradNorm: 6.810
  Batch   40/48 | Loss: 2.8639 | LR: 9.07e-06 | GradNorm: 6.320
  Batch   44/48 | Loss: 2.8493 | LR: 7.83e-06 | GradNorm: 2.944
Epoch 9/10: Train=29.34%, Val=16.94%, Gap=12.40%, LR=6.96e-06
  Batch    0/48 | Loss: 2.8675 | LR: 6.68e-06 | GradNorm: 2.421
  Batch    4/48 | Loss: 2.8743 | LR: 5.62e-06 | GradNorm: 2.819
  Batch    8/48 | Loss: 2.8410 | LR: 4.65e-06 | GradNorm: 2.563
  Batch   12/48 | Loss: 2.8553 | LR: 3.77e-06 | GradNorm: 2.532
  Batch   16/48 | Loss: 2.8568 | LR: 2.98e-06 | GradNorm: 2.053
  Batch   20/48 | Loss: 2.8602 | LR: 2.29e-06 | GradNorm: 3.465
  Batch   24/48 | Loss: 2.8363 | LR: 1.69e-06 | GradNorm: 3.837
  Batch   28/48 | Loss: 2.8736 | LR: 1.19e-06 | GradNorm: 2.575
  Batch   32/48 | Loss: 2.8801 | LR: 7.78e-07 | GradNorm: 2.327
  Batch   36/48 | Loss: 2.8521 | LR: 4.65e-07 | GradNorm: 2.947
  Batch   40/48 | Loss: 2.8203 | LR: 2.48e-07 | GradNorm: 2.047
  Batch   44/48 | Loss: 2.8511 | LR: 1.27e-07 | GradNorm: 2.361
Epoch 10/10: Train=30.35%, Val=17.75%, Gap=12.60%, LR=1.00e-07
Best validation accuracy: 18.37%
