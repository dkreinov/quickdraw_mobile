=== W&B Sweep Run: LR=0.002242 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0022415463976129648
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002242
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9375 | LR: 4.55e-05 | GradNorm: 1.408
  Batch    4/48 | Loss: 3.9349 | LR: 1.38e-04 | GradNorm: 0.882
  Batch    8/48 | Loss: 3.9245 | LR: 2.30e-04 | GradNorm: 0.550
  Batch   12/48 | Loss: 3.9148 | LR: 3.23e-04 | GradNorm: 0.470
  Batch   16/48 | Loss: 3.9179 | LR: 4.15e-04 | GradNorm: 0.463
  Batch   20/48 | Loss: 3.9181 | LR: 5.08e-04 | GradNorm: 0.565
  Batch   24/48 | Loss: 3.8937 | LR: 6.00e-04 | GradNorm: 0.547
  Batch   28/48 | Loss: 3.9816 | LR: 6.93e-04 | GradNorm: 2.425
  Batch   32/48 | Loss: 3.8550 | LR: 7.85e-04 | GradNorm: 0.966
  Batch   36/48 | Loss: 3.8104 | LR: 8.78e-04 | GradNorm: 0.541
  Batch   40/48 | Loss: 3.8083 | LR: 9.70e-04 | GradNorm: 1.125
  Batch   44/48 | Loss: 3.7489 | LR: 1.06e-03 | GradNorm: 0.554
Epoch 1/10: Train=3.43%, Val=5.41%, Gap=-1.98%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7730 | LR: 1.16e-03 | GradNorm: 1.868
  Batch    4/48 | Loss: 3.7108 | LR: 1.25e-03 | GradNorm: 0.693
  Batch    8/48 | Loss: 3.6935 | LR: 1.34e-03 | GradNorm: 1.286
  Batch   12/48 | Loss: 3.7414 | LR: 1.43e-03 | GradNorm: 1.169
  Batch   16/48 | Loss: 3.8902 | LR: 1.52e-03 | GradNorm: 0.979
  Batch   20/48 | Loss: 3.8264 | LR: 1.62e-03 | GradNorm: 0.554
  Batch   24/48 | Loss: 3.8089 | LR: 1.71e-03 | GradNorm: 0.542
  Batch   28/48 | Loss: 3.8104 | LR: 1.80e-03 | GradNorm: 0.957
  Batch   32/48 | Loss: 3.7830 | LR: 1.89e-03 | GradNorm: 0.480
  Batch   36/48 | Loss: 3.7261 | LR: 1.99e-03 | GradNorm: 0.622
  Batch   40/48 | Loss: 3.9022 | LR: 2.08e-03 | GradNorm: 2.360
  Batch   44/48 | Loss: 3.7288 | LR: 2.17e-03 | GradNorm: 0.804
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.11%, Val=5.64%, Gap=-0.53%, LR=2.24e-03
  Batch    0/48 | Loss: 3.6955 | LR: 2.24e-03 | GradNorm: 0.976
  Batch    4/48 | Loss: 3.7319 | LR: 2.24e-03 | GradNorm: 1.689
  Batch    8/48 | Loss: 3.7216 | LR: 2.24e-03 | GradNorm: 0.770
  Batch   12/48 | Loss: 3.7215 | LR: 2.24e-03 | GradNorm: 1.583
  Batch   16/48 | Loss: 3.8408 | LR: 2.23e-03 | GradNorm: 2.313
  Batch   20/48 | Loss: 3.6870 | LR: 2.23e-03 | GradNorm: 0.530
  Batch   24/48 | Loss: 3.7074 | LR: 2.22e-03 | GradNorm: 0.776
  Batch   28/48 | Loss: 3.9801 | LR: 2.21e-03 | GradNorm: 3.521
  Batch   32/48 | Loss: 3.6417 | LR: 2.20e-03 | GradNorm: 0.908
  Batch   36/48 | Loss: 3.6878 | LR: 2.19e-03 | GradNorm: 2.052
  Batch   40/48 | Loss: 4.3711 | LR: 2.18e-03 | GradNorm: 1.979
  Batch   44/48 | Loss: 3.8880 | LR: 2.17e-03 | GradNorm: 0.694
Epoch 3/10: Train=5.82%, Val=3.72%, Gap=2.10%, LR=2.16e-03
  Batch    0/48 | Loss: 3.8624 | LR: 2.15e-03 | GradNorm: 0.677
  Batch    4/48 | Loss: 3.7786 | LR: 2.14e-03 | GradNorm: 0.606
  Batch    8/48 | Loss: 3.7958 | LR: 2.12e-03 | GradNorm: 0.566
  Batch   12/48 | Loss: 3.7620 | LR: 2.10e-03 | GradNorm: 0.494
  Batch   16/48 | Loss: 3.7444 | LR: 2.09e-03 | GradNorm: 0.462
  Batch   20/48 | Loss: 3.7475 | LR: 2.07e-03 | GradNorm: 0.509
  Batch   24/48 | Loss: 3.7550 | LR: 2.05e-03 | GradNorm: 0.486
  Batch   28/48 | Loss: 3.7172 | LR: 2.03e-03 | GradNorm: 0.350
  Batch   32/48 | Loss: 3.7330 | LR: 2.00e-03 | GradNorm: 0.483
  Batch   36/48 | Loss: 3.7300 | LR: 1.98e-03 | GradNorm: 0.774
  Batch   40/48 | Loss: 3.7527 | LR: 1.96e-03 | GradNorm: 0.658
  Batch   44/48 | Loss: 3.7383 | LR: 1.93e-03 | GradNorm: 0.555
Epoch 4/10: Train=4.88%, Val=3.93%, Gap=0.95%, LR=1.91e-03
  Batch    0/48 | Loss: 3.7282 | LR: 1.91e-03 | GradNorm: 0.584
  Batch    4/48 | Loss: 3.7186 | LR: 1.88e-03 | GradNorm: 0.909
  Batch    8/48 | Loss: 3.7359 | LR: 1.85e-03 | GradNorm: 0.521
  Batch   12/48 | Loss: 3.7266 | LR: 1.82e-03 | GradNorm: 0.680
  Batch   16/48 | Loss: 3.6876 | LR: 1.80e-03 | GradNorm: 0.580
  Batch   20/48 | Loss: 3.6756 | LR: 1.77e-03 | GradNorm: 1.480
  Batch   24/48 | Loss: 3.6007 | LR: 1.74e-03 | GradNorm: 0.782
  Batch   28/48 | Loss: 3.7227 | LR: 1.70e-03 | GradNorm: 1.876
  Batch   32/48 | Loss: 3.6655 | LR: 1.67e-03 | GradNorm: 0.865
  Batch   36/48 | Loss: 3.6153 | LR: 1.64e-03 | GradNorm: 0.625
  Batch   40/48 | Loss: 3.6155 | LR: 1.61e-03 | GradNorm: 0.846
  Batch   44/48 | Loss: 3.5782 | LR: 1.57e-03 | GradNorm: 1.282
Epoch 5/10: Train=7.56%, Val=9.59%, Gap=-2.03%, LR=1.55e-03
  Batch    0/48 | Loss: 3.5159 | LR: 1.54e-03 | GradNorm: 1.089
  Batch    4/48 | Loss: 3.4297 | LR: 1.51e-03 | GradNorm: 0.745
  Batch    8/48 | Loss: 3.4299 | LR: 1.47e-03 | GradNorm: 1.381
  Batch   12/48 | Loss: 3.4097 | LR: 1.44e-03 | GradNorm: 0.884
  Batch   16/48 | Loss: 3.4130 | LR: 1.40e-03 | GradNorm: 3.852
  Batch   20/48 | Loss: 3.3947 | LR: 1.37e-03 | GradNorm: 1.297
  Batch   24/48 | Loss: 3.3779 | LR: 1.33e-03 | GradNorm: 2.021
  Batch   28/48 | Loss: 3.3097 | LR: 1.29e-03 | GradNorm: 2.030
  Batch   32/48 | Loss: 3.2935 | LR: 1.26e-03 | GradNorm: 0.881
  Batch   36/48 | Loss: 3.3290 | LR: 1.22e-03 | GradNorm: 2.881
  Batch   40/48 | Loss: 3.2689 | LR: 1.18e-03 | GradNorm: 1.532
  Batch   44/48 | Loss: 3.3319 | LR: 1.15e-03 | GradNorm: 1.044
Epoch 6/10: Train=13.85%, Val=14.09%, Gap=-0.24%, LR=1.12e-03
  Batch    0/48 | Loss: 3.2337 | LR: 1.11e-03 | GradNorm: 0.798
  Batch    4/48 | Loss: 3.2625 | LR: 1.07e-03 | GradNorm: 2.489
  Batch    8/48 | Loss: 3.2387 | LR: 1.04e-03 | GradNorm: 1.822
  Batch   12/48 | Loss: 3.2452 | LR: 1.00e-03 | GradNorm: 3.684
  Batch   16/48 | Loss: 3.1855 | LR: 9.65e-04 | GradNorm: 1.006
  Batch   20/48 | Loss: 3.2259 | LR: 9.29e-04 | GradNorm: 1.408
  Batch   24/48 | Loss: 3.2337 | LR: 8.93e-04 | GradNorm: 2.388
  Batch   28/48 | Loss: 3.1928 | LR: 8.57e-04 | GradNorm: 1.697
  Batch   32/48 | Loss: 3.1930 | LR: 8.22e-04 | GradNorm: 1.684
  Batch   36/48 | Loss: 3.1986 | LR: 7.87e-04 | GradNorm: 1.766
  Batch   40/48 | Loss: 3.1950 | LR: 7.52e-04 | GradNorm: 1.694
  Batch   44/48 | Loss: 3.1762 | LR: 7.17e-04 | GradNorm: 2.111
Epoch 7/10: Train=18.09%, Val=19.00%, Gap=-0.91%, LR=6.92e-04
  Batch    0/48 | Loss: 3.1647 | LR: 6.83e-04 | GradNorm: 2.210
  Batch    4/48 | Loss: 3.1148 | LR: 6.50e-04 | GradNorm: 2.492
  Batch    8/48 | Loss: 3.0788 | LR: 6.17e-04 | GradNorm: 0.985
  Batch   12/48 | Loss: 3.1863 | LR: 5.84e-04 | GradNorm: 2.379
  Batch   16/48 | Loss: 3.1719 | LR: 5.53e-04 | GradNorm: 3.087
  Batch   20/48 | Loss: 3.0890 | LR: 5.21e-04 | GradNorm: 1.681
  Batch   24/48 | Loss: 3.0550 | LR: 4.91e-04 | GradNorm: 3.372
  Batch   28/48 | Loss: 3.0825 | LR: 4.61e-04 | GradNorm: 3.521
  Batch   32/48 | Loss: 3.0834 | LR: 4.31e-04 | GradNorm: 3.614
  Batch   36/48 | Loss: 3.0966 | LR: 4.03e-04 | GradNorm: 3.487
  Batch   40/48 | Loss: 3.0133 | LR: 3.75e-04 | GradNorm: 3.227
  Batch   44/48 | Loss: 3.0915 | LR: 3.48e-04 | GradNorm: 4.205
Epoch 8/10: Train=20.99%, Val=21.05%, Gap=-0.06%, LR=3.28e-04
  Batch    0/48 | Loss: 3.0048 | LR: 3.22e-04 | GradNorm: 3.234
  Batch    4/48 | Loss: 2.9731 | LR: 2.97e-04 | GradNorm: 2.592
  Batch    8/48 | Loss: 3.0766 | LR: 2.72e-04 | GradNorm: 1.062
  Batch   12/48 | Loss: 2.9893 | LR: 2.49e-04 | GradNorm: 1.618
  Batch   16/48 | Loss: 2.9702 | LR: 2.26e-04 | GradNorm: 2.190
  Batch   20/48 | Loss: 2.9950 | LR: 2.05e-04 | GradNorm: 6.081
  Batch   24/48 | Loss: 3.0076 | LR: 1.84e-04 | GradNorm: 2.733
  Batch   28/48 | Loss: 2.9950 | LR: 1.64e-04 | GradNorm: 2.689
  Batch   32/48 | Loss: 2.9970 | LR: 1.46e-04 | GradNorm: 1.994
  Batch   36/48 | Loss: 2.9896 | LR: 1.28e-04 | GradNorm: 3.830
  Batch   40/48 | Loss: 2.9631 | LR: 1.12e-04 | GradNorm: 3.984
  Batch   44/48 | Loss: 2.9966 | LR: 9.62e-05 | GradNorm: 2.540
Epoch 9/10: Train=24.17%, Val=23.70%, Gap=0.47%, LR=8.54e-05
  Batch    0/48 | Loss: 2.9731 | LR: 8.19e-05 | GradNorm: 2.000
  Batch    4/48 | Loss: 2.9545 | LR: 6.87e-05 | GradNorm: 1.428
  Batch    8/48 | Loss: 2.9284 | LR: 5.67e-05 | GradNorm: 3.151
  Batch   12/48 | Loss: 2.9645 | LR: 4.57e-05 | GradNorm: 3.466
  Batch   16/48 | Loss: 2.9268 | LR: 3.60e-05 | GradNorm: 2.305
  Batch   20/48 | Loss: 2.9512 | LR: 2.73e-05 | GradNorm: 2.401
  Batch   24/48 | Loss: 2.9542 | LR: 1.99e-05 | GradNorm: 2.347
  Batch   28/48 | Loss: 2.9814 | LR: 1.36e-05 | GradNorm: 1.447
  Batch   32/48 | Loss: 2.9608 | LR: 8.53e-06 | GradNorm: 3.053
  Batch   36/48 | Loss: 2.9080 | LR: 4.64e-06 | GradNorm: 2.206
  Batch   40/48 | Loss: 2.9410 | LR: 1.94e-06 | GradNorm: 0.850
  Batch   44/48 | Loss: 2.9208 | LR: 4.38e-07 | GradNorm: 2.141
Epoch 10/10: Train=25.44%, Val=24.01%, Gap=1.43%, LR=1.00e-07
Best validation accuracy: 24.01%
