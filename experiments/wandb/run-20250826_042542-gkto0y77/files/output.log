=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026811197808068824
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9264 | LR: 5.45e-06 | GradNorm: 1.258
  Batch    4/48 | Loss: 3.9243 | LR: 1.65e-05 | GradNorm: 1.057
  Batch    8/48 | Loss: 3.9206 | LR: 2.76e-05 | GradNorm: 0.973
  Batch   12/48 | Loss: 3.9175 | LR: 3.86e-05 | GradNorm: 0.717
  Batch   16/48 | Loss: 3.9182 | LR: 4.97e-05 | GradNorm: 0.675
  Batch   20/48 | Loss: 3.9135 | LR: 6.07e-05 | GradNorm: 0.696
  Batch   24/48 | Loss: 3.9124 | LR: 7.18e-05 | GradNorm: 0.733
  Batch   28/48 | Loss: 3.9182 | LR: 8.29e-05 | GradNorm: 0.639
  Batch   32/48 | Loss: 3.9079 | LR: 9.39e-05 | GradNorm: 0.577
  Batch   36/48 | Loss: 3.9004 | LR: 1.05e-04 | GradNorm: 0.554
  Batch   40/48 | Loss: 3.8840 | LR: 1.16e-04 | GradNorm: 0.656
  Batch   44/48 | Loss: 3.8688 | LR: 1.27e-04 | GradNorm: 4.241
Epoch 1/10: Train=2.67%, Val=4.83%, Gap=-2.16%, LR=1.35e-04
  Batch    0/48 | Loss: 3.8036 | LR: 1.38e-04 | GradNorm: 2.246
  Batch    4/48 | Loss: 3.8020 | LR: 1.49e-04 | GradNorm: 6.505
  Batch    8/48 | Loss: 3.8064 | LR: 1.60e-04 | GradNorm: 8.072
  Batch   12/48 | Loss: 3.7421 | LR: 1.71e-04 | GradNorm: 5.326
  Batch   16/48 | Loss: 3.7653 | LR: 1.82e-04 | GradNorm: 3.867
  Batch   20/48 | Loss: 3.7340 | LR: 1.93e-04 | GradNorm: 4.185
  Batch   24/48 | Loss: 3.7401 | LR: 2.05e-04 | GradNorm: 6.499
  Batch   28/48 | Loss: 3.7155 | LR: 2.16e-04 | GradNorm: 6.282
  Batch   32/48 | Loss: 3.6779 | LR: 2.27e-04 | GradNorm: 4.239
  Batch   36/48 | Loss: 3.6357 | LR: 2.38e-04 | GradNorm: 2.016
  Batch   40/48 | Loss: 3.6867 | LR: 2.49e-04 | GradNorm: 5.507
  Batch   44/48 | Loss: 3.6560 | LR: 2.60e-04 | GradNorm: 7.469
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.53%, Val=7.43%, Gap=-0.90%, LR=2.68e-04
  Batch    0/48 | Loss: 3.5720 | LR: 2.68e-04 | GradNorm: 5.275
  Batch    4/48 | Loss: 3.5783 | LR: 2.68e-04 | GradNorm: 4.628
  Batch    8/48 | Loss: 3.5498 | LR: 2.68e-04 | GradNorm: 1.982
  Batch   12/48 | Loss: 3.5872 | LR: 2.67e-04 | GradNorm: 3.766
  Batch   16/48 | Loss: 3.5464 | LR: 2.67e-04 | GradNorm: 2.884
  Batch   20/48 | Loss: 3.4866 | LR: 2.66e-04 | GradNorm: 2.070
  Batch   24/48 | Loss: 3.4628 | LR: 2.65e-04 | GradNorm: 1.796
  Batch   28/48 | Loss: 3.5093 | LR: 2.64e-04 | GradNorm: 9.545
  Batch   32/48 | Loss: 3.5128 | LR: 2.63e-04 | GradNorm: 6.983
  Batch   36/48 | Loss: 3.4564 | LR: 2.62e-04 | GradNorm: 5.025
  Batch   40/48 | Loss: 3.4301 | LR: 2.61e-04 | GradNorm: 4.790
  Batch   44/48 | Loss: 3.3940 | LR: 2.59e-04 | GradNorm: 3.893
Epoch 3/10: Train=11.25%, Val=12.76%, Gap=-1.51%, LR=2.58e-04
  Batch    0/48 | Loss: 3.3417 | LR: 2.57e-04 | GradNorm: 3.642
  Batch    4/48 | Loss: 3.3202 | LR: 2.56e-04 | GradNorm: 2.207
  Batch    8/48 | Loss: 3.2966 | LR: 2.54e-04 | GradNorm: 4.196
  Batch   12/48 | Loss: 3.2659 | LR: 2.52e-04 | GradNorm: 4.423
  Batch   16/48 | Loss: 3.2802 | LR: 2.50e-04 | GradNorm: 5.328
  Batch   20/48 | Loss: 3.2504 | LR: 2.47e-04 | GradNorm: 2.192
  Batch   24/48 | Loss: 3.2555 | LR: 2.45e-04 | GradNorm: 4.928
  Batch   28/48 | Loss: 3.2339 | LR: 2.42e-04 | GradNorm: 5.698
  Batch   32/48 | Loss: 3.2691 | LR: 2.40e-04 | GradNorm: 6.776
  Batch   36/48 | Loss: 3.2265 | LR: 2.37e-04 | GradNorm: 2.942
  Batch   40/48 | Loss: 3.2264 | LR: 2.34e-04 | GradNorm: 4.381
  Batch   44/48 | Loss: 3.1916 | LR: 2.31e-04 | GradNorm: 3.323
Epoch 4/10: Train=16.96%, Val=14.61%, Gap=2.35%, LR=2.29e-04
  Batch    0/48 | Loss: 3.1766 | LR: 2.28e-04 | GradNorm: 5.321
  Batch    4/48 | Loss: 3.1096 | LR: 2.25e-04 | GradNorm: 1.221
  Batch    8/48 | Loss: 3.1122 | LR: 2.22e-04 | GradNorm: 3.154
  Batch   12/48 | Loss: 3.1252 | LR: 2.18e-04 | GradNorm: 3.997
  Batch   16/48 | Loss: 3.1693 | LR: 2.15e-04 | GradNorm: 4.149
  Batch   20/48 | Loss: 3.1452 | LR: 2.11e-04 | GradNorm: 5.076
  Batch   24/48 | Loss: 3.1740 | LR: 2.08e-04 | GradNorm: 6.097
  Batch   28/48 | Loss: 3.1303 | LR: 2.04e-04 | GradNorm: 5.067
  Batch   32/48 | Loss: 3.2680 | LR: 2.00e-04 | GradNorm: 10.965
  Batch   36/48 | Loss: 3.2068 | LR: 1.96e-04 | GradNorm: 5.154
  Batch   40/48 | Loss: 3.1604 | LR: 1.92e-04 | GradNorm: 3.450
  Batch   44/48 | Loss: 3.0994 | LR: 1.88e-04 | GradNorm: 3.311
Epoch 5/10: Train=20.22%, Val=13.40%, Gap=6.82%, LR=1.85e-04
  Batch    0/48 | Loss: 3.0481 | LR: 1.84e-04 | GradNorm: 4.713
  Batch    4/48 | Loss: 3.0117 | LR: 1.80e-04 | GradNorm: 3.690
  Batch    8/48 | Loss: 2.9986 | LR: 1.76e-04 | GradNorm: 3.092
  Batch   12/48 | Loss: 3.0126 | LR: 1.72e-04 | GradNorm: 4.098
  Batch   16/48 | Loss: 2.9846 | LR: 1.68e-04 | GradNorm: 2.963
  Batch   20/48 | Loss: 3.0156 | LR: 1.63e-04 | GradNorm: 5.552
  Batch   24/48 | Loss: 2.9781 | LR: 1.59e-04 | GradNorm: 5.862
  Batch   28/48 | Loss: 2.9492 | LR: 1.55e-04 | GradNorm: 2.200
  Batch   32/48 | Loss: 2.9182 | LR: 1.51e-04 | GradNorm: 3.288
  Batch   36/48 | Loss: 2.9360 | LR: 1.46e-04 | GradNorm: 2.891
  Batch   40/48 | Loss: 2.9395 | LR: 1.42e-04 | GradNorm: 3.408
  Batch   44/48 | Loss: 2.9875 | LR: 1.37e-04 | GradNorm: 6.944
Epoch 6/10: Train=25.30%, Val=15.18%, Gap=10.12%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9099 | LR: 1.33e-04 | GradNorm: 4.231
  Batch    4/48 | Loss: 2.9122 | LR: 1.29e-04 | GradNorm: 8.608
  Batch    8/48 | Loss: 2.8758 | LR: 1.24e-04 | GradNorm: 2.732
  Batch   12/48 | Loss: 2.7931 | LR: 1.20e-04 | GradNorm: 2.849
  Batch   16/48 | Loss: 2.8364 | LR: 1.16e-04 | GradNorm: 4.779
  Batch   20/48 | Loss: 2.8570 | LR: 1.11e-04 | GradNorm: 4.193
  Batch   24/48 | Loss: 2.8824 | LR: 1.07e-04 | GradNorm: 6.052
  Batch   28/48 | Loss: 2.8576 | LR: 1.03e-04 | GradNorm: 4.052
  Batch   32/48 | Loss: 2.8539 | LR: 9.84e-05 | GradNorm: 4.217
  Batch   36/48 | Loss: 2.8612 | LR: 9.42e-05 | GradNorm: 5.197
  Batch   40/48 | Loss: 2.8553 | LR: 9.00e-05 | GradNorm: 6.332
  Batch   44/48 | Loss: 2.8112 | LR: 8.59e-05 | GradNorm: 3.489
Epoch 7/10: Train=30.10%, Val=19.05%, Gap=11.05%, LR=8.28e-05
  Batch    0/48 | Loss: 2.8173 | LR: 8.18e-05 | GradNorm: 6.066
  Batch    4/48 | Loss: 2.7436 | LR: 7.78e-05 | GradNorm: 4.744
  Batch    8/48 | Loss: 2.7540 | LR: 7.39e-05 | GradNorm: 4.580
  Batch   12/48 | Loss: 2.8276 | LR: 7.00e-05 | GradNorm: 9.748
  Batch   16/48 | Loss: 2.8161 | LR: 6.62e-05 | GradNorm: 4.610
  Batch   20/48 | Loss: 2.7559 | LR: 6.24e-05 | GradNorm: 7.327
  Batch   24/48 | Loss: 2.7681 | LR: 5.87e-05 | GradNorm: 5.741
  Batch   28/48 | Loss: 2.7613 | LR: 5.52e-05 | GradNorm: 4.961
  Batch   32/48 | Loss: 2.7506 | LR: 5.17e-05 | GradNorm: 3.748
  Batch   36/48 | Loss: 2.7423 | LR: 4.82e-05 | GradNorm: 5.031
  Batch   40/48 | Loss: 2.6939 | LR: 4.49e-05 | GradNorm: 7.258
  Batch   44/48 | Loss: 2.7281 | LR: 4.17e-05 | GradNorm: 6.937
Epoch 8/10: Train=32.77%, Val=20.44%, Gap=12.33%, LR=3.93e-05
  Batch    0/48 | Loss: 2.7046 | LR: 3.86e-05 | GradNorm: 2.945
  Batch    4/48 | Loss: 2.7013 | LR: 3.56e-05 | GradNorm: 3.133
  Batch    8/48 | Loss: 2.7541 | LR: 3.26e-05 | GradNorm: 3.957
  Batch   12/48 | Loss: 2.6835 | LR: 2.98e-05 | GradNorm: 2.631
  Batch   16/48 | Loss: 2.6466 | LR: 2.71e-05 | GradNorm: 5.046
  Batch   20/48 | Loss: 2.6384 | LR: 2.45e-05 | GradNorm: 4.114
  Batch   24/48 | Loss: 2.6880 | LR: 2.21e-05 | GradNorm: 3.594
  Batch   28/48 | Loss: 2.6983 | LR: 1.97e-05 | GradNorm: 4.935
  Batch   32/48 | Loss: 2.6696 | LR: 1.75e-05 | GradNorm: 7.181
  Batch   36/48 | Loss: 2.6822 | LR: 1.54e-05 | GradNorm: 5.543
  Batch   40/48 | Loss: 2.6327 | LR: 1.34e-05 | GradNorm: 5.398
  Batch   44/48 | Loss: 2.6705 | LR: 1.16e-05 | GradNorm: 2.424
Epoch 9/10: Train=35.38%, Val=20.82%, Gap=14.56%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6697 | LR: 9.89e-06 | GradNorm: 4.962
  Batch    4/48 | Loss: 2.6716 | LR: 8.31e-06 | GradNorm: 2.443
  Batch    8/48 | Loss: 2.6550 | LR: 6.86e-06 | GradNorm: 2.311
  Batch   12/48 | Loss: 2.6447 | LR: 5.56e-06 | GradNorm: 3.869
  Batch   16/48 | Loss: 2.6419 | LR: 4.39e-06 | GradNorm: 2.153
  Batch   20/48 | Loss: 2.6547 | LR: 3.36e-06 | GradNorm: 4.829
  Batch   24/48 | Loss: 2.6631 | LR: 2.47e-06 | GradNorm: 3.103
  Batch   28/48 | Loss: 2.6736 | LR: 1.72e-06 | GradNorm: 3.551
  Batch   32/48 | Loss: 2.6804 | LR: 1.11e-06 | GradNorm: 3.071
  Batch   36/48 | Loss: 2.6626 | LR: 6.42e-07 | GradNorm: 2.709
  Batch   40/48 | Loss: 2.6296 | LR: 3.20e-07 | GradNorm: 3.114
  Batch   44/48 | Loss: 2.6424 | LR: 1.40e-07 | GradNorm: 2.515
Epoch 10/10: Train=36.52%, Val=21.73%, Gap=14.79%, LR=1.00e-07
Best validation accuracy: 21.73%
