=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002691052335558472
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9594 | LR: 5.47e-06 | GradNorm: 1.848
  Batch    4/48 | Loss: 3.9283 | LR: 1.66e-05 | GradNorm: 1.095
  Batch    8/48 | Loss: 3.9282 | LR: 2.77e-05 | GradNorm: 0.991
  Batch   12/48 | Loss: 3.9113 | LR: 3.88e-05 | GradNorm: 0.660
  Batch   16/48 | Loss: 3.9198 | LR: 4.99e-05 | GradNorm: 0.670
  Batch   20/48 | Loss: 3.9202 | LR: 6.10e-05 | GradNorm: 0.698
  Batch   24/48 | Loss: 3.9166 | LR: 7.21e-05 | GradNorm: 0.674
  Batch   28/48 | Loss: 3.9176 | LR: 8.32e-05 | GradNorm: 0.552
  Batch   32/48 | Loss: 3.9088 | LR: 9.43e-05 | GradNorm: 0.480
  Batch   36/48 | Loss: 3.9153 | LR: 1.05e-04 | GradNorm: 0.561
  Batch   40/48 | Loss: 3.9093 | LR: 1.16e-04 | GradNorm: 0.543
  Batch   44/48 | Loss: 3.9028 | LR: 1.28e-04 | GradNorm: 0.570
Epoch 1/10: Train=2.28%, Val=4.43%, Gap=-2.15%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8925 | LR: 1.39e-04 | GradNorm: 0.626
  Batch    4/48 | Loss: 3.8466 | LR: 1.50e-04 | GradNorm: 0.727
  Batch    8/48 | Loss: 3.7920 | LR: 1.61e-04 | GradNorm: 2.300
  Batch   12/48 | Loss: 3.7555 | LR: 1.72e-04 | GradNorm: 7.012
  Batch   16/48 | Loss: 3.7743 | LR: 1.83e-04 | GradNorm: 6.075
  Batch   20/48 | Loss: 3.7358 | LR: 1.94e-04 | GradNorm: 3.361
  Batch   24/48 | Loss: 3.8451 | LR: 2.05e-04 | GradNorm: 10.808
  Batch   28/48 | Loss: 3.8252 | LR: 2.16e-04 | GradNorm: 5.945
  Batch   32/48 | Loss: 3.7713 | LR: 2.27e-04 | GradNorm: 4.746
  Batch   36/48 | Loss: 3.7326 | LR: 2.39e-04 | GradNorm: 4.996
  Batch   40/48 | Loss: 3.7015 | LR: 2.50e-04 | GradNorm: 1.076
  Batch   44/48 | Loss: 3.7438 | LR: 2.61e-04 | GradNorm: 5.852
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.67%, Val=6.07%, Gap=-0.40%, LR=2.69e-04
  Batch    0/48 | Loss: 3.7277 | LR: 2.69e-04 | GradNorm: 4.918
  Batch    4/48 | Loss: 3.6181 | LR: 2.69e-04 | GradNorm: 0.812
  Batch    8/48 | Loss: 3.6436 | LR: 2.69e-04 | GradNorm: 4.452
  Batch   12/48 | Loss: 3.5595 | LR: 2.68e-04 | GradNorm: 3.188
  Batch   16/48 | Loss: 3.5645 | LR: 2.68e-04 | GradNorm: 1.626
  Batch   20/48 | Loss: 3.5077 | LR: 2.67e-04 | GradNorm: 2.166
  Batch   24/48 | Loss: 3.5029 | LR: 2.66e-04 | GradNorm: 3.100
  Batch   28/48 | Loss: 3.5093 | LR: 2.65e-04 | GradNorm: 6.172
  Batch   32/48 | Loss: 3.5019 | LR: 2.64e-04 | GradNorm: 6.417
  Batch   36/48 | Loss: 3.4676 | LR: 2.63e-04 | GradNorm: 3.710
  Batch   40/48 | Loss: 3.4184 | LR: 2.62e-04 | GradNorm: 4.386
  Batch   44/48 | Loss: 3.3762 | LR: 2.60e-04 | GradNorm: 2.643
Epoch 3/10: Train=11.08%, Val=12.27%, Gap=-1.19%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3466 | LR: 2.58e-04 | GradNorm: 2.538
  Batch    4/48 | Loss: 3.3235 | LR: 2.57e-04 | GradNorm: 1.488
  Batch    8/48 | Loss: 3.3099 | LR: 2.55e-04 | GradNorm: 2.423
  Batch   12/48 | Loss: 3.2838 | LR: 2.53e-04 | GradNorm: 4.819
  Batch   16/48 | Loss: 3.4465 | LR: 2.51e-04 | GradNorm: 6.701
  Batch   20/48 | Loss: 3.3633 | LR: 2.48e-04 | GradNorm: 5.062
  Batch   24/48 | Loss: 3.3256 | LR: 2.46e-04 | GradNorm: 4.660
  Batch   28/48 | Loss: 3.2539 | LR: 2.43e-04 | GradNorm: 3.443
  Batch   32/48 | Loss: 3.2525 | LR: 2.41e-04 | GradNorm: 3.409
  Batch   36/48 | Loss: 3.2596 | LR: 2.38e-04 | GradNorm: 4.435
  Batch   40/48 | Loss: 3.2322 | LR: 2.35e-04 | GradNorm: 2.835
  Batch   44/48 | Loss: 3.2260 | LR: 2.32e-04 | GradNorm: 5.762
Epoch 4/10: Train=16.42%, Val=13.77%, Gap=2.65%, LR=2.30e-04
  Batch    0/48 | Loss: 3.2187 | LR: 2.29e-04 | GradNorm: 5.964
  Batch    4/48 | Loss: 3.1448 | LR: 2.26e-04 | GradNorm: 2.099
  Batch    8/48 | Loss: 3.1515 | LR: 2.22e-04 | GradNorm: 3.156
  Batch   12/48 | Loss: 3.1572 | LR: 2.19e-04 | GradNorm: 4.406
  Batch   16/48 | Loss: 3.1856 | LR: 2.16e-04 | GradNorm: 2.498
  Batch   20/48 | Loss: 3.1774 | LR: 2.12e-04 | GradNorm: 4.903
  Batch   24/48 | Loss: 3.1931 | LR: 2.08e-04 | GradNorm: 3.521
  Batch   28/48 | Loss: 3.1430 | LR: 2.05e-04 | GradNorm: 3.234
  Batch   32/48 | Loss: 3.0830 | LR: 2.01e-04 | GradNorm: 3.446
  Batch   36/48 | Loss: 3.1319 | LR: 1.97e-04 | GradNorm: 2.188
  Batch   40/48 | Loss: 3.0916 | LR: 1.93e-04 | GradNorm: 1.682
  Batch   44/48 | Loss: 3.1499 | LR: 1.89e-04 | GradNorm: 6.907
Epoch 5/10: Train=20.51%, Val=12.58%, Gap=7.93%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0847 | LR: 1.85e-04 | GradNorm: 6.721
  Batch    4/48 | Loss: 2.9879 | LR: 1.81e-04 | GradNorm: 3.220
  Batch    8/48 | Loss: 2.9917 | LR: 1.77e-04 | GradNorm: 2.113
  Batch   12/48 | Loss: 2.9807 | LR: 1.73e-04 | GradNorm: 2.620
  Batch   16/48 | Loss: 2.9972 | LR: 1.68e-04 | GradNorm: 6.834
  Batch   20/48 | Loss: 2.9445 | LR: 1.64e-04 | GradNorm: 2.220
  Batch   24/48 | Loss: 2.9477 | LR: 1.60e-04 | GradNorm: 2.920
  Batch   28/48 | Loss: 2.9198 | LR: 1.55e-04 | GradNorm: 4.748
  Batch   32/48 | Loss: 2.9326 | LR: 1.51e-04 | GradNorm: 6.068
  Batch   36/48 | Loss: 2.9603 | LR: 1.47e-04 | GradNorm: 4.288
  Batch   40/48 | Loss: 2.9294 | LR: 1.42e-04 | GradNorm: 4.705
  Batch   44/48 | Loss: 2.9622 | LR: 1.38e-04 | GradNorm: 4.662
Epoch 6/10: Train=25.54%, Val=16.29%, Gap=9.25%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8871 | LR: 1.34e-04 | GradNorm: 2.572
  Batch    4/48 | Loss: 2.9063 | LR: 1.29e-04 | GradNorm: 7.002
  Batch    8/48 | Loss: 2.8755 | LR: 1.25e-04 | GradNorm: 3.459
  Batch   12/48 | Loss: 2.7980 | LR: 1.20e-04 | GradNorm: 3.227
  Batch   16/48 | Loss: 2.8406 | LR: 1.16e-04 | GradNorm: 4.378
  Batch   20/48 | Loss: 2.8614 | LR: 1.12e-04 | GradNorm: 3.051
  Batch   24/48 | Loss: 2.8720 | LR: 1.07e-04 | GradNorm: 4.546
  Batch   28/48 | Loss: 2.8556 | LR: 1.03e-04 | GradNorm: 4.394
  Batch   32/48 | Loss: 2.8526 | LR: 9.87e-05 | GradNorm: 4.111
  Batch   36/48 | Loss: 2.8610 | LR: 9.45e-05 | GradNorm: 5.982
  Batch   40/48 | Loss: 2.8172 | LR: 9.03e-05 | GradNorm: 2.272
  Batch   44/48 | Loss: 2.8223 | LR: 8.62e-05 | GradNorm: 4.473
Epoch 7/10: Train=29.13%, Val=19.80%, Gap=9.33%, LR=8.31e-05
  Batch    0/48 | Loss: 2.8025 | LR: 8.21e-05 | GradNorm: 3.565
  Batch    4/48 | Loss: 2.7735 | LR: 7.81e-05 | GradNorm: 5.749
  Batch    8/48 | Loss: 2.7842 | LR: 7.41e-05 | GradNorm: 3.780
  Batch   12/48 | Loss: 2.7805 | LR: 7.02e-05 | GradNorm: 1.563
  Batch   16/48 | Loss: 2.8225 | LR: 6.64e-05 | GradNorm: 5.428
  Batch   20/48 | Loss: 2.7328 | LR: 6.26e-05 | GradNorm: 4.253
  Batch   24/48 | Loss: 2.7342 | LR: 5.90e-05 | GradNorm: 4.157
  Batch   28/48 | Loss: 2.7767 | LR: 5.54e-05 | GradNorm: 5.908
  Batch   32/48 | Loss: 2.7570 | LR: 5.19e-05 | GradNorm: 4.609
  Batch   36/48 | Loss: 2.7775 | LR: 4.84e-05 | GradNorm: 4.711
  Batch   40/48 | Loss: 2.6959 | LR: 4.51e-05 | GradNorm: 1.957
  Batch   44/48 | Loss: 2.7388 | LR: 4.19e-05 | GradNorm: 1.994
Epoch 8/10: Train=31.74%, Val=17.99%, Gap=13.75%, LR=3.95e-05
  Batch    0/48 | Loss: 2.7060 | LR: 3.87e-05 | GradNorm: 2.977
  Batch    4/48 | Loss: 2.6899 | LR: 3.57e-05 | GradNorm: 2.325
  Batch    8/48 | Loss: 2.7594 | LR: 3.28e-05 | GradNorm: 4.658
  Batch   12/48 | Loss: 2.7261 | LR: 2.99e-05 | GradNorm: 4.537
  Batch   16/48 | Loss: 2.6775 | LR: 2.72e-05 | GradNorm: 3.134
  Batch   20/48 | Loss: 2.6763 | LR: 2.46e-05 | GradNorm: 2.610
  Batch   24/48 | Loss: 2.7054 | LR: 2.22e-05 | GradNorm: 2.920
  Batch   28/48 | Loss: 2.7138 | LR: 1.98e-05 | GradNorm: 3.086
  Batch   32/48 | Loss: 2.6841 | LR: 1.76e-05 | GradNorm: 2.251
  Batch   36/48 | Loss: 2.6887 | LR: 1.55e-05 | GradNorm: 2.224
  Batch   40/48 | Loss: 2.6580 | LR: 1.35e-05 | GradNorm: 2.689
  Batch   44/48 | Loss: 2.6927 | LR: 1.16e-05 | GradNorm: 2.479
Epoch 9/10: Train=33.75%, Val=18.62%, Gap=15.13%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6717 | LR: 9.92e-06 | GradNorm: 1.990
  Batch    4/48 | Loss: 2.6904 | LR: 8.34e-06 | GradNorm: 1.941
  Batch    8/48 | Loss: 2.6511 | LR: 6.89e-06 | GradNorm: 2.072
  Batch   12/48 | Loss: 2.6626 | LR: 5.58e-06 | GradNorm: 2.401
  Batch   16/48 | Loss: 2.6795 | LR: 4.40e-06 | GradNorm: 2.050
  Batch   20/48 | Loss: 2.6802 | LR: 3.37e-06 | GradNorm: 2.468
  Batch   24/48 | Loss: 2.6755 | LR: 2.47e-06 | GradNorm: 2.558
  Batch   28/48 | Loss: 2.6936 | LR: 1.72e-06 | GradNorm: 2.244
  Batch   32/48 | Loss: 2.6973 | LR: 1.11e-06 | GradNorm: 2.323
  Batch   36/48 | Loss: 2.6771 | LR: 6.44e-07 | GradNorm: 1.749
  Batch   40/48 | Loss: 2.6548 | LR: 3.21e-07 | GradNorm: 2.023
  Batch   44/48 | Loss: 2.6614 | LR: 1.41e-07 | GradNorm: 2.625
Epoch 10/10: Train=34.63%, Val=19.13%, Gap=15.50%, LR=1.00e-07
Best validation accuracy: 19.80%
