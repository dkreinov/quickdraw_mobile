=== W&B Sweep Run: LR=0.000444 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000444143784546999
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000444
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9320 | LR: 9.02e-06 | GradNorm: 1.298
  Batch    4/48 | Loss: 3.9330 | LR: 2.73e-05 | GradNorm: 0.919
  Batch    8/48 | Loss: 3.9245 | LR: 4.57e-05 | GradNorm: 0.882
  Batch   12/48 | Loss: 3.9129 | LR: 6.40e-05 | GradNorm: 0.653
  Batch   16/48 | Loss: 3.9175 | LR: 8.23e-05 | GradNorm: 0.554
  Batch   20/48 | Loss: 3.9117 | LR: 1.01e-04 | GradNorm: 0.557
  Batch   24/48 | Loss: 3.9115 | LR: 1.19e-04 | GradNorm: 0.594
  Batch   28/48 | Loss: 3.9212 | LR: 1.37e-04 | GradNorm: 0.601
  Batch   32/48 | Loss: 3.9037 | LR: 1.56e-04 | GradNorm: 0.508
  Batch   36/48 | Loss: 3.8930 | LR: 1.74e-04 | GradNorm: 0.508
  Batch   40/48 | Loss: 3.8584 | LR: 1.92e-04 | GradNorm: 0.676
  Batch   44/48 | Loss: 3.8476 | LR: 2.11e-04 | GradNorm: 4.579
Epoch 1/10: Train=2.85%, Val=4.70%, Gap=-1.85%, LR=2.24e-04
  Batch    0/48 | Loss: 3.8011 | LR: 2.29e-04 | GradNorm: 5.411
  Batch    4/48 | Loss: 3.8522 | LR: 2.47e-04 | GradNorm: 6.048
  Batch    8/48 | Loss: 3.7780 | LR: 2.66e-04 | GradNorm: 3.406
  Batch   12/48 | Loss: 3.7395 | LR: 2.84e-04 | GradNorm: 3.964
  Batch   16/48 | Loss: 3.7226 | LR: 3.02e-04 | GradNorm: 2.612
  Batch   20/48 | Loss: 3.8594 | LR: 3.20e-04 | GradNorm: 6.175
  Batch   24/48 | Loss: 3.6513 | LR: 3.39e-04 | GradNorm: 2.017
  Batch   28/48 | Loss: 3.6356 | LR: 3.57e-04 | GradNorm: 2.846
  Batch   32/48 | Loss: 3.7202 | LR: 3.75e-04 | GradNorm: 5.391
  Batch   36/48 | Loss: 3.6410 | LR: 3.94e-04 | GradNorm: 2.497
  Batch   40/48 | Loss: 3.6625 | LR: 4.12e-04 | GradNorm: 7.708
  Batch   44/48 | Loss: 3.6218 | LR: 4.30e-04 | GradNorm: 3.663
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.70%, Val=7.41%, Gap=-0.71%, LR=4.44e-04
  Batch    0/48 | Loss: 3.7423 | LR: 4.44e-04 | GradNorm: 2.993
  Batch    4/48 | Loss: 3.6598 | LR: 4.44e-04 | GradNorm: 1.460
  Batch    8/48 | Loss: 3.5365 | LR: 4.44e-04 | GradNorm: 1.685
  Batch   12/48 | Loss: 3.5296 | LR: 4.43e-04 | GradNorm: 2.023
  Batch   16/48 | Loss: 3.5742 | LR: 4.42e-04 | GradNorm: 7.020
  Batch   20/48 | Loss: 3.4831 | LR: 4.41e-04 | GradNorm: 3.135
  Batch   24/48 | Loss: 3.4555 | LR: 4.40e-04 | GradNorm: 3.892
  Batch   28/48 | Loss: 3.4174 | LR: 4.38e-04 | GradNorm: 4.685
  Batch   32/48 | Loss: 3.4024 | LR: 4.36e-04 | GradNorm: 2.212
  Batch   36/48 | Loss: 3.4289 | LR: 4.34e-04 | GradNorm: 2.320
  Batch   40/48 | Loss: 3.4118 | LR: 4.32e-04 | GradNorm: 1.968
  Batch   44/48 | Loss: 3.3321 | LR: 4.29e-04 | GradNorm: 2.321
Epoch 3/10: Train=11.35%, Val=11.23%, Gap=0.12%, LR=4.27e-04
  Batch    0/48 | Loss: 3.3346 | LR: 4.27e-04 | GradNorm: 4.538
  Batch    4/48 | Loss: 3.2893 | LR: 4.24e-04 | GradNorm: 2.264
  Batch    8/48 | Loss: 3.2989 | LR: 4.20e-04 | GradNorm: 1.799
  Batch   12/48 | Loss: 3.2727 | LR: 4.17e-04 | GradNorm: 2.624
  Batch   16/48 | Loss: 3.2951 | LR: 4.13e-04 | GradNorm: 3.268
  Batch   20/48 | Loss: 3.2557 | LR: 4.10e-04 | GradNorm: 3.543
  Batch   24/48 | Loss: 3.3067 | LR: 4.06e-04 | GradNorm: 5.126
  Batch   28/48 | Loss: 3.2256 | LR: 4.02e-04 | GradNorm: 3.026
  Batch   32/48 | Loss: 3.2258 | LR: 3.97e-04 | GradNorm: 2.759
  Batch   36/48 | Loss: 3.1987 | LR: 3.93e-04 | GradNorm: 2.335
  Batch   40/48 | Loss: 3.2095 | LR: 3.88e-04 | GradNorm: 2.096
  Batch   44/48 | Loss: 3.1665 | LR: 3.83e-04 | GradNorm: 3.135
Epoch 4/10: Train=16.69%, Val=13.94%, Gap=2.75%, LR=3.79e-04
  Batch    0/48 | Loss: 3.1385 | LR: 3.78e-04 | GradNorm: 1.850
  Batch    4/48 | Loss: 3.1034 | LR: 3.73e-04 | GradNorm: 2.505
  Batch    8/48 | Loss: 3.1443 | LR: 3.67e-04 | GradNorm: 3.064
  Batch   12/48 | Loss: 3.0855 | LR: 3.62e-04 | GradNorm: 1.453
  Batch   16/48 | Loss: 3.1686 | LR: 3.56e-04 | GradNorm: 3.984
  Batch   20/48 | Loss: 3.1176 | LR: 3.50e-04 | GradNorm: 3.695
  Batch   24/48 | Loss: 3.1556 | LR: 3.44e-04 | GradNorm: 4.401
  Batch   28/48 | Loss: 3.1037 | LR: 3.38e-04 | GradNorm: 2.858
  Batch   32/48 | Loss: 3.0565 | LR: 3.32e-04 | GradNorm: 2.669
  Batch   36/48 | Loss: 3.1254 | LR: 3.25e-04 | GradNorm: 2.158
  Batch   40/48 | Loss: 3.1306 | LR: 3.19e-04 | GradNorm: 4.545
  Batch   44/48 | Loss: 3.0895 | LR: 3.12e-04 | GradNorm: 4.576
Epoch 5/10: Train=20.61%, Val=13.54%, Gap=7.07%, LR=3.07e-04
  Batch    0/48 | Loss: 3.0328 | LR: 3.05e-04 | GradNorm: 2.469
  Batch    4/48 | Loss: 3.0040 | LR: 2.99e-04 | GradNorm: 4.628
  Batch    8/48 | Loss: 2.9977 | LR: 2.92e-04 | GradNorm: 3.161
  Batch   12/48 | Loss: 2.9662 | LR: 2.85e-04 | GradNorm: 2.052
  Batch   16/48 | Loss: 2.9619 | LR: 2.78e-04 | GradNorm: 2.236
  Batch   20/48 | Loss: 2.9805 | LR: 2.71e-04 | GradNorm: 3.394
  Batch   24/48 | Loss: 3.0065 | LR: 2.64e-04 | GradNorm: 6.737
  Batch   28/48 | Loss: 2.9184 | LR: 2.56e-04 | GradNorm: 3.103
  Batch   32/48 | Loss: 2.9392 | LR: 2.49e-04 | GradNorm: 4.032
  Batch   36/48 | Loss: 2.9725 | LR: 2.42e-04 | GradNorm: 4.568
  Batch   40/48 | Loss: 2.9110 | LR: 2.35e-04 | GradNorm: 3.336
  Batch   44/48 | Loss: 2.9743 | LR: 2.28e-04 | GradNorm: 4.026
Epoch 6/10: Train=24.58%, Val=15.91%, Gap=8.67%, LR=2.22e-04
  Batch    0/48 | Loss: 2.9042 | LR: 2.20e-04 | GradNorm: 3.830
  Batch    4/48 | Loss: 2.8766 | LR: 2.13e-04 | GradNorm: 3.537
  Batch    8/48 | Loss: 2.8812 | LR: 2.06e-04 | GradNorm: 4.129
  Batch   12/48 | Loss: 2.7757 | LR: 1.99e-04 | GradNorm: 3.076
  Batch   16/48 | Loss: 2.8061 | LR: 1.91e-04 | GradNorm: 2.863
  Batch   20/48 | Loss: 2.8575 | LR: 1.84e-04 | GradNorm: 3.301
  Batch   24/48 | Loss: 2.8418 | LR: 1.77e-04 | GradNorm: 3.023
  Batch   28/48 | Loss: 2.8437 | LR: 1.70e-04 | GradNorm: 3.169
  Batch   32/48 | Loss: 2.8215 | LR: 1.63e-04 | GradNorm: 3.008
  Batch   36/48 | Loss: 2.8643 | LR: 1.56e-04 | GradNorm: 5.282
  Batch   40/48 | Loss: 2.8064 | LR: 1.49e-04 | GradNorm: 3.452
  Batch   44/48 | Loss: 2.7801 | LR: 1.42e-04 | GradNorm: 2.835
Epoch 7/10: Train=29.56%, Val=18.80%, Gap=10.76%, LR=1.37e-04
  Batch    0/48 | Loss: 2.7673 | LR: 1.35e-04 | GradNorm: 3.199
  Batch    4/48 | Loss: 2.7114 | LR: 1.29e-04 | GradNorm: 2.591
  Batch    8/48 | Loss: 2.7391 | LR: 1.22e-04 | GradNorm: 2.603
  Batch   12/48 | Loss: 2.7964 | LR: 1.16e-04 | GradNorm: 4.852
  Batch   16/48 | Loss: 2.7733 | LR: 1.10e-04 | GradNorm: 2.420
  Batch   20/48 | Loss: 2.6987 | LR: 1.03e-04 | GradNorm: 4.402
  Batch   24/48 | Loss: 2.7017 | LR: 9.73e-05 | GradNorm: 4.179
  Batch   28/48 | Loss: 2.7441 | LR: 9.13e-05 | GradNorm: 5.113
  Batch   32/48 | Loss: 2.7603 | LR: 8.55e-05 | GradNorm: 6.261
  Batch   36/48 | Loss: 2.7620 | LR: 7.99e-05 | GradNorm: 5.344
  Batch   40/48 | Loss: 2.6538 | LR: 7.44e-05 | GradNorm: 3.218
  Batch   44/48 | Loss: 2.6989 | LR: 6.90e-05 | GradNorm: 1.774
Epoch 8/10: Train=32.97%, Val=17.34%, Gap=15.63%, LR=6.51e-05
  Batch    0/48 | Loss: 2.6431 | LR: 6.38e-05 | GradNorm: 1.924
  Batch    4/48 | Loss: 2.6596 | LR: 5.88e-05 | GradNorm: 3.519
  Batch    8/48 | Loss: 2.6948 | LR: 5.40e-05 | GradNorm: 2.558
  Batch   12/48 | Loss: 2.6287 | LR: 4.94e-05 | GradNorm: 2.273
  Batch   16/48 | Loss: 2.5948 | LR: 4.49e-05 | GradNorm: 2.786
  Batch   20/48 | Loss: 2.6128 | LR: 4.06e-05 | GradNorm: 2.856
  Batch   24/48 | Loss: 2.6215 | LR: 3.65e-05 | GradNorm: 2.874
  Batch   28/48 | Loss: 2.6574 | LR: 3.26e-05 | GradNorm: 2.354
  Batch   32/48 | Loss: 2.6172 | LR: 2.89e-05 | GradNorm: 2.202
  Batch   36/48 | Loss: 2.6289 | LR: 2.55e-05 | GradNorm: 3.388
  Batch   40/48 | Loss: 2.5944 | LR: 2.22e-05 | GradNorm: 2.918
  Batch   44/48 | Loss: 2.6202 | LR: 1.91e-05 | GradNorm: 3.144
Epoch 9/10: Train=35.62%, Val=19.36%, Gap=16.26%, LR=1.70e-05
  Batch    0/48 | Loss: 2.6060 | LR: 1.63e-05 | GradNorm: 2.724
  Batch    4/48 | Loss: 2.6018 | LR: 1.37e-05 | GradNorm: 2.426
  Batch    8/48 | Loss: 2.5781 | LR: 1.13e-05 | GradNorm: 2.048
  Batch   12/48 | Loss: 2.6082 | LR: 9.14e-06 | GradNorm: 2.807
  Batch   16/48 | Loss: 2.6045 | LR: 7.20e-06 | GradNorm: 1.391
  Batch   20/48 | Loss: 2.6121 | LR: 5.49e-06 | GradNorm: 2.894
  Batch   24/48 | Loss: 2.6020 | LR: 4.02e-06 | GradNorm: 2.326
  Batch   28/48 | Loss: 2.6115 | LR: 2.78e-06 | GradNorm: 2.162
  Batch   32/48 | Loss: 2.6221 | LR: 1.77e-06 | GradNorm: 1.950
  Batch   36/48 | Loss: 2.5930 | LR: 9.98e-07 | GradNorm: 1.337
  Batch   40/48 | Loss: 2.5768 | LR: 4.64e-07 | GradNorm: 1.641
  Batch   44/48 | Loss: 2.5927 | LR: 1.67e-07 | GradNorm: 2.150
Epoch 10/10: Train=36.91%, Val=19.78%, Gap=17.13%, LR=1.00e-07
Best validation accuracy: 19.78%
