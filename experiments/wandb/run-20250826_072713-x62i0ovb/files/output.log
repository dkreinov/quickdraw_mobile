=== W&B Sweep Run: LR=0.000446 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004464457550504543
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000446
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9561 | LR: 9.07e-06 | GradNorm: 1.755
  Batch    4/48 | Loss: 3.9231 | LR: 2.75e-05 | GradNorm: 1.095
  Batch    8/48 | Loss: 3.9209 | LR: 4.59e-05 | GradNorm: 0.739
  Batch   12/48 | Loss: 3.9154 | LR: 6.43e-05 | GradNorm: 0.606
  Batch   16/48 | Loss: 3.9244 | LR: 8.27e-05 | GradNorm: 0.617
  Batch   20/48 | Loss: 3.9194 | LR: 1.01e-04 | GradNorm: 0.615
  Batch   24/48 | Loss: 3.9154 | LR: 1.20e-04 | GradNorm: 0.607
  Batch   28/48 | Loss: 3.9192 | LR: 1.38e-04 | GradNorm: 0.551
  Batch   32/48 | Loss: 3.9115 | LR: 1.56e-04 | GradNorm: 0.502
  Batch   36/48 | Loss: 3.9123 | LR: 1.75e-04 | GradNorm: 0.517
  Batch   40/48 | Loss: 3.9032 | LR: 1.93e-04 | GradNorm: 0.524
  Batch   44/48 | Loss: 3.8801 | LR: 2.12e-04 | GradNorm: 0.669
Epoch 1/10: Train=2.30%, Val=3.26%, Gap=-0.96%, LR=2.25e-04
  Batch    0/48 | Loss: 3.8785 | LR: 2.30e-04 | GradNorm: 2.939
  Batch    4/48 | Loss: 3.8081 | LR: 2.48e-04 | GradNorm: 3.268
  Batch    8/48 | Loss: 3.7616 | LR: 2.67e-04 | GradNorm: 0.630
  Batch   12/48 | Loss: 3.8054 | LR: 2.85e-04 | GradNorm: 3.818
  Batch   16/48 | Loss: 3.8093 | LR: 3.04e-04 | GradNorm: 3.550
  Batch   20/48 | Loss: 3.7888 | LR: 3.22e-04 | GradNorm: 3.468
  Batch   24/48 | Loss: 3.6704 | LR: 3.41e-04 | GradNorm: 3.045
  Batch   28/48 | Loss: 3.6379 | LR: 3.59e-04 | GradNorm: 2.407
  Batch   32/48 | Loss: 3.6364 | LR: 3.77e-04 | GradNorm: 5.206
  Batch   36/48 | Loss: 3.5582 | LR: 3.96e-04 | GradNorm: 2.920
  Batch   40/48 | Loss: 3.5382 | LR: 4.14e-04 | GradNorm: 1.808
  Batch   44/48 | Loss: 3.5767 | LR: 4.33e-04 | GradNorm: 4.568
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.53%, Val=7.89%, Gap=-0.36%, LR=4.46e-04
  Batch    0/48 | Loss: 3.4450 | LR: 4.46e-04 | GradNorm: 3.579
  Batch    4/48 | Loss: 3.4411 | LR: 4.46e-04 | GradNorm: 2.849
  Batch    8/48 | Loss: 3.4694 | LR: 4.46e-04 | GradNorm: 2.563
  Batch   12/48 | Loss: 3.4385 | LR: 4.45e-04 | GradNorm: 1.526
  Batch   16/48 | Loss: 3.6766 | LR: 4.44e-04 | GradNorm: 7.560
  Batch   20/48 | Loss: 3.4071 | LR: 4.43e-04 | GradNorm: 1.752
  Batch   24/48 | Loss: 3.4095 | LR: 4.42e-04 | GradNorm: 3.722
  Batch   28/48 | Loss: 3.3891 | LR: 4.40e-04 | GradNorm: 3.031
  Batch   32/48 | Loss: 3.4304 | LR: 4.38e-04 | GradNorm: 3.899
  Batch   36/48 | Loss: 3.3572 | LR: 4.36e-04 | GradNorm: 2.359
  Batch   40/48 | Loss: 3.4134 | LR: 4.34e-04 | GradNorm: 6.332
  Batch   44/48 | Loss: 3.2948 | LR: 4.31e-04 | GradNorm: 1.576
Epoch 3/10: Train=12.20%, Val=11.58%, Gap=0.62%, LR=4.29e-04
  Batch    0/48 | Loss: 3.2738 | LR: 4.29e-04 | GradNorm: 1.945
  Batch    4/48 | Loss: 3.3141 | LR: 4.26e-04 | GradNorm: 4.855
  Batch    8/48 | Loss: 3.2640 | LR: 4.23e-04 | GradNorm: 3.952
  Batch   12/48 | Loss: 3.3029 | LR: 4.19e-04 | GradNorm: 4.712
  Batch   16/48 | Loss: 3.2004 | LR: 4.16e-04 | GradNorm: 1.292
  Batch   20/48 | Loss: 3.2114 | LR: 4.12e-04 | GradNorm: 2.837
  Batch   24/48 | Loss: 3.2104 | LR: 4.08e-04 | GradNorm: 3.429
  Batch   28/48 | Loss: 3.1298 | LR: 4.04e-04 | GradNorm: 2.699
  Batch   32/48 | Loss: 3.1353 | LR: 3.99e-04 | GradNorm: 2.172
  Batch   36/48 | Loss: 3.1889 | LR: 3.95e-04 | GradNorm: 4.890
  Batch   40/48 | Loss: 3.1924 | LR: 3.90e-04 | GradNorm: 5.954
  Batch   44/48 | Loss: 3.1320 | LR: 3.85e-04 | GradNorm: 2.919
Epoch 4/10: Train=18.13%, Val=15.85%, Gap=2.28%, LR=3.81e-04
  Batch    0/48 | Loss: 3.0483 | LR: 3.80e-04 | GradNorm: 1.664
  Batch    4/48 | Loss: 3.0324 | LR: 3.74e-04 | GradNorm: 3.104
  Batch    8/48 | Loss: 3.0260 | LR: 3.69e-04 | GradNorm: 5.192
  Batch   12/48 | Loss: 3.0806 | LR: 3.63e-04 | GradNorm: 7.553
  Batch   16/48 | Loss: 3.1191 | LR: 3.58e-04 | GradNorm: 5.655
  Batch   20/48 | Loss: 3.0450 | LR: 3.52e-04 | GradNorm: 3.345
  Batch   24/48 | Loss: 3.0048 | LR: 3.46e-04 | GradNorm: 3.515
  Batch   28/48 | Loss: 3.0225 | LR: 3.40e-04 | GradNorm: 2.995
  Batch   32/48 | Loss: 2.9515 | LR: 3.33e-04 | GradNorm: 2.961
  Batch   36/48 | Loss: 2.9810 | LR: 3.27e-04 | GradNorm: 3.830
  Batch   40/48 | Loss: 2.9472 | LR: 3.20e-04 | GradNorm: 2.377
  Batch   44/48 | Loss: 2.9230 | LR: 3.14e-04 | GradNorm: 4.719
Epoch 5/10: Train=24.47%, Val=19.68%, Gap=4.79%, LR=3.09e-04
  Batch    0/48 | Loss: 2.8500 | LR: 3.07e-04 | GradNorm: 2.189
  Batch    4/48 | Loss: 2.8932 | LR: 3.00e-04 | GradNorm: 6.391
  Batch    8/48 | Loss: 2.8344 | LR: 2.93e-04 | GradNorm: 2.461
  Batch   12/48 | Loss: 2.8797 | LR: 2.86e-04 | GradNorm: 3.408
  Batch   16/48 | Loss: 2.8536 | LR: 2.79e-04 | GradNorm: 4.120
  Batch   20/48 | Loss: 2.7896 | LR: 2.72e-04 | GradNorm: 1.901
  Batch   24/48 | Loss: 2.8069 | LR: 2.65e-04 | GradNorm: 2.867
  Batch   28/48 | Loss: 2.7386 | LR: 2.58e-04 | GradNorm: 3.218
  Batch   32/48 | Loss: 2.7560 | LR: 2.51e-04 | GradNorm: 3.014
  Batch   36/48 | Loss: 2.8213 | LR: 2.43e-04 | GradNorm: 4.058
  Batch   40/48 | Loss: 2.7486 | LR: 2.36e-04 | GradNorm: 2.290
  Batch   44/48 | Loss: 2.8413 | LR: 2.29e-04 | GradNorm: 4.943
Epoch 6/10: Train=29.22%, Val=19.58%, Gap=9.64%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7380 | LR: 2.21e-04 | GradNorm: 2.195
  Batch    4/48 | Loss: 2.7539 | LR: 2.14e-04 | GradNorm: 5.000
  Batch    8/48 | Loss: 2.7432 | LR: 2.07e-04 | GradNorm: 3.609
  Batch   12/48 | Loss: 2.6481 | LR: 2.00e-04 | GradNorm: 3.634
  Batch   16/48 | Loss: 2.6762 | LR: 1.92e-04 | GradNorm: 3.115
  Batch   20/48 | Loss: 2.7020 | LR: 1.85e-04 | GradNorm: 2.650
  Batch   24/48 | Loss: 2.7544 | LR: 1.78e-04 | GradNorm: 3.709
  Batch   28/48 | Loss: 2.7210 | LR: 1.71e-04 | GradNorm: 2.846
  Batch   32/48 | Loss: 2.6909 | LR: 1.64e-04 | GradNorm: 5.495
  Batch   36/48 | Loss: 2.7106 | LR: 1.57e-04 | GradNorm: 3.198
  Batch   40/48 | Loss: 2.6691 | LR: 1.50e-04 | GradNorm: 3.288
  Batch   44/48 | Loss: 2.6539 | LR: 1.43e-04 | GradNorm: 2.262
Epoch 7/10: Train=33.54%, Val=24.53%, Gap=9.01%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6505 | LR: 1.36e-04 | GradNorm: 2.929
  Batch    4/48 | Loss: 2.6111 | LR: 1.30e-04 | GradNorm: 3.719
  Batch    8/48 | Loss: 2.6183 | LR: 1.23e-04 | GradNorm: 3.055
  Batch   12/48 | Loss: 2.6525 | LR: 1.16e-04 | GradNorm: 2.738
  Batch   16/48 | Loss: 2.6408 | LR: 1.10e-04 | GradNorm: 4.573
  Batch   20/48 | Loss: 2.5799 | LR: 1.04e-04 | GradNorm: 5.022
  Batch   24/48 | Loss: 2.5608 | LR: 9.78e-05 | GradNorm: 4.657
  Batch   28/48 | Loss: 2.6183 | LR: 9.18e-05 | GradNorm: 6.524
  Batch   32/48 | Loss: 2.6053 | LR: 8.60e-05 | GradNorm: 4.315
  Batch   36/48 | Loss: 2.5778 | LR: 8.03e-05 | GradNorm: 3.715
  Batch   40/48 | Loss: 2.5080 | LR: 7.48e-05 | GradNorm: 3.779
  Batch   44/48 | Loss: 2.5733 | LR: 6.94e-05 | GradNorm: 2.437
Epoch 8/10: Train=36.78%, Val=25.67%, Gap=11.11%, LR=6.55e-05
  Batch    0/48 | Loss: 2.5359 | LR: 6.42e-05 | GradNorm: 3.246
  Batch    4/48 | Loss: 2.5475 | LR: 5.91e-05 | GradNorm: 4.175
  Batch    8/48 | Loss: 2.5939 | LR: 5.43e-05 | GradNorm: 3.516
  Batch   12/48 | Loss: 2.5315 | LR: 4.96e-05 | GradNorm: 2.799
  Batch   16/48 | Loss: 2.4990 | LR: 4.51e-05 | GradNorm: 1.673
  Batch   20/48 | Loss: 2.5076 | LR: 4.08e-05 | GradNorm: 2.641
  Batch   24/48 | Loss: 2.4933 | LR: 3.67e-05 | GradNorm: 2.809
  Batch   28/48 | Loss: 2.5289 | LR: 3.28e-05 | GradNorm: 1.854
  Batch   32/48 | Loss: 2.4855 | LR: 2.91e-05 | GradNorm: 2.844
  Batch   36/48 | Loss: 2.5164 | LR: 2.56e-05 | GradNorm: 2.237
  Batch   40/48 | Loss: 2.4930 | LR: 2.23e-05 | GradNorm: 1.887
  Batch   44/48 | Loss: 2.5047 | LR: 1.92e-05 | GradNorm: 1.544
Epoch 9/10: Train=39.22%, Val=26.12%, Gap=13.10%, LR=1.71e-05
  Batch    0/48 | Loss: 2.4997 | LR: 1.64e-05 | GradNorm: 1.874
  Batch    4/48 | Loss: 2.4818 | LR: 1.38e-05 | GradNorm: 2.567
  Batch    8/48 | Loss: 2.4673 | LR: 1.14e-05 | GradNorm: 2.167
  Batch   12/48 | Loss: 2.4893 | LR: 9.19e-06 | GradNorm: 2.213
  Batch   16/48 | Loss: 2.4720 | LR: 7.24e-06 | GradNorm: 1.974
  Batch   20/48 | Loss: 2.5086 | LR: 5.52e-06 | GradNorm: 2.686
  Batch   24/48 | Loss: 2.4921 | LR: 4.04e-06 | GradNorm: 1.576
  Batch   28/48 | Loss: 2.5349 | LR: 2.79e-06 | GradNorm: 2.432
  Batch   32/48 | Loss: 2.5097 | LR: 1.78e-06 | GradNorm: 1.622
  Batch   36/48 | Loss: 2.4592 | LR: 1.00e-06 | GradNorm: 1.459
  Batch   40/48 | Loss: 2.4635 | LR: 4.66e-07 | GradNorm: 1.615
  Batch   44/48 | Loss: 2.4722 | LR: 1.67e-07 | GradNorm: 1.761
Epoch 10/10: Train=40.12%, Val=26.16%, Gap=13.96%, LR=1.00e-07
Best validation accuracy: 26.16%
