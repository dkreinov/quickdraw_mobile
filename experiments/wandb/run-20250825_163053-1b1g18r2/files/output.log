=== W&B Sweep Run: LR=0.006067 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.006066993691045786
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.006067
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9645 | LR: 1.23e-04 | GradNorm: 1.707
  Batch    4/48 | Loss: 3.9201 | LR: 3.73e-04 | GradNorm: 0.518
  Batch    8/48 | Loss: 3.9246 | LR: 6.24e-04 | GradNorm: 0.506
  Batch   12/48 | Loss: 3.9149 | LR: 8.74e-04 | GradNorm: 0.432
  Batch   16/48 | Loss: 3.9241 | LR: 1.12e-03 | GradNorm: 0.501
  Batch   20/48 | Loss: 3.9181 | LR: 1.37e-03 | GradNorm: 0.575
  Batch   24/48 | Loss: 4.0144 | LR: 1.62e-03 | GradNorm: 2.352
  Batch   28/48 | Loss: 3.9143 | LR: 1.88e-03 | GradNorm: 0.606
  Batch   32/48 | Loss: 3.9061 | LR: 2.13e-03 | GradNorm: 0.496
  Batch   36/48 | Loss: 3.8555 | LR: 2.38e-03 | GradNorm: 0.512
  Batch   40/48 | Loss: 3.9097 | LR: 2.63e-03 | GradNorm: 0.909
  Batch   44/48 | Loss: 3.8926 | LR: 2.88e-03 | GradNorm: 0.674
Epoch 1/10: Train=2.58%, Val=2.71%, Gap=-0.13%, LR=3.06e-03
  Batch    0/48 | Loss: 3.8719 | LR: 3.13e-03 | GradNorm: 0.599
  Batch    4/48 | Loss: 3.8200 | LR: 3.38e-03 | GradNorm: 0.544
  Batch    8/48 | Loss: 3.8653 | LR: 3.63e-03 | GradNorm: 0.839
  Batch   12/48 | Loss: 3.8671 | LR: 3.88e-03 | GradNorm: 1.160
  Batch   16/48 | Loss: 3.7942 | LR: 4.13e-03 | GradNorm: 0.531
  Batch   20/48 | Loss: 3.8346 | LR: 4.38e-03 | GradNorm: 1.010
  Batch   24/48 | Loss: 3.8453 | LR: 4.63e-03 | GradNorm: 0.562
  Batch   28/48 | Loss: 3.8412 | LR: 4.88e-03 | GradNorm: 0.536
  Batch   32/48 | Loss: 3.8887 | LR: 5.13e-03 | GradNorm: 0.547
  Batch   36/48 | Loss: 3.8749 | LR: 5.38e-03 | GradNorm: 0.506
  Batch   40/48 | Loss: 3.8767 | LR: 5.63e-03 | GradNorm: 0.494
  Batch   44/48 | Loss: 3.8515 | LR: 5.88e-03 | GradNorm: 0.470
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=3.65%, Val=3.61%, Gap=0.04%, LR=6.07e-03
  Batch    0/48 | Loss: 3.8560 | LR: 6.07e-03 | GradNorm: 0.496
  Batch    4/48 | Loss: 3.8340 | LR: 6.06e-03 | GradNorm: 0.316
  Batch    8/48 | Loss: 3.7977 | LR: 6.06e-03 | GradNorm: 0.401
  Batch   12/48 | Loss: 3.8008 | LR: 6.05e-03 | GradNorm: 0.470
  Batch   16/48 | Loss: 3.7724 | LR: 6.04e-03 | GradNorm: 0.373
  Batch   20/48 | Loss: 3.7943 | LR: 6.02e-03 | GradNorm: 0.502
  Batch   24/48 | Loss: 3.8162 | LR: 6.00e-03 | GradNorm: 0.634
  Batch   28/48 | Loss: 3.7811 | LR: 5.98e-03 | GradNorm: 0.493
  Batch   32/48 | Loss: 3.8016 | LR: 5.96e-03 | GradNorm: 0.547
  Batch   36/48 | Loss: 3.7780 | LR: 5.93e-03 | GradNorm: 0.351
  Batch   40/48 | Loss: 3.7568 | LR: 5.90e-03 | GradNorm: 0.369
  Batch   44/48 | Loss: 3.7553 | LR: 5.86e-03 | GradNorm: 0.382
Epoch 3/10: Train=4.63%, Val=3.91%, Gap=0.72%, LR=5.84e-03
  Batch    0/48 | Loss: 3.7543 | LR: 5.83e-03 | GradNorm: 0.374
  Batch    4/48 | Loss: 3.7202 | LR: 5.79e-03 | GradNorm: 0.408
  Batch    8/48 | Loss: 3.7336 | LR: 5.74e-03 | GradNorm: 0.404
  Batch   12/48 | Loss: 4.0145 | LR: 5.70e-03 | GradNorm: 0.938
  Batch   16/48 | Loss: 3.8094 | LR: 5.65e-03 | GradNorm: 0.443
  Batch   20/48 | Loss: 3.7974 | LR: 5.60e-03 | GradNorm: 0.360
  Batch   24/48 | Loss: 3.7996 | LR: 5.54e-03 | GradNorm: 0.309
  Batch   28/48 | Loss: 3.7705 | LR: 5.48e-03 | GradNorm: 0.245
  Batch   32/48 | Loss: 3.7653 | LR: 5.42e-03 | GradNorm: 0.285
  Batch   36/48 | Loss: 3.7564 | LR: 5.36e-03 | GradNorm: 0.254
  Batch   40/48 | Loss: 3.7607 | LR: 5.30e-03 | GradNorm: 0.239
  Batch   44/48 | Loss: 3.7642 | LR: 5.23e-03 | GradNorm: 0.370
Epoch 4/10: Train=4.97%, Val=3.51%, Gap=1.46%, LR=5.18e-03
  Batch    0/48 | Loss: 3.7609 | LR: 5.16e-03 | GradNorm: 0.420
  Batch    4/48 | Loss: 3.7464 | LR: 5.09e-03 | GradNorm: 0.490
  Batch    8/48 | Loss: 3.7586 | LR: 5.01e-03 | GradNorm: 0.332
  Batch   12/48 | Loss: 3.7691 | LR: 4.94e-03 | GradNorm: 0.435
  Batch   16/48 | Loss: 3.7306 | LR: 4.86e-03 | GradNorm: 0.231
  Batch   20/48 | Loss: 3.7525 | LR: 4.78e-03 | GradNorm: 0.263
  Batch   24/48 | Loss: 3.7350 | LR: 4.70e-03 | GradNorm: 0.332
  Batch   28/48 | Loss: 3.7479 | LR: 4.61e-03 | GradNorm: 0.271
  Batch   32/48 | Loss: 3.7102 | LR: 4.53e-03 | GradNorm: 0.292
  Batch   36/48 | Loss: 3.7652 | LR: 4.44e-03 | GradNorm: 0.378
  Batch   40/48 | Loss: 3.7799 | LR: 4.35e-03 | GradNorm: 0.548
  Batch   44/48 | Loss: 3.7592 | LR: 4.26e-03 | GradNorm: 0.256
Epoch 5/10: Train=5.43%, Val=4.38%, Gap=1.05%, LR=4.19e-03
  Batch    0/48 | Loss: 3.7715 | LR: 4.17e-03 | GradNorm: 0.362
  Batch    4/48 | Loss: 3.7375 | LR: 4.08e-03 | GradNorm: 0.206
  Batch    8/48 | Loss: 3.7116 | LR: 3.99e-03 | GradNorm: 0.238
  Batch   12/48 | Loss: 3.7672 | LR: 3.89e-03 | GradNorm: 0.282
  Batch   16/48 | Loss: 3.7201 | LR: 3.79e-03 | GradNorm: 0.306
  Batch   20/48 | Loss: 3.7246 | LR: 3.70e-03 | GradNorm: 0.202
  Batch   24/48 | Loss: 3.7027 | LR: 3.60e-03 | GradNorm: 0.194
  Batch   28/48 | Loss: 3.7223 | LR: 3.50e-03 | GradNorm: 0.494
  Batch   32/48 | Loss: 3.7418 | LR: 3.40e-03 | GradNorm: 0.362
  Batch   36/48 | Loss: 3.7118 | LR: 3.31e-03 | GradNorm: 0.441
  Batch   40/48 | Loss: 3.7206 | LR: 3.21e-03 | GradNorm: 0.415
  Batch   44/48 | Loss: 3.7463 | LR: 3.11e-03 | GradNorm: 0.340
Epoch 6/10: Train=5.98%, Val=5.71%, Gap=0.27%, LR=3.03e-03
  Batch    0/48 | Loss: 3.7108 | LR: 3.01e-03 | GradNorm: 0.236
  Batch    4/48 | Loss: 3.7812 | LR: 2.91e-03 | GradNorm: 0.601
  Batch    8/48 | Loss: 3.7112 | LR: 2.81e-03 | GradNorm: 0.385
  Batch   12/48 | Loss: 3.6967 | LR: 2.71e-03 | GradNorm: 0.356
  Batch   16/48 | Loss: 3.6883 | LR: 2.61e-03 | GradNorm: 0.237
  Batch   20/48 | Loss: 3.7269 | LR: 2.51e-03 | GradNorm: 0.207
  Batch   24/48 | Loss: 3.7012 | LR: 2.42e-03 | GradNorm: 0.192
  Batch   28/48 | Loss: 3.6675 | LR: 2.32e-03 | GradNorm: 0.191
  Batch   32/48 | Loss: 3.6915 | LR: 2.22e-03 | GradNorm: 0.277
  Batch   36/48 | Loss: 3.7132 | LR: 2.13e-03 | GradNorm: 0.246
  Batch   40/48 | Loss: 3.6866 | LR: 2.04e-03 | GradNorm: 0.362
  Batch   44/48 | Loss: 3.6426 | LR: 1.94e-03 | GradNorm: 0.291
Epoch 7/10: Train=7.26%, Val=4.87%, Gap=2.39%, LR=1.87e-03
  Batch    0/48 | Loss: 3.7056 | LR: 1.85e-03 | GradNorm: 8.306
  Batch    4/48 | Loss: 3.6482 | LR: 1.76e-03 | GradNorm: 0.225
  Batch    8/48 | Loss: 3.6418 | LR: 1.67e-03 | GradNorm: 0.372
  Batch   12/48 | Loss: 3.6519 | LR: 1.58e-03 | GradNorm: 0.210
  Batch   16/48 | Loss: 3.6815 | LR: 1.50e-03 | GradNorm: 0.435
  Batch   20/48 | Loss: 3.6462 | LR: 1.41e-03 | GradNorm: 0.215
  Batch   24/48 | Loss: 3.6362 | LR: 1.33e-03 | GradNorm: 0.279
  Batch   28/48 | Loss: 3.6493 | LR: 1.25e-03 | GradNorm: 0.477
  Batch   32/48 | Loss: 3.6186 | LR: 1.17e-03 | GradNorm: 0.172
  Batch   36/48 | Loss: 3.6519 | LR: 1.09e-03 | GradNorm: 0.273
  Batch   40/48 | Loss: 3.6196 | LR: 1.01e-03 | GradNorm: 0.266
  Batch   44/48 | Loss: 3.6354 | LR: 9.42e-04 | GradNorm: 0.244
Epoch 8/10: Train=8.20%, Val=6.59%, Gap=1.61%, LR=8.89e-04
  Batch    0/48 | Loss: 3.6258 | LR: 8.71e-04 | GradNorm: 0.305
  Batch    4/48 | Loss: 3.6400 | LR: 8.03e-04 | GradNorm: 0.275
  Batch    8/48 | Loss: 3.6384 | LR: 7.37e-04 | GradNorm: 0.247
  Batch   12/48 | Loss: 3.6238 | LR: 6.73e-04 | GradNorm: 0.375
  Batch   16/48 | Loss: 3.5734 | LR: 6.12e-04 | GradNorm: 0.379
  Batch   20/48 | Loss: 3.5823 | LR: 5.53e-04 | GradNorm: 0.313
  Batch   24/48 | Loss: 3.5898 | LR: 4.98e-04 | GradNorm: 0.248
  Batch   28/48 | Loss: 3.6068 | LR: 4.45e-04 | GradNorm: 0.242
  Batch   32/48 | Loss: 3.5728 | LR: 3.94e-04 | GradNorm: 0.256
  Batch   36/48 | Loss: 3.6092 | LR: 3.47e-04 | GradNorm: 0.383
  Batch   40/48 | Loss: 3.5430 | LR: 3.02e-04 | GradNorm: 0.314
  Batch   44/48 | Loss: 3.5620 | LR: 2.60e-04 | GradNorm: 0.491
Epoch 9/10: Train=9.66%, Val=6.84%, Gap=2.82%, LR=2.31e-04
  Batch    0/48 | Loss: 3.5567 | LR: 2.22e-04 | GradNorm: 0.330
  Batch    4/48 | Loss: 3.5894 | LR: 1.86e-04 | GradNorm: 0.535
  Batch    8/48 | Loss: 3.5536 | LR: 1.53e-04 | GradNorm: 0.314
  Batch   12/48 | Loss: 3.5899 | LR: 1.24e-04 | GradNorm: 0.374
  Batch   16/48 | Loss: 3.5715 | LR: 9.71e-05 | GradNorm: 0.638
  Batch   20/48 | Loss: 3.5741 | LR: 7.38e-05 | GradNorm: 0.239
  Batch   24/48 | Loss: 3.5607 | LR: 5.36e-05 | GradNorm: 0.340
  Batch   28/48 | Loss: 3.5559 | LR: 3.67e-05 | GradNorm: 1.083
  Batch   32/48 | Loss: 3.6054 | LR: 2.29e-05 | GradNorm: 0.355
  Batch   36/48 | Loss: 3.5998 | LR: 1.24e-05 | GradNorm: 0.281
  Batch   40/48 | Loss: 3.5618 | LR: 5.07e-06 | GradNorm: 0.575
  Batch   44/48 | Loss: 3.5858 | LR: 1.01e-06 | GradNorm: 0.358
Epoch 10/10: Train=10.40%, Val=7.66%, Gap=2.74%, LR=1.00e-07
Best validation accuracy: 7.66%
