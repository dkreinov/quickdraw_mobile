=== W&B Sweep Run: LR=0.000148 ===
Using device: cuda
‚è±Ô∏è  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
‚è±Ô∏è  Train dataset creation took: 0.47s
‚è±Ô∏è  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
‚è±Ô∏è  Val dataset creation took: 0.43s

Loading train/val split...
Pre-computed split found but metadata mismatch: ../data/splits/split_50c_1000+200_seed42.json
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples
‚è±Ô∏è  Split computation took: 81.17s
üîç Split verification: max_index=59999, dataset_size=60000
‚úÖ Split indices OK: max_idx=59999 < dataset_size=60000
üíæ Saved correct split to: ../data/splits/split_50c_1000+200_seed42.json
‚è±Ô∏è  Subset creation took: 0.00s
‚è±Ô∏è  DataLoader creation took: 0.00s
‚è±Ô∏è  TOTAL data loading time: 81.28s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 ‚Üí 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00014829769833395583
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000148
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9432 | LR: 3.01e-06 | GradNorm: 1.422
  Batch    4/48 | Loss: 3.9291 | LR: 9.13e-06 | GradNorm: 1.119
  Batch    8/48 | Loss: 3.9213 | LR: 1.52e-05 | GradNorm: 0.931
  Batch   12/48 | Loss: 3.9144 | LR: 2.14e-05 | GradNorm: 0.769
  Batch   16/48 | Loss: 3.9191 | LR: 2.75e-05 | GradNorm: 0.812
  Batch   20/48 | Loss: 3.9120 | LR: 3.36e-05 | GradNorm: 0.731
  Batch   24/48 | Loss: 3.9130 | LR: 3.97e-05 | GradNorm: 0.780
  Batch   28/48 | Loss: 3.9158 | LR: 4.58e-05 | GradNorm: 0.656
  Batch   32/48 | Loss: 3.9120 | LR: 5.20e-05 | GradNorm: 0.598
  Batch   36/48 | Loss: 3.9073 | LR: 5.81e-05 | GradNorm: 0.556
  Batch   40/48 | Loss: 3.9077 | LR: 6.42e-05 | GradNorm: 0.644
  Batch   44/48 | Loss: 3.9011 | LR: 7.03e-05 | GradNorm: 0.650
Epoch 1/10: Train=2.26%, Val=5.24%, Gap=-2.98%, LR=7.49e-05
  Batch    0/48 | Loss: 3.8920 | LR: 7.64e-05 | GradNorm: 0.740
  Batch    4/48 | Loss: 3.8557 | LR: 8.25e-05 | GradNorm: 1.145
  Batch    8/48 | Loss: 3.8605 | LR: 8.87e-05 | GradNorm: 7.891
  Batch   12/48 | Loss: 3.8472 | LR: 9.48e-05 | GradNorm: 10.903
  Batch   16/48 | Loss: 3.9275 | LR: 1.01e-04 | GradNorm: 9.337
  Batch   20/48 | Loss: 3.9709 | LR: 1.07e-04 | GradNorm: 6.833
  Batch   24/48 | Loss: 3.8283 | LR: 1.13e-04 | GradNorm: 4.683
  Batch   28/48 | Loss: 3.7605 | LR: 1.19e-04 | GradNorm: 1.039
  Batch   32/48 | Loss: 3.7696 | LR: 1.25e-04 | GradNorm: 3.823
  Batch   36/48 | Loss: 3.7410 | LR: 1.31e-04 | GradNorm: 2.204
  Batch   40/48 | Loss: 3.7250 | LR: 1.38e-04 | GradNorm: 1.167
  Batch   44/48 | Loss: 3.7026 | LR: 1.44e-04 | GradNorm: 6.597
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.04%, Val=6.10%, Gap=-1.06%, LR=1.48e-04
  Batch    0/48 | Loss: 3.6591 | LR: 1.48e-04 | GradNorm: 2.121
  Batch    4/48 | Loss: 3.6881 | LR: 1.48e-04 | GradNorm: 3.645
  Batch    8/48 | Loss: 3.6617 | LR: 1.48e-04 | GradNorm: 1.758
  Batch   12/48 | Loss: 3.6970 | LR: 1.48e-04 | GradNorm: 4.616
  Batch   16/48 | Loss: 3.6574 | LR: 1.48e-04 | GradNorm: 3.029
  Batch   20/48 | Loss: 3.5961 | LR: 1.47e-04 | GradNorm: 2.937
  Batch   24/48 | Loss: 3.6379 | LR: 1.47e-04 | GradNorm: 6.577
  Batch   28/48 | Loss: 3.7145 | LR: 1.46e-04 | GradNorm: 15.824
  Batch   32/48 | Loss: 3.5914 | LR: 1.46e-04 | GradNorm: 4.258
  Batch   36/48 | Loss: 3.5966 | LR: 1.45e-04 | GradNorm: 6.325
  Batch   40/48 | Loss: 3.5699 | LR: 1.44e-04 | GradNorm: 3.992
  Batch   44/48 | Loss: 3.5187 | LR: 1.43e-04 | GradNorm: 3.238
Epoch 3/10: Train=8.51%, Val=10.95%, Gap=-2.44%, LR=1.43e-04
  Batch    0/48 | Loss: 3.4911 | LR: 1.42e-04 | GradNorm: 3.214
  Batch    4/48 | Loss: 3.4986 | LR: 1.41e-04 | GradNorm: 6.411
  Batch    8/48 | Loss: 3.4580 | LR: 1.40e-04 | GradNorm: 4.609
  Batch   12/48 | Loss: 3.3969 | LR: 1.39e-04 | GradNorm: 2.422
  Batch   16/48 | Loss: 3.4024 | LR: 1.38e-04 | GradNorm: 3.563
  Batch   20/48 | Loss: 3.4325 | LR: 1.37e-04 | GradNorm: 6.706
  Batch   24/48 | Loss: 3.3761 | LR: 1.35e-04 | GradNorm: 3.506
  Batch   28/48 | Loss: 3.3850 | LR: 1.34e-04 | GradNorm: 5.871
  Batch   32/48 | Loss: 3.4296 | LR: 1.33e-04 | GradNorm: 7.877
  Batch   36/48 | Loss: 3.3901 | LR: 1.31e-04 | GradNorm: 5.226
  Batch   40/48 | Loss: 3.3660 | LR: 1.30e-04 | GradNorm: 3.290
  Batch   44/48 | Loss: 3.3189 | LR: 1.28e-04 | GradNorm: 2.366
Epoch 4/10: Train=13.99%, Val=11.36%, Gap=2.63%, LR=1.27e-04
  Batch    0/48 | Loss: 3.2964 | LR: 1.26e-04 | GradNorm: 1.276
  Batch    4/48 | Loss: 3.2813 | LR: 1.24e-04 | GradNorm: 3.549
  Batch    8/48 | Loss: 3.2583 | LR: 1.23e-04 | GradNorm: 3.463
  Batch   12/48 | Loss: 3.2406 | LR: 1.21e-04 | GradNorm: 2.583
  Batch   16/48 | Loss: 3.2973 | LR: 1.19e-04 | GradNorm: 2.419
  Batch   20/48 | Loss: 3.2363 | LR: 1.17e-04 | GradNorm: 2.900
  Batch   24/48 | Loss: 3.2460 | LR: 1.15e-04 | GradNorm: 4.268
  Batch   28/48 | Loss: 3.2289 | LR: 1.13e-04 | GradNorm: 3.208
  Batch   32/48 | Loss: 3.2044 | LR: 1.11e-04 | GradNorm: 5.978
  Batch   36/48 | Loss: 3.2251 | LR: 1.09e-04 | GradNorm: 1.700
  Batch   40/48 | Loss: 3.2380 | LR: 1.06e-04 | GradNorm: 4.914
  Batch   44/48 | Loss: 3.2112 | LR: 1.04e-04 | GradNorm: 5.692
Epoch 5/10: Train=18.50%, Val=11.78%, Gap=6.72%, LR=1.03e-04
  Batch    0/48 | Loss: 3.1643 | LR: 1.02e-04 | GradNorm: 4.083
  Batch    4/48 | Loss: 3.1085 | LR: 9.97e-05 | GradNorm: 3.318
  Batch    8/48 | Loss: 3.1289 | LR: 9.74e-05 | GradNorm: 4.634
  Batch   12/48 | Loss: 3.1215 | LR: 9.51e-05 | GradNorm: 3.650
  Batch   16/48 | Loss: 3.0842 | LR: 9.28e-05 | GradNorm: 2.437
  Batch   20/48 | Loss: 3.1055 | LR: 9.04e-05 | GradNorm: 5.003
  Batch   24/48 | Loss: 3.0649 | LR: 8.81e-05 | GradNorm: 4.368
  Batch   28/48 | Loss: 3.0497 | LR: 8.57e-05 | GradNorm: 5.877
  Batch   32/48 | Loss: 3.0458 | LR: 8.33e-05 | GradNorm: 7.372
  Batch   36/48 | Loss: 3.0642 | LR: 8.09e-05 | GradNorm: 3.254
  Batch   40/48 | Loss: 3.0812 | LR: 7.84e-05 | GradNorm: 5.520
  Batch   44/48 | Loss: 3.1429 | LR: 7.60e-05 | GradNorm: 8.287
Epoch 6/10: Train=22.97%, Val=15.49%, Gap=7.48%, LR=7.42e-05
  Batch    0/48 | Loss: 3.0248 | LR: 7.36e-05 | GradNorm: 3.096
  Batch    4/48 | Loss: 3.0575 | LR: 7.12e-05 | GradNorm: 7.986
  Batch    8/48 | Loss: 3.0335 | LR: 6.87e-05 | GradNorm: 5.868
  Batch   12/48 | Loss: 2.9624 | LR: 6.63e-05 | GradNorm: 2.775
  Batch   16/48 | Loss: 2.9706 | LR: 6.39e-05 | GradNorm: 4.311
  Batch   20/48 | Loss: 3.0174 | LR: 6.15e-05 | GradNorm: 4.699
  Batch   24/48 | Loss: 3.0249 | LR: 5.91e-05 | GradNorm: 6.106
  Batch   28/48 | Loss: 2.9984 | LR: 5.68e-05 | GradNorm: 2.801
  Batch   32/48 | Loss: 3.0151 | LR: 5.44e-05 | GradNorm: 3.309
  Batch   36/48 | Loss: 3.0004 | LR: 5.21e-05 | GradNorm: 4.830
  Batch   40/48 | Loss: 2.9962 | LR: 4.98e-05 | GradNorm: 7.876
  Batch   44/48 | Loss: 2.9803 | LR: 4.75e-05 | GradNorm: 5.912
Epoch 7/10: Train=26.25%, Val=17.42%, Gap=8.83%, LR=4.58e-05
  Batch    0/48 | Loss: 2.9733 | LR: 4.53e-05 | GradNorm: 8.579
  Batch    4/48 | Loss: 2.9229 | LR: 4.31e-05 | GradNorm: 2.457
  Batch    8/48 | Loss: 2.9214 | LR: 4.09e-05 | GradNorm: 4.102
  Batch   12/48 | Loss: 2.9649 | LR: 3.87e-05 | GradNorm: 3.740
  Batch   16/48 | Loss: 2.9661 | LR: 3.66e-05 | GradNorm: 5.598
  Batch   20/48 | Loss: 2.8797 | LR: 3.46e-05 | GradNorm: 4.215
  Batch   24/48 | Loss: 2.9033 | LR: 3.25e-05 | GradNorm: 5.308
  Batch   28/48 | Loss: 2.9145 | LR: 3.05e-05 | GradNorm: 4.901
  Batch   32/48 | Loss: 2.8973 | LR: 2.86e-05 | GradNorm: 5.348
  Batch   36/48 | Loss: 2.9020 | LR: 2.67e-05 | GradNorm: 4.331
  Batch   40/48 | Loss: 2.8428 | LR: 2.49e-05 | GradNorm: 5.244
  Batch   44/48 | Loss: 2.8856 | LR: 2.31e-05 | GradNorm: 5.868
Epoch 8/10: Train=29.01%, Val=17.99%, Gap=11.02%, LR=2.18e-05
  Batch    0/48 | Loss: 2.8853 | LR: 2.14e-05 | GradNorm: 4.518
  Batch    4/48 | Loss: 2.8456 | LR: 1.97e-05 | GradNorm: 5.419
  Batch    8/48 | Loss: 2.9104 | LR: 1.81e-05 | GradNorm: 4.133
  Batch   12/48 | Loss: 2.8571 | LR: 1.65e-05 | GradNorm: 3.737
  Batch   16/48 | Loss: 2.8230 | LR: 1.50e-05 | GradNorm: 2.406
  Batch   20/48 | Loss: 2.8177 | LR: 1.36e-05 | GradNorm: 2.841
  Batch   24/48 | Loss: 2.8559 | LR: 1.23e-05 | GradNorm: 3.365
  Batch   28/48 | Loss: 2.8607 | LR: 1.10e-05 | GradNorm: 3.733
  Batch   32/48 | Loss: 2.8445 | LR: 9.73e-06 | GradNorm: 7.779
  Batch   36/48 | Loss: 2.8432 | LR: 8.57e-06 | GradNorm: 6.334
  Batch   40/48 | Loss: 2.8239 | LR: 7.48e-06 | GradNorm: 5.610
  Batch   44/48 | Loss: 2.8412 | LR: 6.46e-06 | GradNorm: 2.790
Epoch 9/10: Train=30.99%, Val=18.54%, Gap=12.45%, LR=5.74e-06
  Batch    0/48 | Loss: 2.8553 | LR: 5.51e-06 | GradNorm: 3.373
  Batch    4/48 | Loss: 2.8514 | LR: 4.64e-06 | GradNorm: 4.244
  Batch    8/48 | Loss: 2.8244 | LR: 3.84e-06 | GradNorm: 2.913
  Batch   12/48 | Loss: 2.8336 | LR: 3.12e-06 | GradNorm: 3.747
  Batch   16/48 | Loss: 2.8318 | LR: 2.47e-06 | GradNorm: 2.594
  Batch   20/48 | Loss: 2.8318 | LR: 1.90e-06 | GradNorm: 4.571
  Batch   24/48 | Loss: 2.8318 | LR: 1.41e-06 | GradNorm: 4.355
  Batch   28/48 | Loss: 2.8587 | LR: 9.93e-07 | GradNorm: 2.684
  Batch   32/48 | Loss: 2.8627 | LR: 6.57e-07 | GradNorm: 4.509
  Batch   36/48 | Loss: 2.8387 | LR: 4.00e-07 | GradNorm: 3.882
  Batch   40/48 | Loss: 2.8403 | LR: 2.21e-07 | GradNorm: 3.143
  Batch   44/48 | Loss: 2.8223 | LR: 1.22e-07 | GradNorm: 3.772
Epoch 10/10: Train=31.53%, Val=19.19%, Gap=12.34%, LR=1.00e-07
Best validation accuracy: 19.19%
