=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026825007256455044
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9520 | LR: 5.45e-06 | GradNorm: 1.673
  Batch    4/48 | Loss: 3.9267 | LR: 1.65e-05 | GradNorm: 1.103
  Batch    8/48 | Loss: 3.9216 | LR: 2.76e-05 | GradNorm: 0.927
  Batch   12/48 | Loss: 3.9173 | LR: 3.86e-05 | GradNorm: 0.821
  Batch   16/48 | Loss: 3.9234 | LR: 4.97e-05 | GradNorm: 0.811
  Batch   20/48 | Loss: 3.9185 | LR: 6.08e-05 | GradNorm: 0.767
  Batch   24/48 | Loss: 3.9148 | LR: 7.18e-05 | GradNorm: 0.750
  Batch   28/48 | Loss: 3.9177 | LR: 8.29e-05 | GradNorm: 0.661
  Batch   32/48 | Loss: 3.9082 | LR: 9.40e-05 | GradNorm: 0.574
  Batch   36/48 | Loss: 3.9037 | LR: 1.05e-04 | GradNorm: 0.599
  Batch   40/48 | Loss: 3.8905 | LR: 1.16e-04 | GradNorm: 0.628
  Batch   44/48 | Loss: 3.8534 | LR: 1.27e-04 | GradNorm: 0.893
Epoch 1/10: Train=2.75%, Val=4.04%, Gap=-1.29%, LR=1.35e-04
  Batch    0/48 | Loss: 3.8060 | LR: 1.38e-04 | GradNorm: 2.941
  Batch    4/48 | Loss: 3.9197 | LR: 1.49e-04 | GradNorm: 11.909
  Batch    8/48 | Loss: 3.9696 | LR: 1.60e-04 | GradNorm: 8.883
  Batch   12/48 | Loss: 3.9683 | LR: 1.71e-04 | GradNorm: 5.235
  Batch   16/48 | Loss: 3.8113 | LR: 1.82e-04 | GradNorm: 1.948
  Batch   20/48 | Loss: 3.8375 | LR: 1.94e-04 | GradNorm: 3.877
  Batch   24/48 | Loss: 3.7784 | LR: 2.05e-04 | GradNorm: 3.076
  Batch   28/48 | Loss: 3.7374 | LR: 2.16e-04 | GradNorm: 0.906
  Batch   32/48 | Loss: 3.7074 | LR: 2.27e-04 | GradNorm: 2.229
  Batch   36/48 | Loss: 3.7041 | LR: 2.38e-04 | GradNorm: 3.905
  Batch   40/48 | Loss: 3.6755 | LR: 2.49e-04 | GradNorm: 2.903
  Batch   44/48 | Loss: 3.6379 | LR: 2.60e-04 | GradNorm: 4.450
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.74%, Val=5.34%, Gap=0.40%, LR=2.68e-04
  Batch    0/48 | Loss: 3.5834 | LR: 2.68e-04 | GradNorm: 3.635
  Batch    4/48 | Loss: 3.6083 | LR: 2.68e-04 | GradNorm: 3.825
  Batch    8/48 | Loss: 3.5959 | LR: 2.68e-04 | GradNorm: 5.244
  Batch   12/48 | Loss: 3.5402 | LR: 2.67e-04 | GradNorm: 2.446
  Batch   16/48 | Loss: 3.5180 | LR: 2.67e-04 | GradNorm: 2.108
  Batch   20/48 | Loss: 3.4476 | LR: 2.66e-04 | GradNorm: 2.574
  Batch   24/48 | Loss: 3.4714 | LR: 2.65e-04 | GradNorm: 4.993
  Batch   28/48 | Loss: 3.4322 | LR: 2.64e-04 | GradNorm: 4.263
  Batch   32/48 | Loss: 3.4438 | LR: 2.63e-04 | GradNorm: 3.746
  Batch   36/48 | Loss: 3.4705 | LR: 2.62e-04 | GradNorm: 5.518
  Batch   40/48 | Loss: 3.3578 | LR: 2.61e-04 | GradNorm: 2.737
  Batch   44/48 | Loss: 3.3402 | LR: 2.59e-04 | GradNorm: 2.942
Epoch 3/10: Train=11.88%, Val=9.68%, Gap=2.20%, LR=2.58e-04
  Batch    0/48 | Loss: 3.4024 | LR: 2.58e-04 | GradNorm: 7.208
  Batch    4/48 | Loss: 3.4091 | LR: 2.56e-04 | GradNorm: 3.836
  Batch    8/48 | Loss: 3.3801 | LR: 2.54e-04 | GradNorm: 4.150
  Batch   12/48 | Loss: 3.2732 | LR: 2.52e-04 | GradNorm: 3.881
  Batch   16/48 | Loss: 3.2956 | LR: 2.50e-04 | GradNorm: 1.597
  Batch   20/48 | Loss: 3.2903 | LR: 2.47e-04 | GradNorm: 5.314
  Batch   24/48 | Loss: 3.3057 | LR: 2.45e-04 | GradNorm: 4.391
  Batch   28/48 | Loss: 3.2603 | LR: 2.43e-04 | GradNorm: 3.868
  Batch   32/48 | Loss: 3.2562 | LR: 2.40e-04 | GradNorm: 2.789
  Batch   36/48 | Loss: 3.2424 | LR: 2.37e-04 | GradNorm: 2.132
  Batch   40/48 | Loss: 3.2193 | LR: 2.34e-04 | GradNorm: 1.774
  Batch   44/48 | Loss: 3.2324 | LR: 2.31e-04 | GradNorm: 4.433
Epoch 4/10: Train=15.95%, Val=10.85%, Gap=5.10%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2168 | LR: 2.28e-04 | GradNorm: 4.264
  Batch    4/48 | Loss: 3.1738 | LR: 2.25e-04 | GradNorm: 2.358
  Batch    8/48 | Loss: 3.1545 | LR: 2.22e-04 | GradNorm: 2.420
  Batch   12/48 | Loss: 3.1632 | LR: 2.18e-04 | GradNorm: 3.228
  Batch   16/48 | Loss: 3.2284 | LR: 2.15e-04 | GradNorm: 4.370
  Batch   20/48 | Loss: 3.1292 | LR: 2.11e-04 | GradNorm: 2.240
  Batch   24/48 | Loss: 3.1724 | LR: 2.08e-04 | GradNorm: 4.827
  Batch   28/48 | Loss: 3.1040 | LR: 2.04e-04 | GradNorm: 2.362
  Batch   32/48 | Loss: 3.0839 | LR: 2.00e-04 | GradNorm: 2.079
  Batch   36/48 | Loss: 3.1667 | LR: 1.96e-04 | GradNorm: 3.726
  Batch   40/48 | Loss: 3.1179 | LR: 1.92e-04 | GradNorm: 2.659
  Batch   44/48 | Loss: 3.0945 | LR: 1.89e-04 | GradNorm: 3.263
Epoch 5/10: Train=20.04%, Val=15.32%, Gap=4.72%, LR=1.85e-04
  Batch    0/48 | Loss: 3.0295 | LR: 1.84e-04 | GradNorm: 2.356
  Batch    4/48 | Loss: 2.9985 | LR: 1.80e-04 | GradNorm: 2.323
  Batch    8/48 | Loss: 3.0278 | LR: 1.76e-04 | GradNorm: 3.599
  Batch   12/48 | Loss: 3.0465 | LR: 1.72e-04 | GradNorm: 5.292
  Batch   16/48 | Loss: 2.9762 | LR: 1.68e-04 | GradNorm: 3.222
  Batch   20/48 | Loss: 2.9828 | LR: 1.64e-04 | GradNorm: 4.954
  Batch   24/48 | Loss: 2.9726 | LR: 1.59e-04 | GradNorm: 5.809
  Batch   28/48 | Loss: 2.9095 | LR: 1.55e-04 | GradNorm: 3.529
  Batch   32/48 | Loss: 2.8884 | LR: 1.51e-04 | GradNorm: 2.040
  Batch   36/48 | Loss: 2.9554 | LR: 1.46e-04 | GradNorm: 4.634
  Batch   40/48 | Loss: 2.9565 | LR: 1.42e-04 | GradNorm: 7.030
  Batch   44/48 | Loss: 3.0102 | LR: 1.37e-04 | GradNorm: 5.212
Epoch 6/10: Train=24.87%, Val=14.71%, Gap=10.16%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9224 | LR: 1.33e-04 | GradNorm: 4.826
  Batch    4/48 | Loss: 2.9149 | LR: 1.29e-04 | GradNorm: 6.360
  Batch    8/48 | Loss: 2.9204 | LR: 1.24e-04 | GradNorm: 3.560
  Batch   12/48 | Loss: 2.8411 | LR: 1.20e-04 | GradNorm: 3.698
  Batch   16/48 | Loss: 2.8433 | LR: 1.16e-04 | GradNorm: 3.291
  Batch   20/48 | Loss: 2.8880 | LR: 1.11e-04 | GradNorm: 3.581
  Batch   24/48 | Loss: 2.8590 | LR: 1.07e-04 | GradNorm: 2.992
  Batch   28/48 | Loss: 2.9272 | LR: 1.03e-04 | GradNorm: 5.737
  Batch   32/48 | Loss: 2.8865 | LR: 9.84e-05 | GradNorm: 4.356
  Batch   36/48 | Loss: 2.8811 | LR: 9.42e-05 | GradNorm: 4.400
  Batch   40/48 | Loss: 2.8359 | LR: 9.00e-05 | GradNorm: 5.317
  Batch   44/48 | Loss: 2.8499 | LR: 8.59e-05 | GradNorm: 3.707
Epoch 7/10: Train=28.52%, Val=17.08%, Gap=11.44%, LR=8.29e-05
  Batch    0/48 | Loss: 2.8266 | LR: 8.19e-05 | GradNorm: 5.483
  Batch    4/48 | Loss: 2.8014 | LR: 7.78e-05 | GradNorm: 6.089
  Batch    8/48 | Loss: 2.7993 | LR: 7.39e-05 | GradNorm: 3.800
  Batch   12/48 | Loss: 2.8291 | LR: 7.00e-05 | GradNorm: 4.427
  Batch   16/48 | Loss: 2.8355 | LR: 6.62e-05 | GradNorm: 2.837
  Batch   20/48 | Loss: 2.7512 | LR: 6.24e-05 | GradNorm: 5.996
  Batch   24/48 | Loss: 2.7510 | LR: 5.88e-05 | GradNorm: 3.887
  Batch   28/48 | Loss: 2.7811 | LR: 5.52e-05 | GradNorm: 2.196
  Batch   32/48 | Loss: 2.7709 | LR: 5.17e-05 | GradNorm: 3.780
  Batch   36/48 | Loss: 2.7723 | LR: 4.83e-05 | GradNorm: 2.916
  Batch   40/48 | Loss: 2.7020 | LR: 4.50e-05 | GradNorm: 4.253
  Batch   44/48 | Loss: 2.7656 | LR: 4.17e-05 | GradNorm: 2.446
Epoch 8/10: Train=31.15%, Val=17.57%, Gap=13.58%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7161 | LR: 3.86e-05 | GradNorm: 1.898
  Batch    4/48 | Loss: 2.7069 | LR: 3.56e-05 | GradNorm: 2.278
  Batch    8/48 | Loss: 2.7727 | LR: 3.27e-05 | GradNorm: 3.752
  Batch   12/48 | Loss: 2.7032 | LR: 2.98e-05 | GradNorm: 1.847
  Batch   16/48 | Loss: 2.6798 | LR: 2.71e-05 | GradNorm: 2.236
  Batch   20/48 | Loss: 2.6864 | LR: 2.46e-05 | GradNorm: 3.120
  Batch   24/48 | Loss: 2.7076 | LR: 2.21e-05 | GradNorm: 2.446
  Batch   28/48 | Loss: 2.7333 | LR: 1.97e-05 | GradNorm: 2.415
  Batch   32/48 | Loss: 2.7006 | LR: 1.75e-05 | GradNorm: 3.323
  Batch   36/48 | Loss: 2.7079 | LR: 1.54e-05 | GradNorm: 5.199
  Batch   40/48 | Loss: 2.6851 | LR: 1.34e-05 | GradNorm: 2.647
  Batch   44/48 | Loss: 2.7003 | LR: 1.16e-05 | GradNorm: 1.544
Epoch 9/10: Train=33.54%, Val=18.17%, Gap=15.37%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6837 | LR: 9.89e-06 | GradNorm: 3.162
  Batch    4/48 | Loss: 2.6926 | LR: 8.31e-06 | GradNorm: 2.971
  Batch    8/48 | Loss: 2.6715 | LR: 6.87e-06 | GradNorm: 2.881
  Batch   12/48 | Loss: 2.6896 | LR: 5.56e-06 | GradNorm: 2.668
  Batch   16/48 | Loss: 2.6806 | LR: 4.39e-06 | GradNorm: 3.384
  Batch   20/48 | Loss: 2.6823 | LR: 3.36e-06 | GradNorm: 3.196
  Batch   24/48 | Loss: 2.6749 | LR: 2.47e-06 | GradNorm: 2.761
  Batch   28/48 | Loss: 2.6971 | LR: 1.72e-06 | GradNorm: 2.785
  Batch   32/48 | Loss: 2.7059 | LR: 1.11e-06 | GradNorm: 2.808
  Batch   36/48 | Loss: 2.6734 | LR: 6.43e-07 | GradNorm: 1.660
  Batch   40/48 | Loss: 2.6703 | LR: 3.20e-07 | GradNorm: 2.182
  Batch   44/48 | Loss: 2.6684 | LR: 1.40e-07 | GradNorm: 1.923
Epoch 10/10: Train=34.65%, Val=18.33%, Gap=16.32%, LR=1.00e-07
Best validation accuracy: 18.33%
