=== W&B Sweep Run: LR=0.000446 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044581276922797913
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000446
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9506 | LR: 9.06e-06 | GradNorm: 1.628
  Batch    4/48 | Loss: 3.9249 | LR: 2.74e-05 | GradNorm: 0.930
  Batch    8/48 | Loss: 3.9218 | LR: 4.58e-05 | GradNorm: 0.846
  Batch   12/48 | Loss: 3.9187 | LR: 6.42e-05 | GradNorm: 0.668
  Batch   16/48 | Loss: 3.9234 | LR: 8.26e-05 | GradNorm: 0.643
  Batch   20/48 | Loss: 3.9189 | LR: 1.01e-04 | GradNorm: 0.645
  Batch   24/48 | Loss: 3.9156 | LR: 1.19e-04 | GradNorm: 0.592
  Batch   28/48 | Loss: 3.9176 | LR: 1.38e-04 | GradNorm: 0.552
  Batch   32/48 | Loss: 3.9071 | LR: 1.56e-04 | GradNorm: 0.477
  Batch   36/48 | Loss: 3.9085 | LR: 1.75e-04 | GradNorm: 0.522
  Batch   40/48 | Loss: 3.8922 | LR: 1.93e-04 | GradNorm: 0.572
  Batch   44/48 | Loss: 3.8564 | LR: 2.11e-04 | GradNorm: 1.325
Epoch 1/10: Train=2.52%, Val=4.84%, Gap=-2.32%, LR=2.25e-04
  Batch    0/48 | Loss: 3.7847 | LR: 2.30e-04 | GradNorm: 0.701
  Batch    4/48 | Loss: 3.7970 | LR: 2.48e-04 | GradNorm: 4.128
  Batch    8/48 | Loss: 3.7486 | LR: 2.67e-04 | GradNorm: 2.361
  Batch   12/48 | Loss: 3.7009 | LR: 2.85e-04 | GradNorm: 2.326
  Batch   16/48 | Loss: 3.7414 | LR: 3.03e-04 | GradNorm: 5.848
  Batch   20/48 | Loss: 3.6787 | LR: 3.22e-04 | GradNorm: 2.752
  Batch   24/48 | Loss: 3.8468 | LR: 3.40e-04 | GradNorm: 7.791
  Batch   28/48 | Loss: 3.7885 | LR: 3.58e-04 | GradNorm: 4.423
  Batch   32/48 | Loss: 3.7270 | LR: 3.77e-04 | GradNorm: 1.624
  Batch   36/48 | Loss: 3.6720 | LR: 3.95e-04 | GradNorm: 2.197
  Batch   40/48 | Loss: 3.7672 | LR: 4.14e-04 | GradNorm: 14.465
  Batch   44/48 | Loss: 3.6747 | LR: 4.32e-04 | GradNorm: 6.238
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.87%, Val=5.88%, Gap=-0.01%, LR=4.46e-04
  Batch    0/48 | Loss: 3.6568 | LR: 4.46e-04 | GradNorm: 2.287
  Batch    4/48 | Loss: 3.7689 | LR: 4.46e-04 | GradNorm: 1.588
  Batch    8/48 | Loss: 3.7185 | LR: 4.45e-04 | GradNorm: 0.923
  Batch   12/48 | Loss: 3.6361 | LR: 4.45e-04 | GradNorm: 1.162
  Batch   16/48 | Loss: 3.6285 | LR: 4.44e-04 | GradNorm: 1.379
  Batch   20/48 | Loss: 3.5528 | LR: 4.43e-04 | GradNorm: 1.358
  Batch   24/48 | Loss: 3.5919 | LR: 4.41e-04 | GradNorm: 5.437
  Batch   28/48 | Loss: 3.4962 | LR: 4.40e-04 | GradNorm: 1.653
  Batch   32/48 | Loss: 3.4824 | LR: 4.38e-04 | GradNorm: 1.366
  Batch   36/48 | Loss: 3.4647 | LR: 4.36e-04 | GradNorm: 1.987
  Batch   40/48 | Loss: 3.4340 | LR: 4.33e-04 | GradNorm: 3.469
  Batch   44/48 | Loss: 3.3925 | LR: 4.31e-04 | GradNorm: 1.690
Epoch 3/10: Train=9.53%, Val=7.39%, Gap=2.14%, LR=4.29e-04
  Batch    0/48 | Loss: 3.4119 | LR: 4.28e-04 | GradNorm: 3.380
  Batch    4/48 | Loss: 3.3639 | LR: 4.25e-04 | GradNorm: 2.104
  Batch    8/48 | Loss: 3.3292 | LR: 4.22e-04 | GradNorm: 1.963
  Batch   12/48 | Loss: 3.3466 | LR: 4.19e-04 | GradNorm: 3.965
  Batch   16/48 | Loss: 3.3561 | LR: 4.15e-04 | GradNorm: 5.083
  Batch   20/48 | Loss: 3.2955 | LR: 4.11e-04 | GradNorm: 2.056
  Batch   24/48 | Loss: 3.3065 | LR: 4.07e-04 | GradNorm: 4.006
  Batch   28/48 | Loss: 3.2591 | LR: 4.03e-04 | GradNorm: 3.218
  Batch   32/48 | Loss: 3.2870 | LR: 3.99e-04 | GradNorm: 2.871
  Batch   36/48 | Loss: 3.2415 | LR: 3.94e-04 | GradNorm: 2.346
  Batch   40/48 | Loss: 3.2678 | LR: 3.89e-04 | GradNorm: 3.871
  Batch   44/48 | Loss: 3.2645 | LR: 3.84e-04 | GradNorm: 3.052
Epoch 4/10: Train=16.13%, Val=10.51%, Gap=5.62%, LR=3.81e-04
  Batch    0/48 | Loss: 3.1594 | LR: 3.79e-04 | GradNorm: 1.441
  Batch    4/48 | Loss: 3.1505 | LR: 3.74e-04 | GradNorm: 2.503
  Batch    8/48 | Loss: 3.1169 | LR: 3.69e-04 | GradNorm: 1.820
  Batch   12/48 | Loss: 3.1256 | LR: 3.63e-04 | GradNorm: 2.284
  Batch   16/48 | Loss: 3.2012 | LR: 3.57e-04 | GradNorm: 3.591
  Batch   20/48 | Loss: 3.1475 | LR: 3.51e-04 | GradNorm: 3.388
  Batch   24/48 | Loss: 3.1263 | LR: 3.45e-04 | GradNorm: 1.773
  Batch   28/48 | Loss: 3.1150 | LR: 3.39e-04 | GradNorm: 3.316
  Batch   32/48 | Loss: 3.1066 | LR: 3.33e-04 | GradNorm: 4.514
  Batch   36/48 | Loss: 3.1163 | LR: 3.26e-04 | GradNorm: 2.498
  Batch   40/48 | Loss: 3.1619 | LR: 3.20e-04 | GradNorm: 3.339
  Batch   44/48 | Loss: 3.0615 | LR: 3.13e-04 | GradNorm: 2.064
Epoch 5/10: Train=21.25%, Val=12.28%, Gap=8.97%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0022 | LR: 3.07e-04 | GradNorm: 1.865
  Batch    4/48 | Loss: 2.9504 | LR: 3.00e-04 | GradNorm: 1.828
  Batch    8/48 | Loss: 3.0478 | LR: 2.93e-04 | GradNorm: 5.959
  Batch   12/48 | Loss: 2.9973 | LR: 2.86e-04 | GradNorm: 3.663
  Batch   16/48 | Loss: 2.9328 | LR: 2.79e-04 | GradNorm: 2.166
  Batch   20/48 | Loss: 2.9782 | LR: 2.72e-04 | GradNorm: 4.101
  Batch   24/48 | Loss: 2.9294 | LR: 2.65e-04 | GradNorm: 2.068
  Batch   28/48 | Loss: 2.9236 | LR: 2.57e-04 | GradNorm: 5.232
  Batch   32/48 | Loss: 2.9322 | LR: 2.50e-04 | GradNorm: 4.686
  Batch   36/48 | Loss: 2.9185 | LR: 2.43e-04 | GradNorm: 1.554
  Batch   40/48 | Loss: 2.8997 | LR: 2.36e-04 | GradNorm: 1.866
  Batch   44/48 | Loss: 2.9977 | LR: 2.28e-04 | GradNorm: 5.141
Epoch 6/10: Train=25.52%, Val=16.08%, Gap=9.44%, LR=2.23e-04
  Batch    0/48 | Loss: 2.9342 | LR: 2.21e-04 | GradNorm: 4.915
  Batch    4/48 | Loss: 2.8918 | LR: 2.14e-04 | GradNorm: 2.872
  Batch    8/48 | Loss: 2.9012 | LR: 2.07e-04 | GradNorm: 4.726
  Batch   12/48 | Loss: 2.8439 | LR: 1.99e-04 | GradNorm: 4.867
  Batch   16/48 | Loss: 2.8729 | LR: 1.92e-04 | GradNorm: 4.529
  Batch   20/48 | Loss: 2.9097 | LR: 1.85e-04 | GradNorm: 4.020
  Batch   24/48 | Loss: 2.8709 | LR: 1.78e-04 | GradNorm: 2.772
  Batch   28/48 | Loss: 2.8944 | LR: 1.71e-04 | GradNorm: 3.607
  Batch   32/48 | Loss: 2.9137 | LR: 1.64e-04 | GradNorm: 4.637
  Batch   36/48 | Loss: 2.8991 | LR: 1.57e-04 | GradNorm: 5.124
  Batch   40/48 | Loss: 2.8700 | LR: 1.50e-04 | GradNorm: 3.223
  Batch   44/48 | Loss: 2.8336 | LR: 1.43e-04 | GradNorm: 3.795
Epoch 7/10: Train=28.76%, Val=18.17%, Gap=10.59%, LR=1.38e-04
  Batch    0/48 | Loss: 2.8424 | LR: 1.36e-04 | GradNorm: 3.353
  Batch    4/48 | Loss: 2.7471 | LR: 1.29e-04 | GradNorm: 1.378
  Batch    8/48 | Loss: 2.8017 | LR: 1.23e-04 | GradNorm: 3.905
  Batch   12/48 | Loss: 2.8334 | LR: 1.16e-04 | GradNorm: 4.120
  Batch   16/48 | Loss: 2.8423 | LR: 1.10e-04 | GradNorm: 3.784
  Batch   20/48 | Loss: 2.7558 | LR: 1.04e-04 | GradNorm: 3.803
  Batch   24/48 | Loss: 2.7288 | LR: 9.76e-05 | GradNorm: 1.994
  Batch   28/48 | Loss: 2.7883 | LR: 9.17e-05 | GradNorm: 3.543
  Batch   32/48 | Loss: 2.7809 | LR: 8.58e-05 | GradNorm: 4.307
  Batch   36/48 | Loss: 2.7684 | LR: 8.02e-05 | GradNorm: 3.466
  Batch   40/48 | Loss: 2.6907 | LR: 7.47e-05 | GradNorm: 4.156
  Batch   44/48 | Loss: 2.7528 | LR: 6.93e-05 | GradNorm: 2.415
Epoch 8/10: Train=31.36%, Val=17.29%, Gap=14.07%, LR=6.54e-05
  Batch    0/48 | Loss: 2.6928 | LR: 6.41e-05 | GradNorm: 2.128
  Batch    4/48 | Loss: 2.7215 | LR: 5.91e-05 | GradNorm: 3.125
  Batch    8/48 | Loss: 2.7662 | LR: 5.42e-05 | GradNorm: 2.382
  Batch   12/48 | Loss: 2.7036 | LR: 4.95e-05 | GradNorm: 1.790
  Batch   16/48 | Loss: 2.6298 | LR: 4.50e-05 | GradNorm: 2.482
  Batch   20/48 | Loss: 2.6454 | LR: 4.08e-05 | GradNorm: 2.418
  Batch   24/48 | Loss: 2.6858 | LR: 3.67e-05 | GradNorm: 2.189
  Batch   28/48 | Loss: 2.6929 | LR: 3.27e-05 | GradNorm: 1.357
  Batch   32/48 | Loss: 2.6740 | LR: 2.91e-05 | GradNorm: 1.265
  Batch   36/48 | Loss: 2.6798 | LR: 2.56e-05 | GradNorm: 1.833
  Batch   40/48 | Loss: 2.6507 | LR: 2.23e-05 | GradNorm: 2.065
  Batch   44/48 | Loss: 2.6744 | LR: 1.92e-05 | GradNorm: 2.123
Epoch 9/10: Train=34.12%, Val=19.23%, Gap=14.89%, LR=1.71e-05
  Batch    0/48 | Loss: 2.6608 | LR: 1.64e-05 | GradNorm: 2.576
  Batch    4/48 | Loss: 2.6751 | LR: 1.37e-05 | GradNorm: 2.518
  Batch    8/48 | Loss: 2.6293 | LR: 1.13e-05 | GradNorm: 1.600
  Batch   12/48 | Loss: 2.6429 | LR: 9.17e-06 | GradNorm: 1.600
  Batch   16/48 | Loss: 2.6672 | LR: 7.23e-06 | GradNorm: 1.709
  Batch   20/48 | Loss: 2.6698 | LR: 5.51e-06 | GradNorm: 2.231
  Batch   24/48 | Loss: 2.6666 | LR: 4.03e-06 | GradNorm: 2.621
  Batch   28/48 | Loss: 2.6722 | LR: 2.79e-06 | GradNorm: 3.650
  Batch   32/48 | Loss: 2.7037 | LR: 1.78e-06 | GradNorm: 2.078
  Batch   36/48 | Loss: 2.6493 | LR: 1.00e-06 | GradNorm: 1.165
  Batch   40/48 | Loss: 2.6333 | LR: 4.65e-07 | GradNorm: 1.500
  Batch   44/48 | Loss: 2.6566 | LR: 1.67e-07 | GradNorm: 2.415
Epoch 10/10: Train=35.39%, Val=19.17%, Gap=16.22%, LR=1.00e-07
Best validation accuracy: 19.23%
