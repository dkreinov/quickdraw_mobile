=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026940654430142606
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9597 | LR: 5.47e-06 | GradNorm: 1.509
  Batch    4/48 | Loss: 3.9293 | LR: 1.66e-05 | GradNorm: 1.025
  Batch    8/48 | Loss: 3.9216 | LR: 2.77e-05 | GradNorm: 0.888
  Batch   12/48 | Loss: 3.9149 | LR: 3.88e-05 | GradNorm: 0.655
  Batch   16/48 | Loss: 3.9212 | LR: 4.99e-05 | GradNorm: 0.714
  Batch   20/48 | Loss: 3.9162 | LR: 6.10e-05 | GradNorm: 0.650
  Batch   24/48 | Loss: 3.9104 | LR: 7.22e-05 | GradNorm: 0.616
  Batch   28/48 | Loss: 3.9153 | LR: 8.33e-05 | GradNorm: 0.524
  Batch   32/48 | Loss: 3.9097 | LR: 9.44e-05 | GradNorm: 0.505
  Batch   36/48 | Loss: 3.9129 | LR: 1.05e-04 | GradNorm: 0.537
  Batch   40/48 | Loss: 3.9054 | LR: 1.17e-04 | GradNorm: 0.519
  Batch   44/48 | Loss: 3.9007 | LR: 1.28e-04 | GradNorm: 0.543
Epoch 1/10: Train=2.14%, Val=4.10%, Gap=-1.96%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8875 | LR: 1.39e-04 | GradNorm: 0.560
  Batch    4/48 | Loss: 3.8525 | LR: 1.50e-04 | GradNorm: 1.075
  Batch    8/48 | Loss: 3.8496 | LR: 1.61e-04 | GradNorm: 4.160
  Batch   12/48 | Loss: 3.7759 | LR: 1.72e-04 | GradNorm: 4.551
  Batch   16/48 | Loss: 3.7759 | LR: 1.83e-04 | GradNorm: 1.818
  Batch   20/48 | Loss: 3.7473 | LR: 1.94e-04 | GradNorm: 3.162
  Batch   24/48 | Loss: 3.6965 | LR: 2.06e-04 | GradNorm: 3.065
  Batch   28/48 | Loss: 3.6920 | LR: 2.17e-04 | GradNorm: 2.256
  Batch   32/48 | Loss: 3.6547 | LR: 2.28e-04 | GradNorm: 1.489
  Batch   36/48 | Loss: 3.6958 | LR: 2.39e-04 | GradNorm: 5.548
  Batch   40/48 | Loss: 3.6708 | LR: 2.50e-04 | GradNorm: 1.935
  Batch   44/48 | Loss: 3.6899 | LR: 2.61e-04 | GradNorm: 16.160
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.87%, Val=8.93%, Gap=-3.06%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6796 | LR: 2.69e-04 | GradNorm: 2.586
  Batch    4/48 | Loss: 3.6186 | LR: 2.69e-04 | GradNorm: 1.205
  Batch    8/48 | Loss: 3.5929 | LR: 2.69e-04 | GradNorm: 3.926
  Batch   12/48 | Loss: 3.5539 | LR: 2.69e-04 | GradNorm: 3.900
  Batch   16/48 | Loss: 3.5564 | LR: 2.68e-04 | GradNorm: 2.152
  Batch   20/48 | Loss: 3.5140 | LR: 2.67e-04 | GradNorm: 2.595
  Batch   24/48 | Loss: 3.4963 | LR: 2.67e-04 | GradNorm: 3.373
  Batch   28/48 | Loss: 3.4492 | LR: 2.66e-04 | GradNorm: 3.592
  Batch   32/48 | Loss: 3.4816 | LR: 2.65e-04 | GradNorm: 4.903
  Batch   36/48 | Loss: 3.4638 | LR: 2.63e-04 | GradNorm: 4.632
  Batch   40/48 | Loss: 3.4313 | LR: 2.62e-04 | GradNorm: 5.990
  Batch   44/48 | Loss: 3.3753 | LR: 2.60e-04 | GradNorm: 2.898
Epoch 3/10: Train=11.42%, Val=9.33%, Gap=2.09%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3424 | LR: 2.59e-04 | GradNorm: 3.743
  Batch    4/48 | Loss: 3.3199 | LR: 2.57e-04 | GradNorm: 1.347
  Batch    8/48 | Loss: 3.2899 | LR: 2.55e-04 | GradNorm: 2.960
  Batch   12/48 | Loss: 3.2378 | LR: 2.53e-04 | GradNorm: 2.360
  Batch   16/48 | Loss: 3.2616 | LR: 2.51e-04 | GradNorm: 3.542
  Batch   20/48 | Loss: 3.2564 | LR: 2.49e-04 | GradNorm: 4.381
  Batch   24/48 | Loss: 3.2266 | LR: 2.46e-04 | GradNorm: 3.497
  Batch   28/48 | Loss: 3.2811 | LR: 2.44e-04 | GradNorm: 7.966
  Batch   32/48 | Loss: 3.2775 | LR: 2.41e-04 | GradNorm: 4.553
  Batch   36/48 | Loss: 3.2962 | LR: 2.38e-04 | GradNorm: 6.849
  Batch   40/48 | Loss: 3.3050 | LR: 2.35e-04 | GradNorm: 3.972
  Batch   44/48 | Loss: 3.2104 | LR: 2.32e-04 | GradNorm: 3.111
Epoch 4/10: Train=16.83%, Val=13.47%, Gap=3.36%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1729 | LR: 2.29e-04 | GradNorm: 2.517
  Batch    4/48 | Loss: 3.1037 | LR: 2.26e-04 | GradNorm: 1.424
  Batch    8/48 | Loss: 3.1191 | LR: 2.23e-04 | GradNorm: 3.139
  Batch   12/48 | Loss: 3.1273 | LR: 2.19e-04 | GradNorm: 3.725
  Batch   16/48 | Loss: 3.2046 | LR: 2.16e-04 | GradNorm: 6.409
  Batch   20/48 | Loss: 3.0996 | LR: 2.12e-04 | GradNorm: 3.359
  Batch   24/48 | Loss: 3.1774 | LR: 2.09e-04 | GradNorm: 5.045
  Batch   28/48 | Loss: 3.1395 | LR: 2.05e-04 | GradNorm: 5.164
  Batch   32/48 | Loss: 3.0737 | LR: 2.01e-04 | GradNorm: 3.983
  Batch   36/48 | Loss: 3.1032 | LR: 1.97e-04 | GradNorm: 2.991
  Batch   40/48 | Loss: 3.0861 | LR: 1.93e-04 | GradNorm: 2.143
  Batch   44/48 | Loss: 3.0409 | LR: 1.89e-04 | GradNorm: 3.629
Epoch 5/10: Train=21.54%, Val=15.70%, Gap=5.84%, LR=1.86e-04
  Batch    0/48 | Loss: 2.9767 | LR: 1.85e-04 | GradNorm: 3.414
  Batch    4/48 | Loss: 2.9774 | LR: 1.81e-04 | GradNorm: 5.113
  Batch    8/48 | Loss: 2.9942 | LR: 1.77e-04 | GradNorm: 5.391
  Batch   12/48 | Loss: 2.9456 | LR: 1.73e-04 | GradNorm: 3.788
  Batch   16/48 | Loss: 2.9183 | LR: 1.69e-04 | GradNorm: 3.213
  Batch   20/48 | Loss: 2.9448 | LR: 1.64e-04 | GradNorm: 3.959
  Batch   24/48 | Loss: 2.9099 | LR: 1.60e-04 | GradNorm: 5.315
  Batch   28/48 | Loss: 2.8556 | LR: 1.56e-04 | GradNorm: 4.238
  Batch   32/48 | Loss: 2.8629 | LR: 1.51e-04 | GradNorm: 6.115
  Batch   36/48 | Loss: 2.8588 | LR: 1.47e-04 | GradNorm: 2.414
  Batch   40/48 | Loss: 2.8712 | LR: 1.42e-04 | GradNorm: 4.488
  Batch   44/48 | Loss: 2.9463 | LR: 1.38e-04 | GradNorm: 7.884
Epoch 6/10: Train=27.58%, Val=18.27%, Gap=9.31%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8479 | LR: 1.34e-04 | GradNorm: 3.833
  Batch    4/48 | Loss: 2.8196 | LR: 1.29e-04 | GradNorm: 2.573
  Batch    8/48 | Loss: 2.8058 | LR: 1.25e-04 | GradNorm: 2.816
  Batch   12/48 | Loss: 2.7841 | LR: 1.20e-04 | GradNorm: 9.009
  Batch   16/48 | Loss: 2.7973 | LR: 1.16e-04 | GradNorm: 7.141
  Batch   20/48 | Loss: 2.7889 | LR: 1.12e-04 | GradNorm: 2.938
  Batch   24/48 | Loss: 2.8167 | LR: 1.07e-04 | GradNorm: 5.062
  Batch   28/48 | Loss: 2.8107 | LR: 1.03e-04 | GradNorm: 4.625
  Batch   32/48 | Loss: 2.8069 | LR: 9.88e-05 | GradNorm: 5.308
  Batch   36/48 | Loss: 2.8133 | LR: 9.46e-05 | GradNorm: 4.792
  Batch   40/48 | Loss: 2.7660 | LR: 9.04e-05 | GradNorm: 5.328
  Batch   44/48 | Loss: 2.7480 | LR: 8.63e-05 | GradNorm: 4.291
Epoch 7/10: Train=31.77%, Val=20.92%, Gap=10.85%, LR=8.32e-05
  Batch    0/48 | Loss: 2.7494 | LR: 8.22e-05 | GradNorm: 4.049
  Batch    4/48 | Loss: 2.7055 | LR: 7.82e-05 | GradNorm: 5.464
  Batch    8/48 | Loss: 2.7233 | LR: 7.42e-05 | GradNorm: 5.554
  Batch   12/48 | Loss: 2.7481 | LR: 7.03e-05 | GradNorm: 5.688
  Batch   16/48 | Loss: 2.7600 | LR: 6.65e-05 | GradNorm: 3.457
  Batch   20/48 | Loss: 2.6887 | LR: 6.27e-05 | GradNorm: 6.369
  Batch   24/48 | Loss: 2.6961 | LR: 5.90e-05 | GradNorm: 4.251
  Batch   28/48 | Loss: 2.7189 | LR: 5.54e-05 | GradNorm: 4.172
  Batch   32/48 | Loss: 2.7111 | LR: 5.19e-05 | GradNorm: 3.946
  Batch   36/48 | Loss: 2.6883 | LR: 4.85e-05 | GradNorm: 4.573
  Batch   40/48 | Loss: 2.6283 | LR: 4.51e-05 | GradNorm: 4.077
  Batch   44/48 | Loss: 2.6833 | LR: 4.19e-05 | GradNorm: 6.028
Epoch 8/10: Train=34.29%, Val=23.21%, Gap=11.08%, LR=3.95e-05
  Batch    0/48 | Loss: 2.6471 | LR: 3.88e-05 | GradNorm: 4.016
  Batch    4/48 | Loss: 2.6458 | LR: 3.57e-05 | GradNorm: 4.779
  Batch    8/48 | Loss: 2.7015 | LR: 3.28e-05 | GradNorm: 6.820
  Batch   12/48 | Loss: 2.6398 | LR: 3.00e-05 | GradNorm: 4.099
  Batch   16/48 | Loss: 2.5987 | LR: 2.73e-05 | GradNorm: 3.701
  Batch   20/48 | Loss: 2.5973 | LR: 2.47e-05 | GradNorm: 4.762
  Batch   24/48 | Loss: 2.6427 | LR: 2.22e-05 | GradNorm: 5.183
  Batch   28/48 | Loss: 2.6547 | LR: 1.98e-05 | GradNorm: 5.805
  Batch   32/48 | Loss: 2.6339 | LR: 1.76e-05 | GradNorm: 6.037
  Batch   36/48 | Loss: 2.6058 | LR: 1.55e-05 | GradNorm: 3.136
  Batch   40/48 | Loss: 2.5913 | LR: 1.35e-05 | GradNorm: 2.456
  Batch   44/48 | Loss: 2.6169 | LR: 1.17e-05 | GradNorm: 3.254
Epoch 9/10: Train=36.76%, Val=22.56%, Gap=14.20%, LR=1.03e-05
  Batch    0/48 | Loss: 2.5956 | LR: 9.93e-06 | GradNorm: 3.441
  Batch    4/48 | Loss: 2.6307 | LR: 8.35e-06 | GradNorm: 3.877
  Batch    8/48 | Loss: 2.5786 | LR: 6.90e-06 | GradNorm: 2.665
  Batch   12/48 | Loss: 2.5893 | LR: 5.58e-06 | GradNorm: 3.715
  Batch   16/48 | Loss: 2.5954 | LR: 4.41e-06 | GradNorm: 2.285
  Batch   20/48 | Loss: 2.6123 | LR: 3.37e-06 | GradNorm: 3.403
  Batch   24/48 | Loss: 2.6147 | LR: 2.48e-06 | GradNorm: 3.258
  Batch   28/48 | Loss: 2.6264 | LR: 1.72e-06 | GradNorm: 2.190
  Batch   32/48 | Loss: 2.6430 | LR: 1.11e-06 | GradNorm: 3.181
  Batch   36/48 | Loss: 2.5936 | LR: 6.45e-07 | GradNorm: 2.858
  Batch   40/48 | Loss: 2.5671 | LR: 3.21e-07 | GradNorm: 2.689
  Batch   44/48 | Loss: 2.5926 | LR: 1.41e-07 | GradNorm: 2.789
Epoch 10/10: Train=37.77%, Val=22.70%, Gap=15.07%, LR=1.00e-07
Best validation accuracy: 23.21%
