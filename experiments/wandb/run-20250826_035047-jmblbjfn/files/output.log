=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026816039185100133
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9641 | LR: 5.45e-06 | GradNorm: 1.880
  Batch    4/48 | Loss: 3.9400 | LR: 1.65e-05 | GradNorm: 1.164
  Batch    8/48 | Loss: 3.9216 | LR: 2.76e-05 | GradNorm: 0.837
  Batch   12/48 | Loss: 3.9194 | LR: 3.86e-05 | GradNorm: 0.892
  Batch   16/48 | Loss: 3.9228 | LR: 4.97e-05 | GradNorm: 0.742
  Batch   20/48 | Loss: 3.9084 | LR: 6.08e-05 | GradNorm: 0.572
  Batch   24/48 | Loss: 3.9147 | LR: 7.18e-05 | GradNorm: 0.732
  Batch   28/48 | Loss: 3.9169 | LR: 8.29e-05 | GradNorm: 0.627
  Batch   32/48 | Loss: 3.9112 | LR: 9.39e-05 | GradNorm: 0.554
  Batch   36/48 | Loss: 3.9090 | LR: 1.05e-04 | GradNorm: 0.550
  Batch   40/48 | Loss: 3.9016 | LR: 1.16e-04 | GradNorm: 0.575
  Batch   44/48 | Loss: 3.8875 | LR: 1.27e-04 | GradNorm: 0.620
Epoch 1/10: Train=2.31%, Val=4.25%, Gap=-1.94%, LR=1.35e-04
  Batch    0/48 | Loss: 3.8670 | LR: 1.38e-04 | GradNorm: 1.389
  Batch    4/48 | Loss: 3.8134 | LR: 1.49e-04 | GradNorm: 0.911
  Batch    8/48 | Loss: 3.9517 | LR: 1.60e-04 | GradNorm: 8.126
  Batch   12/48 | Loss: 3.8607 | LR: 1.71e-04 | GradNorm: 7.257
  Batch   16/48 | Loss: 3.7639 | LR: 1.82e-04 | GradNorm: 1.112
  Batch   20/48 | Loss: 3.7357 | LR: 1.93e-04 | GradNorm: 1.054
  Batch   24/48 | Loss: 3.7397 | LR: 2.05e-04 | GradNorm: 6.328
  Batch   28/48 | Loss: 3.6677 | LR: 2.16e-04 | GradNorm: 1.228
  Batch   32/48 | Loss: 3.7492 | LR: 2.27e-04 | GradNorm: 7.353
  Batch   36/48 | Loss: 3.6639 | LR: 2.38e-04 | GradNorm: 5.483
  Batch   40/48 | Loss: 3.6440 | LR: 2.49e-04 | GradNorm: 1.996
  Batch   44/48 | Loss: 3.6326 | LR: 2.60e-04 | GradNorm: 5.443
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.05%, Val=6.73%, Gap=-0.68%, LR=2.68e-04
  Batch    0/48 | Loss: 3.6082 | LR: 2.68e-04 | GradNorm: 6.086
  Batch    4/48 | Loss: 3.5542 | LR: 2.68e-04 | GradNorm: 1.455
  Batch    8/48 | Loss: 3.4951 | LR: 2.68e-04 | GradNorm: 1.915
  Batch   12/48 | Loss: 3.4881 | LR: 2.67e-04 | GradNorm: 1.612
  Batch   16/48 | Loss: 3.4677 | LR: 2.67e-04 | GradNorm: 3.724
  Batch   20/48 | Loss: 3.5548 | LR: 2.66e-04 | GradNorm: 7.729
  Batch   24/48 | Loss: 3.4623 | LR: 2.65e-04 | GradNorm: 6.602
  Batch   28/48 | Loss: 3.3553 | LR: 2.64e-04 | GradNorm: 2.935
  Batch   32/48 | Loss: 3.4038 | LR: 2.63e-04 | GradNorm: 3.450
  Batch   36/48 | Loss: 3.3688 | LR: 2.62e-04 | GradNorm: 3.231
  Batch   40/48 | Loss: 3.3565 | LR: 2.61e-04 | GradNorm: 4.205
  Batch   44/48 | Loss: 3.4022 | LR: 2.59e-04 | GradNorm: 6.061
Epoch 3/10: Train=12.30%, Val=6.13%, Gap=6.17%, LR=2.58e-04
  Batch    0/48 | Loss: 3.5831 | LR: 2.58e-04 | GradNorm: 6.516
  Batch    4/48 | Loss: 3.4478 | LR: 2.56e-04 | GradNorm: 5.527
  Batch    8/48 | Loss: 3.3835 | LR: 2.54e-04 | GradNorm: 5.835
  Batch   12/48 | Loss: 3.3104 | LR: 2.52e-04 | GradNorm: 5.472
  Batch   16/48 | Loss: 3.4252 | LR: 2.50e-04 | GradNorm: 8.896
  Batch   20/48 | Loss: 3.3458 | LR: 2.47e-04 | GradNorm: 3.508
  Batch   24/48 | Loss: 3.3435 | LR: 2.45e-04 | GradNorm: 5.992
  Batch   28/48 | Loss: 3.2495 | LR: 2.42e-04 | GradNorm: 3.047
  Batch   32/48 | Loss: 3.3164 | LR: 2.40e-04 | GradNorm: 5.157
  Batch   36/48 | Loss: 3.2345 | LR: 2.37e-04 | GradNorm: 2.614
  Batch   40/48 | Loss: 3.2754 | LR: 2.34e-04 | GradNorm: 5.274
  Batch   44/48 | Loss: 3.2463 | LR: 2.31e-04 | GradNorm: 4.400
Epoch 4/10: Train=15.42%, Val=10.97%, Gap=4.45%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2026 | LR: 2.28e-04 | GradNorm: 3.388
  Batch    4/48 | Loss: 3.1651 | LR: 2.25e-04 | GradNorm: 2.553
  Batch    8/48 | Loss: 3.1431 | LR: 2.22e-04 | GradNorm: 3.311
  Batch   12/48 | Loss: 3.1522 | LR: 2.18e-04 | GradNorm: 3.865
  Batch   16/48 | Loss: 3.2309 | LR: 2.15e-04 | GradNorm: 4.969
  Batch   20/48 | Loss: 3.1559 | LR: 2.11e-04 | GradNorm: 3.734
  Batch   24/48 | Loss: 3.1854 | LR: 2.08e-04 | GradNorm: 4.676
  Batch   28/48 | Loss: 3.1184 | LR: 2.04e-04 | GradNorm: 2.634
  Batch   32/48 | Loss: 3.1291 | LR: 2.00e-04 | GradNorm: 6.657
  Batch   36/48 | Loss: 3.1421 | LR: 1.96e-04 | GradNorm: 1.270
  Batch   40/48 | Loss: 3.1474 | LR: 1.92e-04 | GradNorm: 3.457
  Batch   44/48 | Loss: 3.0973 | LR: 1.88e-04 | GradNorm: 4.254
Epoch 5/10: Train=19.91%, Val=11.94%, Gap=7.97%, LR=1.85e-04
  Batch    0/48 | Loss: 3.1227 | LR: 1.84e-04 | GradNorm: 9.119
  Batch    4/48 | Loss: 3.0621 | LR: 1.80e-04 | GradNorm: 4.332
  Batch    8/48 | Loss: 3.0459 | LR: 1.76e-04 | GradNorm: 4.184
  Batch   12/48 | Loss: 3.0186 | LR: 1.72e-04 | GradNorm: 1.815
  Batch   16/48 | Loss: 2.9942 | LR: 1.68e-04 | GradNorm: 2.679
  Batch   20/48 | Loss: 3.0128 | LR: 1.63e-04 | GradNorm: 4.317
  Batch   24/48 | Loss: 3.0649 | LR: 1.59e-04 | GradNorm: 8.375
  Batch   28/48 | Loss: 2.9453 | LR: 1.55e-04 | GradNorm: 3.352
  Batch   32/48 | Loss: 2.9740 | LR: 1.51e-04 | GradNorm: 6.463
  Batch   36/48 | Loss: 2.9892 | LR: 1.46e-04 | GradNorm: 2.629
  Batch   40/48 | Loss: 2.9986 | LR: 1.42e-04 | GradNorm: 6.323
  Batch   44/48 | Loss: 3.0195 | LR: 1.37e-04 | GradNorm: 3.884
Epoch 6/10: Train=24.00%, Val=17.61%, Gap=6.39%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9805 | LR: 1.33e-04 | GradNorm: 7.965
  Batch    4/48 | Loss: 2.9429 | LR: 1.29e-04 | GradNorm: 2.980
  Batch    8/48 | Loss: 2.9247 | LR: 1.24e-04 | GradNorm: 2.838
  Batch   12/48 | Loss: 2.8400 | LR: 1.20e-04 | GradNorm: 3.589
  Batch   16/48 | Loss: 2.8968 | LR: 1.16e-04 | GradNorm: 5.236
  Batch   20/48 | Loss: 2.8991 | LR: 1.11e-04 | GradNorm: 1.437
  Batch   24/48 | Loss: 2.9255 | LR: 1.07e-04 | GradNorm: 3.672
  Batch   28/48 | Loss: 2.9192 | LR: 1.03e-04 | GradNorm: 2.933
  Batch   32/48 | Loss: 2.9104 | LR: 9.84e-05 | GradNorm: 5.384
  Batch   36/48 | Loss: 2.9078 | LR: 9.42e-05 | GradNorm: 3.823
  Batch   40/48 | Loss: 2.8987 | LR: 9.00e-05 | GradNorm: 4.585
  Batch   44/48 | Loss: 2.8730 | LR: 8.59e-05 | GradNorm: 3.208
Epoch 7/10: Train=27.53%, Val=21.98%, Gap=5.55%, LR=8.28e-05
  Batch    0/48 | Loss: 2.8827 | LR: 8.18e-05 | GradNorm: 5.378
  Batch    4/48 | Loss: 2.7988 | LR: 7.78e-05 | GradNorm: 2.745
  Batch    8/48 | Loss: 2.8164 | LR: 7.39e-05 | GradNorm: 3.169
  Batch   12/48 | Loss: 2.8559 | LR: 7.00e-05 | GradNorm: 4.532
  Batch   16/48 | Loss: 2.8524 | LR: 6.62e-05 | GradNorm: 1.793
  Batch   20/48 | Loss: 2.7751 | LR: 6.24e-05 | GradNorm: 3.949
  Batch   24/48 | Loss: 2.7669 | LR: 5.88e-05 | GradNorm: 4.870
  Batch   28/48 | Loss: 2.7979 | LR: 5.52e-05 | GradNorm: 2.341
  Batch   32/48 | Loss: 2.7918 | LR: 5.17e-05 | GradNorm: 3.201
  Batch   36/48 | Loss: 2.7752 | LR: 4.83e-05 | GradNorm: 1.783
  Batch   40/48 | Loss: 2.7210 | LR: 4.49e-05 | GradNorm: 2.819
  Batch   44/48 | Loss: 2.7615 | LR: 4.17e-05 | GradNorm: 4.017
Epoch 8/10: Train=31.27%, Val=20.22%, Gap=11.05%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7300 | LR: 3.86e-05 | GradNorm: 1.612
  Batch    4/48 | Loss: 2.7252 | LR: 3.56e-05 | GradNorm: 2.123
  Batch    8/48 | Loss: 2.7941 | LR: 3.26e-05 | GradNorm: 2.232
  Batch   12/48 | Loss: 2.7276 | LR: 2.98e-05 | GradNorm: 2.311
  Batch   16/48 | Loss: 2.6778 | LR: 2.71e-05 | GradNorm: 1.872
  Batch   20/48 | Loss: 2.6741 | LR: 2.45e-05 | GradNorm: 2.433
  Batch   24/48 | Loss: 2.7103 | LR: 2.21e-05 | GradNorm: 3.308
  Batch   28/48 | Loss: 2.7375 | LR: 1.97e-05 | GradNorm: 2.272
  Batch   32/48 | Loss: 2.7016 | LR: 1.75e-05 | GradNorm: 2.673
  Batch   36/48 | Loss: 2.6925 | LR: 1.54e-05 | GradNorm: 2.108
  Batch   40/48 | Loss: 2.6791 | LR: 1.34e-05 | GradNorm: 2.766
  Batch   44/48 | Loss: 2.6969 | LR: 1.16e-05 | GradNorm: 2.131
Epoch 9/10: Train=34.07%, Val=21.52%, Gap=12.55%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7021 | LR: 9.89e-06 | GradNorm: 2.570
  Batch    4/48 | Loss: 2.7073 | LR: 8.31e-06 | GradNorm: 1.929
  Batch    8/48 | Loss: 2.6725 | LR: 6.86e-06 | GradNorm: 1.889
  Batch   12/48 | Loss: 2.6555 | LR: 5.56e-06 | GradNorm: 1.999
  Batch   16/48 | Loss: 2.6640 | LR: 4.39e-06 | GradNorm: 1.511
  Batch   20/48 | Loss: 2.6832 | LR: 3.36e-06 | GradNorm: 3.042
  Batch   24/48 | Loss: 2.6839 | LR: 2.47e-06 | GradNorm: 2.829
  Batch   28/48 | Loss: 2.7220 | LR: 1.72e-06 | GradNorm: 2.097
  Batch   32/48 | Loss: 2.7255 | LR: 1.11e-06 | GradNorm: 2.383
  Batch   36/48 | Loss: 2.6721 | LR: 6.42e-07 | GradNorm: 1.426
  Batch   40/48 | Loss: 2.6608 | LR: 3.20e-07 | GradNorm: 2.245
  Batch   44/48 | Loss: 2.6696 | LR: 1.40e-07 | GradNorm: 2.628
Epoch 10/10: Train=35.23%, Val=22.37%, Gap=12.86%, LR=1.00e-07
Best validation accuracy: 22.37%
