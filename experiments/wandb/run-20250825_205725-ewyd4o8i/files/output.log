=== W&B Sweep Run: LR=0.000393 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00039339437030238254
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000393
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9293 | LR: 7.99e-06 | GradNorm: 1.490
  Batch    4/48 | Loss: 3.9219 | LR: 2.42e-05 | GradNorm: 1.166
  Batch    8/48 | Loss: 3.9238 | LR: 4.04e-05 | GradNorm: 0.894
  Batch   12/48 | Loss: 3.9067 | LR: 5.67e-05 | GradNorm: 0.631
  Batch   16/48 | Loss: 3.9155 | LR: 7.29e-05 | GradNorm: 0.672
  Batch   20/48 | Loss: 3.9140 | LR: 8.91e-05 | GradNorm: 0.669
  Batch   24/48 | Loss: 3.9066 | LR: 1.05e-04 | GradNorm: 0.639
  Batch   28/48 | Loss: 3.9087 | LR: 1.22e-04 | GradNorm: 0.623
  Batch   32/48 | Loss: 3.8939 | LR: 1.38e-04 | GradNorm: 0.641
  Batch   36/48 | Loss: 3.8534 | LR: 1.54e-04 | GradNorm: 1.316
  Batch   40/48 | Loss: 3.8398 | LR: 1.70e-04 | GradNorm: 5.281
  Batch   44/48 | Loss: 3.8464 | LR: 1.86e-04 | GradNorm: 9.546
Epoch 1/10: Train=2.97%, Val=5.35%, Gap=-2.38%, LR=1.99e-04
  Batch    0/48 | Loss: 3.7643 | LR: 2.03e-04 | GradNorm: 3.449
  Batch    4/48 | Loss: 3.7591 | LR: 2.19e-04 | GradNorm: 1.814
  Batch    8/48 | Loss: 3.7383 | LR: 2.35e-04 | GradNorm: 2.540
  Batch   12/48 | Loss: 3.7733 | LR: 2.51e-04 | GradNorm: 10.219
  Batch   16/48 | Loss: 3.7505 | LR: 2.68e-04 | GradNorm: 4.218
  Batch   20/48 | Loss: 3.6910 | LR: 2.84e-04 | GradNorm: 1.156
  Batch   24/48 | Loss: 3.6691 | LR: 3.00e-04 | GradNorm: 6.529
  Batch   28/48 | Loss: 3.7305 | LR: 3.16e-04 | GradNorm: 3.527
  Batch   32/48 | Loss: 3.8045 | LR: 3.33e-04 | GradNorm: 2.554
  Batch   36/48 | Loss: 3.6648 | LR: 3.49e-04 | GradNorm: 0.922
  Batch   40/48 | Loss: 3.7324 | LR: 3.65e-04 | GradNorm: 4.995
  Batch   44/48 | Loss: 3.6375 | LR: 3.81e-04 | GradNorm: 5.830
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.93%, Val=6.57%, Gap=-0.64%, LR=3.93e-04
  Batch    0/48 | Loss: 3.8590 | LR: 3.93e-04 | GradNorm: 7.524
  Batch    4/48 | Loss: 3.6417 | LR: 3.93e-04 | GradNorm: 2.901
  Batch    8/48 | Loss: 3.7155 | LR: 3.93e-04 | GradNorm: 5.518
  Batch   12/48 | Loss: 3.8000 | LR: 3.92e-04 | GradNorm: 5.264
  Batch   16/48 | Loss: 3.6272 | LR: 3.91e-04 | GradNorm: 0.872
  Batch   20/48 | Loss: 3.5905 | LR: 3.90e-04 | GradNorm: 2.780
  Batch   24/48 | Loss: 3.5639 | LR: 3.89e-04 | GradNorm: 5.025
  Batch   28/48 | Loss: 3.5159 | LR: 3.88e-04 | GradNorm: 4.085
  Batch   32/48 | Loss: 3.5195 | LR: 3.86e-04 | GradNorm: 3.933
  Batch   36/48 | Loss: 3.5325 | LR: 3.84e-04 | GradNorm: 5.223
  Batch   40/48 | Loss: 3.5048 | LR: 3.82e-04 | GradNorm: 7.540
  Batch   44/48 | Loss: 3.3887 | LR: 3.80e-04 | GradNorm: 2.467
Epoch 3/10: Train=9.64%, Val=12.44%, Gap=-2.80%, LR=3.78e-04
  Batch    0/48 | Loss: 3.3900 | LR: 3.78e-04 | GradNorm: 5.385
  Batch    4/48 | Loss: 3.3568 | LR: 3.75e-04 | GradNorm: 2.569
  Batch    8/48 | Loss: 3.3143 | LR: 3.72e-04 | GradNorm: 2.696
  Batch   12/48 | Loss: 3.2941 | LR: 3.69e-04 | GradNorm: 2.440
  Batch   16/48 | Loss: 3.3135 | LR: 3.66e-04 | GradNorm: 6.052
  Batch   20/48 | Loss: 3.2670 | LR: 3.63e-04 | GradNorm: 3.400
  Batch   24/48 | Loss: 3.2822 | LR: 3.59e-04 | GradNorm: 4.474
  Batch   28/48 | Loss: 3.2749 | LR: 3.56e-04 | GradNorm: 2.981
  Batch   32/48 | Loss: 3.3192 | LR: 3.52e-04 | GradNorm: 6.652
  Batch   36/48 | Loss: 3.2339 | LR: 3.48e-04 | GradNorm: 2.041
  Batch   40/48 | Loss: 3.2561 | LR: 3.44e-04 | GradNorm: 2.486
  Batch   44/48 | Loss: 3.1957 | LR: 3.39e-04 | GradNorm: 1.310
Epoch 4/10: Train=16.11%, Val=10.74%, Gap=5.37%, LR=3.36e-04
  Batch    0/48 | Loss: 3.2115 | LR: 3.35e-04 | GradNorm: 3.363
  Batch    4/48 | Loss: 3.1989 | LR: 3.30e-04 | GradNorm: 3.653
  Batch    8/48 | Loss: 3.2006 | LR: 3.25e-04 | GradNorm: 5.180
  Batch   12/48 | Loss: 3.1901 | LR: 3.20e-04 | GradNorm: 5.051
  Batch   16/48 | Loss: 3.1941 | LR: 3.15e-04 | GradNorm: 3.068
  Batch   20/48 | Loss: 3.1319 | LR: 3.10e-04 | GradNorm: 2.423
  Batch   24/48 | Loss: 3.1844 | LR: 3.05e-04 | GradNorm: 6.439
  Batch   28/48 | Loss: 3.1457 | LR: 2.99e-04 | GradNorm: 4.495
  Batch   32/48 | Loss: 3.1283 | LR: 2.94e-04 | GradNorm: 3.652
  Batch   36/48 | Loss: 3.1467 | LR: 2.88e-04 | GradNorm: 2.812
  Batch   40/48 | Loss: 3.1365 | LR: 2.82e-04 | GradNorm: 3.731
  Batch   44/48 | Loss: 3.1075 | LR: 2.76e-04 | GradNorm: 2.966
Epoch 5/10: Train=19.88%, Val=13.56%, Gap=6.32%, LR=2.72e-04
  Batch    0/48 | Loss: 3.0733 | LR: 2.71e-04 | GradNorm: 4.839
  Batch    4/48 | Loss: 3.0216 | LR: 2.65e-04 | GradNorm: 4.640
  Batch    8/48 | Loss: 3.0556 | LR: 2.58e-04 | GradNorm: 6.141
  Batch   12/48 | Loss: 3.0140 | LR: 2.52e-04 | GradNorm: 2.571
  Batch   16/48 | Loss: 2.9838 | LR: 2.46e-04 | GradNorm: 2.768
  Batch   20/48 | Loss: 3.0176 | LR: 2.40e-04 | GradNorm: 5.017
  Batch   24/48 | Loss: 3.0250 | LR: 2.34e-04 | GradNorm: 5.267
  Batch   28/48 | Loss: 2.9456 | LR: 2.27e-04 | GradNorm: 3.115
  Batch   32/48 | Loss: 2.9529 | LR: 2.21e-04 | GradNorm: 5.072
  Batch   36/48 | Loss: 3.0360 | LR: 2.14e-04 | GradNorm: 5.956
  Batch   40/48 | Loss: 2.9864 | LR: 2.08e-04 | GradNorm: 5.457
  Batch   44/48 | Loss: 3.0430 | LR: 2.02e-04 | GradNorm: 4.489
Epoch 6/10: Train=23.82%, Val=14.58%, Gap=9.24%, LR=1.97e-04
  Batch    0/48 | Loss: 2.9716 | LR: 1.95e-04 | GradNorm: 5.251
  Batch    4/48 | Loss: 2.9585 | LR: 1.89e-04 | GradNorm: 7.500
  Batch    8/48 | Loss: 2.9168 | LR: 1.82e-04 | GradNorm: 2.718
  Batch   12/48 | Loss: 2.8778 | LR: 1.76e-04 | GradNorm: 4.629
  Batch   16/48 | Loss: 2.8792 | LR: 1.69e-04 | GradNorm: 3.993
  Batch   20/48 | Loss: 2.9207 | LR: 1.63e-04 | GradNorm: 6.415
  Batch   24/48 | Loss: 2.9112 | LR: 1.57e-04 | GradNorm: 4.023
  Batch   28/48 | Loss: 2.8864 | LR: 1.51e-04 | GradNorm: 4.587
  Batch   32/48 | Loss: 2.8934 | LR: 1.44e-04 | GradNorm: 4.109
  Batch   36/48 | Loss: 2.9086 | LR: 1.38e-04 | GradNorm: 6.413
  Batch   40/48 | Loss: 2.8556 | LR: 1.32e-04 | GradNorm: 3.540
  Batch   44/48 | Loss: 2.8229 | LR: 1.26e-04 | GradNorm: 2.146
Epoch 7/10: Train=28.47%, Val=16.66%, Gap=11.81%, LR=1.21e-04
  Batch    0/48 | Loss: 2.8445 | LR: 1.20e-04 | GradNorm: 2.595
  Batch    4/48 | Loss: 2.8241 | LR: 1.14e-04 | GradNorm: 5.867
  Batch    8/48 | Loss: 2.7977 | LR: 1.08e-04 | GradNorm: 4.274
  Batch   12/48 | Loss: 2.8309 | LR: 1.03e-04 | GradNorm: 2.618
  Batch   16/48 | Loss: 2.8598 | LR: 9.70e-05 | GradNorm: 5.259
  Batch   20/48 | Loss: 2.7379 | LR: 9.15e-05 | GradNorm: 3.907
  Batch   24/48 | Loss: 2.7704 | LR: 8.62e-05 | GradNorm: 6.456
  Batch   28/48 | Loss: 2.8277 | LR: 8.09e-05 | GradNorm: 8.599
  Batch   32/48 | Loss: 2.8164 | LR: 7.58e-05 | GradNorm: 5.591
  Batch   36/48 | Loss: 2.7675 | LR: 7.08e-05 | GradNorm: 3.907
  Batch   40/48 | Loss: 2.7038 | LR: 6.59e-05 | GradNorm: 5.019
  Batch   44/48 | Loss: 2.7608 | LR: 6.12e-05 | GradNorm: 3.338
Epoch 8/10: Train=31.24%, Val=18.54%, Gap=12.70%, LR=5.77e-05
  Batch    0/48 | Loss: 2.7340 | LR: 5.66e-05 | GradNorm: 3.497
  Batch    4/48 | Loss: 2.7161 | LR: 5.21e-05 | GradNorm: 3.425
  Batch    8/48 | Loss: 2.7887 | LR: 4.78e-05 | GradNorm: 4.242
  Batch   12/48 | Loss: 2.7121 | LR: 4.37e-05 | GradNorm: 3.559
  Batch   16/48 | Loss: 2.6582 | LR: 3.98e-05 | GradNorm: 3.289
  Batch   20/48 | Loss: 2.6731 | LR: 3.60e-05 | GradNorm: 2.740
  Batch   24/48 | Loss: 2.7090 | LR: 3.24e-05 | GradNorm: 2.674
  Batch   28/48 | Loss: 2.7147 | LR: 2.89e-05 | GradNorm: 1.898
  Batch   32/48 | Loss: 2.7041 | LR: 2.56e-05 | GradNorm: 2.489
  Batch   36/48 | Loss: 2.7107 | LR: 2.26e-05 | GradNorm: 2.521
  Batch   40/48 | Loss: 2.6736 | LR: 1.97e-05 | GradNorm: 2.175
  Batch   44/48 | Loss: 2.7036 | LR: 1.70e-05 | GradNorm: 2.182
Epoch 9/10: Train=33.65%, Val=18.45%, Gap=15.20%, LR=1.51e-05
  Batch    0/48 | Loss: 2.6996 | LR: 1.45e-05 | GradNorm: 3.473
  Batch    4/48 | Loss: 2.7115 | LR: 1.21e-05 | GradNorm: 2.196
  Batch    8/48 | Loss: 2.6836 | LR: 1.00e-05 | GradNorm: 2.369
  Batch   12/48 | Loss: 2.6528 | LR: 8.11e-06 | GradNorm: 1.865
  Batch   16/48 | Loss: 2.6828 | LR: 6.39e-06 | GradNorm: 1.730
  Batch   20/48 | Loss: 2.6903 | LR: 4.88e-06 | GradNorm: 3.220
  Batch   24/48 | Loss: 2.6807 | LR: 3.57e-06 | GradNorm: 2.363
  Batch   28/48 | Loss: 2.6932 | LR: 2.47e-06 | GradNorm: 2.163
  Batch   32/48 | Loss: 2.7186 | LR: 1.58e-06 | GradNorm: 2.859
  Batch   36/48 | Loss: 2.6723 | LR: 8.96e-07 | GradNorm: 1.686
  Batch   40/48 | Loss: 2.6485 | LR: 4.22e-07 | GradNorm: 2.228
  Batch   44/48 | Loss: 2.6770 | LR: 1.59e-07 | GradNorm: 1.654
Epoch 10/10: Train=34.63%, Val=18.80%, Gap=15.83%, LR=1.00e-07
Best validation accuracy: 18.80%
