=== W&B Sweep Run: LR=0.000290 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002904996769732265
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000290
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9482 | LR: 5.90e-06 | GradNorm: 1.620
  Batch    4/48 | Loss: 3.9186 | LR: 1.79e-05 | GradNorm: 0.932
  Batch    8/48 | Loss: 3.9245 | LR: 2.99e-05 | GradNorm: 0.993
  Batch   12/48 | Loss: 3.9113 | LR: 4.19e-05 | GradNorm: 0.711
  Batch   16/48 | Loss: 3.9220 | LR: 5.38e-05 | GradNorm: 0.733
  Batch   20/48 | Loss: 3.9172 | LR: 6.58e-05 | GradNorm: 0.712
  Batch   24/48 | Loss: 3.9141 | LR: 7.78e-05 | GradNorm: 0.690
  Batch   28/48 | Loss: 3.9146 | LR: 8.98e-05 | GradNorm: 0.599
  Batch   32/48 | Loss: 3.9108 | LR: 1.02e-04 | GradNorm: 0.566
  Batch   36/48 | Loss: 3.9063 | LR: 1.14e-04 | GradNorm: 0.571
  Batch   40/48 | Loss: 3.8971 | LR: 1.26e-04 | GradNorm: 0.553
  Batch   44/48 | Loss: 3.8921 | LR: 1.38e-04 | GradNorm: 0.788
Epoch 1/10: Train=2.52%, Val=5.30%, Gap=-2.78%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8441 | LR: 1.50e-04 | GradNorm: 1.411
  Batch    4/48 | Loss: 3.8068 | LR: 1.62e-04 | GradNorm: 2.562
  Batch    8/48 | Loss: 3.8101 | LR: 1.74e-04 | GradNorm: 4.752
  Batch   12/48 | Loss: 3.7241 | LR: 1.86e-04 | GradNorm: 3.974
  Batch   16/48 | Loss: 3.7422 | LR: 1.98e-04 | GradNorm: 3.648
  Batch   20/48 | Loss: 3.7161 | LR: 2.10e-04 | GradNorm: 3.715
  Batch   24/48 | Loss: 3.6745 | LR: 2.22e-04 | GradNorm: 5.187
  Batch   28/48 | Loss: 3.6467 | LR: 2.34e-04 | GradNorm: 4.856
  Batch   32/48 | Loss: 3.6839 | LR: 2.46e-04 | GradNorm: 4.735
  Batch   36/48 | Loss: 3.6246 | LR: 2.58e-04 | GradNorm: 2.962
  Batch   40/48 | Loss: 3.6244 | LR: 2.70e-04 | GradNorm: 3.752
  Batch   44/48 | Loss: 3.5796 | LR: 2.82e-04 | GradNorm: 6.624
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.63%, Val=9.66%, Gap=-2.03%, LR=2.90e-04
  Batch    0/48 | Loss: 3.5473 | LR: 2.90e-04 | GradNorm: 5.042
  Batch    4/48 | Loss: 3.4833 | LR: 2.90e-04 | GradNorm: 5.873
  Batch    8/48 | Loss: 3.4489 | LR: 2.90e-04 | GradNorm: 5.787
  Batch   12/48 | Loss: 3.4706 | LR: 2.90e-04 | GradNorm: 4.394
  Batch   16/48 | Loss: 3.3976 | LR: 2.89e-04 | GradNorm: 2.056
  Batch   20/48 | Loss: 3.4107 | LR: 2.88e-04 | GradNorm: 4.496
  Batch   24/48 | Loss: 3.4122 | LR: 2.87e-04 | GradNorm: 15.401
  Batch   28/48 | Loss: 3.4063 | LR: 2.86e-04 | GradNorm: 5.387
  Batch   32/48 | Loss: 3.4464 | LR: 2.85e-04 | GradNorm: 6.430
  Batch   36/48 | Loss: 3.3734 | LR: 2.84e-04 | GradNorm: 2.866
  Batch   40/48 | Loss: 3.3236 | LR: 2.82e-04 | GradNorm: 5.089
  Batch   44/48 | Loss: 3.3477 | LR: 2.81e-04 | GradNorm: 4.911
Epoch 3/10: Train=13.49%, Val=12.11%, Gap=1.38%, LR=2.79e-04
  Batch    0/48 | Loss: 3.2701 | LR: 2.79e-04 | GradNorm: 1.362
  Batch    4/48 | Loss: 3.3602 | LR: 2.77e-04 | GradNorm: 5.828
  Batch    8/48 | Loss: 3.3288 | LR: 2.75e-04 | GradNorm: 5.080
  Batch   12/48 | Loss: 3.2495 | LR: 2.73e-04 | GradNorm: 3.977
  Batch   16/48 | Loss: 3.2422 | LR: 2.70e-04 | GradNorm: 2.845
  Batch   20/48 | Loss: 3.2810 | LR: 2.68e-04 | GradNorm: 3.009
  Batch   24/48 | Loss: 3.2359 | LR: 2.65e-04 | GradNorm: 1.620
  Batch   28/48 | Loss: 3.2308 | LR: 2.63e-04 | GradNorm: 3.114
  Batch   32/48 | Loss: 3.2404 | LR: 2.60e-04 | GradNorm: 2.999
  Batch   36/48 | Loss: 3.2002 | LR: 2.57e-04 | GradNorm: 1.986
  Batch   40/48 | Loss: 3.2382 | LR: 2.54e-04 | GradNorm: 3.733
  Batch   44/48 | Loss: 3.1858 | LR: 2.50e-04 | GradNorm: 2.397
Epoch 4/10: Train=16.46%, Val=11.42%, Gap=5.04%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1337 | LR: 2.47e-04 | GradNorm: 2.687
  Batch    4/48 | Loss: 3.0885 | LR: 2.44e-04 | GradNorm: 2.100
  Batch    8/48 | Loss: 3.1239 | LR: 2.40e-04 | GradNorm: 4.618
  Batch   12/48 | Loss: 3.1172 | LR: 2.36e-04 | GradNorm: 3.967
  Batch   16/48 | Loss: 3.1910 | LR: 2.33e-04 | GradNorm: 4.197
  Batch   20/48 | Loss: 3.1246 | LR: 2.29e-04 | GradNorm: 3.724
  Batch   24/48 | Loss: 3.0971 | LR: 2.25e-04 | GradNorm: 3.358
  Batch   28/48 | Loss: 3.0671 | LR: 2.21e-04 | GradNorm: 3.770
  Batch   32/48 | Loss: 3.0683 | LR: 2.17e-04 | GradNorm: 5.069
  Batch   36/48 | Loss: 3.0766 | LR: 2.13e-04 | GradNorm: 2.110
  Batch   40/48 | Loss: 3.0712 | LR: 2.08e-04 | GradNorm: 4.328
  Batch   44/48 | Loss: 2.9974 | LR: 2.04e-04 | GradNorm: 1.808
Epoch 5/10: Train=22.16%, Val=14.52%, Gap=7.64%, LR=2.01e-04
  Batch    0/48 | Loss: 2.9651 | LR: 2.00e-04 | GradNorm: 4.671
  Batch    4/48 | Loss: 2.9684 | LR: 1.95e-04 | GradNorm: 8.658
  Batch    8/48 | Loss: 2.9251 | LR: 1.91e-04 | GradNorm: 2.594
  Batch   12/48 | Loss: 2.9345 | LR: 1.86e-04 | GradNorm: 3.783
  Batch   16/48 | Loss: 2.9515 | LR: 1.82e-04 | GradNorm: 8.014
  Batch   20/48 | Loss: 2.8753 | LR: 1.77e-04 | GradNorm: 2.364
  Batch   24/48 | Loss: 2.8968 | LR: 1.72e-04 | GradNorm: 4.663
  Batch   28/48 | Loss: 2.8542 | LR: 1.68e-04 | GradNorm: 5.609
  Batch   32/48 | Loss: 2.8960 | LR: 1.63e-04 | GradNorm: 9.466
  Batch   36/48 | Loss: 2.9794 | LR: 1.58e-04 | GradNorm: 8.404
  Batch   40/48 | Loss: 2.8709 | LR: 1.54e-04 | GradNorm: 3.750
  Batch   44/48 | Loss: 2.9208 | LR: 1.49e-04 | GradNorm: 3.965
Epoch 6/10: Train=26.99%, Val=18.34%, Gap=8.65%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8372 | LR: 1.44e-04 | GradNorm: 2.501
  Batch    4/48 | Loss: 2.8472 | LR: 1.39e-04 | GradNorm: 3.832
  Batch    8/48 | Loss: 2.8068 | LR: 1.35e-04 | GradNorm: 2.091
  Batch   12/48 | Loss: 2.7205 | LR: 1.30e-04 | GradNorm: 2.418
  Batch   16/48 | Loss: 2.7735 | LR: 1.25e-04 | GradNorm: 3.376
  Batch   20/48 | Loss: 2.7968 | LR: 1.20e-04 | GradNorm: 3.588
  Batch   24/48 | Loss: 2.8249 | LR: 1.16e-04 | GradNorm: 4.017
  Batch   28/48 | Loss: 2.7863 | LR: 1.11e-04 | GradNorm: 2.802
  Batch   32/48 | Loss: 2.8238 | LR: 1.07e-04 | GradNorm: 6.139
  Batch   36/48 | Loss: 2.8669 | LR: 1.02e-04 | GradNorm: 9.155
  Batch   40/48 | Loss: 2.7649 | LR: 9.75e-05 | GradNorm: 3.765
  Batch   44/48 | Loss: 2.7604 | LR: 9.30e-05 | GradNorm: 4.894
Epoch 7/10: Train=31.34%, Val=18.54%, Gap=12.80%, LR=8.97e-05
  Batch    0/48 | Loss: 2.7340 | LR: 8.86e-05 | GradNorm: 3.318
  Batch    4/48 | Loss: 2.6900 | LR: 8.43e-05 | GradNorm: 3.158
  Batch    8/48 | Loss: 2.7280 | LR: 8.00e-05 | GradNorm: 5.967
  Batch   12/48 | Loss: 2.7573 | LR: 7.58e-05 | GradNorm: 5.257
  Batch   16/48 | Loss: 2.7426 | LR: 7.17e-05 | GradNorm: 4.437
  Batch   20/48 | Loss: 2.6423 | LR: 6.76e-05 | GradNorm: 2.751
  Batch   24/48 | Loss: 2.6436 | LR: 6.36e-05 | GradNorm: 4.930
  Batch   28/48 | Loss: 2.6889 | LR: 5.98e-05 | GradNorm: 5.850
  Batch   32/48 | Loss: 2.7000 | LR: 5.60e-05 | GradNorm: 6.375
  Batch   36/48 | Loss: 2.6691 | LR: 5.23e-05 | GradNorm: 4.608
  Batch   40/48 | Loss: 2.6015 | LR: 4.87e-05 | GradNorm: 2.507
  Batch   44/48 | Loss: 2.6575 | LR: 4.52e-05 | GradNorm: 2.276
Epoch 8/10: Train=34.45%, Val=20.55%, Gap=13.90%, LR=4.26e-05
  Batch    0/48 | Loss: 2.6285 | LR: 4.18e-05 | GradNorm: 7.442
  Batch    4/48 | Loss: 2.6117 | LR: 3.85e-05 | GradNorm: 2.449
  Batch    8/48 | Loss: 2.6761 | LR: 3.54e-05 | GradNorm: 3.053
  Batch   12/48 | Loss: 2.6041 | LR: 3.23e-05 | GradNorm: 3.730
  Batch   16/48 | Loss: 2.5691 | LR: 2.94e-05 | GradNorm: 2.567
  Batch   20/48 | Loss: 2.5853 | LR: 2.66e-05 | GradNorm: 5.334
  Batch   24/48 | Loss: 2.6148 | LR: 2.39e-05 | GradNorm: 2.999
  Batch   28/48 | Loss: 2.6205 | LR: 2.14e-05 | GradNorm: 2.918
  Batch   32/48 | Loss: 2.5988 | LR: 1.90e-05 | GradNorm: 6.418
  Batch   36/48 | Loss: 2.5896 | LR: 1.67e-05 | GradNorm: 4.706
  Batch   40/48 | Loss: 2.5897 | LR: 1.46e-05 | GradNorm: 6.154
  Batch   44/48 | Loss: 2.5951 | LR: 1.26e-05 | GradNorm: 4.852
Epoch 9/10: Train=37.23%, Val=21.33%, Gap=15.90%, LR=1.12e-05
  Batch    0/48 | Loss: 2.5628 | LR: 1.07e-05 | GradNorm: 3.139
  Batch    4/48 | Loss: 2.5961 | LR: 8.99e-06 | GradNorm: 3.347
  Batch    8/48 | Loss: 2.5575 | LR: 7.43e-06 | GradNorm: 1.605
  Batch   12/48 | Loss: 2.5587 | LR: 6.01e-06 | GradNorm: 2.256
  Batch   16/48 | Loss: 2.5692 | LR: 4.74e-06 | GradNorm: 1.605
  Batch   20/48 | Loss: 2.5847 | LR: 3.63e-06 | GradNorm: 2.451
  Batch   24/48 | Loss: 2.5753 | LR: 2.66e-06 | GradNorm: 2.985
  Batch   28/48 | Loss: 2.6159 | LR: 1.85e-06 | GradNorm: 1.616
  Batch   32/48 | Loss: 2.6073 | LR: 1.19e-06 | GradNorm: 2.851
  Batch   36/48 | Loss: 2.5708 | LR: 6.88e-07 | GradNorm: 2.023
  Batch   40/48 | Loss: 2.5552 | LR: 3.38e-07 | GradNorm: 2.787
  Batch   44/48 | Loss: 2.5636 | LR: 1.44e-07 | GradNorm: 2.558
Epoch 10/10: Train=38.37%, Val=21.93%, Gap=16.44%, LR=1.00e-07
Best validation accuracy: 21.93%
