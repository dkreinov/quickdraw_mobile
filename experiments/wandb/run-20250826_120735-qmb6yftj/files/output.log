=== W&B Sweep Run: LR=0.000108 ===
Using device: cuda
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.47s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00010821056700201848
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000108
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9558 | LR: 2.20e-06 | GradNorm: 1.583
  Batch    4/48 | Loss: 3.9460 | LR: 6.66e-06 | GradNorm: 1.472
  Batch    8/48 | Loss: 3.9215 | LR: 1.11e-05 | GradNorm: 0.889
  Batch   12/48 | Loss: 3.9125 | LR: 1.56e-05 | GradNorm: 0.815
  Batch   16/48 | Loss: 3.9218 | LR: 2.01e-05 | GradNorm: 0.850
  Batch   20/48 | Loss: 3.9153 | LR: 2.45e-05 | GradNorm: 0.812
  Batch   24/48 | Loss: 3.9135 | LR: 2.90e-05 | GradNorm: 0.809
  Batch   28/48 | Loss: 3.9169 | LR: 3.34e-05 | GradNorm: 0.684
  Batch   32/48 | Loss: 3.9086 | LR: 3.79e-05 | GradNorm: 0.617
  Batch   36/48 | Loss: 3.9141 | LR: 4.24e-05 | GradNorm: 0.627
  Batch   40/48 | Loss: 3.9109 | LR: 4.68e-05 | GradNorm: 0.667
  Batch   44/48 | Loss: 3.9045 | LR: 5.13e-05 | GradNorm: 0.644
Epoch 1/10: Train=2.23%, Val=2.45%, Gap=-0.22%, LR=5.46e-05
  Batch    0/48 | Loss: 3.9038 | LR: 5.58e-05 | GradNorm: 0.720
  Batch    4/48 | Loss: 3.8911 | LR: 6.02e-05 | GradNorm: 0.578
  Batch    8/48 | Loss: 3.8821 | LR: 6.47e-05 | GradNorm: 1.022
  Batch   12/48 | Loss: 3.8297 | LR: 6.92e-05 | GradNorm: 4.007
  Batch   16/48 | Loss: 3.8142 | LR: 7.36e-05 | GradNorm: 1.189
  Batch   20/48 | Loss: 3.8722 | LR: 7.81e-05 | GradNorm: 10.686
  Batch   24/48 | Loss: 3.8883 | LR: 8.25e-05 | GradNorm: 9.704
  Batch   28/48 | Loss: 3.7785 | LR: 8.70e-05 | GradNorm: 2.129
  Batch   32/48 | Loss: 3.7799 | LR: 9.15e-05 | GradNorm: 2.005
  Batch   36/48 | Loss: 3.7563 | LR: 9.59e-05 | GradNorm: 1.864
  Batch   40/48 | Loss: 3.8286 | LR: 1.00e-04 | GradNorm: 8.475
  Batch   44/48 | Loss: 3.8046 | LR: 1.05e-04 | GradNorm: 6.146
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.14%, Val=4.77%, Gap=-0.63%, LR=1.08e-04
  Batch    0/48 | Loss: 3.7202 | LR: 1.08e-04 | GradNorm: 2.278
  Batch    4/48 | Loss: 3.7457 | LR: 1.08e-04 | GradNorm: 3.833
  Batch    8/48 | Loss: 3.6816 | LR: 1.08e-04 | GradNorm: 3.612
  Batch   12/48 | Loss: 3.6569 | LR: 1.08e-04 | GradNorm: 2.746
  Batch   16/48 | Loss: 3.6641 | LR: 1.08e-04 | GradNorm: 3.516
  Batch   20/48 | Loss: 3.6170 | LR: 1.07e-04 | GradNorm: 2.146
  Batch   24/48 | Loss: 3.6032 | LR: 1.07e-04 | GradNorm: 1.192
  Batch   28/48 | Loss: 3.5770 | LR: 1.07e-04 | GradNorm: 8.160
  Batch   32/48 | Loss: 3.5633 | LR: 1.06e-04 | GradNorm: 4.913
  Batch   36/48 | Loss: 3.5657 | LR: 1.06e-04 | GradNorm: 6.303
  Batch   40/48 | Loss: 3.5060 | LR: 1.05e-04 | GradNorm: 2.613
  Batch   44/48 | Loss: 3.5213 | LR: 1.05e-04 | GradNorm: 5.119
Epoch 3/10: Train=9.42%, Val=10.19%, Gap=-0.77%, LR=1.04e-04
  Batch    0/48 | Loss: 3.4629 | LR: 1.04e-04 | GradNorm: 1.207
  Batch    4/48 | Loss: 3.4595 | LR: 1.03e-04 | GradNorm: 3.645
  Batch    8/48 | Loss: 3.4354 | LR: 1.02e-04 | GradNorm: 4.629
  Batch   12/48 | Loss: 3.4035 | LR: 1.02e-04 | GradNorm: 4.313
  Batch   16/48 | Loss: 3.4002 | LR: 1.01e-04 | GradNorm: 3.726
  Batch   20/48 | Loss: 3.4077 | LR: 9.98e-05 | GradNorm: 5.057
  Batch   24/48 | Loss: 3.3961 | LR: 9.89e-05 | GradNorm: 7.324
  Batch   28/48 | Loss: 3.3571 | LR: 9.78e-05 | GradNorm: 5.282
  Batch   32/48 | Loss: 3.3703 | LR: 9.68e-05 | GradNorm: 5.178
  Batch   36/48 | Loss: 3.3587 | LR: 9.57e-05 | GradNorm: 2.769
  Batch   40/48 | Loss: 3.3546 | LR: 9.45e-05 | GradNorm: 4.504
  Batch   44/48 | Loss: 3.3092 | LR: 9.33e-05 | GradNorm: 4.757
Epoch 4/10: Train=14.72%, Val=14.20%, Gap=0.52%, LR=9.24e-05
  Batch    0/48 | Loss: 3.3104 | LR: 9.21e-05 | GradNorm: 7.323
  Batch    4/48 | Loss: 3.3271 | LR: 9.08e-05 | GradNorm: 11.045
  Batch    8/48 | Loss: 3.2907 | LR: 8.95e-05 | GradNorm: 9.173
  Batch   12/48 | Loss: 3.2598 | LR: 8.81e-05 | GradNorm: 5.550
  Batch   16/48 | Loss: 3.3056 | LR: 8.67e-05 | GradNorm: 3.157
  Batch   20/48 | Loss: 3.2651 | LR: 8.53e-05 | GradNorm: 3.735
  Batch   24/48 | Loss: 3.2824 | LR: 8.38e-05 | GradNorm: 6.427
  Batch   28/48 | Loss: 3.2523 | LR: 8.23e-05 | GradNorm: 5.318
  Batch   32/48 | Loss: 3.2321 | LR: 8.08e-05 | GradNorm: 2.813
  Batch   36/48 | Loss: 3.2840 | LR: 7.92e-05 | GradNorm: 5.132
  Batch   40/48 | Loss: 3.2515 | LR: 7.77e-05 | GradNorm: 4.875
  Batch   44/48 | Loss: 3.2486 | LR: 7.61e-05 | GradNorm: 5.804
Epoch 5/10: Train=17.75%, Val=12.90%, Gap=4.85%, LR=7.48e-05
  Batch    0/48 | Loss: 3.2235 | LR: 7.44e-05 | GradNorm: 9.864
  Batch    4/48 | Loss: 3.1870 | LR: 7.28e-05 | GradNorm: 7.981
  Batch    8/48 | Loss: 3.2070 | LR: 7.11e-05 | GradNorm: 7.748
  Batch   12/48 | Loss: 3.1884 | LR: 6.94e-05 | GradNorm: 2.261
  Batch   16/48 | Loss: 3.1632 | LR: 6.77e-05 | GradNorm: 3.036
  Batch   20/48 | Loss: 3.1660 | LR: 6.60e-05 | GradNorm: 3.777
  Batch   24/48 | Loss: 3.2015 | LR: 6.43e-05 | GradNorm: 10.123
  Batch   28/48 | Loss: 3.1569 | LR: 6.25e-05 | GradNorm: 7.591
  Batch   32/48 | Loss: 3.1449 | LR: 6.08e-05 | GradNorm: 5.502
  Batch   36/48 | Loss: 3.1709 | LR: 5.90e-05 | GradNorm: 4.556
  Batch   40/48 | Loss: 3.1730 | LR: 5.72e-05 | GradNorm: 8.570
  Batch   44/48 | Loss: 3.2163 | LR: 5.55e-05 | GradNorm: 6.032
Epoch 6/10: Train=20.09%, Val=13.22%, Gap=6.87%, LR=5.42e-05
  Batch    0/48 | Loss: 3.1336 | LR: 5.37e-05 | GradNorm: 2.834
  Batch    4/48 | Loss: 3.1288 | LR: 5.19e-05 | GradNorm: 4.454
  Batch    8/48 | Loss: 3.1149 | LR: 5.02e-05 | GradNorm: 6.250
  Batch   12/48 | Loss: 3.0799 | LR: 4.84e-05 | GradNorm: 5.508
  Batch   16/48 | Loss: 3.0735 | LR: 4.67e-05 | GradNorm: 4.261
  Batch   20/48 | Loss: 3.1241 | LR: 4.49e-05 | GradNorm: 4.432
  Batch   24/48 | Loss: 3.1078 | LR: 4.32e-05 | GradNorm: 6.072
  Batch   28/48 | Loss: 3.1078 | LR: 4.15e-05 | GradNorm: 4.688
  Batch   32/48 | Loss: 3.1400 | LR: 3.97e-05 | GradNorm: 8.211
  Batch   36/48 | Loss: 3.1128 | LR: 3.80e-05 | GradNorm: 9.041
  Batch   40/48 | Loss: 3.1010 | LR: 3.64e-05 | GradNorm: 7.170
  Batch   44/48 | Loss: 3.1106 | LR: 3.47e-05 | GradNorm: 11.419
Epoch 7/10: Train=23.08%, Val=15.96%, Gap=7.12%, LR=3.35e-05
  Batch    0/48 | Loss: 3.0812 | LR: 3.31e-05 | GradNorm: 8.776
  Batch    4/48 | Loss: 3.0558 | LR: 3.14e-05 | GradNorm: 6.511
  Batch    8/48 | Loss: 3.0695 | LR: 2.99e-05 | GradNorm: 5.274
  Batch   12/48 | Loss: 3.0937 | LR: 2.83e-05 | GradNorm: 5.633
  Batch   16/48 | Loss: 3.0741 | LR: 2.67e-05 | GradNorm: 5.547
  Batch   20/48 | Loss: 3.0340 | LR: 2.52e-05 | GradNorm: 7.795
  Batch   24/48 | Loss: 3.0309 | LR: 2.38e-05 | GradNorm: 7.143
  Batch   28/48 | Loss: 3.0605 | LR: 2.23e-05 | GradNorm: 5.899
  Batch   32/48 | Loss: 3.0431 | LR: 2.09e-05 | GradNorm: 6.555
  Batch   36/48 | Loss: 3.0397 | LR: 1.95e-05 | GradNorm: 3.575
  Batch   40/48 | Loss: 2.9784 | LR: 1.82e-05 | GradNorm: 4.039
  Batch   44/48 | Loss: 3.0373 | LR: 1.69e-05 | GradNorm: 2.590
Epoch 8/10: Train=25.19%, Val=15.33%, Gap=9.86%, LR=1.59e-05
  Batch    0/48 | Loss: 3.0018 | LR: 1.56e-05 | GradNorm: 4.570
  Batch    4/48 | Loss: 2.9890 | LR: 1.44e-05 | GradNorm: 4.441
  Batch    8/48 | Loss: 3.0630 | LR: 1.32e-05 | GradNorm: 7.480
  Batch   12/48 | Loss: 3.0192 | LR: 1.21e-05 | GradNorm: 3.484
  Batch   16/48 | Loss: 2.9761 | LR: 1.10e-05 | GradNorm: 3.714
  Batch   20/48 | Loss: 2.9673 | LR: 9.96e-06 | GradNorm: 5.076
  Batch   24/48 | Loss: 2.9990 | LR: 8.97e-06 | GradNorm: 3.792
  Batch   28/48 | Loss: 3.0117 | LR: 8.02e-06 | GradNorm: 4.632
  Batch   32/48 | Loss: 2.9951 | LR: 7.12e-06 | GradNorm: 7.712
  Batch   36/48 | Loss: 2.9870 | LR: 6.28e-06 | GradNorm: 9.404
  Batch   40/48 | Loss: 2.9815 | LR: 5.48e-06 | GradNorm: 9.987
  Batch   44/48 | Loss: 2.9915 | LR: 4.74e-06 | GradNorm: 2.892
Epoch 9/10: Train=26.94%, Val=16.10%, Gap=10.84%, LR=4.21e-06
  Batch    0/48 | Loss: 2.9999 | LR: 4.05e-06 | GradNorm: 3.726
  Batch    4/48 | Loss: 3.0048 | LR: 3.41e-06 | GradNorm: 6.380
  Batch    8/48 | Loss: 2.9840 | LR: 2.83e-06 | GradNorm: 4.165
  Batch   12/48 | Loss: 2.9801 | LR: 2.30e-06 | GradNorm: 4.670
  Batch   16/48 | Loss: 2.9787 | LR: 1.83e-06 | GradNorm: 3.353
  Batch   20/48 | Loss: 2.9850 | LR: 1.41e-06 | GradNorm: 3.279
  Batch   24/48 | Loss: 2.9700 | LR: 1.05e-06 | GradNorm: 4.292
  Batch   28/48 | Loss: 3.0012 | LR: 7.52e-07 | GradNorm: 2.768
  Batch   32/48 | Loss: 3.0144 | LR: 5.07e-07 | GradNorm: 2.935
  Batch   36/48 | Loss: 2.9807 | LR: 3.19e-07 | GradNorm: 3.134
  Batch   40/48 | Loss: 2.9614 | LR: 1.89e-07 | GradNorm: 2.990
  Batch   44/48 | Loss: 2.9867 | LR: 1.16e-07 | GradNorm: 3.397
Epoch 10/10: Train=27.47%, Val=16.36%, Gap=11.11%, LR=1.00e-07
Best validation accuracy: 16.36%
