=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026921235769560015
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9355 | LR: 5.47e-06 | GradNorm: 1.287
  Batch    4/48 | Loss: 3.9330 | LR: 1.66e-05 | GradNorm: 1.146
  Batch    8/48 | Loss: 3.9234 | LR: 2.77e-05 | GradNorm: 0.955
  Batch   12/48 | Loss: 3.9104 | LR: 3.88e-05 | GradNorm: 0.623
  Batch   16/48 | Loss: 3.9202 | LR: 4.99e-05 | GradNorm: 0.696
  Batch   20/48 | Loss: 3.9168 | LR: 6.10e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9118 | LR: 7.21e-05 | GradNorm: 0.664
  Batch   28/48 | Loss: 3.9180 | LR: 8.32e-05 | GradNorm: 0.595
  Batch   32/48 | Loss: 3.9077 | LR: 9.43e-05 | GradNorm: 0.496
  Batch   36/48 | Loss: 3.9107 | LR: 1.05e-04 | GradNorm: 0.536
  Batch   40/48 | Loss: 3.9034 | LR: 1.17e-04 | GradNorm: 0.544
  Batch   44/48 | Loss: 3.8973 | LR: 1.28e-04 | GradNorm: 0.609
Epoch 1/10: Train=2.27%, Val=5.26%, Gap=-2.99%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8687 | LR: 1.39e-04 | GradNorm: 0.759
  Batch    4/48 | Loss: 3.8124 | LR: 1.50e-04 | GradNorm: 1.135
  Batch    8/48 | Loss: 3.7788 | LR: 1.61e-04 | GradNorm: 2.938
  Batch   12/48 | Loss: 3.7646 | LR: 1.72e-04 | GradNorm: 9.113
  Batch   16/48 | Loss: 3.7605 | LR: 1.83e-04 | GradNorm: 3.906
  Batch   20/48 | Loss: 3.9028 | LR: 1.94e-04 | GradNorm: 7.602
  Batch   24/48 | Loss: 3.7819 | LR: 2.05e-04 | GradNorm: 4.423
  Batch   28/48 | Loss: 3.7983 | LR: 2.16e-04 | GradNorm: 4.617
  Batch   32/48 | Loss: 3.7320 | LR: 2.28e-04 | GradNorm: 3.621
  Batch   36/48 | Loss: 3.6734 | LR: 2.39e-04 | GradNorm: 1.827
  Batch   40/48 | Loss: 3.6635 | LR: 2.50e-04 | GradNorm: 2.944
  Batch   44/48 | Loss: 3.5874 | LR: 2.61e-04 | GradNorm: 1.561
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.03%, Val=6.45%, Gap=-0.42%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6681 | LR: 2.69e-04 | GradNorm: 10.801
  Batch    4/48 | Loss: 3.7399 | LR: 2.69e-04 | GradNorm: 6.275
  Batch    8/48 | Loss: 3.5835 | LR: 2.69e-04 | GradNorm: 2.115
  Batch   12/48 | Loss: 3.5773 | LR: 2.68e-04 | GradNorm: 2.869
  Batch   16/48 | Loss: 3.5132 | LR: 2.68e-04 | GradNorm: 2.611
  Batch   20/48 | Loss: 3.5888 | LR: 2.67e-04 | GradNorm: 5.857
  Batch   24/48 | Loss: 3.5391 | LR: 2.66e-04 | GradNorm: 5.164
  Batch   28/48 | Loss: 3.4307 | LR: 2.65e-04 | GradNorm: 1.952
  Batch   32/48 | Loss: 3.4450 | LR: 2.64e-04 | GradNorm: 3.553
  Batch   36/48 | Loss: 3.4246 | LR: 2.63e-04 | GradNorm: 2.282
  Batch   40/48 | Loss: 3.4063 | LR: 2.62e-04 | GradNorm: 5.860
  Batch   44/48 | Loss: 3.3803 | LR: 2.60e-04 | GradNorm: 2.619
Epoch 3/10: Train=11.26%, Val=9.93%, Gap=1.33%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3267 | LR: 2.59e-04 | GradNorm: 1.862
  Batch    4/48 | Loss: 3.3519 | LR: 2.57e-04 | GradNorm: 4.727
  Batch    8/48 | Loss: 3.3399 | LR: 2.55e-04 | GradNorm: 4.088
  Batch   12/48 | Loss: 3.2773 | LR: 2.53e-04 | GradNorm: 4.763
  Batch   16/48 | Loss: 3.2904 | LR: 2.51e-04 | GradNorm: 4.557
  Batch   20/48 | Loss: 3.2495 | LR: 2.48e-04 | GradNorm: 3.803
  Batch   24/48 | Loss: 3.2786 | LR: 2.46e-04 | GradNorm: 4.591
  Batch   28/48 | Loss: 3.2253 | LR: 2.43e-04 | GradNorm: 4.277
  Batch   32/48 | Loss: 3.2495 | LR: 2.41e-04 | GradNorm: 2.637
  Batch   36/48 | Loss: 3.2784 | LR: 2.38e-04 | GradNorm: 7.479
  Batch   40/48 | Loss: 3.2126 | LR: 2.35e-04 | GradNorm: 2.597
  Batch   44/48 | Loss: 3.1843 | LR: 2.32e-04 | GradNorm: 2.381
Epoch 4/10: Train=16.61%, Val=12.69%, Gap=3.92%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1902 | LR: 2.29e-04 | GradNorm: 5.800
  Batch    4/48 | Loss: 3.1556 | LR: 2.26e-04 | GradNorm: 4.050
  Batch    8/48 | Loss: 3.1184 | LR: 2.23e-04 | GradNorm: 2.985
  Batch   12/48 | Loss: 3.1597 | LR: 2.19e-04 | GradNorm: 4.651
  Batch   16/48 | Loss: 3.2587 | LR: 2.16e-04 | GradNorm: 6.122
  Batch   20/48 | Loss: 3.1662 | LR: 2.12e-04 | GradNorm: 3.307
  Batch   24/48 | Loss: 3.1811 | LR: 2.08e-04 | GradNorm: 4.773
  Batch   28/48 | Loss: 3.1521 | LR: 2.05e-04 | GradNorm: 4.823
  Batch   32/48 | Loss: 3.1047 | LR: 2.01e-04 | GradNorm: 4.078
  Batch   36/48 | Loss: 3.1791 | LR: 1.97e-04 | GradNorm: 3.543
  Batch   40/48 | Loss: 3.1397 | LR: 1.93e-04 | GradNorm: 4.014
  Batch   44/48 | Loss: 3.0926 | LR: 1.89e-04 | GradNorm: 3.673
Epoch 5/10: Train=19.96%, Val=16.11%, Gap=3.85%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0554 | LR: 1.85e-04 | GradNorm: 4.738
  Batch    4/48 | Loss: 3.0060 | LR: 1.81e-04 | GradNorm: 6.590
  Batch    8/48 | Loss: 3.0186 | LR: 1.77e-04 | GradNorm: 5.476
  Batch   12/48 | Loss: 3.0078 | LR: 1.73e-04 | GradNorm: 4.101
  Batch   16/48 | Loss: 2.9738 | LR: 1.68e-04 | GradNorm: 3.945
  Batch   20/48 | Loss: 2.9804 | LR: 1.64e-04 | GradNorm: 4.991
  Batch   24/48 | Loss: 2.9630 | LR: 1.60e-04 | GradNorm: 5.316
  Batch   28/48 | Loss: 2.9381 | LR: 1.55e-04 | GradNorm: 5.321
  Batch   32/48 | Loss: 2.9297 | LR: 1.51e-04 | GradNorm: 8.601
  Batch   36/48 | Loss: 3.0214 | LR: 1.47e-04 | GradNorm: 8.111
  Batch   40/48 | Loss: 2.9216 | LR: 1.42e-04 | GradNorm: 3.836
  Batch   44/48 | Loss: 3.0054 | LR: 1.38e-04 | GradNorm: 6.074
Epoch 6/10: Train=24.88%, Val=17.22%, Gap=7.66%, LR=1.35e-04
  Batch    0/48 | Loss: 2.9042 | LR: 1.34e-04 | GradNorm: 4.627
  Batch    4/48 | Loss: 2.8996 | LR: 1.29e-04 | GradNorm: 4.325
  Batch    8/48 | Loss: 2.9123 | LR: 1.25e-04 | GradNorm: 6.797
  Batch   12/48 | Loss: 2.8143 | LR: 1.20e-04 | GradNorm: 2.987
  Batch   16/48 | Loss: 2.8421 | LR: 1.16e-04 | GradNorm: 2.947
  Batch   20/48 | Loss: 2.8865 | LR: 1.12e-04 | GradNorm: 2.833
  Batch   24/48 | Loss: 2.9086 | LR: 1.07e-04 | GradNorm: 6.315
  Batch   28/48 | Loss: 2.8676 | LR: 1.03e-04 | GradNorm: 4.315
  Batch   32/48 | Loss: 2.8874 | LR: 9.88e-05 | GradNorm: 3.513
  Batch   36/48 | Loss: 2.8968 | LR: 9.45e-05 | GradNorm: 4.444
  Batch   40/48 | Loss: 2.8727 | LR: 9.04e-05 | GradNorm: 6.467
  Batch   44/48 | Loss: 2.8625 | LR: 8.62e-05 | GradNorm: 4.493
Epoch 7/10: Train=28.29%, Val=18.27%, Gap=10.02%, LR=8.32e-05
  Batch    0/48 | Loss: 2.8269 | LR: 8.21e-05 | GradNorm: 3.069
  Batch    4/48 | Loss: 2.7754 | LR: 7.81e-05 | GradNorm: 3.465
  Batch    8/48 | Loss: 2.8011 | LR: 7.42e-05 | GradNorm: 3.234
  Batch   12/48 | Loss: 2.8461 | LR: 7.03e-05 | GradNorm: 3.070
  Batch   16/48 | Loss: 2.8677 | LR: 6.64e-05 | GradNorm: 7.987
  Batch   20/48 | Loss: 2.7572 | LR: 6.27e-05 | GradNorm: 3.955
  Batch   24/48 | Loss: 2.7499 | LR: 5.90e-05 | GradNorm: 4.997
  Batch   28/48 | Loss: 2.7998 | LR: 5.54e-05 | GradNorm: 4.480
  Batch   32/48 | Loss: 2.7867 | LR: 5.19e-05 | GradNorm: 2.956
  Batch   36/48 | Loss: 2.7780 | LR: 4.84e-05 | GradNorm: 2.988
  Batch   40/48 | Loss: 2.7089 | LR: 4.51e-05 | GradNorm: 3.788
  Batch   44/48 | Loss: 2.8011 | LR: 4.19e-05 | GradNorm: 5.442
Epoch 8/10: Train=30.80%, Val=19.89%, Gap=10.91%, LR=3.95e-05
  Batch    0/48 | Loss: 2.7421 | LR: 3.87e-05 | GradNorm: 3.632
  Batch    4/48 | Loss: 2.7273 | LR: 3.57e-05 | GradNorm: 2.093
  Batch    8/48 | Loss: 2.7853 | LR: 3.28e-05 | GradNorm: 2.681
  Batch   12/48 | Loss: 2.7264 | LR: 2.99e-05 | GradNorm: 2.297
  Batch   16/48 | Loss: 2.6925 | LR: 2.72e-05 | GradNorm: 2.784
  Batch   20/48 | Loss: 2.7048 | LR: 2.46e-05 | GradNorm: 2.774
  Batch   24/48 | Loss: 2.7226 | LR: 2.22e-05 | GradNorm: 2.417
  Batch   28/48 | Loss: 2.7391 | LR: 1.98e-05 | GradNorm: 3.150
  Batch   32/48 | Loss: 2.7259 | LR: 1.76e-05 | GradNorm: 3.729
  Batch   36/48 | Loss: 2.7088 | LR: 1.55e-05 | GradNorm: 5.030
  Batch   40/48 | Loss: 2.6972 | LR: 1.35e-05 | GradNorm: 3.084
  Batch   44/48 | Loss: 2.7215 | LR: 1.16e-05 | GradNorm: 2.444
Epoch 9/10: Train=32.88%, Val=19.50%, Gap=13.38%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7033 | LR: 9.93e-06 | GradNorm: 3.972
  Batch    4/48 | Loss: 2.7056 | LR: 8.34e-06 | GradNorm: 3.306
  Batch    8/48 | Loss: 2.6771 | LR: 6.89e-06 | GradNorm: 2.698
  Batch   12/48 | Loss: 2.6954 | LR: 5.58e-06 | GradNorm: 3.547
  Batch   16/48 | Loss: 2.6807 | LR: 4.40e-06 | GradNorm: 2.229
  Batch   20/48 | Loss: 2.7137 | LR: 3.37e-06 | GradNorm: 3.523
  Batch   24/48 | Loss: 2.6892 | LR: 2.48e-06 | GradNorm: 3.534
  Batch   28/48 | Loss: 2.7178 | LR: 1.72e-06 | GradNorm: 1.908
  Batch   32/48 | Loss: 2.7271 | LR: 1.11e-06 | GradNorm: 2.458
  Batch   36/48 | Loss: 2.6767 | LR: 6.45e-07 | GradNorm: 2.570
  Batch   40/48 | Loss: 2.6761 | LR: 3.21e-07 | GradNorm: 1.902
  Batch   44/48 | Loss: 2.6815 | LR: 1.41e-07 | GradNorm: 2.633
Epoch 10/10: Train=33.89%, Val=20.80%, Gap=13.09%, LR=1.00e-07
Best validation accuracy: 20.80%
