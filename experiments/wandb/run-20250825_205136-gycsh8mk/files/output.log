=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044539985424939466
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9601 | LR: 9.05e-06 | GradNorm: 1.491
  Batch    4/48 | Loss: 3.9149 | LR: 2.74e-05 | GradNorm: 0.702
  Batch    8/48 | Loss: 3.9284 | LR: 4.58e-05 | GradNorm: 0.986
  Batch   12/48 | Loss: 3.9161 | LR: 6.42e-05 | GradNorm: 0.665
  Batch   16/48 | Loss: 3.9211 | LR: 8.25e-05 | GradNorm: 0.654
  Batch   20/48 | Loss: 3.9143 | LR: 1.01e-04 | GradNorm: 0.597
  Batch   24/48 | Loss: 3.9140 | LR: 1.19e-04 | GradNorm: 0.620
  Batch   28/48 | Loss: 3.9145 | LR: 1.38e-04 | GradNorm: 0.555
  Batch   32/48 | Loss: 3.9042 | LR: 1.56e-04 | GradNorm: 0.510
  Batch   36/48 | Loss: 3.8911 | LR: 1.74e-04 | GradNorm: 0.507
  Batch   40/48 | Loss: 3.8482 | LR: 1.93e-04 | GradNorm: 0.661
  Batch   44/48 | Loss: 3.8673 | LR: 2.11e-04 | GradNorm: 5.508
Epoch 1/10: Train=2.71%, Val=4.26%, Gap=-1.55%, LR=2.25e-04
  Batch    0/48 | Loss: 3.8289 | LR: 2.30e-04 | GradNorm: 6.491
  Batch    4/48 | Loss: 3.7854 | LR: 2.48e-04 | GradNorm: 2.442
  Batch    8/48 | Loss: 3.7880 | LR: 2.66e-04 | GradNorm: 2.947
  Batch   12/48 | Loss: 3.7371 | LR: 2.85e-04 | GradNorm: 4.212
  Batch   16/48 | Loss: 3.7000 | LR: 3.03e-04 | GradNorm: 0.575
  Batch   20/48 | Loss: 3.7401 | LR: 3.21e-04 | GradNorm: 3.559
  Batch   24/48 | Loss: 3.6286 | LR: 3.40e-04 | GradNorm: 2.295
  Batch   28/48 | Loss: 3.6373 | LR: 3.58e-04 | GradNorm: 4.807
  Batch   32/48 | Loss: 3.7374 | LR: 3.77e-04 | GradNorm: 6.925
  Batch   36/48 | Loss: 3.7019 | LR: 3.95e-04 | GradNorm: 2.513
  Batch   40/48 | Loss: 3.8228 | LR: 4.13e-04 | GradNorm: 4.461
  Batch   44/48 | Loss: 3.7136 | LR: 4.32e-04 | GradNorm: 2.868
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.33%, Val=8.25%, Gap=-1.92%, LR=4.45e-04
  Batch    0/48 | Loss: 3.6240 | LR: 4.45e-04 | GradNorm: 1.927
  Batch    4/48 | Loss: 3.5674 | LR: 4.45e-04 | GradNorm: 2.035
  Batch    8/48 | Loss: 3.5318 | LR: 4.45e-04 | GradNorm: 3.871
  Batch   12/48 | Loss: 3.5188 | LR: 4.44e-04 | GradNorm: 2.628
  Batch   16/48 | Loss: 3.4557 | LR: 4.43e-04 | GradNorm: 1.519
  Batch   20/48 | Loss: 3.4220 | LR: 4.42e-04 | GradNorm: 3.129
  Batch   24/48 | Loss: 3.4508 | LR: 4.41e-04 | GradNorm: 3.494
  Batch   28/48 | Loss: 3.3269 | LR: 4.39e-04 | GradNorm: 3.016
  Batch   32/48 | Loss: 3.5999 | LR: 4.37e-04 | GradNorm: 30.474
  Batch   36/48 | Loss: 3.4191 | LR: 4.35e-04 | GradNorm: 2.385
  Batch   40/48 | Loss: 3.3909 | LR: 4.33e-04 | GradNorm: 4.031
  Batch   44/48 | Loss: 3.3426 | LR: 4.30e-04 | GradNorm: 2.761
Epoch 3/10: Train=12.08%, Val=9.82%, Gap=2.26%, LR=4.28e-04
  Batch    0/48 | Loss: 3.2993 | LR: 4.28e-04 | GradNorm: 2.508
  Batch    4/48 | Loss: 3.2856 | LR: 4.25e-04 | GradNorm: 1.768
  Batch    8/48 | Loss: 3.2514 | LR: 4.22e-04 | GradNorm: 1.953
  Batch   12/48 | Loss: 3.1995 | LR: 4.18e-04 | GradNorm: 1.697
  Batch   16/48 | Loss: 3.2064 | LR: 4.15e-04 | GradNorm: 2.723
  Batch   20/48 | Loss: 3.1889 | LR: 4.11e-04 | GradNorm: 2.526
  Batch   24/48 | Loss: 3.1897 | LR: 4.07e-04 | GradNorm: 5.186
  Batch   28/48 | Loss: 3.1821 | LR: 4.03e-04 | GradNorm: 3.274
  Batch   32/48 | Loss: 3.2025 | LR: 3.98e-04 | GradNorm: 3.430
  Batch   36/48 | Loss: 3.1507 | LR: 3.94e-04 | GradNorm: 2.256
  Batch   40/48 | Loss: 3.2008 | LR: 3.89e-04 | GradNorm: 3.793
  Batch   44/48 | Loss: 3.1459 | LR: 3.84e-04 | GradNorm: 5.562
Epoch 4/10: Train=18.04%, Val=12.86%, Gap=5.18%, LR=3.80e-04
  Batch    0/48 | Loss: 3.1098 | LR: 3.79e-04 | GradNorm: 2.389
  Batch    4/48 | Loss: 3.0861 | LR: 3.74e-04 | GradNorm: 3.488
  Batch    8/48 | Loss: 3.1551 | LR: 3.68e-04 | GradNorm: 5.556
  Batch   12/48 | Loss: 3.0880 | LR: 3.63e-04 | GradNorm: 2.257
  Batch   16/48 | Loss: 3.1541 | LR: 3.57e-04 | GradNorm: 3.031
  Batch   20/48 | Loss: 3.0826 | LR: 3.51e-04 | GradNorm: 2.192
  Batch   24/48 | Loss: 3.1126 | LR: 3.45e-04 | GradNorm: 3.392
  Batch   28/48 | Loss: 3.0929 | LR: 3.39e-04 | GradNorm: 3.800
  Batch   32/48 | Loss: 3.0941 | LR: 3.32e-04 | GradNorm: 4.199
  Batch   36/48 | Loss: 3.1109 | LR: 3.26e-04 | GradNorm: 2.052
  Batch   40/48 | Loss: 3.0996 | LR: 3.20e-04 | GradNorm: 2.462
  Batch   44/48 | Loss: 3.1273 | LR: 3.13e-04 | GradNorm: 8.030
Epoch 5/10: Train=21.11%, Val=15.14%, Gap=5.97%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0182 | LR: 3.06e-04 | GradNorm: 3.701
  Batch    4/48 | Loss: 2.9496 | LR: 2.99e-04 | GradNorm: 2.578
  Batch    8/48 | Loss: 2.9749 | LR: 2.93e-04 | GradNorm: 2.587
  Batch   12/48 | Loss: 2.9750 | LR: 2.86e-04 | GradNorm: 2.521
  Batch   16/48 | Loss: 2.9548 | LR: 2.79e-04 | GradNorm: 3.843
  Batch   20/48 | Loss: 2.9304 | LR: 2.72e-04 | GradNorm: 1.617
  Batch   24/48 | Loss: 2.9328 | LR: 2.64e-04 | GradNorm: 3.383
  Batch   28/48 | Loss: 2.8844 | LR: 2.57e-04 | GradNorm: 3.483
  Batch   32/48 | Loss: 2.9009 | LR: 2.50e-04 | GradNorm: 4.226
  Batch   36/48 | Loss: 2.9253 | LR: 2.43e-04 | GradNorm: 3.147
  Batch   40/48 | Loss: 2.8954 | LR: 2.35e-04 | GradNorm: 3.825
  Batch   44/48 | Loss: 2.9387 | LR: 2.28e-04 | GradNorm: 3.162
Epoch 6/10: Train=25.84%, Val=17.17%, Gap=8.67%, LR=2.23e-04
  Batch    0/48 | Loss: 2.8818 | LR: 2.21e-04 | GradNorm: 5.308
  Batch    4/48 | Loss: 2.8498 | LR: 2.14e-04 | GradNorm: 6.182
  Batch    8/48 | Loss: 2.8234 | LR: 2.06e-04 | GradNorm: 1.889
  Batch   12/48 | Loss: 2.8151 | LR: 1.99e-04 | GradNorm: 6.373
  Batch   16/48 | Loss: 2.7869 | LR: 1.92e-04 | GradNorm: 3.325
  Batch   20/48 | Loss: 2.8052 | LR: 1.85e-04 | GradNorm: 4.181
  Batch   24/48 | Loss: 2.8093 | LR: 1.78e-04 | GradNorm: 3.020
  Batch   28/48 | Loss: 2.8327 | LR: 1.70e-04 | GradNorm: 5.595
  Batch   32/48 | Loss: 2.8190 | LR: 1.63e-04 | GradNorm: 6.256
  Batch   36/48 | Loss: 2.8231 | LR: 1.56e-04 | GradNorm: 3.446
  Batch   40/48 | Loss: 2.7921 | LR: 1.49e-04 | GradNorm: 4.221
  Batch   44/48 | Loss: 2.7492 | LR: 1.43e-04 | GradNorm: 2.311
Epoch 7/10: Train=30.65%, Val=18.53%, Gap=12.12%, LR=1.38e-04
  Batch    0/48 | Loss: 2.7451 | LR: 1.36e-04 | GradNorm: 2.654
  Batch    4/48 | Loss: 2.7019 | LR: 1.29e-04 | GradNorm: 4.173
  Batch    8/48 | Loss: 2.6901 | LR: 1.23e-04 | GradNorm: 3.743
  Batch   12/48 | Loss: 2.7543 | LR: 1.16e-04 | GradNorm: 4.261
  Batch   16/48 | Loss: 2.7465 | LR: 1.10e-04 | GradNorm: 2.194
  Batch   20/48 | Loss: 2.6660 | LR: 1.04e-04 | GradNorm: 5.039
  Batch   24/48 | Loss: 2.6504 | LR: 9.75e-05 | GradNorm: 3.480
  Batch   28/48 | Loss: 2.6880 | LR: 9.16e-05 | GradNorm: 5.036
  Batch   32/48 | Loss: 2.7031 | LR: 8.58e-05 | GradNorm: 4.611
  Batch   36/48 | Loss: 2.6662 | LR: 8.01e-05 | GradNorm: 5.337
  Batch   40/48 | Loss: 2.6073 | LR: 7.46e-05 | GradNorm: 4.774
  Batch   44/48 | Loss: 2.6821 | LR: 6.92e-05 | GradNorm: 4.861
Epoch 8/10: Train=34.31%, Val=18.03%, Gap=16.28%, LR=6.53e-05
  Batch    0/48 | Loss: 2.6248 | LR: 6.40e-05 | GradNorm: 3.757
  Batch    4/48 | Loss: 2.6234 | LR: 5.90e-05 | GradNorm: 2.425
  Batch    8/48 | Loss: 2.6627 | LR: 5.42e-05 | GradNorm: 3.715
  Batch   12/48 | Loss: 2.5939 | LR: 4.95e-05 | GradNorm: 2.796
  Batch   16/48 | Loss: 2.5730 | LR: 4.50e-05 | GradNorm: 3.368
  Batch   20/48 | Loss: 2.5608 | LR: 4.07e-05 | GradNorm: 3.063
  Batch   24/48 | Loss: 2.5763 | LR: 3.66e-05 | GradNorm: 2.290
  Batch   28/48 | Loss: 2.6117 | LR: 3.27e-05 | GradNorm: 2.892
  Batch   32/48 | Loss: 2.5678 | LR: 2.90e-05 | GradNorm: 2.584
  Batch   36/48 | Loss: 2.5776 | LR: 2.55e-05 | GradNorm: 2.632
  Batch   40/48 | Loss: 2.5727 | LR: 2.23e-05 | GradNorm: 3.925
  Batch   44/48 | Loss: 2.5909 | LR: 1.92e-05 | GradNorm: 2.228
Epoch 9/10: Train=37.52%, Val=20.34%, Gap=17.18%, LR=1.70e-05
  Batch    0/48 | Loss: 2.5747 | LR: 1.64e-05 | GradNorm: 3.532
  Batch    4/48 | Loss: 2.5736 | LR: 1.37e-05 | GradNorm: 3.656
  Batch    8/48 | Loss: 2.5422 | LR: 1.13e-05 | GradNorm: 3.095
  Batch   12/48 | Loss: 2.5341 | LR: 9.17e-06 | GradNorm: 3.687
  Batch   16/48 | Loss: 2.5530 | LR: 7.22e-06 | GradNorm: 1.817
  Batch   20/48 | Loss: 2.5482 | LR: 5.51e-06 | GradNorm: 3.480
  Batch   24/48 | Loss: 2.5687 | LR: 4.03e-06 | GradNorm: 3.088
  Batch   28/48 | Loss: 2.5976 | LR: 2.78e-06 | GradNorm: 2.795
  Batch   32/48 | Loss: 2.5786 | LR: 1.77e-06 | GradNorm: 3.063
  Batch   36/48 | Loss: 2.5550 | LR: 1.00e-06 | GradNorm: 3.270
  Batch   40/48 | Loss: 2.5268 | LR: 4.65e-07 | GradNorm: 2.090
  Batch   44/48 | Loss: 2.5391 | LR: 1.67e-07 | GradNorm: 2.773
Epoch 10/10: Train=38.56%, Val=20.17%, Gap=18.39%, LR=1.00e-07
Best validation accuracy: 20.34%
