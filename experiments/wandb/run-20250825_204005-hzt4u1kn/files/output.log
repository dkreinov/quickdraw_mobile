=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026836826936179757
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9527 | LR: 5.45e-06 | GradNorm: 1.845
  Batch    4/48 | Loss: 3.9315 | LR: 1.65e-05 | GradNorm: 1.157
  Batch    8/48 | Loss: 3.9236 | LR: 2.76e-05 | GradNorm: 0.925
  Batch   12/48 | Loss: 3.9139 | LR: 3.87e-05 | GradNorm: 0.715
  Batch   16/48 | Loss: 3.9183 | LR: 4.97e-05 | GradNorm: 0.666
  Batch   20/48 | Loss: 3.9163 | LR: 6.08e-05 | GradNorm: 0.624
  Batch   24/48 | Loss: 3.9146 | LR: 7.19e-05 | GradNorm: 0.700
  Batch   28/48 | Loss: 3.9222 | LR: 8.29e-05 | GradNorm: 0.588
  Batch   32/48 | Loss: 3.9090 | LR: 9.40e-05 | GradNorm: 0.511
  Batch   36/48 | Loss: 3.9107 | LR: 1.05e-04 | GradNorm: 0.487
  Batch   40/48 | Loss: 3.9095 | LR: 1.16e-04 | GradNorm: 0.557
  Batch   44/48 | Loss: 3.8994 | LR: 1.27e-04 | GradNorm: 0.520
Epoch 1/10: Train=2.11%, Val=3.93%, Gap=-1.82%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8911 | LR: 1.38e-04 | GradNorm: 0.633
  Batch    4/48 | Loss: 3.8354 | LR: 1.49e-04 | GradNorm: 1.050
  Batch    8/48 | Loss: 3.8181 | LR: 1.60e-04 | GradNorm: 4.633
  Batch   12/48 | Loss: 3.7295 | LR: 1.72e-04 | GradNorm: 2.216
  Batch   16/48 | Loss: 3.8323 | LR: 1.83e-04 | GradNorm: 4.234
  Batch   20/48 | Loss: 3.8149 | LR: 1.94e-04 | GradNorm: 1.585
  Batch   24/48 | Loss: 3.7620 | LR: 2.05e-04 | GradNorm: 1.680
  Batch   28/48 | Loss: 3.7362 | LR: 2.16e-04 | GradNorm: 2.183
  Batch   32/48 | Loss: 3.7271 | LR: 2.27e-04 | GradNorm: 3.631
  Batch   36/48 | Loss: 3.7488 | LR: 2.38e-04 | GradNorm: 4.565
  Batch   40/48 | Loss: 3.7890 | LR: 2.49e-04 | GradNorm: 6.386
  Batch   44/48 | Loss: 3.6678 | LR: 2.60e-04 | GradNorm: 1.743
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.56%, Val=8.02%, Gap=-2.46%, LR=2.68e-04
  Batch    0/48 | Loss: 3.6695 | LR: 2.68e-04 | GradNorm: 4.010
  Batch    4/48 | Loss: 3.6784 | LR: 2.68e-04 | GradNorm: 3.407
  Batch    8/48 | Loss: 3.6151 | LR: 2.68e-04 | GradNorm: 2.005
  Batch   12/48 | Loss: 3.5908 | LR: 2.68e-04 | GradNorm: 2.108
  Batch   16/48 | Loss: 3.6327 | LR: 2.67e-04 | GradNorm: 6.739
  Batch   20/48 | Loss: 3.5117 | LR: 2.66e-04 | GradNorm: 1.116
  Batch   24/48 | Loss: 3.5344 | LR: 2.66e-04 | GradNorm: 4.676
  Batch   28/48 | Loss: 3.4705 | LR: 2.65e-04 | GradNorm: 3.605
  Batch   32/48 | Loss: 3.4960 | LR: 2.64e-04 | GradNorm: 3.471
  Batch   36/48 | Loss: 3.4549 | LR: 2.62e-04 | GradNorm: 2.124
  Batch   40/48 | Loss: 3.6843 | LR: 2.61e-04 | GradNorm: 22.150
  Batch   44/48 | Loss: 3.4770 | LR: 2.59e-04 | GradNorm: 4.874
Epoch 3/10: Train=10.37%, Val=9.91%, Gap=0.46%, LR=2.58e-04
  Batch    0/48 | Loss: 3.4352 | LR: 2.58e-04 | GradNorm: 4.846
  Batch    4/48 | Loss: 3.3942 | LR: 2.56e-04 | GradNorm: 3.141
  Batch    8/48 | Loss: 3.3532 | LR: 2.54e-04 | GradNorm: 3.274
  Batch   12/48 | Loss: 3.3218 | LR: 2.52e-04 | GradNorm: 2.710
  Batch   16/48 | Loss: 3.2910 | LR: 2.50e-04 | GradNorm: 1.562
  Batch   20/48 | Loss: 3.2838 | LR: 2.48e-04 | GradNorm: 2.400
  Batch   24/48 | Loss: 3.2979 | LR: 2.45e-04 | GradNorm: 6.280
  Batch   28/48 | Loss: 3.2400 | LR: 2.43e-04 | GradNorm: 2.195
  Batch   32/48 | Loss: 3.3526 | LR: 2.40e-04 | GradNorm: 9.157
  Batch   36/48 | Loss: 3.2564 | LR: 2.37e-04 | GradNorm: 2.994
  Batch   40/48 | Loss: 3.2683 | LR: 2.34e-04 | GradNorm: 4.276
  Batch   44/48 | Loss: 3.2155 | LR: 2.31e-04 | GradNorm: 2.224
Epoch 4/10: Train=15.92%, Val=10.84%, Gap=5.08%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2381 | LR: 2.28e-04 | GradNorm: 4.329
  Batch    4/48 | Loss: 3.1707 | LR: 2.25e-04 | GradNorm: 3.281
  Batch    8/48 | Loss: 3.1524 | LR: 2.22e-04 | GradNorm: 2.012
  Batch   12/48 | Loss: 3.1845 | LR: 2.18e-04 | GradNorm: 7.359
  Batch   16/48 | Loss: 3.2102 | LR: 2.15e-04 | GradNorm: 3.240
  Batch   20/48 | Loss: 3.1295 | LR: 2.11e-04 | GradNorm: 1.803
  Batch   24/48 | Loss: 3.1774 | LR: 2.08e-04 | GradNorm: 3.454
  Batch   28/48 | Loss: 3.1974 | LR: 2.04e-04 | GradNorm: 5.512
  Batch   32/48 | Loss: 3.1349 | LR: 2.00e-04 | GradNorm: 3.869
  Batch   36/48 | Loss: 3.1613 | LR: 1.96e-04 | GradNorm: 1.586
  Batch   40/48 | Loss: 3.1476 | LR: 1.93e-04 | GradNorm: 1.823
  Batch   44/48 | Loss: 3.1169 | LR: 1.89e-04 | GradNorm: 1.596
Epoch 5/10: Train=19.42%, Val=13.32%, Gap=6.10%, LR=1.86e-04
  Batch    0/48 | Loss: 3.1174 | LR: 1.85e-04 | GradNorm: 4.797
  Batch    4/48 | Loss: 3.0432 | LR: 1.80e-04 | GradNorm: 3.028
  Batch    8/48 | Loss: 3.0815 | LR: 1.76e-04 | GradNorm: 5.074
  Batch   12/48 | Loss: 3.0546 | LR: 1.72e-04 | GradNorm: 3.188
  Batch   16/48 | Loss: 3.0610 | LR: 1.68e-04 | GradNorm: 8.247
  Batch   20/48 | Loss: 3.0553 | LR: 1.64e-04 | GradNorm: 3.379
  Batch   24/48 | Loss: 3.0281 | LR: 1.59e-04 | GradNorm: 3.525
  Batch   28/48 | Loss: 2.9944 | LR: 1.55e-04 | GradNorm: 4.165
  Batch   32/48 | Loss: 2.9866 | LR: 1.51e-04 | GradNorm: 3.308
  Batch   36/48 | Loss: 3.0378 | LR: 1.46e-04 | GradNorm: 4.804
  Batch   40/48 | Loss: 2.9803 | LR: 1.42e-04 | GradNorm: 1.597
  Batch   44/48 | Loss: 3.0759 | LR: 1.38e-04 | GradNorm: 5.746
Epoch 6/10: Train=22.61%, Val=13.95%, Gap=8.66%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9802 | LR: 1.33e-04 | GradNorm: 3.256
  Batch    4/48 | Loss: 3.0151 | LR: 1.29e-04 | GradNorm: 8.986
  Batch    8/48 | Loss: 2.9642 | LR: 1.24e-04 | GradNorm: 4.586
  Batch   12/48 | Loss: 2.9079 | LR: 1.20e-04 | GradNorm: 7.051
  Batch   16/48 | Loss: 2.9201 | LR: 1.16e-04 | GradNorm: 4.916
  Batch   20/48 | Loss: 2.9508 | LR: 1.11e-04 | GradNorm: 5.352
  Batch   24/48 | Loss: 2.9138 | LR: 1.07e-04 | GradNorm: 2.064
  Batch   28/48 | Loss: 2.9592 | LR: 1.03e-04 | GradNorm: 6.171
  Batch   32/48 | Loss: 2.9428 | LR: 9.85e-05 | GradNorm: 3.771
  Batch   36/48 | Loss: 2.9322 | LR: 9.42e-05 | GradNorm: 5.454
  Batch   40/48 | Loss: 2.9374 | LR: 9.01e-05 | GradNorm: 6.336
  Batch   44/48 | Loss: 2.9069 | LR: 8.60e-05 | GradNorm: 4.176
Epoch 7/10: Train=26.67%, Val=18.22%, Gap=8.45%, LR=8.29e-05
  Batch    0/48 | Loss: 2.9151 | LR: 8.19e-05 | GradNorm: 5.679
  Batch    4/48 | Loss: 2.8632 | LR: 7.79e-05 | GradNorm: 8.119
  Batch    8/48 | Loss: 2.8681 | LR: 7.39e-05 | GradNorm: 5.709
  Batch   12/48 | Loss: 2.9155 | LR: 7.00e-05 | GradNorm: 4.121
  Batch   16/48 | Loss: 2.9047 | LR: 6.62e-05 | GradNorm: 5.730
  Batch   20/48 | Loss: 2.8028 | LR: 6.25e-05 | GradNorm: 2.216
  Batch   24/48 | Loss: 2.8055 | LR: 5.88e-05 | GradNorm: 3.750
  Batch   28/48 | Loss: 2.8528 | LR: 5.52e-05 | GradNorm: 4.760
  Batch   32/48 | Loss: 2.8429 | LR: 5.17e-05 | GradNorm: 4.681
  Batch   36/48 | Loss: 2.8442 | LR: 4.83e-05 | GradNorm: 4.671
  Batch   40/48 | Loss: 2.7739 | LR: 4.50e-05 | GradNorm: 3.871
  Batch   44/48 | Loss: 2.8264 | LR: 4.17e-05 | GradNorm: 2.541
Epoch 8/10: Train=29.51%, Val=16.89%, Gap=12.62%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7998 | LR: 3.86e-05 | GradNorm: 2.545
  Batch    4/48 | Loss: 2.7844 | LR: 3.56e-05 | GradNorm: 2.825
  Batch    8/48 | Loss: 2.8633 | LR: 3.27e-05 | GradNorm: 4.942
  Batch   12/48 | Loss: 2.8008 | LR: 2.99e-05 | GradNorm: 3.504
  Batch   16/48 | Loss: 2.7600 | LR: 2.72e-05 | GradNorm: 3.915
  Batch   20/48 | Loss: 2.7459 | LR: 2.46e-05 | GradNorm: 2.319
  Batch   24/48 | Loss: 2.7905 | LR: 2.21e-05 | GradNorm: 1.756
  Batch   28/48 | Loss: 2.7986 | LR: 1.98e-05 | GradNorm: 3.317
  Batch   32/48 | Loss: 2.7886 | LR: 1.75e-05 | GradNorm: 3.366
  Batch   36/48 | Loss: 2.7880 | LR: 1.54e-05 | GradNorm: 4.123
  Batch   40/48 | Loss: 2.7541 | LR: 1.35e-05 | GradNorm: 1.638
  Batch   44/48 | Loss: 2.7756 | LR: 1.16e-05 | GradNorm: 3.416
Epoch 9/10: Train=31.70%, Val=17.80%, Gap=13.90%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7639 | LR: 9.89e-06 | GradNorm: 3.647
  Batch    4/48 | Loss: 2.7829 | LR: 8.31e-06 | GradNorm: 3.053
  Batch    8/48 | Loss: 2.7470 | LR: 6.87e-06 | GradNorm: 2.257
  Batch   12/48 | Loss: 2.7554 | LR: 5.56e-06 | GradNorm: 2.864
  Batch   16/48 | Loss: 2.7582 | LR: 4.39e-06 | GradNorm: 1.610
  Batch   20/48 | Loss: 2.7520 | LR: 3.36e-06 | GradNorm: 3.105
  Batch   24/48 | Loss: 2.7495 | LR: 2.47e-06 | GradNorm: 2.480
  Batch   28/48 | Loss: 2.7748 | LR: 1.72e-06 | GradNorm: 2.186
  Batch   32/48 | Loss: 2.7896 | LR: 1.11e-06 | GradNorm: 2.061
  Batch   36/48 | Loss: 2.7637 | LR: 6.43e-07 | GradNorm: 2.322
  Batch   40/48 | Loss: 2.7309 | LR: 3.20e-07 | GradNorm: 2.341
  Batch   44/48 | Loss: 2.7423 | LR: 1.40e-07 | GradNorm: 2.324
Epoch 10/10: Train=32.50%, Val=17.85%, Gap=14.65%, LR=1.00e-07
Best validation accuracy: 18.22%
