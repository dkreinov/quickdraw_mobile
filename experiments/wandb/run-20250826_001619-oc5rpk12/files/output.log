=== W&B Sweep Run: LR=0.000181 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00018061298240696017
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000181
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9417 | LR: 3.67e-06 | GradNorm: 1.630
  Batch    4/48 | Loss: 3.9245 | LR: 1.11e-05 | GradNorm: 1.022
  Batch    8/48 | Loss: 3.9256 | LR: 1.86e-05 | GradNorm: 1.146
  Batch   12/48 | Loss: 3.9145 | LR: 2.60e-05 | GradNorm: 0.898
  Batch   16/48 | Loss: 3.9237 | LR: 3.35e-05 | GradNorm: 0.857
  Batch   20/48 | Loss: 3.9170 | LR: 4.09e-05 | GradNorm: 0.788
  Batch   24/48 | Loss: 3.9152 | LR: 4.84e-05 | GradNorm: 0.720
  Batch   28/48 | Loss: 3.9190 | LR: 5.58e-05 | GradNorm: 0.661
  Batch   32/48 | Loss: 3.9094 | LR: 6.33e-05 | GradNorm: 0.562
  Batch   36/48 | Loss: 3.9094 | LR: 7.07e-05 | GradNorm: 0.609
  Batch   40/48 | Loss: 3.9036 | LR: 7.82e-05 | GradNorm: 0.603
  Batch   44/48 | Loss: 3.8959 | LR: 8.56e-05 | GradNorm: 0.629
Epoch 1/10: Train=2.40%, Val=4.27%, Gap=-1.87%, LR=9.12e-05
  Batch    0/48 | Loss: 3.8874 | LR: 9.31e-05 | GradNorm: 0.792
  Batch    4/48 | Loss: 3.8317 | LR: 1.01e-04 | GradNorm: 0.846
  Batch    8/48 | Loss: 3.8075 | LR: 1.08e-04 | GradNorm: 2.709
  Batch   12/48 | Loss: 3.8835 | LR: 1.15e-04 | GradNorm: 8.215
  Batch   16/48 | Loss: 3.9560 | LR: 1.23e-04 | GradNorm: 7.536
  Batch   20/48 | Loss: 3.7871 | LR: 1.30e-04 | GradNorm: 0.999
  Batch   24/48 | Loss: 3.8105 | LR: 1.38e-04 | GradNorm: 4.616
  Batch   28/48 | Loss: 3.7588 | LR: 1.45e-04 | GradNorm: 3.014
  Batch   32/48 | Loss: 3.7232 | LR: 1.53e-04 | GradNorm: 1.846
  Batch   36/48 | Loss: 3.6965 | LR: 1.60e-04 | GradNorm: 3.095
  Batch   40/48 | Loss: 3.6870 | LR: 1.68e-04 | GradNorm: 2.077
  Batch   44/48 | Loss: 3.7411 | LR: 1.75e-04 | GradNorm: 11.024
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.16%, Val=7.70%, Gap=-2.54%, LR=1.81e-04
  Batch    0/48 | Loss: 3.6446 | LR: 1.81e-04 | GradNorm: 4.298
  Batch    4/48 | Loss: 3.6812 | LR: 1.81e-04 | GradNorm: 5.848
  Batch    8/48 | Loss: 3.6450 | LR: 1.80e-04 | GradNorm: 7.644
  Batch   12/48 | Loss: 3.5997 | LR: 1.80e-04 | GradNorm: 2.886
  Batch   16/48 | Loss: 3.6302 | LR: 1.80e-04 | GradNorm: 6.081
  Batch   20/48 | Loss: 3.6118 | LR: 1.79e-04 | GradNorm: 3.786
  Batch   24/48 | Loss: 3.6209 | LR: 1.79e-04 | GradNorm: 4.493
  Batch   28/48 | Loss: 3.5233 | LR: 1.78e-04 | GradNorm: 2.452
  Batch   32/48 | Loss: 3.5531 | LR: 1.77e-04 | GradNorm: 1.244
  Batch   36/48 | Loss: 3.6647 | LR: 1.77e-04 | GradNorm: 6.626
  Batch   40/48 | Loss: 3.5255 | LR: 1.76e-04 | GradNorm: 1.385
  Batch   44/48 | Loss: 3.5427 | LR: 1.75e-04 | GradNorm: 5.385
Epoch 3/10: Train=8.98%, Val=6.21%, Gap=2.77%, LR=1.74e-04
  Batch    0/48 | Loss: 3.5239 | LR: 1.73e-04 | GradNorm: 2.948
  Batch    4/48 | Loss: 3.4629 | LR: 1.72e-04 | GradNorm: 1.659
  Batch    8/48 | Loss: 3.4616 | LR: 1.71e-04 | GradNorm: 2.269
  Batch   12/48 | Loss: 3.4736 | LR: 1.70e-04 | GradNorm: 7.312
  Batch   16/48 | Loss: 3.5329 | LR: 1.68e-04 | GradNorm: 7.401
  Batch   20/48 | Loss: 3.4496 | LR: 1.67e-04 | GradNorm: 4.227
  Batch   24/48 | Loss: 3.4464 | LR: 1.65e-04 | GradNorm: 5.919
  Batch   28/48 | Loss: 3.4167 | LR: 1.63e-04 | GradNorm: 8.297
  Batch   32/48 | Loss: 3.3693 | LR: 1.62e-04 | GradNorm: 3.668
  Batch   36/48 | Loss: 3.3473 | LR: 1.60e-04 | GradNorm: 0.982
  Batch   40/48 | Loss: 3.3344 | LR: 1.58e-04 | GradNorm: 2.675
  Batch   44/48 | Loss: 3.3232 | LR: 1.56e-04 | GradNorm: 4.974
Epoch 4/10: Train=13.37%, Val=10.34%, Gap=3.03%, LR=1.54e-04
  Batch    0/48 | Loss: 3.3059 | LR: 1.54e-04 | GradNorm: 4.878
  Batch    4/48 | Loss: 3.2773 | LR: 1.52e-04 | GradNorm: 3.882
  Batch    8/48 | Loss: 3.2290 | LR: 1.49e-04 | GradNorm: 2.566
  Batch   12/48 | Loss: 3.2183 | LR: 1.47e-04 | GradNorm: 2.895
  Batch   16/48 | Loss: 3.2814 | LR: 1.45e-04 | GradNorm: 4.131
  Batch   20/48 | Loss: 3.2342 | LR: 1.42e-04 | GradNorm: 4.005
  Batch   24/48 | Loss: 3.2549 | LR: 1.40e-04 | GradNorm: 3.908
  Batch   28/48 | Loss: 3.2129 | LR: 1.37e-04 | GradNorm: 3.629
  Batch   32/48 | Loss: 3.1922 | LR: 1.35e-04 | GradNorm: 1.888
  Batch   36/48 | Loss: 3.2521 | LR: 1.32e-04 | GradNorm: 5.344
  Batch   40/48 | Loss: 3.2164 | LR: 1.30e-04 | GradNorm: 3.147
  Batch   44/48 | Loss: 3.2063 | LR: 1.27e-04 | GradNorm: 4.844
Epoch 5/10: Train=18.00%, Val=14.34%, Gap=3.66%, LR=1.25e-04
  Batch    0/48 | Loss: 3.1325 | LR: 1.24e-04 | GradNorm: 2.857
  Batch    4/48 | Loss: 3.1132 | LR: 1.21e-04 | GradNorm: 3.315
  Batch    8/48 | Loss: 3.1375 | LR: 1.19e-04 | GradNorm: 5.573
  Batch   12/48 | Loss: 3.1345 | LR: 1.16e-04 | GradNorm: 3.451
  Batch   16/48 | Loss: 3.1085 | LR: 1.13e-04 | GradNorm: 4.900
  Batch   20/48 | Loss: 3.1128 | LR: 1.10e-04 | GradNorm: 4.320
  Batch   24/48 | Loss: 3.1889 | LR: 1.07e-04 | GradNorm: 8.005
  Batch   28/48 | Loss: 3.0930 | LR: 1.04e-04 | GradNorm: 5.354
  Batch   32/48 | Loss: 3.0712 | LR: 1.01e-04 | GradNorm: 3.179
  Batch   36/48 | Loss: 3.1189 | LR: 9.85e-05 | GradNorm: 3.391
  Batch   40/48 | Loss: 3.0763 | LR: 9.55e-05 | GradNorm: 2.631
  Batch   44/48 | Loss: 3.1615 | LR: 9.26e-05 | GradNorm: 6.429
Epoch 6/10: Train=20.65%, Val=14.01%, Gap=6.64%, LR=9.04e-05
  Batch    0/48 | Loss: 3.0747 | LR: 8.96e-05 | GradNorm: 5.027
  Batch    4/48 | Loss: 3.0853 | LR: 8.67e-05 | GradNorm: 6.146
  Batch    8/48 | Loss: 3.0469 | LR: 8.37e-05 | GradNorm: 3.970
  Batch   12/48 | Loss: 3.0033 | LR: 8.08e-05 | GradNorm: 5.258
  Batch   16/48 | Loss: 3.0116 | LR: 7.78e-05 | GradNorm: 5.478
  Batch   20/48 | Loss: 3.0435 | LR: 7.49e-05 | GradNorm: 3.834
  Batch   24/48 | Loss: 3.0354 | LR: 7.20e-05 | GradNorm: 4.738
  Batch   28/48 | Loss: 3.0480 | LR: 6.91e-05 | GradNorm: 4.928
  Batch   32/48 | Loss: 3.0668 | LR: 6.63e-05 | GradNorm: 8.060
  Batch   36/48 | Loss: 3.0401 | LR: 6.35e-05 | GradNorm: 4.962
  Batch   40/48 | Loss: 3.0082 | LR: 6.06e-05 | GradNorm: 3.557
  Batch   44/48 | Loss: 2.9939 | LR: 5.79e-05 | GradNorm: 5.150
Epoch 7/10: Train=24.19%, Val=15.89%, Gap=8.30%, LR=5.58e-05
  Batch    0/48 | Loss: 2.9889 | LR: 5.51e-05 | GradNorm: 4.142
  Batch    4/48 | Loss: 2.9548 | LR: 5.24e-05 | GradNorm: 5.268
  Batch    8/48 | Loss: 2.9757 | LR: 4.98e-05 | GradNorm: 5.301
  Batch   12/48 | Loss: 3.0174 | LR: 4.72e-05 | GradNorm: 3.582
  Batch   16/48 | Loss: 2.9980 | LR: 4.46e-05 | GradNorm: 5.197
  Batch   20/48 | Loss: 2.9202 | LR: 4.21e-05 | GradNorm: 3.756
  Batch   24/48 | Loss: 2.9276 | LR: 3.96e-05 | GradNorm: 1.734
  Batch   28/48 | Loss: 2.9589 | LR: 3.72e-05 | GradNorm: 3.270
  Batch   32/48 | Loss: 2.9474 | LR: 3.48e-05 | GradNorm: 3.275
  Batch   36/48 | Loss: 2.9496 | LR: 3.25e-05 | GradNorm: 3.531
  Batch   40/48 | Loss: 2.8897 | LR: 3.03e-05 | GradNorm: 5.010
  Batch   44/48 | Loss: 2.9346 | LR: 2.81e-05 | GradNorm: 4.280
Epoch 8/10: Train=27.45%, Val=16.21%, Gap=11.24%, LR=2.65e-05
  Batch    0/48 | Loss: 2.8971 | LR: 2.60e-05 | GradNorm: 3.793
  Batch    4/48 | Loss: 2.8978 | LR: 2.40e-05 | GradNorm: 3.250
  Batch    8/48 | Loss: 2.9599 | LR: 2.20e-05 | GradNorm: 3.641
  Batch   12/48 | Loss: 2.9042 | LR: 2.01e-05 | GradNorm: 3.777
  Batch   16/48 | Loss: 2.8509 | LR: 1.83e-05 | GradNorm: 2.822
  Batch   20/48 | Loss: 2.8650 | LR: 1.66e-05 | GradNorm: 5.666
  Batch   24/48 | Loss: 2.8847 | LR: 1.49e-05 | GradNorm: 4.623
  Batch   28/48 | Loss: 2.8937 | LR: 1.33e-05 | GradNorm: 3.265
  Batch   32/48 | Loss: 2.8796 | LR: 1.18e-05 | GradNorm: 4.102
  Batch   36/48 | Loss: 2.8729 | LR: 1.04e-05 | GradNorm: 5.210
  Batch   40/48 | Loss: 2.8544 | LR: 9.08e-06 | GradNorm: 4.590
  Batch   44/48 | Loss: 2.8644 | LR: 7.84e-06 | GradNorm: 2.803
Epoch 9/10: Train=29.75%, Val=15.20%, Gap=14.55%, LR=6.97e-06
  Batch    0/48 | Loss: 2.8670 | LR: 6.69e-06 | GradNorm: 2.184
  Batch    4/48 | Loss: 2.8776 | LR: 5.63e-06 | GradNorm: 4.019
  Batch    8/48 | Loss: 2.8664 | LR: 4.66e-06 | GradNorm: 3.305
  Batch   12/48 | Loss: 2.8747 | LR: 3.77e-06 | GradNorm: 2.728
  Batch   16/48 | Loss: 2.8508 | LR: 2.99e-06 | GradNorm: 2.829
  Batch   20/48 | Loss: 2.8595 | LR: 2.29e-06 | GradNorm: 3.046
  Batch   24/48 | Loss: 2.8470 | LR: 1.69e-06 | GradNorm: 3.898
  Batch   28/48 | Loss: 2.8712 | LR: 1.19e-06 | GradNorm: 2.453
  Batch   32/48 | Loss: 2.8939 | LR: 7.79e-07 | GradNorm: 3.406
  Batch   36/48 | Loss: 2.8607 | LR: 4.65e-07 | GradNorm: 3.256
  Batch   40/48 | Loss: 2.8385 | LR: 2.48e-07 | GradNorm: 2.216
  Batch   44/48 | Loss: 2.8537 | LR: 1.27e-07 | GradNorm: 2.896
Epoch 10/10: Train=30.72%, Val=15.96%, Gap=14.76%, LR=1.00e-07
Best validation accuracy: 16.21%
