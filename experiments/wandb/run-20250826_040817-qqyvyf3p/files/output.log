=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044548089737054674
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9448 | LR: 9.05e-06 | GradNorm: 1.351
  Batch    4/48 | Loss: 3.9291 | LR: 2.74e-05 | GradNorm: 0.929
  Batch    8/48 | Loss: 3.9229 | LR: 4.58e-05 | GradNorm: 0.887
  Batch   12/48 | Loss: 3.9095 | LR: 6.42e-05 | GradNorm: 0.574
  Batch   16/48 | Loss: 3.9221 | LR: 8.26e-05 | GradNorm: 0.622
  Batch   20/48 | Loss: 3.9136 | LR: 1.01e-04 | GradNorm: 0.580
  Batch   24/48 | Loss: 3.9139 | LR: 1.19e-04 | GradNorm: 0.598
  Batch   28/48 | Loss: 3.9156 | LR: 1.38e-04 | GradNorm: 0.530
  Batch   32/48 | Loss: 3.9067 | LR: 1.56e-04 | GradNorm: 0.463
  Batch   36/48 | Loss: 3.9055 | LR: 1.74e-04 | GradNorm: 0.496
  Batch   40/48 | Loss: 3.8876 | LR: 1.93e-04 | GradNorm: 0.571
  Batch   44/48 | Loss: 3.8510 | LR: 2.11e-04 | GradNorm: 0.765
Epoch 1/10: Train=2.57%, Val=3.27%, Gap=-0.70%, LR=2.25e-04
  Batch    0/48 | Loss: 3.8854 | LR: 2.30e-04 | GradNorm: 4.368
  Batch    4/48 | Loss: 3.7856 | LR: 2.48e-04 | GradNorm: 1.508
  Batch    8/48 | Loss: 3.7890 | LR: 2.66e-04 | GradNorm: 4.585
  Batch   12/48 | Loss: 3.7472 | LR: 2.85e-04 | GradNorm: 4.803
  Batch   16/48 | Loss: 3.7120 | LR: 3.03e-04 | GradNorm: 1.005
  Batch   20/48 | Loss: 3.7299 | LR: 3.21e-04 | GradNorm: 2.586
  Batch   24/48 | Loss: 3.6731 | LR: 3.40e-04 | GradNorm: 1.856
  Batch   28/48 | Loss: 3.6459 | LR: 3.58e-04 | GradNorm: 1.983
  Batch   32/48 | Loss: 3.7190 | LR: 3.77e-04 | GradNorm: 11.960
  Batch   36/48 | Loss: 3.6637 | LR: 3.95e-04 | GradNorm: 2.246
  Batch   40/48 | Loss: 3.7484 | LR: 4.13e-04 | GradNorm: 2.277
  Batch   44/48 | Loss: 3.6938 | LR: 4.32e-04 | GradNorm: 7.667
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.40%, Val=10.04%, Gap=-3.64%, LR=4.45e-04
  Batch    0/48 | Loss: 3.5509 | LR: 4.45e-04 | GradNorm: 1.124
  Batch    4/48 | Loss: 3.6733 | LR: 4.45e-04 | GradNorm: 4.450
  Batch    8/48 | Loss: 3.5906 | LR: 4.45e-04 | GradNorm: 1.796
  Batch   12/48 | Loss: 3.5853 | LR: 4.44e-04 | GradNorm: 1.981
  Batch   16/48 | Loss: 3.4944 | LR: 4.43e-04 | GradNorm: 1.044
  Batch   20/48 | Loss: 3.5384 | LR: 4.42e-04 | GradNorm: 2.875
  Batch   24/48 | Loss: 3.4644 | LR: 4.41e-04 | GradNorm: 2.653
  Batch   28/48 | Loss: 3.3920 | LR: 4.39e-04 | GradNorm: 2.069
  Batch   32/48 | Loss: 3.3850 | LR: 4.37e-04 | GradNorm: 1.487
  Batch   36/48 | Loss: 3.3845 | LR: 4.35e-04 | GradNorm: 1.926
  Batch   40/48 | Loss: 3.3981 | LR: 4.33e-04 | GradNorm: 3.058
  Batch   44/48 | Loss: 3.3391 | LR: 4.31e-04 | GradNorm: 2.396
Epoch 3/10: Train=11.23%, Val=13.37%, Gap=-2.14%, LR=4.29e-04
  Batch    0/48 | Loss: 3.3181 | LR: 4.28e-04 | GradNorm: 1.974
  Batch    4/48 | Loss: 3.2816 | LR: 4.25e-04 | GradNorm: 1.743
  Batch    8/48 | Loss: 3.3080 | LR: 4.22e-04 | GradNorm: 3.064
  Batch   12/48 | Loss: 3.2542 | LR: 4.18e-04 | GradNorm: 2.251
  Batch   16/48 | Loss: 3.2229 | LR: 4.15e-04 | GradNorm: 1.674
  Batch   20/48 | Loss: 3.2109 | LR: 4.11e-04 | GradNorm: 1.836
  Batch   24/48 | Loss: 3.2558 | LR: 4.07e-04 | GradNorm: 3.993
  Batch   28/48 | Loss: 3.1672 | LR: 4.03e-04 | GradNorm: 1.132
  Batch   32/48 | Loss: 3.2000 | LR: 3.98e-04 | GradNorm: 2.416
  Batch   36/48 | Loss: 3.1565 | LR: 3.94e-04 | GradNorm: 1.591
  Batch   40/48 | Loss: 3.1656 | LR: 3.89e-04 | GradNorm: 3.249
  Batch   44/48 | Loss: 3.1069 | LR: 3.84e-04 | GradNorm: 2.493
Epoch 4/10: Train=17.57%, Val=16.69%, Gap=0.88%, LR=3.80e-04
  Batch    0/48 | Loss: 3.0918 | LR: 3.79e-04 | GradNorm: 2.884
  Batch    4/48 | Loss: 3.0733 | LR: 3.74e-04 | GradNorm: 3.322
  Batch    8/48 | Loss: 3.0151 | LR: 3.68e-04 | GradNorm: 1.553
  Batch   12/48 | Loss: 3.0465 | LR: 3.63e-04 | GradNorm: 2.826
  Batch   16/48 | Loss: 3.0761 | LR: 3.57e-04 | GradNorm: 2.889
  Batch   20/48 | Loss: 2.9952 | LR: 3.51e-04 | GradNorm: 2.301
  Batch   24/48 | Loss: 3.0577 | LR: 3.45e-04 | GradNorm: 4.532
  Batch   28/48 | Loss: 3.0263 | LR: 3.39e-04 | GradNorm: 4.263
  Batch   32/48 | Loss: 3.0104 | LR: 3.33e-04 | GradNorm: 3.134
  Batch   36/48 | Loss: 3.0608 | LR: 3.26e-04 | GradNorm: 3.114
  Batch   40/48 | Loss: 3.0244 | LR: 3.20e-04 | GradNorm: 3.856
  Batch   44/48 | Loss: 2.9389 | LR: 3.13e-04 | GradNorm: 2.460
Epoch 5/10: Train=23.88%, Val=16.54%, Gap=7.34%, LR=3.08e-04
  Batch    0/48 | Loss: 2.9178 | LR: 3.06e-04 | GradNorm: 3.816
  Batch    4/48 | Loss: 2.8740 | LR: 3.00e-04 | GradNorm: 6.166
  Batch    8/48 | Loss: 2.8675 | LR: 2.93e-04 | GradNorm: 2.440
  Batch   12/48 | Loss: 2.8674 | LR: 2.86e-04 | GradNorm: 3.601
  Batch   16/48 | Loss: 2.8576 | LR: 2.79e-04 | GradNorm: 4.249
  Batch   20/48 | Loss: 2.8236 | LR: 2.72e-04 | GradNorm: 3.071
  Batch   24/48 | Loss: 2.8799 | LR: 2.64e-04 | GradNorm: 5.757
  Batch   28/48 | Loss: 2.8201 | LR: 2.57e-04 | GradNorm: 4.008
  Batch   32/48 | Loss: 2.7597 | LR: 2.50e-04 | GradNorm: 1.514
  Batch   36/48 | Loss: 2.8166 | LR: 2.43e-04 | GradNorm: 2.561
  Batch   40/48 | Loss: 2.8027 | LR: 2.36e-04 | GradNorm: 2.365
  Batch   44/48 | Loss: 2.8385 | LR: 2.28e-04 | GradNorm: 2.899
Epoch 6/10: Train=28.44%, Val=18.74%, Gap=9.70%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7718 | LR: 2.21e-04 | GradNorm: 2.307
  Batch    4/48 | Loss: 2.7561 | LR: 2.14e-04 | GradNorm: 4.371
  Batch    8/48 | Loss: 2.7367 | LR: 2.06e-04 | GradNorm: 3.114
  Batch   12/48 | Loss: 2.6664 | LR: 1.99e-04 | GradNorm: 3.825
  Batch   16/48 | Loss: 2.6862 | LR: 1.92e-04 | GradNorm: 2.960
  Batch   20/48 | Loss: 2.7248 | LR: 1.85e-04 | GradNorm: 3.295
  Batch   24/48 | Loss: 2.7315 | LR: 1.78e-04 | GradNorm: 3.479
  Batch   28/48 | Loss: 2.7521 | LR: 1.70e-04 | GradNorm: 4.709
  Batch   32/48 | Loss: 2.6788 | LR: 1.63e-04 | GradNorm: 2.897
  Batch   36/48 | Loss: 2.7277 | LR: 1.56e-04 | GradNorm: 4.515
  Batch   40/48 | Loss: 2.6999 | LR: 1.49e-04 | GradNorm: 3.708
  Batch   44/48 | Loss: 2.6614 | LR: 1.43e-04 | GradNorm: 3.253
Epoch 7/10: Train=33.36%, Val=23.40%, Gap=9.96%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6840 | LR: 1.36e-04 | GradNorm: 4.235
  Batch    4/48 | Loss: 2.6279 | LR: 1.29e-04 | GradNorm: 3.912
  Batch    8/48 | Loss: 2.6394 | LR: 1.23e-04 | GradNorm: 3.622
  Batch   12/48 | Loss: 2.6714 | LR: 1.16e-04 | GradNorm: 4.683
  Batch   16/48 | Loss: 2.6414 | LR: 1.10e-04 | GradNorm: 2.695
  Batch   20/48 | Loss: 2.5774 | LR: 1.04e-04 | GradNorm: 4.693
  Batch   24/48 | Loss: 2.5799 | LR: 9.76e-05 | GradNorm: 3.775
  Batch   28/48 | Loss: 2.5893 | LR: 9.16e-05 | GradNorm: 2.998
  Batch   32/48 | Loss: 2.5986 | LR: 8.58e-05 | GradNorm: 3.041
  Batch   36/48 | Loss: 2.5790 | LR: 8.01e-05 | GradNorm: 5.639
  Batch   40/48 | Loss: 2.5370 | LR: 7.46e-05 | GradNorm: 6.439
  Batch   44/48 | Loss: 2.5758 | LR: 6.92e-05 | GradNorm: 5.494
Epoch 8/10: Train=36.90%, Val=25.67%, Gap=11.23%, LR=6.53e-05
  Batch    0/48 | Loss: 2.5370 | LR: 6.40e-05 | GradNorm: 5.438
  Batch    4/48 | Loss: 2.5199 | LR: 5.90e-05 | GradNorm: 2.617
  Batch    8/48 | Loss: 2.5874 | LR: 5.42e-05 | GradNorm: 5.782
  Batch   12/48 | Loss: 2.5296 | LR: 4.95e-05 | GradNorm: 4.748
  Batch   16/48 | Loss: 2.4763 | LR: 4.50e-05 | GradNorm: 3.625
  Batch   20/48 | Loss: 2.4918 | LR: 4.07e-05 | GradNorm: 3.275
  Batch   24/48 | Loss: 2.5065 | LR: 3.66e-05 | GradNorm: 3.013
  Batch   28/48 | Loss: 2.5165 | LR: 3.27e-05 | GradNorm: 3.066
  Batch   32/48 | Loss: 2.4864 | LR: 2.90e-05 | GradNorm: 3.905
  Batch   36/48 | Loss: 2.4923 | LR: 2.55e-05 | GradNorm: 1.851
  Batch   40/48 | Loss: 2.4718 | LR: 2.23e-05 | GradNorm: 2.301
  Batch   44/48 | Loss: 2.5204 | LR: 1.92e-05 | GradNorm: 2.642
Epoch 9/10: Train=39.83%, Val=24.31%, Gap=15.52%, LR=1.71e-05
  Batch    0/48 | Loss: 2.4895 | LR: 1.64e-05 | GradNorm: 3.367
  Batch    4/48 | Loss: 2.4869 | LR: 1.37e-05 | GradNorm: 2.384
  Batch    8/48 | Loss: 2.4568 | LR: 1.13e-05 | GradNorm: 1.608
  Batch   12/48 | Loss: 2.4775 | LR: 9.17e-06 | GradNorm: 2.573
  Batch   16/48 | Loss: 2.4686 | LR: 7.22e-06 | GradNorm: 1.791
  Batch   20/48 | Loss: 2.5071 | LR: 5.51e-06 | GradNorm: 3.289
  Batch   24/48 | Loss: 2.5033 | LR: 4.03e-06 | GradNorm: 2.540
  Batch   28/48 | Loss: 2.5186 | LR: 2.78e-06 | GradNorm: 2.218
  Batch   32/48 | Loss: 2.5147 | LR: 1.77e-06 | GradNorm: 3.156
  Batch   36/48 | Loss: 2.4814 | LR: 1.00e-06 | GradNorm: 2.891
  Batch   40/48 | Loss: 2.4589 | LR: 4.65e-07 | GradNorm: 2.156
  Batch   44/48 | Loss: 2.4704 | LR: 1.67e-07 | GradNorm: 2.078
Epoch 10/10: Train=40.79%, Val=25.56%, Gap=15.23%, LR=1.00e-07
Best validation accuracy: 25.67%
