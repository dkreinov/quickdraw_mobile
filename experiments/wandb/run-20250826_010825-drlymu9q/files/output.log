=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026805362050282336
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9547 | LR: 5.44e-06 | GradNorm: 1.619
  Batch    4/48 | Loss: 3.9322 | LR: 1.65e-05 | GradNorm: 1.172
  Batch    8/48 | Loss: 3.9180 | LR: 2.76e-05 | GradNorm: 0.916
  Batch   12/48 | Loss: 3.9177 | LR: 3.86e-05 | GradNorm: 0.796
  Batch   16/48 | Loss: 3.9229 | LR: 4.97e-05 | GradNorm: 0.756
  Batch   20/48 | Loss: 3.9113 | LR: 6.07e-05 | GradNorm: 0.664
  Batch   24/48 | Loss: 3.9128 | LR: 7.18e-05 | GradNorm: 0.721
  Batch   28/48 | Loss: 3.9107 | LR: 8.28e-05 | GradNorm: 0.594
  Batch   32/48 | Loss: 3.9078 | LR: 9.39e-05 | GradNorm: 0.606
  Batch   36/48 | Loss: 3.9014 | LR: 1.05e-04 | GradNorm: 0.625
  Batch   40/48 | Loss: 3.8692 | LR: 1.16e-04 | GradNorm: 0.573
  Batch   44/48 | Loss: 3.8543 | LR: 1.27e-04 | GradNorm: 3.416
Epoch 1/10: Train=2.73%, Val=4.51%, Gap=-1.78%, LR=1.35e-04
  Batch    0/48 | Loss: 3.8169 | LR: 1.38e-04 | GradNorm: 3.873
  Batch    4/48 | Loss: 3.8210 | LR: 1.49e-04 | GradNorm: 5.583
  Batch    8/48 | Loss: 3.7916 | LR: 1.60e-04 | GradNorm: 5.066
  Batch   12/48 | Loss: 3.7275 | LR: 1.71e-04 | GradNorm: 1.528
  Batch   16/48 | Loss: 3.8099 | LR: 1.82e-04 | GradNorm: 5.024
  Batch   20/48 | Loss: 3.7271 | LR: 1.93e-04 | GradNorm: 1.177
  Batch   24/48 | Loss: 3.6653 | LR: 2.04e-04 | GradNorm: 2.085
  Batch   28/48 | Loss: 3.8048 | LR: 2.16e-04 | GradNorm: 8.076
  Batch   32/48 | Loss: 3.6676 | LR: 2.27e-04 | GradNorm: 3.259
  Batch   36/48 | Loss: 3.6612 | LR: 2.38e-04 | GradNorm: 6.409
  Batch   40/48 | Loss: 3.6173 | LR: 2.49e-04 | GradNorm: 0.939
  Batch   44/48 | Loss: 3.6299 | LR: 2.60e-04 | GradNorm: 7.631
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.48%, Val=5.37%, Gap=1.11%, LR=2.68e-04
  Batch    0/48 | Loss: 3.5901 | LR: 2.68e-04 | GradNorm: 7.180
  Batch    4/48 | Loss: 3.5252 | LR: 2.68e-04 | GradNorm: 1.967
  Batch    8/48 | Loss: 3.4980 | LR: 2.68e-04 | GradNorm: 6.150
  Batch   12/48 | Loss: 3.5515 | LR: 2.67e-04 | GradNorm: 4.786
  Batch   16/48 | Loss: 3.6306 | LR: 2.67e-04 | GradNorm: 5.540
  Batch   20/48 | Loss: 3.5301 | LR: 2.66e-04 | GradNorm: 6.079
  Batch   24/48 | Loss: 3.4955 | LR: 2.65e-04 | GradNorm: 5.777
  Batch   28/48 | Loss: 3.4991 | LR: 2.64e-04 | GradNorm: 7.759
  Batch   32/48 | Loss: 3.4858 | LR: 2.63e-04 | GradNorm: 3.351
  Batch   36/48 | Loss: 3.4851 | LR: 2.62e-04 | GradNorm: 3.582
  Batch   40/48 | Loss: 3.4123 | LR: 2.61e-04 | GradNorm: 3.560
  Batch   44/48 | Loss: 3.4066 | LR: 2.59e-04 | GradNorm: 4.647
Epoch 3/10: Train=11.57%, Val=10.12%, Gap=1.45%, LR=2.58e-04
  Batch    0/48 | Loss: 3.3738 | LR: 2.57e-04 | GradNorm: 2.632
  Batch    4/48 | Loss: 3.3484 | LR: 2.56e-04 | GradNorm: 3.864
  Batch    8/48 | Loss: 3.3054 | LR: 2.54e-04 | GradNorm: 1.590
  Batch   12/48 | Loss: 3.2411 | LR: 2.52e-04 | GradNorm: 1.530
  Batch   16/48 | Loss: 3.2667 | LR: 2.50e-04 | GradNorm: 2.871
  Batch   20/48 | Loss: 3.3345 | LR: 2.47e-04 | GradNorm: 7.753
  Batch   24/48 | Loss: 3.2513 | LR: 2.45e-04 | GradNorm: 4.522
  Batch   28/48 | Loss: 3.2065 | LR: 2.42e-04 | GradNorm: 3.666
  Batch   32/48 | Loss: 3.2139 | LR: 2.40e-04 | GradNorm: 1.543
  Batch   36/48 | Loss: 3.2091 | LR: 2.37e-04 | GradNorm: 2.030
  Batch   40/48 | Loss: 3.2293 | LR: 2.34e-04 | GradNorm: 4.118
  Batch   44/48 | Loss: 3.1361 | LR: 2.31e-04 | GradNorm: 1.564
Epoch 4/10: Train=16.71%, Val=12.17%, Gap=4.54%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2006 | LR: 2.28e-04 | GradNorm: 4.947
  Batch    4/48 | Loss: 3.1363 | LR: 2.25e-04 | GradNorm: 2.401
  Batch    8/48 | Loss: 3.1379 | LR: 2.22e-04 | GradNorm: 3.934
  Batch   12/48 | Loss: 3.1512 | LR: 2.18e-04 | GradNorm: 7.196
  Batch   16/48 | Loss: 3.1530 | LR: 2.15e-04 | GradNorm: 3.015
  Batch   20/48 | Loss: 3.1476 | LR: 2.11e-04 | GradNorm: 6.308
  Batch   24/48 | Loss: 3.1261 | LR: 2.08e-04 | GradNorm: 4.694
  Batch   28/48 | Loss: 3.0893 | LR: 2.04e-04 | GradNorm: 4.765
  Batch   32/48 | Loss: 3.0549 | LR: 2.00e-04 | GradNorm: 3.073
  Batch   36/48 | Loss: 3.1275 | LR: 1.96e-04 | GradNorm: 4.375
  Batch   40/48 | Loss: 3.0725 | LR: 1.92e-04 | GradNorm: 2.544
  Batch   44/48 | Loss: 3.0076 | LR: 1.88e-04 | GradNorm: 2.859
Epoch 5/10: Train=21.27%, Val=16.02%, Gap=5.25%, LR=1.85e-04
  Batch    0/48 | Loss: 2.9643 | LR: 1.84e-04 | GradNorm: 2.584
  Batch    4/48 | Loss: 2.9752 | LR: 1.80e-04 | GradNorm: 7.189
  Batch    8/48 | Loss: 2.9422 | LR: 1.76e-04 | GradNorm: 4.012
  Batch   12/48 | Loss: 3.0118 | LR: 1.72e-04 | GradNorm: 8.462
  Batch   16/48 | Loss: 2.9864 | LR: 1.68e-04 | GradNorm: 8.071
  Batch   20/48 | Loss: 2.9631 | LR: 1.63e-04 | GradNorm: 6.151
  Batch   24/48 | Loss: 2.9414 | LR: 1.59e-04 | GradNorm: 5.295
  Batch   28/48 | Loss: 2.8661 | LR: 1.55e-04 | GradNorm: 3.683
  Batch   32/48 | Loss: 2.9017 | LR: 1.50e-04 | GradNorm: 6.025
  Batch   36/48 | Loss: 2.9257 | LR: 1.46e-04 | GradNorm: 4.771
  Batch   40/48 | Loss: 2.8729 | LR: 1.42e-04 | GradNorm: 4.002
  Batch   44/48 | Loss: 2.9391 | LR: 1.37e-04 | GradNorm: 6.478
Epoch 6/10: Train=26.22%, Val=18.92%, Gap=7.30%, LR=1.34e-04
  Batch    0/48 | Loss: 2.8720 | LR: 1.33e-04 | GradNorm: 4.745
  Batch    4/48 | Loss: 2.8691 | LR: 1.29e-04 | GradNorm: 6.306
  Batch    8/48 | Loss: 2.8361 | LR: 1.24e-04 | GradNorm: 3.296
  Batch   12/48 | Loss: 2.7670 | LR: 1.20e-04 | GradNorm: 4.067
  Batch   16/48 | Loss: 2.7860 | LR: 1.16e-04 | GradNorm: 1.863
  Batch   20/48 | Loss: 2.8168 | LR: 1.11e-04 | GradNorm: 3.714
  Batch   24/48 | Loss: 2.8389 | LR: 1.07e-04 | GradNorm: 4.990
  Batch   28/48 | Loss: 2.8146 | LR: 1.03e-04 | GradNorm: 3.493
  Batch   32/48 | Loss: 2.8261 | LR: 9.83e-05 | GradNorm: 7.333
  Batch   36/48 | Loss: 2.8289 | LR: 9.41e-05 | GradNorm: 5.296
  Batch   40/48 | Loss: 2.7998 | LR: 9.00e-05 | GradNorm: 3.632
  Batch   44/48 | Loss: 2.7810 | LR: 8.59e-05 | GradNorm: 3.182
Epoch 7/10: Train=30.67%, Val=18.84%, Gap=11.83%, LR=8.28e-05
  Batch    0/48 | Loss: 2.7638 | LR: 8.18e-05 | GradNorm: 3.803
  Batch    4/48 | Loss: 2.7312 | LR: 7.78e-05 | GradNorm: 4.086
  Batch    8/48 | Loss: 2.7578 | LR: 7.38e-05 | GradNorm: 7.194
  Batch   12/48 | Loss: 2.8042 | LR: 7.00e-05 | GradNorm: 6.923
  Batch   16/48 | Loss: 2.7674 | LR: 6.61e-05 | GradNorm: 4.091
  Batch   20/48 | Loss: 2.6995 | LR: 6.24e-05 | GradNorm: 4.693
  Batch   24/48 | Loss: 2.6836 | LR: 5.87e-05 | GradNorm: 3.769
  Batch   28/48 | Loss: 2.7239 | LR: 5.51e-05 | GradNorm: 5.736
  Batch   32/48 | Loss: 2.7043 | LR: 5.17e-05 | GradNorm: 3.506
  Batch   36/48 | Loss: 2.7045 | LR: 4.82e-05 | GradNorm: 3.295
  Batch   40/48 | Loss: 2.6505 | LR: 4.49e-05 | GradNorm: 9.736
  Batch   44/48 | Loss: 2.6909 | LR: 4.17e-05 | GradNorm: 3.722
Epoch 8/10: Train=33.57%, Val=20.29%, Gap=13.28%, LR=3.93e-05
  Batch    0/48 | Loss: 2.6538 | LR: 3.86e-05 | GradNorm: 2.722
  Batch    4/48 | Loss: 2.6577 | LR: 3.55e-05 | GradNorm: 6.129
  Batch    8/48 | Loss: 2.7312 | LR: 3.26e-05 | GradNorm: 4.064
  Batch   12/48 | Loss: 2.6715 | LR: 2.98e-05 | GradNorm: 8.050
  Batch   16/48 | Loss: 2.6310 | LR: 2.71e-05 | GradNorm: 10.456
  Batch   20/48 | Loss: 2.6268 | LR: 2.45e-05 | GradNorm: 5.916
  Batch   24/48 | Loss: 2.6488 | LR: 2.21e-05 | GradNorm: 4.098
  Batch   28/48 | Loss: 2.6844 | LR: 1.97e-05 | GradNorm: 6.193
  Batch   32/48 | Loss: 2.6486 | LR: 1.75e-05 | GradNorm: 5.956
  Batch   36/48 | Loss: 2.6529 | LR: 1.54e-05 | GradNorm: 5.037
  Batch   40/48 | Loss: 2.6457 | LR: 1.34e-05 | GradNorm: 5.277
  Batch   44/48 | Loss: 2.6563 | LR: 1.16e-05 | GradNorm: 4.814
Epoch 9/10: Train=35.54%, Val=20.60%, Gap=14.94%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6453 | LR: 9.88e-06 | GradNorm: 3.096
  Batch    4/48 | Loss: 2.6511 | LR: 8.31e-06 | GradNorm: 3.236
  Batch    8/48 | Loss: 2.6391 | LR: 6.86e-06 | GradNorm: 2.915
  Batch   12/48 | Loss: 2.6192 | LR: 5.56e-06 | GradNorm: 4.210
  Batch   16/48 | Loss: 2.6312 | LR: 4.39e-06 | GradNorm: 4.762
  Batch   20/48 | Loss: 2.6491 | LR: 3.36e-06 | GradNorm: 4.818
  Batch   24/48 | Loss: 2.6322 | LR: 2.46e-06 | GradNorm: 4.761
  Batch   28/48 | Loss: 2.6723 | LR: 1.72e-06 | GradNorm: 1.637
  Batch   32/48 | Loss: 2.6693 | LR: 1.11e-06 | GradNorm: 5.218
  Batch   36/48 | Loss: 2.6384 | LR: 6.42e-07 | GradNorm: 2.315
  Batch   40/48 | Loss: 2.6225 | LR: 3.20e-07 | GradNorm: 2.272
  Batch   44/48 | Loss: 2.6272 | LR: 1.40e-07 | GradNorm: 2.418
Epoch 10/10: Train=36.10%, Val=20.33%, Gap=15.77%, LR=1.00e-07
Best validation accuracy: 20.60%
