=== W&B Sweep Run: LR=0.002240 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.002240123862865081
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002240
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9691 | LR: 4.55e-05 | GradNorm: 1.744
  Batch    4/48 | Loss: 3.9370 | LR: 1.38e-04 | GradNorm: 0.868
  Batch    8/48 | Loss: 3.9219 | LR: 2.30e-04 | GradNorm: 0.518
  Batch   12/48 | Loss: 3.9107 | LR: 3.23e-04 | GradNorm: 0.409
  Batch   16/48 | Loss: 3.9214 | LR: 4.15e-04 | GradNorm: 0.469
  Batch   20/48 | Loss: 3.9210 | LR: 5.08e-04 | GradNorm: 0.532
  Batch   24/48 | Loss: 3.9111 | LR: 6.00e-04 | GradNorm: 0.531
  Batch   28/48 | Loss: 3.9040 | LR: 6.92e-04 | GradNorm: 0.554
  Batch   32/48 | Loss: 3.8530 | LR: 7.85e-04 | GradNorm: 1.430
  Batch   36/48 | Loss: 3.9737 | LR: 8.77e-04 | GradNorm: 1.582
  Batch   40/48 | Loss: 3.9122 | LR: 9.70e-04 | GradNorm: 0.546
  Batch   44/48 | Loss: 3.9101 | LR: 1.06e-03 | GradNorm: 0.630
Epoch 1/10: Train=2.25%, Val=3.43%, Gap=-1.18%, LR=1.13e-03
  Batch    0/48 | Loss: 3.9059 | LR: 1.15e-03 | GradNorm: 0.522
  Batch    4/48 | Loss: 3.8763 | LR: 1.25e-03 | GradNorm: 0.474
  Batch    8/48 | Loss: 3.8475 | LR: 1.34e-03 | GradNorm: 1.184
  Batch   12/48 | Loss: 3.7917 | LR: 1.43e-03 | GradNorm: 0.670
  Batch   16/48 | Loss: 3.8293 | LR: 1.52e-03 | GradNorm: 0.993
  Batch   20/48 | Loss: 3.8070 | LR: 1.62e-03 | GradNorm: 0.598
  Batch   24/48 | Loss: 3.7864 | LR: 1.71e-03 | GradNorm: 0.847
  Batch   28/48 | Loss: 3.8089 | LR: 1.80e-03 | GradNorm: 1.486
  Batch   32/48 | Loss: 3.6961 | LR: 1.89e-03 | GradNorm: 1.285
  Batch   36/48 | Loss: 3.9455 | LR: 1.99e-03 | GradNorm: 22.124
  Batch   40/48 | Loss: 3.6454 | LR: 2.08e-03 | GradNorm: 1.042
  Batch   44/48 | Loss: 3.8864 | LR: 2.17e-03 | GradNorm: 24.664
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.99%, Val=6.50%, Gap=-1.51%, LR=2.24e-03
  Batch    0/48 | Loss: 3.8971 | LR: 2.24e-03 | GradNorm: 31.067
  Batch    4/48 | Loss: 3.6006 | LR: 2.24e-03 | GradNorm: 0.610
  Batch    8/48 | Loss: 3.5522 | LR: 2.24e-03 | GradNorm: 0.530
  Batch   12/48 | Loss: 3.5590 | LR: 2.23e-03 | GradNorm: 0.635
  Batch   16/48 | Loss: 3.5716 | LR: 2.23e-03 | GradNorm: 0.881
  Batch   20/48 | Loss: 3.5166 | LR: 2.22e-03 | GradNorm: 0.606
  Batch   24/48 | Loss: 3.6380 | LR: 2.22e-03 | GradNorm: 13.715
  Batch   28/48 | Loss: 3.5564 | LR: 2.21e-03 | GradNorm: 1.353
  Batch   32/48 | Loss: 3.4929 | LR: 2.20e-03 | GradNorm: 0.888
  Batch   36/48 | Loss: 3.7296 | LR: 2.19e-03 | GradNorm: 9.968
  Batch   40/48 | Loss: 3.6437 | LR: 2.18e-03 | GradNorm: 1.238
  Batch   44/48 | Loss: 3.5697 | LR: 2.17e-03 | GradNorm: 1.569
Epoch 3/10: Train=8.47%, Val=8.22%, Gap=0.25%, LR=2.15e-03
  Batch    0/48 | Loss: 3.5207 | LR: 2.15e-03 | GradNorm: 0.898
  Batch    4/48 | Loss: 3.4777 | LR: 2.14e-03 | GradNorm: 0.797
  Batch    8/48 | Loss: 3.5028 | LR: 2.12e-03 | GradNorm: 0.915
  Batch   12/48 | Loss: 3.4924 | LR: 2.10e-03 | GradNorm: 1.307
  Batch   16/48 | Loss: 3.4959 | LR: 2.09e-03 | GradNorm: 1.813
  Batch   20/48 | Loss: 3.5251 | LR: 2.07e-03 | GradNorm: 0.813
  Batch   24/48 | Loss: 4.8736 | LR: 2.05e-03 | GradNorm: 2.770
  Batch   28/48 | Loss: 3.9471 | LR: 2.03e-03 | GradNorm: 0.878
  Batch   32/48 | Loss: 3.8758 | LR: 2.00e-03 | GradNorm: 0.834
  Batch   36/48 | Loss: 3.7717 | LR: 1.98e-03 | GradNorm: 1.073
  Batch   40/48 | Loss: 3.7918 | LR: 1.96e-03 | GradNorm: 1.064
  Batch   44/48 | Loss: 3.7444 | LR: 1.93e-03 | GradNorm: 0.564
Epoch 4/10: Train=7.01%, Val=4.69%, Gap=2.32%, LR=1.91e-03
  Batch    0/48 | Loss: 3.6894 | LR: 1.91e-03 | GradNorm: 0.923
  Batch    4/48 | Loss: 3.6711 | LR: 1.88e-03 | GradNorm: 4.504
  Batch    8/48 | Loss: 3.6220 | LR: 1.85e-03 | GradNorm: 2.226
  Batch   12/48 | Loss: 3.5535 | LR: 1.82e-03 | GradNorm: 1.301
  Batch   16/48 | Loss: 3.5324 | LR: 1.79e-03 | GradNorm: 0.632
  Batch   20/48 | Loss: 3.5109 | LR: 1.77e-03 | GradNorm: 0.530
  Batch   24/48 | Loss: 3.5613 | LR: 1.73e-03 | GradNorm: 1.651
  Batch   28/48 | Loss: 3.5096 | LR: 1.70e-03 | GradNorm: 0.921
  Batch   32/48 | Loss: 3.5139 | LR: 1.67e-03 | GradNorm: 1.867
  Batch   36/48 | Loss: 3.5428 | LR: 1.64e-03 | GradNorm: 0.968
  Batch   40/48 | Loss: 3.5211 | LR: 1.61e-03 | GradNorm: 0.975
  Batch   44/48 | Loss: 3.4832 | LR: 1.57e-03 | GradNorm: 1.957
Epoch 5/10: Train=9.73%, Val=9.42%, Gap=0.31%, LR=1.55e-03
  Batch    0/48 | Loss: 3.4263 | LR: 1.54e-03 | GradNorm: 0.525
  Batch    4/48 | Loss: 3.4290 | LR: 1.51e-03 | GradNorm: 0.785
  Batch    8/48 | Loss: 3.4060 | LR: 1.47e-03 | GradNorm: 0.795
  Batch   12/48 | Loss: 3.4260 | LR: 1.44e-03 | GradNorm: 0.767
  Batch   16/48 | Loss: 3.4015 | LR: 1.40e-03 | GradNorm: 0.446
  Batch   20/48 | Loss: 3.3963 | LR: 1.37e-03 | GradNorm: 0.843
  Batch   24/48 | Loss: 3.3967 | LR: 1.33e-03 | GradNorm: 0.870
  Batch   28/48 | Loss: 3.3907 | LR: 1.29e-03 | GradNorm: 1.235
  Batch   32/48 | Loss: 3.3736 | LR: 1.26e-03 | GradNorm: 0.935
  Batch   36/48 | Loss: 3.3791 | LR: 1.22e-03 | GradNorm: 0.570
  Batch   40/48 | Loss: 3.3661 | LR: 1.18e-03 | GradNorm: 1.328
  Batch   44/48 | Loss: 3.4072 | LR: 1.15e-03 | GradNorm: 0.624
Epoch 6/10: Train=13.13%, Val=8.90%, Gap=4.23%, LR=1.12e-03
  Batch    0/48 | Loss: 3.3036 | LR: 1.11e-03 | GradNorm: 1.183
  Batch    4/48 | Loss: 3.3480 | LR: 1.07e-03 | GradNorm: 1.465
  Batch    8/48 | Loss: 3.2999 | LR: 1.04e-03 | GradNorm: 1.303
  Batch   12/48 | Loss: 3.2998 | LR: 1.00e-03 | GradNorm: 2.048
  Batch   16/48 | Loss: 3.2639 | LR: 9.65e-04 | GradNorm: 1.832
  Batch   20/48 | Loss: 3.3261 | LR: 9.29e-04 | GradNorm: 3.327
  Batch   24/48 | Loss: 3.3562 | LR: 8.93e-04 | GradNorm: 3.205
  Batch   28/48 | Loss: 3.3017 | LR: 8.57e-04 | GradNorm: 1.254
  Batch   32/48 | Loss: 3.3358 | LR: 8.21e-04 | GradNorm: 1.857
  Batch   36/48 | Loss: 3.3463 | LR: 7.86e-04 | GradNorm: 2.575
  Batch   40/48 | Loss: 3.3883 | LR: 7.51e-04 | GradNorm: 5.133
  Batch   44/48 | Loss: 3.2683 | LR: 7.17e-04 | GradNorm: 1.458
Epoch 7/10: Train=15.53%, Val=12.07%, Gap=3.46%, LR=6.92e-04
  Batch    0/48 | Loss: 3.2825 | LR: 6.83e-04 | GradNorm: 1.677
  Batch    4/48 | Loss: 3.2534 | LR: 6.50e-04 | GradNorm: 2.379
  Batch    8/48 | Loss: 3.2681 | LR: 6.17e-04 | GradNorm: 1.126
  Batch   12/48 | Loss: 3.2869 | LR: 5.84e-04 | GradNorm: 2.302
  Batch   16/48 | Loss: 3.2631 | LR: 5.52e-04 | GradNorm: 1.380
  Batch   20/48 | Loss: 3.2205 | LR: 5.21e-04 | GradNorm: 1.412
  Batch   24/48 | Loss: 3.2546 | LR: 4.90e-04 | GradNorm: 2.067
  Batch   28/48 | Loss: 3.2609 | LR: 4.60e-04 | GradNorm: 1.151
  Batch   32/48 | Loss: 3.2393 | LR: 4.31e-04 | GradNorm: 1.661
  Batch   36/48 | Loss: 3.2400 | LR: 4.03e-04 | GradNorm: 1.562
  Batch   40/48 | Loss: 3.1934 | LR: 3.75e-04 | GradNorm: 1.204
  Batch   44/48 | Loss: 3.2518 | LR: 3.48e-04 | GradNorm: 1.888
Epoch 8/10: Train=16.77%, Val=10.94%, Gap=5.83%, LR=3.28e-04
  Batch    0/48 | Loss: 3.1619 | LR: 3.22e-04 | GradNorm: 0.490
  Batch    4/48 | Loss: 3.1528 | LR: 2.96e-04 | GradNorm: 0.607
  Batch    8/48 | Loss: 3.2455 | LR: 2.72e-04 | GradNorm: 1.130
  Batch   12/48 | Loss: 3.1879 | LR: 2.49e-04 | GradNorm: 1.674
  Batch   16/48 | Loss: 3.1511 | LR: 2.26e-04 | GradNorm: 0.547
  Batch   20/48 | Loss: 3.1591 | LR: 2.04e-04 | GradNorm: 1.437
  Batch   24/48 | Loss: 3.1772 | LR: 1.84e-04 | GradNorm: 1.305
  Batch   28/48 | Loss: 3.1827 | LR: 1.64e-04 | GradNorm: 0.767
  Batch   32/48 | Loss: 3.1841 | LR: 1.46e-04 | GradNorm: 1.125
  Batch   36/48 | Loss: 3.1535 | LR: 1.28e-04 | GradNorm: 1.925
  Batch   40/48 | Loss: 3.0954 | LR: 1.12e-04 | GradNorm: 0.469
  Batch   44/48 | Loss: 3.1529 | LR: 9.62e-05 | GradNorm: 1.104
Epoch 9/10: Train=19.11%, Val=10.66%, Gap=8.45%, LR=8.54e-05
  Batch    0/48 | Loss: 3.1776 | LR: 8.19e-05 | GradNorm: 0.432
  Batch    4/48 | Loss: 3.1674 | LR: 6.87e-05 | GradNorm: 0.497
  Batch    8/48 | Loss: 3.1345 | LR: 5.66e-05 | GradNorm: 0.611
  Batch   12/48 | Loss: 3.1502 | LR: 4.57e-05 | GradNorm: 0.621
  Batch   16/48 | Loss: 3.1168 | LR: 3.59e-05 | GradNorm: 0.680
  Batch   20/48 | Loss: 3.1405 | LR: 2.73e-05 | GradNorm: 1.042
  Batch   24/48 | Loss: 3.1500 | LR: 1.99e-05 | GradNorm: 1.137
  Batch   28/48 | Loss: 3.1139 | LR: 1.36e-05 | GradNorm: 0.501
  Batch   32/48 | Loss: 3.1713 | LR: 8.52e-06 | GradNorm: 0.676
  Batch   36/48 | Loss: 3.1344 | LR: 4.63e-06 | GradNorm: 1.090
  Batch   40/48 | Loss: 3.1310 | LR: 1.94e-06 | GradNorm: 0.650
  Batch   44/48 | Loss: 3.1476 | LR: 4.37e-07 | GradNorm: 0.715
Epoch 10/10: Train=20.03%, Val=10.49%, Gap=9.54%, LR=1.00e-07
Best validation accuracy: 12.07%
