=== W&B Sweep Run: LR=0.000444 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004442699312884005
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000444
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9548 | LR: 9.02e-06 | GradNorm: 1.866
  Batch    4/48 | Loss: 3.9142 | LR: 2.74e-05 | GradNorm: 0.814
  Batch    8/48 | Loss: 3.9241 | LR: 4.57e-05 | GradNorm: 0.887
  Batch   12/48 | Loss: 3.9157 | LR: 6.40e-05 | GradNorm: 0.706
  Batch   16/48 | Loss: 3.9187 | LR: 8.23e-05 | GradNorm: 0.641
  Batch   20/48 | Loss: 3.9105 | LR: 1.01e-04 | GradNorm: 0.587
  Batch   24/48 | Loss: 3.9113 | LR: 1.19e-04 | GradNorm: 0.678
  Batch   28/48 | Loss: 3.9032 | LR: 1.37e-04 | GradNorm: 0.587
  Batch   32/48 | Loss: 3.8753 | LR: 1.56e-04 | GradNorm: 0.604
  Batch   36/48 | Loss: 3.8291 | LR: 1.74e-04 | GradNorm: 0.916
  Batch   40/48 | Loss: 3.9802 | LR: 1.92e-04 | GradNorm: 4.769
  Batch   44/48 | Loss: 3.9683 | LR: 2.11e-04 | GradNorm: 4.505
Epoch 1/10: Train=2.79%, Val=4.36%, Gap=-1.57%, LR=2.24e-04
  Batch    0/48 | Loss: 3.8416 | LR: 2.29e-04 | GradNorm: 1.788
  Batch    4/48 | Loss: 3.8216 | LR: 2.47e-04 | GradNorm: 1.807
  Batch    8/48 | Loss: 3.7835 | LR: 2.66e-04 | GradNorm: 0.590
  Batch   12/48 | Loss: 3.7754 | LR: 2.84e-04 | GradNorm: 2.690
  Batch   16/48 | Loss: 3.7580 | LR: 3.02e-04 | GradNorm: 1.978
  Batch   20/48 | Loss: 3.7170 | LR: 3.21e-04 | GradNorm: 1.778
  Batch   24/48 | Loss: 3.6669 | LR: 3.39e-04 | GradNorm: 2.831
  Batch   28/48 | Loss: 3.6448 | LR: 3.57e-04 | GradNorm: 1.134
  Batch   32/48 | Loss: 3.5924 | LR: 3.76e-04 | GradNorm: 3.811
  Batch   36/48 | Loss: 3.5792 | LR: 3.94e-04 | GradNorm: 2.358
  Batch   40/48 | Loss: 3.6968 | LR: 4.12e-04 | GradNorm: 3.076
  Batch   44/48 | Loss: 3.5838 | LR: 4.31e-04 | GradNorm: 14.370
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.84%, Val=6.35%, Gap=0.49%, LR=4.44e-04
  Batch    0/48 | Loss: 3.5882 | LR: 4.44e-04 | GradNorm: 5.141
  Batch    4/48 | Loss: 3.5868 | LR: 4.44e-04 | GradNorm: 1.582
  Batch    8/48 | Loss: 3.4687 | LR: 4.44e-04 | GradNorm: 1.569
  Batch   12/48 | Loss: 3.5993 | LR: 4.43e-04 | GradNorm: 4.874
  Batch   16/48 | Loss: 3.5134 | LR: 4.42e-04 | GradNorm: 4.919
  Batch   20/48 | Loss: 3.4029 | LR: 4.41e-04 | GradNorm: 2.777
  Batch   24/48 | Loss: 3.3729 | LR: 4.40e-04 | GradNorm: 3.806
  Batch   28/48 | Loss: 3.2986 | LR: 4.38e-04 | GradNorm: 1.774
  Batch   32/48 | Loss: 3.3531 | LR: 4.36e-04 | GradNorm: 1.709
  Batch   36/48 | Loss: 3.3789 | LR: 4.34e-04 | GradNorm: 1.612
  Batch   40/48 | Loss: 3.3343 | LR: 4.32e-04 | GradNorm: 2.704
  Batch   44/48 | Loss: 3.3476 | LR: 4.29e-04 | GradNorm: 9.396
Epoch 3/10: Train=12.39%, Val=15.48%, Gap=-3.09%, LR=4.27e-04
  Batch    0/48 | Loss: 3.3054 | LR: 4.27e-04 | GradNorm: 3.473
  Batch    4/48 | Loss: 3.2657 | LR: 4.24e-04 | GradNorm: 2.432
  Batch    8/48 | Loss: 3.3775 | LR: 4.21e-04 | GradNorm: 6.236
  Batch   12/48 | Loss: 3.3624 | LR: 4.17e-04 | GradNorm: 4.724
  Batch   16/48 | Loss: 3.4326 | LR: 4.14e-04 | GradNorm: 6.811
  Batch   20/48 | Loss: 3.3612 | LR: 4.10e-04 | GradNorm: 4.305
  Batch   24/48 | Loss: 3.3227 | LR: 4.06e-04 | GradNorm: 3.478
  Batch   28/48 | Loss: 3.3013 | LR: 4.02e-04 | GradNorm: 3.435
  Batch   32/48 | Loss: 3.3942 | LR: 3.97e-04 | GradNorm: 3.771
  Batch   36/48 | Loss: 3.3065 | LR: 3.93e-04 | GradNorm: 3.963
  Batch   40/48 | Loss: 3.2702 | LR: 3.88e-04 | GradNorm: 1.446
  Batch   44/48 | Loss: 3.2125 | LR: 3.83e-04 | GradNorm: 2.124
Epoch 4/10: Train=14.76%, Val=14.54%, Gap=0.22%, LR=3.79e-04
  Batch    0/48 | Loss: 3.1862 | LR: 3.78e-04 | GradNorm: 1.842
  Batch    4/48 | Loss: 3.1857 | LR: 3.73e-04 | GradNorm: 3.289
  Batch    8/48 | Loss: 3.1599 | LR: 3.67e-04 | GradNorm: 2.676
  Batch   12/48 | Loss: 3.1203 | LR: 3.62e-04 | GradNorm: 2.423
  Batch   16/48 | Loss: 3.1710 | LR: 3.56e-04 | GradNorm: 1.703
  Batch   20/48 | Loss: 3.1086 | LR: 3.50e-04 | GradNorm: 2.572
  Batch   24/48 | Loss: 3.1311 | LR: 3.44e-04 | GradNorm: 2.184
  Batch   28/48 | Loss: 3.1254 | LR: 3.38e-04 | GradNorm: 2.278
  Batch   32/48 | Loss: 3.0992 | LR: 3.32e-04 | GradNorm: 2.844
  Batch   36/48 | Loss: 3.1566 | LR: 3.25e-04 | GradNorm: 3.052
  Batch   40/48 | Loss: 3.1713 | LR: 3.19e-04 | GradNorm: 3.454
  Batch   44/48 | Loss: 3.1210 | LR: 3.12e-04 | GradNorm: 3.219
Epoch 5/10: Train=19.60%, Val=14.24%, Gap=5.36%, LR=3.07e-04
  Batch    0/48 | Loss: 3.0766 | LR: 3.05e-04 | GradNorm: 2.480
  Batch    4/48 | Loss: 3.0398 | LR: 2.99e-04 | GradNorm: 4.198
  Batch    8/48 | Loss: 3.0334 | LR: 2.92e-04 | GradNorm: 2.716
  Batch   12/48 | Loss: 3.0588 | LR: 2.85e-04 | GradNorm: 3.025
  Batch   16/48 | Loss: 2.9847 | LR: 2.78e-04 | GradNorm: 2.484
  Batch   20/48 | Loss: 3.0023 | LR: 2.71e-04 | GradNorm: 3.245
  Batch   24/48 | Loss: 2.9900 | LR: 2.64e-04 | GradNorm: 1.778
  Batch   28/48 | Loss: 2.9350 | LR: 2.57e-04 | GradNorm: 2.783
  Batch   32/48 | Loss: 2.9243 | LR: 2.49e-04 | GradNorm: 2.900
  Batch   36/48 | Loss: 2.9639 | LR: 2.42e-04 | GradNorm: 3.575
  Batch   40/48 | Loss: 2.9190 | LR: 2.35e-04 | GradNorm: 2.533
  Batch   44/48 | Loss: 2.9883 | LR: 2.28e-04 | GradNorm: 4.171
Epoch 6/10: Train=24.01%, Val=12.90%, Gap=11.11%, LR=2.22e-04
  Batch    0/48 | Loss: 2.9910 | LR: 2.20e-04 | GradNorm: 9.438
  Batch    4/48 | Loss: 2.9284 | LR: 2.13e-04 | GradNorm: 5.656
  Batch    8/48 | Loss: 2.9105 | LR: 2.06e-04 | GradNorm: 3.631
  Batch   12/48 | Loss: 2.8177 | LR: 1.99e-04 | GradNorm: 2.935
  Batch   16/48 | Loss: 2.8429 | LR: 1.91e-04 | GradNorm: 2.549
  Batch   20/48 | Loss: 2.8485 | LR: 1.84e-04 | GradNorm: 2.863
  Batch   24/48 | Loss: 2.8738 | LR: 1.77e-04 | GradNorm: 3.620
  Batch   28/48 | Loss: 2.8580 | LR: 1.70e-04 | GradNorm: 1.954
  Batch   32/48 | Loss: 2.8779 | LR: 1.63e-04 | GradNorm: 4.460
  Batch   36/48 | Loss: 2.9079 | LR: 1.56e-04 | GradNorm: 4.216
  Batch   40/48 | Loss: 2.8547 | LR: 1.49e-04 | GradNorm: 4.185
  Batch   44/48 | Loss: 2.8086 | LR: 1.42e-04 | GradNorm: 2.465
Epoch 7/10: Train=28.01%, Val=16.46%, Gap=11.55%, LR=1.37e-04
  Batch    0/48 | Loss: 2.8193 | LR: 1.36e-04 | GradNorm: 3.617
  Batch    4/48 | Loss: 2.7898 | LR: 1.29e-04 | GradNorm: 4.319
  Batch    8/48 | Loss: 2.7458 | LR: 1.22e-04 | GradNorm: 2.023
  Batch   12/48 | Loss: 2.8207 | LR: 1.16e-04 | GradNorm: 2.944
  Batch   16/48 | Loss: 2.8038 | LR: 1.10e-04 | GradNorm: 3.717
  Batch   20/48 | Loss: 2.7351 | LR: 1.03e-04 | GradNorm: 2.583
  Batch   24/48 | Loss: 2.7338 | LR: 9.73e-05 | GradNorm: 4.479
  Batch   28/48 | Loss: 2.7433 | LR: 9.14e-05 | GradNorm: 2.691
  Batch   32/48 | Loss: 2.7615 | LR: 8.56e-05 | GradNorm: 4.337
  Batch   36/48 | Loss: 2.7354 | LR: 7.99e-05 | GradNorm: 2.471
  Batch   40/48 | Loss: 2.6609 | LR: 7.44e-05 | GradNorm: 2.011
  Batch   44/48 | Loss: 2.7058 | LR: 6.90e-05 | GradNorm: 1.295
Epoch 8/10: Train=32.00%, Val=15.83%, Gap=16.17%, LR=6.51e-05
  Batch    0/48 | Loss: 2.6790 | LR: 6.39e-05 | GradNorm: 2.594
  Batch    4/48 | Loss: 2.6940 | LR: 5.89e-05 | GradNorm: 3.182
  Batch    8/48 | Loss: 2.7308 | LR: 5.40e-05 | GradNorm: 2.272
  Batch   12/48 | Loss: 2.6796 | LR: 4.94e-05 | GradNorm: 4.394
  Batch   16/48 | Loss: 2.6233 | LR: 4.49e-05 | GradNorm: 2.501
  Batch   20/48 | Loss: 2.6302 | LR: 4.06e-05 | GradNorm: 3.997
  Batch   24/48 | Loss: 2.6682 | LR: 3.65e-05 | GradNorm: 3.337
  Batch   28/48 | Loss: 2.6874 | LR: 3.26e-05 | GradNorm: 2.616
  Batch   32/48 | Loss: 2.6620 | LR: 2.90e-05 | GradNorm: 2.989
  Batch   36/48 | Loss: 2.6536 | LR: 2.55e-05 | GradNorm: 3.585
  Batch   40/48 | Loss: 2.6458 | LR: 2.22e-05 | GradNorm: 3.666
  Batch   44/48 | Loss: 2.6683 | LR: 1.92e-05 | GradNorm: 1.945
Epoch 9/10: Train=34.50%, Val=17.75%, Gap=16.75%, LR=1.70e-05
  Batch    0/48 | Loss: 2.6632 | LR: 1.63e-05 | GradNorm: 2.659
  Batch    4/48 | Loss: 2.6611 | LR: 1.37e-05 | GradNorm: 3.317
  Batch    8/48 | Loss: 2.6217 | LR: 1.13e-05 | GradNorm: 1.821
  Batch   12/48 | Loss: 2.6177 | LR: 9.14e-06 | GradNorm: 2.076
  Batch   16/48 | Loss: 2.6518 | LR: 7.20e-06 | GradNorm: 3.330
  Batch   20/48 | Loss: 2.6324 | LR: 5.50e-06 | GradNorm: 2.706
  Batch   24/48 | Loss: 2.6374 | LR: 4.02e-06 | GradNorm: 2.940
  Batch   28/48 | Loss: 2.6720 | LR: 2.78e-06 | GradNorm: 1.455
  Batch   32/48 | Loss: 2.6740 | LR: 1.77e-06 | GradNorm: 2.226
  Batch   36/48 | Loss: 2.6443 | LR: 9.99e-07 | GradNorm: 1.358
  Batch   40/48 | Loss: 2.6039 | LR: 4.64e-07 | GradNorm: 2.137
  Batch   44/48 | Loss: 2.6266 | LR: 1.67e-07 | GradNorm: 1.898
Epoch 10/10: Train=35.76%, Val=17.54%, Gap=18.22%, LR=1.00e-07
Best validation accuracy: 17.75%
