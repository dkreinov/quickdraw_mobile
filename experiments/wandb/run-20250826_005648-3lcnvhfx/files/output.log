=== W&B Sweep Run: LR=0.000365 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003649429005899391
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000365
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9626 | LR: 7.41e-06 | GradNorm: 1.879
  Batch    4/48 | Loss: 3.9274 | LR: 2.25e-05 | GradNorm: 1.180
  Batch    8/48 | Loss: 3.9243 | LR: 3.75e-05 | GradNorm: 0.900
  Batch   12/48 | Loss: 3.9190 | LR: 5.26e-05 | GradNorm: 0.770
  Batch   16/48 | Loss: 3.9196 | LR: 6.76e-05 | GradNorm: 0.629
  Batch   20/48 | Loss: 3.9142 | LR: 8.27e-05 | GradNorm: 0.630
  Batch   24/48 | Loss: 3.9142 | LR: 9.77e-05 | GradNorm: 0.620
  Batch   28/48 | Loss: 3.9156 | LR: 1.13e-04 | GradNorm: 0.542
  Batch   32/48 | Loss: 3.9084 | LR: 1.28e-04 | GradNorm: 0.503
  Batch   36/48 | Loss: 3.9095 | LR: 1.43e-04 | GradNorm: 0.532
  Batch   40/48 | Loss: 3.9053 | LR: 1.58e-04 | GradNorm: 0.577
  Batch   44/48 | Loss: 3.8799 | LR: 1.73e-04 | GradNorm: 0.616
Epoch 1/10: Train=2.37%, Val=4.58%, Gap=-2.21%, LR=1.84e-04
  Batch    0/48 | Loss: 3.8487 | LR: 1.88e-04 | GradNorm: 2.210
  Batch    4/48 | Loss: 3.7961 | LR: 2.03e-04 | GradNorm: 2.120
  Batch    8/48 | Loss: 3.7689 | LR: 2.18e-04 | GradNorm: 3.374
  Batch   12/48 | Loss: 3.7283 | LR: 2.33e-04 | GradNorm: 3.064
  Batch   16/48 | Loss: 3.7624 | LR: 2.48e-04 | GradNorm: 4.062
  Batch   20/48 | Loss: 3.7152 | LR: 2.63e-04 | GradNorm: 3.371
  Batch   24/48 | Loss: 3.6497 | LR: 2.78e-04 | GradNorm: 3.378
  Batch   28/48 | Loss: 3.7116 | LR: 2.93e-04 | GradNorm: 5.514
  Batch   32/48 | Loss: 3.6885 | LR: 3.08e-04 | GradNorm: 11.314
  Batch   36/48 | Loss: 3.6109 | LR: 3.24e-04 | GradNorm: 2.663
  Batch   40/48 | Loss: 3.7112 | LR: 3.39e-04 | GradNorm: 4.017
  Batch   44/48 | Loss: 3.6321 | LR: 3.54e-04 | GradNorm: 3.483
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.89%, Val=5.67%, Gap=1.22%, LR=3.65e-04
  Batch    0/48 | Loss: 3.8050 | LR: 3.65e-04 | GradNorm: 12.770
  Batch    4/48 | Loss: 3.7159 | LR: 3.65e-04 | GradNorm: 5.771
  Batch    8/48 | Loss: 3.4779 | LR: 3.64e-04 | GradNorm: 1.305
  Batch   12/48 | Loss: 3.5297 | LR: 3.64e-04 | GradNorm: 4.435
  Batch   16/48 | Loss: 3.5259 | LR: 3.63e-04 | GradNorm: 3.193
  Batch   20/48 | Loss: 3.5288 | LR: 3.62e-04 | GradNorm: 8.482
  Batch   24/48 | Loss: 3.4095 | LR: 3.61e-04 | GradNorm: 2.806
  Batch   28/48 | Loss: 3.3250 | LR: 3.60e-04 | GradNorm: 2.730
  Batch   32/48 | Loss: 3.3745 | LR: 3.58e-04 | GradNorm: 3.530
  Batch   36/48 | Loss: 3.3362 | LR: 3.57e-04 | GradNorm: 1.627
  Batch   40/48 | Loss: 3.3161 | LR: 3.55e-04 | GradNorm: 2.943
  Batch   44/48 | Loss: 3.2669 | LR: 3.53e-04 | GradNorm: 1.435
Epoch 3/10: Train=13.05%, Val=9.15%, Gap=3.90%, LR=3.51e-04
  Batch    0/48 | Loss: 3.3744 | LR: 3.50e-04 | GradNorm: 5.254
  Batch    4/48 | Loss: 3.3302 | LR: 3.48e-04 | GradNorm: 5.155
  Batch    8/48 | Loss: 3.2552 | LR: 3.45e-04 | GradNorm: 2.608
  Batch   12/48 | Loss: 3.1601 | LR: 3.43e-04 | GradNorm: 0.737
  Batch   16/48 | Loss: 3.2036 | LR: 3.40e-04 | GradNorm: 2.336
  Batch   20/48 | Loss: 3.2097 | LR: 3.37e-04 | GradNorm: 5.150
  Batch   24/48 | Loss: 3.1633 | LR: 3.33e-04 | GradNorm: 2.238
  Batch   28/48 | Loss: 3.1578 | LR: 3.30e-04 | GradNorm: 3.958
  Batch   32/48 | Loss: 3.1678 | LR: 3.26e-04 | GradNorm: 2.619
  Batch   36/48 | Loss: 3.1474 | LR: 3.23e-04 | GradNorm: 2.786
  Batch   40/48 | Loss: 3.1363 | LR: 3.19e-04 | GradNorm: 1.025
  Batch   44/48 | Loss: 3.0901 | LR: 3.15e-04 | GradNorm: 2.307
Epoch 4/10: Train=18.53%, Val=14.03%, Gap=4.50%, LR=3.12e-04
  Batch    0/48 | Loss: 3.0760 | LR: 3.10e-04 | GradNorm: 3.206
  Batch    4/48 | Loss: 3.0248 | LR: 3.06e-04 | GradNorm: 3.105
  Batch    8/48 | Loss: 3.0984 | LR: 3.02e-04 | GradNorm: 5.219
  Batch   12/48 | Loss: 3.0222 | LR: 2.97e-04 | GradNorm: 2.651
  Batch   16/48 | Loss: 3.0720 | LR: 2.92e-04 | GradNorm: 3.292
  Batch   20/48 | Loss: 3.0881 | LR: 2.88e-04 | GradNorm: 5.591
  Batch   24/48 | Loss: 3.0363 | LR: 2.83e-04 | GradNorm: 3.868
  Batch   28/48 | Loss: 2.9839 | LR: 2.78e-04 | GradNorm: 4.764
  Batch   32/48 | Loss: 2.9545 | LR: 2.72e-04 | GradNorm: 3.556
  Batch   36/48 | Loss: 3.0263 | LR: 2.67e-04 | GradNorm: 6.467
  Batch   40/48 | Loss: 3.0021 | LR: 2.62e-04 | GradNorm: 4.826
  Batch   44/48 | Loss: 2.9259 | LR: 2.56e-04 | GradNorm: 3.563
Epoch 5/10: Train=24.17%, Val=13.96%, Gap=10.21%, LR=2.52e-04
  Batch    0/48 | Loss: 2.8994 | LR: 2.51e-04 | GradNorm: 4.812
  Batch    4/48 | Loss: 2.8212 | LR: 2.45e-04 | GradNorm: 2.891
  Batch    8/48 | Loss: 2.8652 | LR: 2.40e-04 | GradNorm: 2.846
  Batch   12/48 | Loss: 2.9555 | LR: 2.34e-04 | GradNorm: 10.065
  Batch   16/48 | Loss: 2.8595 | LR: 2.28e-04 | GradNorm: 5.073
  Batch   20/48 | Loss: 2.8017 | LR: 2.22e-04 | GradNorm: 1.710
  Batch   24/48 | Loss: 2.7927 | LR: 2.17e-04 | GradNorm: 2.970
  Batch   28/48 | Loss: 2.8017 | LR: 2.11e-04 | GradNorm: 4.499
  Batch   32/48 | Loss: 2.7749 | LR: 2.05e-04 | GradNorm: 5.023
  Batch   36/48 | Loss: 2.7932 | LR: 1.99e-04 | GradNorm: 2.558
  Batch   40/48 | Loss: 2.7470 | LR: 1.93e-04 | GradNorm: 2.054
  Batch   44/48 | Loss: 2.8061 | LR: 1.87e-04 | GradNorm: 3.881
Epoch 6/10: Train=29.92%, Val=19.26%, Gap=10.66%, LR=1.83e-04
  Batch    0/48 | Loss: 2.7565 | LR: 1.81e-04 | GradNorm: 5.838
  Batch    4/48 | Loss: 2.7184 | LR: 1.75e-04 | GradNorm: 4.140
  Batch    8/48 | Loss: 2.7132 | LR: 1.69e-04 | GradNorm: 4.621
  Batch   12/48 | Loss: 2.6375 | LR: 1.63e-04 | GradNorm: 4.250
  Batch   16/48 | Loss: 2.6773 | LR: 1.57e-04 | GradNorm: 4.643
  Batch   20/48 | Loss: 2.6806 | LR: 1.51e-04 | GradNorm: 3.635
  Batch   24/48 | Loss: 2.7057 | LR: 1.45e-04 | GradNorm: 3.919
  Batch   28/48 | Loss: 2.7188 | LR: 1.40e-04 | GradNorm: 4.913
  Batch   32/48 | Loss: 2.6687 | LR: 1.34e-04 | GradNorm: 2.877
  Batch   36/48 | Loss: 2.6875 | LR: 1.28e-04 | GradNorm: 4.804
  Batch   40/48 | Loss: 2.6548 | LR: 1.22e-04 | GradNorm: 4.026
  Batch   44/48 | Loss: 2.6288 | LR: 1.17e-04 | GradNorm: 3.558
Epoch 7/10: Train=34.60%, Val=22.94%, Gap=11.66%, LR=1.13e-04
  Batch    0/48 | Loss: 2.6144 | LR: 1.11e-04 | GradNorm: 2.480
  Batch    4/48 | Loss: 2.5765 | LR: 1.06e-04 | GradNorm: 2.940
  Batch    8/48 | Loss: 2.6191 | LR: 1.01e-04 | GradNorm: 7.589
  Batch   12/48 | Loss: 2.6111 | LR: 9.52e-05 | GradNorm: 5.885
  Batch   16/48 | Loss: 2.6172 | LR: 9.00e-05 | GradNorm: 3.010
  Batch   20/48 | Loss: 2.5692 | LR: 8.49e-05 | GradNorm: 4.932
  Batch   24/48 | Loss: 2.5525 | LR: 7.99e-05 | GradNorm: 6.092
  Batch   28/48 | Loss: 2.5702 | LR: 7.51e-05 | GradNorm: 5.542
  Batch   32/48 | Loss: 2.5793 | LR: 7.03e-05 | GradNorm: 3.617
  Batch   36/48 | Loss: 2.5715 | LR: 6.56e-05 | GradNorm: 6.036
  Batch   40/48 | Loss: 2.5182 | LR: 6.11e-05 | GradNorm: 7.384
  Batch   44/48 | Loss: 2.5657 | LR: 5.67e-05 | GradNorm: 5.184
Epoch 8/10: Train=37.85%, Val=23.62%, Gap=14.23%, LR=5.35e-05
  Batch    0/48 | Loss: 2.5209 | LR: 5.25e-05 | GradNorm: 4.818
  Batch    4/48 | Loss: 2.5135 | LR: 4.84e-05 | GradNorm: 3.492
  Batch    8/48 | Loss: 2.5646 | LR: 4.44e-05 | GradNorm: 2.648
  Batch   12/48 | Loss: 2.5061 | LR: 4.06e-05 | GradNorm: 5.212
  Batch   16/48 | Loss: 2.4509 | LR: 3.69e-05 | GradNorm: 3.145
  Batch   20/48 | Loss: 2.4815 | LR: 3.34e-05 | GradNorm: 5.083
  Batch   24/48 | Loss: 2.5120 | LR: 3.00e-05 | GradNorm: 6.267
  Batch   28/48 | Loss: 2.5209 | LR: 2.68e-05 | GradNorm: 5.995
  Batch   32/48 | Loss: 2.4857 | LR: 2.38e-05 | GradNorm: 6.300
  Batch   36/48 | Loss: 2.4784 | LR: 2.09e-05 | GradNorm: 3.418
  Batch   40/48 | Loss: 2.4884 | LR: 1.83e-05 | GradNorm: 4.256
  Batch   44/48 | Loss: 2.5073 | LR: 1.57e-05 | GradNorm: 3.705
Epoch 9/10: Train=40.47%, Val=24.94%, Gap=15.53%, LR=1.40e-05
  Batch    0/48 | Loss: 2.4697 | LR: 1.34e-05 | GradNorm: 3.673
  Batch    4/48 | Loss: 2.4924 | LR: 1.13e-05 | GradNorm: 2.273
  Batch    8/48 | Loss: 2.4517 | LR: 9.31e-06 | GradNorm: 3.368
  Batch   12/48 | Loss: 2.4563 | LR: 7.53e-06 | GradNorm: 2.230
  Batch   16/48 | Loss: 2.4591 | LR: 5.94e-06 | GradNorm: 1.957
  Batch   20/48 | Loss: 2.4790 | LR: 4.53e-06 | GradNorm: 4.093
  Batch   24/48 | Loss: 2.4842 | LR: 3.32e-06 | GradNorm: 2.075
  Batch   28/48 | Loss: 2.5036 | LR: 2.30e-06 | GradNorm: 3.163
  Batch   32/48 | Loss: 2.4932 | LR: 1.47e-06 | GradNorm: 2.909
  Batch   36/48 | Loss: 2.4631 | LR: 8.38e-07 | GradNorm: 2.280
  Batch   40/48 | Loss: 2.4460 | LR: 3.99e-07 | GradNorm: 2.376
  Batch   44/48 | Loss: 2.4443 | LR: 1.55e-07 | GradNorm: 2.716
Epoch 10/10: Train=41.58%, Val=25.03%, Gap=16.55%, LR=1.00e-07
Best validation accuracy: 25.03%
