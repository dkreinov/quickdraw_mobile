=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000268787208702135
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9854 | LR: 5.46e-06 | GradNorm: 1.770
  Batch    4/48 | Loss: 3.9413 | LR: 1.65e-05 | GradNorm: 1.204
  Batch    8/48 | Loss: 3.9156 | LR: 2.76e-05 | GradNorm: 0.760
  Batch   12/48 | Loss: 3.9175 | LR: 3.87e-05 | GradNorm: 0.798
  Batch   16/48 | Loss: 3.9205 | LR: 4.98e-05 | GradNorm: 0.679
  Batch   20/48 | Loss: 3.9126 | LR: 6.09e-05 | GradNorm: 0.611
  Batch   24/48 | Loss: 3.9122 | LR: 7.20e-05 | GradNorm: 0.630
  Batch   28/48 | Loss: 3.9204 | LR: 8.31e-05 | GradNorm: 0.601
  Batch   32/48 | Loss: 3.9124 | LR: 9.42e-05 | GradNorm: 0.537
  Batch   36/48 | Loss: 3.9128 | LR: 1.05e-04 | GradNorm: 0.550
  Batch   40/48 | Loss: 3.9000 | LR: 1.16e-04 | GradNorm: 0.528
  Batch   44/48 | Loss: 3.8881 | LR: 1.27e-04 | GradNorm: 0.604
Epoch 1/10: Train=2.34%, Val=4.10%, Gap=-1.76%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8510 | LR: 1.39e-04 | GradNorm: 0.854
  Batch    4/48 | Loss: 3.8014 | LR: 1.50e-04 | GradNorm: 1.839
  Batch    8/48 | Loss: 3.9162 | LR: 1.61e-04 | GradNorm: 8.748
  Batch   12/48 | Loss: 3.9331 | LR: 1.72e-04 | GradNorm: 8.093
  Batch   16/48 | Loss: 3.8438 | LR: 1.83e-04 | GradNorm: 4.998
  Batch   20/48 | Loss: 3.8629 | LR: 1.94e-04 | GradNorm: 5.234
  Batch   24/48 | Loss: 3.8238 | LR: 2.05e-04 | GradNorm: 3.358
  Batch   28/48 | Loss: 3.8225 | LR: 2.16e-04 | GradNorm: 3.248
  Batch   32/48 | Loss: 3.7438 | LR: 2.27e-04 | GradNorm: 2.739
  Batch   36/48 | Loss: 3.6775 | LR: 2.38e-04 | GradNorm: 0.754
  Batch   40/48 | Loss: 3.6922 | LR: 2.49e-04 | GradNorm: 3.143
  Batch   44/48 | Loss: 3.6451 | LR: 2.60e-04 | GradNorm: 5.523
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.47%, Val=8.13%, Gap=-2.66%, LR=2.69e-04
  Batch    0/48 | Loss: 3.5389 | LR: 2.69e-04 | GradNorm: 1.412
  Batch    4/48 | Loss: 3.5428 | LR: 2.69e-04 | GradNorm: 2.862
  Batch    8/48 | Loss: 3.4895 | LR: 2.68e-04 | GradNorm: 4.531
  Batch   12/48 | Loss: 3.4940 | LR: 2.68e-04 | GradNorm: 2.662
  Batch   16/48 | Loss: 3.4567 | LR: 2.67e-04 | GradNorm: 3.399
  Batch   20/48 | Loss: 3.4809 | LR: 2.67e-04 | GradNorm: 8.672
  Batch   24/48 | Loss: 3.4162 | LR: 2.66e-04 | GradNorm: 3.703
  Batch   28/48 | Loss: 3.3512 | LR: 2.65e-04 | GradNorm: 3.629
  Batch   32/48 | Loss: 3.4295 | LR: 2.64e-04 | GradNorm: 6.770
  Batch   36/48 | Loss: 3.3867 | LR: 2.63e-04 | GradNorm: 3.569
  Batch   40/48 | Loss: 3.3912 | LR: 2.61e-04 | GradNorm: 6.062
  Batch   44/48 | Loss: 3.3439 | LR: 2.60e-04 | GradNorm: 2.585
Epoch 3/10: Train=13.07%, Val=9.56%, Gap=3.51%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3473 | LR: 2.58e-04 | GradNorm: 3.750
  Batch    4/48 | Loss: 3.3092 | LR: 2.56e-04 | GradNorm: 2.033
  Batch    8/48 | Loss: 3.2939 | LR: 2.54e-04 | GradNorm: 3.116
  Batch   12/48 | Loss: 3.2491 | LR: 2.52e-04 | GradNorm: 2.390
  Batch   16/48 | Loss: 3.2434 | LR: 2.50e-04 | GradNorm: 2.453
  Batch   20/48 | Loss: 3.2548 | LR: 2.48e-04 | GradNorm: 4.694
  Batch   24/48 | Loss: 3.2088 | LR: 2.46e-04 | GradNorm: 1.379
  Batch   28/48 | Loss: 3.1838 | LR: 2.43e-04 | GradNorm: 1.099
  Batch   32/48 | Loss: 3.3023 | LR: 2.40e-04 | GradNorm: 8.381
  Batch   36/48 | Loss: 3.2226 | LR: 2.38e-04 | GradNorm: 2.987
  Batch   40/48 | Loss: 3.2171 | LR: 2.35e-04 | GradNorm: 4.990
  Batch   44/48 | Loss: 3.1740 | LR: 2.32e-04 | GradNorm: 3.081
Epoch 4/10: Train=16.51%, Val=10.19%, Gap=6.32%, LR=2.29e-04
  Batch    0/48 | Loss: 3.1943 | LR: 2.29e-04 | GradNorm: 5.178
  Batch    4/48 | Loss: 3.1432 | LR: 2.25e-04 | GradNorm: 4.403
  Batch    8/48 | Loss: 3.1117 | LR: 2.22e-04 | GradNorm: 2.162
  Batch   12/48 | Loss: 3.1221 | LR: 2.19e-04 | GradNorm: 3.548
  Batch   16/48 | Loss: 3.2261 | LR: 2.15e-04 | GradNorm: 3.709
  Batch   20/48 | Loss: 3.1547 | LR: 2.12e-04 | GradNorm: 4.022
  Batch   24/48 | Loss: 3.1620 | LR: 2.08e-04 | GradNorm: 5.083
  Batch   28/48 | Loss: 3.1293 | LR: 2.04e-04 | GradNorm: 3.745
  Batch   32/48 | Loss: 3.1012 | LR: 2.01e-04 | GradNorm: 2.344
  Batch   36/48 | Loss: 3.1442 | LR: 1.97e-04 | GradNorm: 2.791
  Batch   40/48 | Loss: 3.1335 | LR: 1.93e-04 | GradNorm: 2.722
  Batch   44/48 | Loss: 3.1106 | LR: 1.89e-04 | GradNorm: 4.803
Epoch 5/10: Train=19.84%, Val=14.26%, Gap=5.58%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0582 | LR: 1.85e-04 | GradNorm: 4.398
  Batch    4/48 | Loss: 3.0002 | LR: 1.81e-04 | GradNorm: 2.219
  Batch    8/48 | Loss: 3.0122 | LR: 1.77e-04 | GradNorm: 1.914
  Batch   12/48 | Loss: 3.0072 | LR: 1.72e-04 | GradNorm: 2.645
  Batch   16/48 | Loss: 2.9863 | LR: 1.68e-04 | GradNorm: 2.400
  Batch   20/48 | Loss: 3.0280 | LR: 1.64e-04 | GradNorm: 6.264
  Batch   24/48 | Loss: 2.9782 | LR: 1.60e-04 | GradNorm: 2.766
  Batch   28/48 | Loss: 2.9058 | LR: 1.55e-04 | GradNorm: 3.572
  Batch   32/48 | Loss: 2.9039 | LR: 1.51e-04 | GradNorm: 2.795
  Batch   36/48 | Loss: 2.9396 | LR: 1.47e-04 | GradNorm: 6.044
  Batch   40/48 | Loss: 2.9383 | LR: 1.42e-04 | GradNorm: 3.886
  Batch   44/48 | Loss: 3.0407 | LR: 1.38e-04 | GradNorm: 9.699
Epoch 6/10: Train=24.57%, Val=15.91%, Gap=8.66%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9129 | LR: 1.33e-04 | GradNorm: 4.017
  Batch    4/48 | Loss: 2.8976 | LR: 1.29e-04 | GradNorm: 3.064
  Batch    8/48 | Loss: 2.9117 | LR: 1.25e-04 | GradNorm: 5.246
  Batch   12/48 | Loss: 2.8241 | LR: 1.20e-04 | GradNorm: 4.561
  Batch   16/48 | Loss: 2.8841 | LR: 1.16e-04 | GradNorm: 8.612
  Batch   20/48 | Loss: 2.8849 | LR: 1.11e-04 | GradNorm: 3.297
  Batch   24/48 | Loss: 2.9258 | LR: 1.07e-04 | GradNorm: 6.448
  Batch   28/48 | Loss: 2.9148 | LR: 1.03e-04 | GradNorm: 4.646
  Batch   32/48 | Loss: 2.8993 | LR: 9.86e-05 | GradNorm: 4.952
  Batch   36/48 | Loss: 2.8956 | LR: 9.44e-05 | GradNorm: 5.048
  Batch   40/48 | Loss: 2.8709 | LR: 9.02e-05 | GradNorm: 3.088
  Batch   44/48 | Loss: 2.8300 | LR: 8.61e-05 | GradNorm: 2.493
Epoch 7/10: Train=28.41%, Val=17.31%, Gap=11.10%, LR=8.30e-05
  Batch    0/48 | Loss: 2.8401 | LR: 8.20e-05 | GradNorm: 3.808
  Batch    4/48 | Loss: 2.8003 | LR: 7.80e-05 | GradNorm: 4.451
  Batch    8/48 | Loss: 2.8112 | LR: 7.40e-05 | GradNorm: 3.076
  Batch   12/48 | Loss: 2.8306 | LR: 7.01e-05 | GradNorm: 2.294
  Batch   16/48 | Loss: 2.8699 | LR: 6.63e-05 | GradNorm: 5.570
  Batch   20/48 | Loss: 2.7686 | LR: 6.26e-05 | GradNorm: 6.167
  Batch   24/48 | Loss: 2.7899 | LR: 5.89e-05 | GradNorm: 5.324
  Batch   28/48 | Loss: 2.8061 | LR: 5.53e-05 | GradNorm: 3.603
  Batch   32/48 | Loss: 2.7837 | LR: 5.18e-05 | GradNorm: 4.127
  Batch   36/48 | Loss: 2.7708 | LR: 4.84e-05 | GradNorm: 2.973
  Batch   40/48 | Loss: 2.7159 | LR: 4.50e-05 | GradNorm: 4.060
  Batch   44/48 | Loss: 2.7834 | LR: 4.18e-05 | GradNorm: 4.672
Epoch 8/10: Train=30.97%, Val=17.41%, Gap=13.56%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7313 | LR: 3.87e-05 | GradNorm: 2.347
  Batch    4/48 | Loss: 2.7285 | LR: 3.56e-05 | GradNorm: 2.095
  Batch    8/48 | Loss: 2.7954 | LR: 3.27e-05 | GradNorm: 2.894
  Batch   12/48 | Loss: 2.7242 | LR: 2.99e-05 | GradNorm: 3.122
  Batch   16/48 | Loss: 2.6839 | LR: 2.72e-05 | GradNorm: 2.380
  Batch   20/48 | Loss: 2.6929 | LR: 2.46e-05 | GradNorm: 1.881
  Batch   24/48 | Loss: 2.7238 | LR: 2.21e-05 | GradNorm: 1.656
  Batch   28/48 | Loss: 2.7459 | LR: 1.98e-05 | GradNorm: 3.570
  Batch   32/48 | Loss: 2.7011 | LR: 1.76e-05 | GradNorm: 4.425
  Batch   36/48 | Loss: 2.7299 | LR: 1.54e-05 | GradNorm: 5.544
  Batch   40/48 | Loss: 2.7043 | LR: 1.35e-05 | GradNorm: 3.704
  Batch   44/48 | Loss: 2.7069 | LR: 1.16e-05 | GradNorm: 2.400
Epoch 9/10: Train=33.13%, Val=17.22%, Gap=15.91%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7044 | LR: 9.91e-06 | GradNorm: 1.999
  Batch    4/48 | Loss: 2.7222 | LR: 8.33e-06 | GradNorm: 1.886
  Batch    8/48 | Loss: 2.6973 | LR: 6.88e-06 | GradNorm: 1.960
  Batch   12/48 | Loss: 2.6949 | LR: 5.57e-06 | GradNorm: 2.652
  Batch   16/48 | Loss: 2.7054 | LR: 4.40e-06 | GradNorm: 2.263
  Batch   20/48 | Loss: 2.7046 | LR: 3.36e-06 | GradNorm: 3.492
  Batch   24/48 | Loss: 2.6860 | LR: 2.47e-06 | GradNorm: 2.656
  Batch   28/48 | Loss: 2.7220 | LR: 1.72e-06 | GradNorm: 1.599
  Batch   32/48 | Loss: 2.7301 | LR: 1.11e-06 | GradNorm: 2.823
  Batch   36/48 | Loss: 2.7039 | LR: 6.44e-07 | GradNorm: 1.323
  Batch   40/48 | Loss: 2.6813 | LR: 3.20e-07 | GradNorm: 1.871
  Batch   44/48 | Loss: 2.6916 | LR: 1.40e-07 | GradNorm: 2.821
Epoch 10/10: Train=34.00%, Val=17.67%, Gap=16.33%, LR=1.00e-07
Best validation accuracy: 17.67%
