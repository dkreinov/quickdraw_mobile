=== W&B Sweep Run: LR=0.000289 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000289159273371545
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000289
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9581 | LR: 5.87e-06 | GradNorm: 1.735
  Batch    4/48 | Loss: 3.9293 | LR: 1.78e-05 | GradNorm: 0.950
  Batch    8/48 | Loss: 3.9261 | LR: 2.97e-05 | GradNorm: 0.998
  Batch   12/48 | Loss: 3.9167 | LR: 4.17e-05 | GradNorm: 0.747
  Batch   16/48 | Loss: 3.9202 | LR: 5.36e-05 | GradNorm: 0.656
  Batch   20/48 | Loss: 3.9161 | LR: 6.55e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9115 | LR: 7.74e-05 | GradNorm: 0.651
  Batch   28/48 | Loss: 3.9143 | LR: 8.94e-05 | GradNorm: 0.538
  Batch   32/48 | Loss: 3.9085 | LR: 1.01e-04 | GradNorm: 0.513
  Batch   36/48 | Loss: 3.9100 | LR: 1.13e-04 | GradNorm: 0.536
  Batch   40/48 | Loss: 3.9024 | LR: 1.25e-04 | GradNorm: 0.568
  Batch   44/48 | Loss: 3.8859 | LR: 1.37e-04 | GradNorm: 0.615
Epoch 1/10: Train=2.30%, Val=5.20%, Gap=-2.90%, LR=1.46e-04
  Batch    0/48 | Loss: 3.8527 | LR: 1.49e-04 | GradNorm: 0.733
  Batch    4/48 | Loss: 3.8060 | LR: 1.61e-04 | GradNorm: 4.173
  Batch    8/48 | Loss: 3.8351 | LR: 1.73e-04 | GradNorm: 9.889
  Batch   12/48 | Loss: 3.7178 | LR: 1.85e-04 | GradNorm: 1.568
  Batch   16/48 | Loss: 3.7500 | LR: 1.97e-04 | GradNorm: 2.071
  Batch   20/48 | Loss: 3.7998 | LR: 2.09e-04 | GradNorm: 3.896
  Batch   24/48 | Loss: 3.7515 | LR: 2.21e-04 | GradNorm: 1.419
  Batch   28/48 | Loss: 3.7260 | LR: 2.33e-04 | GradNorm: 1.082
  Batch   32/48 | Loss: 3.7640 | LR: 2.44e-04 | GradNorm: 5.312
  Batch   36/48 | Loss: 3.9035 | LR: 2.56e-04 | GradNorm: 5.491
  Batch   40/48 | Loss: 3.6731 | LR: 2.68e-04 | GradNorm: 1.008
  Batch   44/48 | Loss: 3.8524 | LR: 2.80e-04 | GradNorm: 15.098
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.31%, Val=4.61%, Gap=0.70%, LR=2.89e-04
  Batch    0/48 | Loss: 3.6880 | LR: 2.89e-04 | GradNorm: 4.166
  Batch    4/48 | Loss: 3.6368 | LR: 2.89e-04 | GradNorm: 1.260
  Batch    8/48 | Loss: 3.6121 | LR: 2.89e-04 | GradNorm: 3.981
  Batch   12/48 | Loss: 3.5998 | LR: 2.88e-04 | GradNorm: 1.969
  Batch   16/48 | Loss: 3.6120 | LR: 2.88e-04 | GradNorm: 3.609
  Batch   20/48 | Loss: 3.5345 | LR: 2.87e-04 | GradNorm: 2.035
  Batch   24/48 | Loss: 3.4894 | LR: 2.86e-04 | GradNorm: 0.801
  Batch   28/48 | Loss: 3.4595 | LR: 2.85e-04 | GradNorm: 3.414
  Batch   32/48 | Loss: 3.4355 | LR: 2.84e-04 | GradNorm: 2.021
  Batch   36/48 | Loss: 3.4985 | LR: 2.83e-04 | GradNorm: 4.560
  Batch   40/48 | Loss: 3.4465 | LR: 2.81e-04 | GradNorm: 3.197
  Batch   44/48 | Loss: 3.3677 | LR: 2.79e-04 | GradNorm: 0.890
Epoch 3/10: Train=10.66%, Val=10.56%, Gap=0.10%, LR=2.78e-04
  Batch    0/48 | Loss: 3.3653 | LR: 2.78e-04 | GradNorm: 2.666
  Batch    4/48 | Loss: 3.3603 | LR: 2.76e-04 | GradNorm: 4.756
  Batch    8/48 | Loss: 3.3805 | LR: 2.74e-04 | GradNorm: 6.221
  Batch   12/48 | Loss: 3.3376 | LR: 2.72e-04 | GradNorm: 3.910
  Batch   16/48 | Loss: 3.3214 | LR: 2.69e-04 | GradNorm: 3.782
  Batch   20/48 | Loss: 3.2902 | LR: 2.67e-04 | GradNorm: 2.611
  Batch   24/48 | Loss: 3.2779 | LR: 2.64e-04 | GradNorm: 2.837
  Batch   28/48 | Loss: 3.2693 | LR: 2.61e-04 | GradNorm: 2.434
  Batch   32/48 | Loss: 3.2826 | LR: 2.59e-04 | GradNorm: 2.437
  Batch   36/48 | Loss: 3.2866 | LR: 2.56e-04 | GradNorm: 3.310
  Batch   40/48 | Loss: 3.2767 | LR: 2.53e-04 | GradNorm: 2.597
  Batch   44/48 | Loss: 3.2299 | LR: 2.49e-04 | GradNorm: 4.605
Epoch 4/10: Train=15.69%, Val=12.28%, Gap=3.41%, LR=2.47e-04
  Batch    0/48 | Loss: 3.2104 | LR: 2.46e-04 | GradNorm: 2.479
  Batch    4/48 | Loss: 3.1983 | LR: 2.43e-04 | GradNorm: 2.766
  Batch    8/48 | Loss: 3.1738 | LR: 2.39e-04 | GradNorm: 2.393
  Batch   12/48 | Loss: 3.2148 | LR: 2.35e-04 | GradNorm: 4.997
  Batch   16/48 | Loss: 3.2177 | LR: 2.32e-04 | GradNorm: 2.211
  Batch   20/48 | Loss: 3.1723 | LR: 2.28e-04 | GradNorm: 2.254
  Batch   24/48 | Loss: 3.1603 | LR: 2.24e-04 | GradNorm: 1.583
  Batch   28/48 | Loss: 3.1551 | LR: 2.20e-04 | GradNorm: 2.385
  Batch   32/48 | Loss: 3.1109 | LR: 2.16e-04 | GradNorm: 2.284
  Batch   36/48 | Loss: 3.1639 | LR: 2.12e-04 | GradNorm: 1.960
  Batch   40/48 | Loss: 3.1486 | LR: 2.07e-04 | GradNorm: 1.986
  Batch   44/48 | Loss: 3.1288 | LR: 2.03e-04 | GradNorm: 4.120
Epoch 5/10: Train=19.29%, Val=11.81%, Gap=7.48%, LR=2.00e-04
  Batch    0/48 | Loss: 3.0885 | LR: 1.99e-04 | GradNorm: 4.462
  Batch    4/48 | Loss: 3.0280 | LR: 1.94e-04 | GradNorm: 2.911
  Batch    8/48 | Loss: 3.0491 | LR: 1.90e-04 | GradNorm: 1.810
  Batch   12/48 | Loss: 3.0431 | LR: 1.85e-04 | GradNorm: 5.011
  Batch   16/48 | Loss: 3.0370 | LR: 1.81e-04 | GradNorm: 4.336
  Batch   20/48 | Loss: 3.0260 | LR: 1.76e-04 | GradNorm: 3.166
  Batch   24/48 | Loss: 2.9985 | LR: 1.72e-04 | GradNorm: 2.670
  Batch   28/48 | Loss: 2.9712 | LR: 1.67e-04 | GradNorm: 2.548
  Batch   32/48 | Loss: 2.9752 | LR: 1.62e-04 | GradNorm: 3.958
  Batch   36/48 | Loss: 3.0036 | LR: 1.58e-04 | GradNorm: 1.790
  Batch   40/48 | Loss: 2.9885 | LR: 1.53e-04 | GradNorm: 2.979
  Batch   44/48 | Loss: 3.0578 | LR: 1.48e-04 | GradNorm: 5.421
Epoch 6/10: Train=23.35%, Val=13.35%, Gap=10.00%, LR=1.45e-04
  Batch    0/48 | Loss: 2.9847 | LR: 1.43e-04 | GradNorm: 2.666
  Batch    4/48 | Loss: 2.9620 | LR: 1.39e-04 | GradNorm: 4.769
  Batch    8/48 | Loss: 2.9500 | LR: 1.34e-04 | GradNorm: 3.329
  Batch   12/48 | Loss: 2.8919 | LR: 1.29e-04 | GradNorm: 4.917
  Batch   16/48 | Loss: 2.8811 | LR: 1.25e-04 | GradNorm: 3.766
  Batch   20/48 | Loss: 2.9431 | LR: 1.20e-04 | GradNorm: 5.356
  Batch   24/48 | Loss: 2.9292 | LR: 1.15e-04 | GradNorm: 4.110
  Batch   28/48 | Loss: 2.9172 | LR: 1.11e-04 | GradNorm: 2.002
  Batch   32/48 | Loss: 2.9537 | LR: 1.06e-04 | GradNorm: 5.827
  Batch   36/48 | Loss: 2.9610 | LR: 1.02e-04 | GradNorm: 7.032
  Batch   40/48 | Loss: 2.9169 | LR: 9.71e-05 | GradNorm: 5.557
  Batch   44/48 | Loss: 2.8902 | LR: 9.26e-05 | GradNorm: 4.007
Epoch 7/10: Train=27.19%, Val=14.81%, Gap=12.38%, LR=8.93e-05
  Batch    0/48 | Loss: 2.8731 | LR: 8.82e-05 | GradNorm: 4.064
  Batch    4/48 | Loss: 2.8378 | LR: 8.39e-05 | GradNorm: 2.958
  Batch    8/48 | Loss: 2.8475 | LR: 7.96e-05 | GradNorm: 4.622
  Batch   12/48 | Loss: 2.9017 | LR: 7.55e-05 | GradNorm: 6.731
  Batch   16/48 | Loss: 2.8945 | LR: 7.13e-05 | GradNorm: 2.791
  Batch   20/48 | Loss: 2.8217 | LR: 6.73e-05 | GradNorm: 4.100
  Batch   24/48 | Loss: 2.8129 | LR: 6.34e-05 | GradNorm: 4.243
  Batch   28/48 | Loss: 2.8509 | LR: 5.95e-05 | GradNorm: 2.178
  Batch   32/48 | Loss: 2.8366 | LR: 5.57e-05 | GradNorm: 3.354
  Batch   36/48 | Loss: 2.8192 | LR: 5.20e-05 | GradNorm: 1.099
  Batch   40/48 | Loss: 2.7641 | LR: 4.84e-05 | GradNorm: 3.894
  Batch   44/48 | Loss: 2.8310 | LR: 4.50e-05 | GradNorm: 3.955
Epoch 8/10: Train=29.71%, Val=13.22%, Gap=16.49%, LR=4.24e-05
  Batch    0/48 | Loss: 2.7812 | LR: 4.16e-05 | GradNorm: 1.985
  Batch    4/48 | Loss: 2.7703 | LR: 3.83e-05 | GradNorm: 2.948
  Batch    8/48 | Loss: 2.8298 | LR: 3.52e-05 | GradNorm: 2.919
  Batch   12/48 | Loss: 2.7810 | LR: 3.22e-05 | GradNorm: 2.315
  Batch   16/48 | Loss: 2.7337 | LR: 2.93e-05 | GradNorm: 2.552
  Batch   20/48 | Loss: 2.7518 | LR: 2.65e-05 | GradNorm: 3.114
  Batch   24/48 | Loss: 2.7706 | LR: 2.38e-05 | GradNorm: 1.724
  Batch   28/48 | Loss: 2.7795 | LR: 2.13e-05 | GradNorm: 2.902
  Batch   32/48 | Loss: 2.7483 | LR: 1.89e-05 | GradNorm: 2.413
  Batch   36/48 | Loss: 2.7420 | LR: 1.66e-05 | GradNorm: 3.043
  Batch   40/48 | Loss: 2.7437 | LR: 1.45e-05 | GradNorm: 2.068
  Batch   44/48 | Loss: 2.7660 | LR: 1.25e-05 | GradNorm: 1.739
Epoch 9/10: Train=31.79%, Val=15.06%, Gap=16.73%, LR=1.11e-05
  Batch    0/48 | Loss: 2.7625 | LR: 1.07e-05 | GradNorm: 2.186
  Batch    4/48 | Loss: 2.7459 | LR: 8.95e-06 | GradNorm: 1.529
  Batch    8/48 | Loss: 2.7236 | LR: 7.39e-06 | GradNorm: 1.831
  Batch   12/48 | Loss: 2.7324 | LR: 5.98e-06 | GradNorm: 2.905
  Batch   16/48 | Loss: 2.7505 | LR: 4.72e-06 | GradNorm: 2.015
  Batch   20/48 | Loss: 2.7645 | LR: 3.61e-06 | GradNorm: 2.203
  Batch   24/48 | Loss: 2.7489 | LR: 2.65e-06 | GradNorm: 2.347
  Batch   28/48 | Loss: 2.7573 | LR: 1.84e-06 | GradNorm: 2.232
  Batch   32/48 | Loss: 2.7833 | LR: 1.19e-06 | GradNorm: 2.101
  Batch   36/48 | Loss: 2.7399 | LR: 6.85e-07 | GradNorm: 1.761
  Batch   40/48 | Loss: 2.7262 | LR: 3.37e-07 | GradNorm: 1.771
  Batch   44/48 | Loss: 2.7454 | LR: 1.44e-07 | GradNorm: 2.547
Epoch 10/10: Train=32.65%, Val=15.23%, Gap=17.42%, LR=1.00e-07
Best validation accuracy: 15.23%
