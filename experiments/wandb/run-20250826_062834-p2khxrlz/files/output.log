=== W&B Sweep Run: LR=0.000364 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003642310592949979
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000364
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9429 | LR: 7.40e-06 | GradNorm: 1.509
  Batch    4/48 | Loss: 3.9254 | LR: 2.24e-05 | GradNorm: 0.874
  Batch    8/48 | Loss: 3.9233 | LR: 3.74e-05 | GradNorm: 0.909
  Batch   12/48 | Loss: 3.9176 | LR: 5.25e-05 | GradNorm: 0.746
  Batch   16/48 | Loss: 3.9189 | LR: 6.75e-05 | GradNorm: 0.626
  Batch   20/48 | Loss: 3.9165 | LR: 8.25e-05 | GradNorm: 0.653
  Batch   24/48 | Loss: 3.9093 | LR: 9.75e-05 | GradNorm: 0.621
  Batch   28/48 | Loss: 3.9177 | LR: 1.13e-04 | GradNorm: 0.608
  Batch   32/48 | Loss: 3.9069 | LR: 1.28e-04 | GradNorm: 0.539
  Batch   36/48 | Loss: 3.8936 | LR: 1.43e-04 | GradNorm: 0.566
  Batch   40/48 | Loss: 3.8591 | LR: 1.58e-04 | GradNorm: 0.668
  Batch   44/48 | Loss: 3.8350 | LR: 1.73e-04 | GradNorm: 3.915
Epoch 1/10: Train=2.84%, Val=3.19%, Gap=-0.35%, LR=1.84e-04
  Batch    0/48 | Loss: 3.8959 | LR: 1.88e-04 | GradNorm: 8.029
  Batch    4/48 | Loss: 3.8772 | LR: 2.03e-04 | GradNorm: 8.600
  Batch    8/48 | Loss: 3.8229 | LR: 2.18e-04 | GradNorm: 6.623
  Batch   12/48 | Loss: 3.8112 | LR: 2.33e-04 | GradNorm: 6.043
  Batch   16/48 | Loss: 3.7363 | LR: 2.48e-04 | GradNorm: 2.294
  Batch   20/48 | Loss: 3.6964 | LR: 2.63e-04 | GradNorm: 2.614
  Batch   24/48 | Loss: 3.6978 | LR: 2.78e-04 | GradNorm: 8.683
  Batch   28/48 | Loss: 3.6815 | LR: 2.93e-04 | GradNorm: 3.186
  Batch   32/48 | Loss: 3.7198 | LR: 3.08e-04 | GradNorm: 5.967
  Batch   36/48 | Loss: 3.6317 | LR: 3.23e-04 | GradNorm: 2.873
  Batch   40/48 | Loss: 3.6113 | LR: 3.38e-04 | GradNorm: 1.711
  Batch   44/48 | Loss: 3.6074 | LR: 3.53e-04 | GradNorm: 4.750
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.69%, Val=4.78%, Gap=1.91%, LR=3.64e-04
  Batch    0/48 | Loss: 3.5907 | LR: 3.64e-04 | GradNorm: 2.402
  Batch    4/48 | Loss: 3.5815 | LR: 3.64e-04 | GradNorm: 4.335
  Batch    8/48 | Loss: 3.4978 | LR: 3.64e-04 | GradNorm: 2.909
  Batch   12/48 | Loss: 3.5597 | LR: 3.63e-04 | GradNorm: 3.459
  Batch   16/48 | Loss: 3.4933 | LR: 3.62e-04 | GradNorm: 2.757
  Batch   20/48 | Loss: 3.5006 | LR: 3.62e-04 | GradNorm: 2.940
  Batch   24/48 | Loss: 3.4343 | LR: 3.60e-04 | GradNorm: 1.943
  Batch   28/48 | Loss: 3.3989 | LR: 3.59e-04 | GradNorm: 4.472
  Batch   32/48 | Loss: 3.4181 | LR: 3.58e-04 | GradNorm: 2.820
  Batch   36/48 | Loss: 3.5371 | LR: 3.56e-04 | GradNorm: 7.380
  Batch   40/48 | Loss: 3.3671 | LR: 3.54e-04 | GradNorm: 3.161
  Batch   44/48 | Loss: 3.4263 | LR: 3.52e-04 | GradNorm: 6.512
Epoch 3/10: Train=11.38%, Val=13.43%, Gap=-2.05%, LR=3.50e-04
  Batch    0/48 | Loss: 3.3291 | LR: 3.50e-04 | GradNorm: 3.720
  Batch    4/48 | Loss: 3.3197 | LR: 3.47e-04 | GradNorm: 3.185
  Batch    8/48 | Loss: 3.2846 | LR: 3.45e-04 | GradNorm: 2.657
  Batch   12/48 | Loss: 3.1988 | LR: 3.42e-04 | GradNorm: 1.594
  Batch   16/48 | Loss: 3.3217 | LR: 3.39e-04 | GradNorm: 5.293
  Batch   20/48 | Loss: 3.2561 | LR: 3.36e-04 | GradNorm: 3.427
  Batch   24/48 | Loss: 3.2262 | LR: 3.33e-04 | GradNorm: 2.484
  Batch   28/48 | Loss: 3.1897 | LR: 3.29e-04 | GradNorm: 2.143
  Batch   32/48 | Loss: 3.2189 | LR: 3.26e-04 | GradNorm: 2.764
  Batch   36/48 | Loss: 3.2046 | LR: 3.22e-04 | GradNorm: 5.332
  Batch   40/48 | Loss: 3.2021 | LR: 3.18e-04 | GradNorm: 4.212
  Batch   44/48 | Loss: 3.1339 | LR: 3.14e-04 | GradNorm: 2.453
Epoch 4/10: Train=17.24%, Val=10.94%, Gap=6.30%, LR=3.11e-04
  Batch    0/48 | Loss: 3.1561 | LR: 3.10e-04 | GradNorm: 4.197
  Batch    4/48 | Loss: 3.1303 | LR: 3.06e-04 | GradNorm: 7.186
  Batch    8/48 | Loss: 3.0789 | LR: 3.01e-04 | GradNorm: 2.009
  Batch   12/48 | Loss: 3.0745 | LR: 2.97e-04 | GradNorm: 3.368
  Batch   16/48 | Loss: 3.1392 | LR: 2.92e-04 | GradNorm: 4.187
  Batch   20/48 | Loss: 3.0949 | LR: 2.87e-04 | GradNorm: 3.984
  Batch   24/48 | Loss: 3.1314 | LR: 2.82e-04 | GradNorm: 4.695
  Batch   28/48 | Loss: 3.0752 | LR: 2.77e-04 | GradNorm: 3.494
  Batch   32/48 | Loss: 3.0246 | LR: 2.72e-04 | GradNorm: 4.096
  Batch   36/48 | Loss: 3.0708 | LR: 2.67e-04 | GradNorm: 3.318
  Batch   40/48 | Loss: 3.1656 | LR: 2.61e-04 | GradNorm: 6.826
  Batch   44/48 | Loss: 3.0518 | LR: 2.56e-04 | GradNorm: 5.426
Epoch 5/10: Train=21.70%, Val=14.53%, Gap=7.17%, LR=2.52e-04
  Batch    0/48 | Loss: 3.0002 | LR: 2.50e-04 | GradNorm: 4.675
  Batch    4/48 | Loss: 2.9868 | LR: 2.45e-04 | GradNorm: 5.107
  Batch    8/48 | Loss: 3.0224 | LR: 2.39e-04 | GradNorm: 6.165
  Batch   12/48 | Loss: 2.9887 | LR: 2.34e-04 | GradNorm: 6.680
  Batch   16/48 | Loss: 2.9537 | LR: 2.28e-04 | GradNorm: 5.925
  Batch   20/48 | Loss: 2.9123 | LR: 2.22e-04 | GradNorm: 3.922
  Batch   24/48 | Loss: 2.8910 | LR: 2.16e-04 | GradNorm: 2.149
  Batch   28/48 | Loss: 2.8750 | LR: 2.10e-04 | GradNorm: 3.845
  Batch   32/48 | Loss: 2.9038 | LR: 2.04e-04 | GradNorm: 6.264
  Batch   36/48 | Loss: 2.9344 | LR: 1.99e-04 | GradNorm: 5.790
  Batch   40/48 | Loss: 2.8828 | LR: 1.93e-04 | GradNorm: 4.012
  Batch   44/48 | Loss: 2.9482 | LR: 1.87e-04 | GradNorm: 5.908
Epoch 6/10: Train=26.18%, Val=16.43%, Gap=9.75%, LR=1.82e-04
  Batch    0/48 | Loss: 2.8339 | LR: 1.81e-04 | GradNorm: 2.182
  Batch    4/48 | Loss: 2.8746 | LR: 1.75e-04 | GradNorm: 5.951
  Batch    8/48 | Loss: 2.8449 | LR: 1.69e-04 | GradNorm: 4.241
  Batch   12/48 | Loss: 2.7656 | LR: 1.63e-04 | GradNorm: 4.555
  Batch   16/48 | Loss: 2.7704 | LR: 1.57e-04 | GradNorm: 2.480
  Batch   20/48 | Loss: 2.7919 | LR: 1.51e-04 | GradNorm: 2.316
  Batch   24/48 | Loss: 2.8418 | LR: 1.45e-04 | GradNorm: 4.811
  Batch   28/48 | Loss: 2.8156 | LR: 1.39e-04 | GradNorm: 3.692
  Batch   32/48 | Loss: 2.8006 | LR: 1.34e-04 | GradNorm: 3.625
  Batch   36/48 | Loss: 2.8374 | LR: 1.28e-04 | GradNorm: 4.778
  Batch   40/48 | Loss: 2.8000 | LR: 1.22e-04 | GradNorm: 4.685
  Batch   44/48 | Loss: 2.7784 | LR: 1.17e-04 | GradNorm: 4.070
Epoch 7/10: Train=30.18%, Val=17.41%, Gap=12.77%, LR=1.12e-04
  Batch    0/48 | Loss: 2.7621 | LR: 1.11e-04 | GradNorm: 3.837
  Batch    4/48 | Loss: 2.6857 | LR: 1.06e-04 | GradNorm: 2.648
  Batch    8/48 | Loss: 2.7204 | LR: 1.00e-04 | GradNorm: 2.836
  Batch   12/48 | Loss: 2.7450 | LR: 9.50e-05 | GradNorm: 5.080
  Batch   16/48 | Loss: 2.7619 | LR: 8.98e-05 | GradNorm: 4.729
  Batch   20/48 | Loss: 2.6812 | LR: 8.48e-05 | GradNorm: 4.424
  Batch   24/48 | Loss: 2.6709 | LR: 7.98e-05 | GradNorm: 6.714
  Batch   28/48 | Loss: 2.6995 | LR: 7.49e-05 | GradNorm: 3.453
  Batch   32/48 | Loss: 2.6985 | LR: 7.02e-05 | GradNorm: 5.112
  Batch   36/48 | Loss: 2.6766 | LR: 6.55e-05 | GradNorm: 1.604
  Batch   40/48 | Loss: 2.6200 | LR: 6.10e-05 | GradNorm: 4.235
  Batch   44/48 | Loss: 2.6953 | LR: 5.66e-05 | GradNorm: 5.474
Epoch 8/10: Train=33.72%, Val=18.89%, Gap=14.83%, LR=5.34e-05
  Batch    0/48 | Loss: 2.6493 | LR: 5.24e-05 | GradNorm: 8.229
  Batch    4/48 | Loss: 2.6298 | LR: 4.83e-05 | GradNorm: 2.794
  Batch    8/48 | Loss: 2.6831 | LR: 4.43e-05 | GradNorm: 3.577
  Batch   12/48 | Loss: 2.6048 | LR: 4.05e-05 | GradNorm: 5.104
  Batch   16/48 | Loss: 2.5777 | LR: 3.68e-05 | GradNorm: 4.870
  Batch   20/48 | Loss: 2.5914 | LR: 3.33e-05 | GradNorm: 4.781
  Batch   24/48 | Loss: 2.6326 | LR: 3.00e-05 | GradNorm: 1.923
  Batch   28/48 | Loss: 2.6290 | LR: 2.68e-05 | GradNorm: 2.546
  Batch   32/48 | Loss: 2.6167 | LR: 2.38e-05 | GradNorm: 4.934
  Batch   36/48 | Loss: 2.6074 | LR: 2.09e-05 | GradNorm: 3.509
  Batch   40/48 | Loss: 2.5893 | LR: 1.82e-05 | GradNorm: 2.866
  Batch   44/48 | Loss: 2.6341 | LR: 1.57e-05 | GradNorm: 3.863
Epoch 9/10: Train=35.98%, Val=20.29%, Gap=15.69%, LR=1.40e-05
  Batch    0/48 | Loss: 2.6080 | LR: 1.34e-05 | GradNorm: 3.043
  Batch    4/48 | Loss: 2.6067 | LR: 1.13e-05 | GradNorm: 2.703
  Batch    8/48 | Loss: 2.5627 | LR: 9.29e-06 | GradNorm: 2.875
  Batch   12/48 | Loss: 2.5617 | LR: 7.51e-06 | GradNorm: 4.612
  Batch   16/48 | Loss: 2.5828 | LR: 5.92e-06 | GradNorm: 2.392
  Batch   20/48 | Loss: 2.6066 | LR: 4.52e-06 | GradNorm: 2.741
  Batch   24/48 | Loss: 2.6037 | LR: 3.31e-06 | GradNorm: 3.033
  Batch   28/48 | Loss: 2.6231 | LR: 2.30e-06 | GradNorm: 3.885
  Batch   32/48 | Loss: 2.6303 | LR: 1.47e-06 | GradNorm: 4.095
  Batch   36/48 | Loss: 2.5819 | LR: 8.37e-07 | GradNorm: 2.422
  Batch   40/48 | Loss: 2.5542 | LR: 3.98e-07 | GradNorm: 1.902
  Batch   44/48 | Loss: 2.5777 | LR: 1.55e-07 | GradNorm: 2.702
Epoch 10/10: Train=37.20%, Val=20.22%, Gap=16.98%, LR=1.00e-07
Best validation accuracy: 20.29%
