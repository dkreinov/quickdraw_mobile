=== W&B Sweep Run: LR=0.000270 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002697201535020079
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000270
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9554 | LR: 5.48e-06 | GradNorm: 1.671
  Batch    4/48 | Loss: 3.9295 | LR: 1.66e-05 | GradNorm: 1.012
  Batch    8/48 | Loss: 3.9198 | LR: 2.77e-05 | GradNorm: 0.840
  Batch   12/48 | Loss: 3.9197 | LR: 3.89e-05 | GradNorm: 0.859
  Batch   16/48 | Loss: 3.9186 | LR: 5.00e-05 | GradNorm: 0.725
  Batch   20/48 | Loss: 3.9154 | LR: 6.11e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9117 | LR: 7.22e-05 | GradNorm: 0.672
  Batch   28/48 | Loss: 3.9147 | LR: 8.34e-05 | GradNorm: 0.601
  Batch   32/48 | Loss: 3.9082 | LR: 9.45e-05 | GradNorm: 0.544
  Batch   36/48 | Loss: 3.9002 | LR: 1.06e-04 | GradNorm: 0.532
  Batch   40/48 | Loss: 3.8850 | LR: 1.17e-04 | GradNorm: 0.655
  Batch   44/48 | Loss: 3.8512 | LR: 1.28e-04 | GradNorm: 1.355
Epoch 1/10: Train=2.51%, Val=2.96%, Gap=-0.45%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8066 | LR: 1.39e-04 | GradNorm: 1.352
  Batch    4/48 | Loss: 3.7911 | LR: 1.50e-04 | GradNorm: 4.055
  Batch    8/48 | Loss: 3.7795 | LR: 1.61e-04 | GradNorm: 6.183
  Batch   12/48 | Loss: 3.7898 | LR: 1.72e-04 | GradNorm: 8.420
  Batch   16/48 | Loss: 3.7693 | LR: 1.83e-04 | GradNorm: 4.231
  Batch   20/48 | Loss: 3.7147 | LR: 1.95e-04 | GradNorm: 1.671
  Batch   24/48 | Loss: 3.6611 | LR: 2.06e-04 | GradNorm: 1.040
  Batch   28/48 | Loss: 3.6358 | LR: 2.17e-04 | GradNorm: 1.909
  Batch   32/48 | Loss: 3.7779 | LR: 2.28e-04 | GradNorm: 16.611
  Batch   36/48 | Loss: 3.6515 | LR: 2.39e-04 | GradNorm: 2.683
  Batch   40/48 | Loss: 3.6550 | LR: 2.50e-04 | GradNorm: 1.372
  Batch   44/48 | Loss: 3.6361 | LR: 2.61e-04 | GradNorm: 3.097
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.15%, Val=4.97%, Gap=1.18%, LR=2.70e-04
  Batch    0/48 | Loss: 3.8609 | LR: 2.70e-04 | GradNorm: 10.068
  Batch    4/48 | Loss: 3.6651 | LR: 2.70e-04 | GradNorm: 1.218
  Batch    8/48 | Loss: 3.6629 | LR: 2.69e-04 | GradNorm: 3.914
  Batch   12/48 | Loss: 3.7714 | LR: 2.69e-04 | GradNorm: 9.282
  Batch   16/48 | Loss: 3.9854 | LR: 2.68e-04 | GradNorm: 11.096
  Batch   20/48 | Loss: 3.7078 | LR: 2.68e-04 | GradNorm: 3.650
  Batch   24/48 | Loss: 3.5998 | LR: 2.67e-04 | GradNorm: 1.152
  Batch   28/48 | Loss: 3.5356 | LR: 2.66e-04 | GradNorm: 1.111
  Batch   32/48 | Loss: 3.6335 | LR: 2.65e-04 | GradNorm: 5.322
  Batch   36/48 | Loss: 3.6003 | LR: 2.64e-04 | GradNorm: 2.707
  Batch   40/48 | Loss: 3.5497 | LR: 2.62e-04 | GradNorm: 2.364
  Batch   44/48 | Loss: 3.4943 | LR: 2.61e-04 | GradNorm: 1.265
Epoch 3/10: Train=7.86%, Val=7.84%, Gap=0.02%, LR=2.59e-04
  Batch    0/48 | Loss: 3.4284 | LR: 2.59e-04 | GradNorm: 0.744
  Batch    4/48 | Loss: 3.4249 | LR: 2.57e-04 | GradNorm: 2.918
  Batch    8/48 | Loss: 3.4337 | LR: 2.55e-04 | GradNorm: 3.912
  Batch   12/48 | Loss: 3.3306 | LR: 2.53e-04 | GradNorm: 1.989
  Batch   16/48 | Loss: 3.3774 | LR: 2.51e-04 | GradNorm: 4.808
  Batch   20/48 | Loss: 3.3391 | LR: 2.49e-04 | GradNorm: 2.576
  Batch   24/48 | Loss: 3.3524 | LR: 2.46e-04 | GradNorm: 6.539
  Batch   28/48 | Loss: 3.2694 | LR: 2.44e-04 | GradNorm: 3.743
  Batch   32/48 | Loss: 3.2846 | LR: 2.41e-04 | GradNorm: 2.580
  Batch   36/48 | Loss: 3.3170 | LR: 2.38e-04 | GradNorm: 5.831
  Batch   40/48 | Loss: 3.2789 | LR: 2.36e-04 | GradNorm: 3.334
  Batch   44/48 | Loss: 3.2584 | LR: 2.33e-04 | GradNorm: 3.121
Epoch 4/10: Train=14.96%, Val=11.19%, Gap=3.77%, LR=2.30e-04
  Batch    0/48 | Loss: 3.2322 | LR: 2.29e-04 | GradNorm: 3.149
  Batch    4/48 | Loss: 3.2186 | LR: 2.26e-04 | GradNorm: 3.911
  Batch    8/48 | Loss: 3.2813 | LR: 2.23e-04 | GradNorm: 5.073
  Batch   12/48 | Loss: 3.2884 | LR: 2.20e-04 | GradNorm: 5.679
  Batch   16/48 | Loss: 3.2680 | LR: 2.16e-04 | GradNorm: 3.195
  Batch   20/48 | Loss: 3.1956 | LR: 2.13e-04 | GradNorm: 3.643
  Batch   24/48 | Loss: 3.2150 | LR: 2.09e-04 | GradNorm: 4.011
  Batch   28/48 | Loss: 3.1589 | LR: 2.05e-04 | GradNorm: 2.395
  Batch   32/48 | Loss: 3.1061 | LR: 2.01e-04 | GradNorm: 2.457
  Batch   36/48 | Loss: 3.2215 | LR: 1.97e-04 | GradNorm: 4.083
  Batch   40/48 | Loss: 3.1632 | LR: 1.94e-04 | GradNorm: 3.081
  Batch   44/48 | Loss: 3.1226 | LR: 1.90e-04 | GradNorm: 2.696
Epoch 5/10: Train=19.34%, Val=13.72%, Gap=5.62%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0791 | LR: 1.85e-04 | GradNorm: 3.402
  Batch    4/48 | Loss: 3.0235 | LR: 1.81e-04 | GradNorm: 4.413
  Batch    8/48 | Loss: 3.0132 | LR: 1.77e-04 | GradNorm: 3.017
  Batch   12/48 | Loss: 3.0522 | LR: 1.73e-04 | GradNorm: 4.691
  Batch   16/48 | Loss: 3.0590 | LR: 1.69e-04 | GradNorm: 7.591
  Batch   20/48 | Loss: 3.0159 | LR: 1.64e-04 | GradNorm: 5.055
  Batch   24/48 | Loss: 2.9870 | LR: 1.60e-04 | GradNorm: 4.394
  Batch   28/48 | Loss: 2.9743 | LR: 1.56e-04 | GradNorm: 7.714
  Batch   32/48 | Loss: 2.9240 | LR: 1.51e-04 | GradNorm: 2.009
  Batch   36/48 | Loss: 2.9956 | LR: 1.47e-04 | GradNorm: 4.625
  Batch   40/48 | Loss: 2.9783 | LR: 1.43e-04 | GradNorm: 6.508
  Batch   44/48 | Loss: 2.9896 | LR: 1.38e-04 | GradNorm: 3.193
Epoch 6/10: Train=25.03%, Val=16.19%, Gap=8.84%, LR=1.35e-04
  Batch    0/48 | Loss: 2.9427 | LR: 1.34e-04 | GradNorm: 4.667
  Batch    4/48 | Loss: 2.9347 | LR: 1.29e-04 | GradNorm: 5.020
  Batch    8/48 | Loss: 2.9116 | LR: 1.25e-04 | GradNorm: 3.767
  Batch   12/48 | Loss: 2.8560 | LR: 1.21e-04 | GradNorm: 5.129
  Batch   16/48 | Loss: 2.8693 | LR: 1.16e-04 | GradNorm: 2.929
  Batch   20/48 | Loss: 2.9418 | LR: 1.12e-04 | GradNorm: 6.170
  Batch   24/48 | Loss: 2.9278 | LR: 1.08e-04 | GradNorm: 5.111
  Batch   28/48 | Loss: 2.9084 | LR: 1.03e-04 | GradNorm: 3.103
  Batch   32/48 | Loss: 2.9329 | LR: 9.90e-05 | GradNorm: 6.877
  Batch   36/48 | Loss: 2.9252 | LR: 9.47e-05 | GradNorm: 5.054
  Batch   40/48 | Loss: 2.8624 | LR: 9.05e-05 | GradNorm: 3.249
  Batch   44/48 | Loss: 2.8722 | LR: 8.64e-05 | GradNorm: 3.860
Epoch 7/10: Train=28.38%, Val=18.26%, Gap=10.12%, LR=8.33e-05
  Batch    0/48 | Loss: 2.8569 | LR: 8.23e-05 | GradNorm: 3.990
  Batch    4/48 | Loss: 2.8172 | LR: 7.83e-05 | GradNorm: 3.280
  Batch    8/48 | Loss: 2.8133 | LR: 7.43e-05 | GradNorm: 3.202
  Batch   12/48 | Loss: 2.8589 | LR: 7.04e-05 | GradNorm: 2.744
  Batch   16/48 | Loss: 2.8830 | LR: 6.66e-05 | GradNorm: 5.011
  Batch   20/48 | Loss: 2.7884 | LR: 6.28e-05 | GradNorm: 3.362
  Batch   24/48 | Loss: 2.7924 | LR: 5.91e-05 | GradNorm: 3.931
  Batch   28/48 | Loss: 2.8262 | LR: 5.55e-05 | GradNorm: 3.439
  Batch   32/48 | Loss: 2.8166 | LR: 5.20e-05 | GradNorm: 3.540
  Batch   36/48 | Loss: 2.8021 | LR: 4.85e-05 | GradNorm: 3.311
  Batch   40/48 | Loss: 2.7352 | LR: 4.52e-05 | GradNorm: 2.871
  Batch   44/48 | Loss: 2.7814 | LR: 4.20e-05 | GradNorm: 4.690
Epoch 8/10: Train=30.67%, Val=20.03%, Gap=10.64%, LR=3.96e-05
  Batch    0/48 | Loss: 2.7548 | LR: 3.88e-05 | GradNorm: 2.083
  Batch    4/48 | Loss: 2.7378 | LR: 3.58e-05 | GradNorm: 2.090
  Batch    8/48 | Loss: 2.8095 | LR: 3.28e-05 | GradNorm: 3.854
  Batch   12/48 | Loss: 2.7559 | LR: 3.00e-05 | GradNorm: 2.932
  Batch   16/48 | Loss: 2.7050 | LR: 2.73e-05 | GradNorm: 2.994
  Batch   20/48 | Loss: 2.7301 | LR: 2.47e-05 | GradNorm: 2.182
  Batch   24/48 | Loss: 2.7305 | LR: 2.22e-05 | GradNorm: 2.598
  Batch   28/48 | Loss: 2.7449 | LR: 1.99e-05 | GradNorm: 2.805
  Batch   32/48 | Loss: 2.7522 | LR: 1.76e-05 | GradNorm: 2.778
  Batch   36/48 | Loss: 2.7335 | LR: 1.55e-05 | GradNorm: 3.219
  Batch   40/48 | Loss: 2.7196 | LR: 1.35e-05 | GradNorm: 2.898
  Batch   44/48 | Loss: 2.7309 | LR: 1.17e-05 | GradNorm: 2.326
Epoch 9/10: Train=32.70%, Val=20.76%, Gap=11.94%, LR=1.04e-05
  Batch    0/48 | Loss: 2.7247 | LR: 9.94e-06 | GradNorm: 2.597
  Batch    4/48 | Loss: 2.7444 | LR: 8.36e-06 | GradNorm: 2.021
  Batch    8/48 | Loss: 2.7160 | LR: 6.90e-06 | GradNorm: 1.803
  Batch   12/48 | Loss: 2.7174 | LR: 5.59e-06 | GradNorm: 3.063
  Batch   16/48 | Loss: 2.7354 | LR: 4.41e-06 | GradNorm: 2.218
  Batch   20/48 | Loss: 2.7283 | LR: 3.38e-06 | GradNorm: 2.868
  Batch   24/48 | Loss: 2.7132 | LR: 2.48e-06 | GradNorm: 3.220
  Batch   28/48 | Loss: 2.7519 | LR: 1.73e-06 | GradNorm: 1.507
  Batch   32/48 | Loss: 2.7409 | LR: 1.11e-06 | GradNorm: 2.876
  Batch   36/48 | Loss: 2.7270 | LR: 6.46e-07 | GradNorm: 2.100
  Batch   40/48 | Loss: 2.6823 | LR: 3.21e-07 | GradNorm: 2.176
  Batch   44/48 | Loss: 2.7117 | LR: 1.41e-07 | GradNorm: 2.832
Epoch 10/10: Train=33.52%, Val=20.95%, Gap=12.57%, LR=1.00e-07
Best validation accuracy: 20.95%
