=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004449548399754686
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9469 | LR: 9.04e-06 | GradNorm: 1.490
  Batch    4/48 | Loss: 3.9237 | LR: 2.74e-05 | GradNorm: 0.987
  Batch    8/48 | Loss: 3.9263 | LR: 4.57e-05 | GradNorm: 0.878
  Batch   12/48 | Loss: 3.9156 | LR: 6.41e-05 | GradNorm: 0.649
  Batch   16/48 | Loss: 3.9190 | LR: 8.25e-05 | GradNorm: 0.588
  Batch   20/48 | Loss: 3.9109 | LR: 1.01e-04 | GradNorm: 0.587
  Batch   24/48 | Loss: 3.9116 | LR: 1.19e-04 | GradNorm: 0.643
  Batch   28/48 | Loss: 3.9129 | LR: 1.38e-04 | GradNorm: 0.577
  Batch   32/48 | Loss: 3.8980 | LR: 1.56e-04 | GradNorm: 0.529
  Batch   36/48 | Loss: 3.8687 | LR: 1.74e-04 | GradNorm: 0.744
  Batch   40/48 | Loss: 3.9126 | LR: 1.93e-04 | GradNorm: 4.002
  Batch   44/48 | Loss: 4.0603 | LR: 2.11e-04 | GradNorm: 3.981
Epoch 1/10: Train=2.76%, Val=2.01%, Gap=0.75%, LR=2.25e-04
  Batch    0/48 | Loss: 3.9527 | LR: 2.29e-04 | GradNorm: 2.695
  Batch    4/48 | Loss: 3.8979 | LR: 2.48e-04 | GradNorm: 2.406
  Batch    8/48 | Loss: 3.8060 | LR: 2.66e-04 | GradNorm: 1.562
  Batch   12/48 | Loss: 3.7948 | LR: 2.84e-04 | GradNorm: 2.741
  Batch   16/48 | Loss: 3.7547 | LR: 3.03e-04 | GradNorm: 0.915
  Batch   20/48 | Loss: 3.7055 | LR: 3.21e-04 | GradNorm: 2.129
  Batch   24/48 | Loss: 3.7797 | LR: 3.39e-04 | GradNorm: 5.922
  Batch   28/48 | Loss: 3.7796 | LR: 3.58e-04 | GradNorm: 3.371
  Batch   32/48 | Loss: 3.7165 | LR: 3.76e-04 | GradNorm: 1.616
  Batch   36/48 | Loss: 3.6669 | LR: 3.94e-04 | GradNorm: 2.003
  Batch   40/48 | Loss: 3.7562 | LR: 4.13e-04 | GradNorm: 3.069
  Batch   44/48 | Loss: 3.6340 | LR: 4.31e-04 | GradNorm: 1.113
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.62%, Val=6.14%, Gap=-0.52%, LR=4.45e-04
  Batch    0/48 | Loss: 3.6250 | LR: 4.45e-04 | GradNorm: 2.804
  Batch    4/48 | Loss: 3.5951 | LR: 4.45e-04 | GradNorm: 1.779
  Batch    8/48 | Loss: 3.5146 | LR: 4.44e-04 | GradNorm: 0.559
  Batch   12/48 | Loss: 3.5414 | LR: 4.44e-04 | GradNorm: 4.158
  Batch   16/48 | Loss: 3.5183 | LR: 4.43e-04 | GradNorm: 1.675
  Batch   20/48 | Loss: 3.5162 | LR: 4.42e-04 | GradNorm: 4.988
  Batch   24/48 | Loss: 3.4354 | LR: 4.40e-04 | GradNorm: 1.732
  Batch   28/48 | Loss: 3.4571 | LR: 4.39e-04 | GradNorm: 5.299
  Batch   32/48 | Loss: 3.4947 | LR: 4.37e-04 | GradNorm: 4.448
  Batch   36/48 | Loss: 3.3893 | LR: 4.35e-04 | GradNorm: 2.268
  Batch   40/48 | Loss: 3.3898 | LR: 4.33e-04 | GradNorm: 3.476
  Batch   44/48 | Loss: 3.5331 | LR: 4.30e-04 | GradNorm: 5.804
Epoch 3/10: Train=11.09%, Val=8.44%, Gap=2.65%, LR=4.28e-04
  Batch    0/48 | Loss: 3.4217 | LR: 4.27e-04 | GradNorm: 5.583
  Batch    4/48 | Loss: 3.3867 | LR: 4.24e-04 | GradNorm: 1.816
  Batch    8/48 | Loss: 3.3699 | LR: 4.21e-04 | GradNorm: 3.303
  Batch   12/48 | Loss: 3.3578 | LR: 4.18e-04 | GradNorm: 4.095
  Batch   16/48 | Loss: 3.3238 | LR: 4.14e-04 | GradNorm: 2.811
  Batch   20/48 | Loss: 3.3076 | LR: 4.10e-04 | GradNorm: 3.242
  Batch   24/48 | Loss: 3.3035 | LR: 4.06e-04 | GradNorm: 3.397
  Batch   28/48 | Loss: 3.2675 | LR: 4.02e-04 | GradNorm: 3.621
  Batch   32/48 | Loss: 3.2446 | LR: 3.98e-04 | GradNorm: 2.359
  Batch   36/48 | Loss: 3.2260 | LR: 3.93e-04 | GradNorm: 2.343
  Batch   40/48 | Loss: 3.2902 | LR: 3.89e-04 | GradNorm: 4.027
  Batch   44/48 | Loss: 3.1667 | LR: 3.84e-04 | GradNorm: 1.168
Epoch 4/10: Train=15.27%, Val=11.41%, Gap=3.86%, LR=3.80e-04
  Batch    0/48 | Loss: 3.1983 | LR: 3.79e-04 | GradNorm: 3.380
  Batch    4/48 | Loss: 3.1530 | LR: 3.73e-04 | GradNorm: 2.678
  Batch    8/48 | Loss: 3.1432 | LR: 3.68e-04 | GradNorm: 3.277
  Batch   12/48 | Loss: 3.1193 | LR: 3.62e-04 | GradNorm: 2.673
  Batch   16/48 | Loss: 3.1610 | LR: 3.56e-04 | GradNorm: 2.019
  Batch   20/48 | Loss: 3.3370 | LR: 3.51e-04 | GradNorm: 11.740
  Batch   24/48 | Loss: 3.1396 | LR: 3.45e-04 | GradNorm: 3.442
  Batch   28/48 | Loss: 3.1893 | LR: 3.38e-04 | GradNorm: 7.110
  Batch   32/48 | Loss: 3.0864 | LR: 3.32e-04 | GradNorm: 2.793
  Batch   36/48 | Loss: 3.1452 | LR: 3.26e-04 | GradNorm: 2.568
  Batch   40/48 | Loss: 3.1440 | LR: 3.19e-04 | GradNorm: 3.030
  Batch   44/48 | Loss: 3.1619 | LR: 3.13e-04 | GradNorm: 5.042
Epoch 5/10: Train=19.87%, Val=11.94%, Gap=7.93%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0867 | LR: 3.06e-04 | GradNorm: 4.919
  Batch    4/48 | Loss: 2.9988 | LR: 2.99e-04 | GradNorm: 2.247
  Batch    8/48 | Loss: 3.0308 | LR: 2.92e-04 | GradNorm: 2.154
  Batch   12/48 | Loss: 2.9952 | LR: 2.85e-04 | GradNorm: 1.711
  Batch   16/48 | Loss: 3.0071 | LR: 2.78e-04 | GradNorm: 2.769
  Batch   20/48 | Loss: 3.0879 | LR: 2.71e-04 | GradNorm: 7.394
  Batch   24/48 | Loss: 3.0219 | LR: 2.64e-04 | GradNorm: 3.528
  Batch   28/48 | Loss: 2.9562 | LR: 2.57e-04 | GradNorm: 2.518
  Batch   32/48 | Loss: 2.9628 | LR: 2.50e-04 | GradNorm: 1.927
  Batch   36/48 | Loss: 3.0374 | LR: 2.43e-04 | GradNorm: 4.601
  Batch   40/48 | Loss: 2.9557 | LR: 2.35e-04 | GradNorm: 1.683
  Batch   44/48 | Loss: 3.0308 | LR: 2.28e-04 | GradNorm: 3.806
Epoch 6/10: Train=23.08%, Val=12.33%, Gap=10.75%, LR=2.23e-04
  Batch    0/48 | Loss: 2.9994 | LR: 2.21e-04 | GradNorm: 4.938
  Batch    4/48 | Loss: 3.0097 | LR: 2.13e-04 | GradNorm: 5.510
  Batch    8/48 | Loss: 2.9883 | LR: 2.06e-04 | GradNorm: 3.756
  Batch   12/48 | Loss: 2.8826 | LR: 1.99e-04 | GradNorm: 2.063
  Batch   16/48 | Loss: 2.8903 | LR: 1.92e-04 | GradNorm: 2.503
  Batch   20/48 | Loss: 2.8919 | LR: 1.85e-04 | GradNorm: 1.808
  Batch   24/48 | Loss: 2.9376 | LR: 1.77e-04 | GradNorm: 3.941
  Batch   28/48 | Loss: 2.8973 | LR: 1.70e-04 | GradNorm: 2.659
  Batch   32/48 | Loss: 2.9253 | LR: 1.63e-04 | GradNorm: 4.096
  Batch   36/48 | Loss: 2.9077 | LR: 1.56e-04 | GradNorm: 2.714
  Batch   40/48 | Loss: 2.8727 | LR: 1.49e-04 | GradNorm: 2.243
  Batch   44/48 | Loss: 2.8712 | LR: 1.42e-04 | GradNorm: 3.191
Epoch 7/10: Train=26.66%, Val=18.55%, Gap=8.11%, LR=1.37e-04
  Batch    0/48 | Loss: 2.8492 | LR: 1.36e-04 | GradNorm: 2.898
  Batch    4/48 | Loss: 2.7697 | LR: 1.29e-04 | GradNorm: 2.639
  Batch    8/48 | Loss: 2.8287 | LR: 1.23e-04 | GradNorm: 6.045
  Batch   12/48 | Loss: 2.8542 | LR: 1.16e-04 | GradNorm: 4.186
  Batch   16/48 | Loss: 2.8762 | LR: 1.10e-04 | GradNorm: 3.180
  Batch   20/48 | Loss: 2.7950 | LR: 1.04e-04 | GradNorm: 3.639
  Batch   24/48 | Loss: 2.7624 | LR: 9.74e-05 | GradNorm: 3.195
  Batch   28/48 | Loss: 2.7911 | LR: 9.15e-05 | GradNorm: 2.305
  Batch   32/48 | Loss: 2.7843 | LR: 8.57e-05 | GradNorm: 1.567
  Batch   36/48 | Loss: 2.7803 | LR: 8.00e-05 | GradNorm: 2.806
  Batch   40/48 | Loss: 2.6941 | LR: 7.45e-05 | GradNorm: 2.951
  Batch   44/48 | Loss: 2.7823 | LR: 6.92e-05 | GradNorm: 3.567
Epoch 8/10: Train=30.46%, Val=19.77%, Gap=10.69%, LR=6.52e-05
  Batch    0/48 | Loss: 2.7252 | LR: 6.40e-05 | GradNorm: 1.692
  Batch    4/48 | Loss: 2.7210 | LR: 5.89e-05 | GradNorm: 3.313
  Batch    8/48 | Loss: 2.7746 | LR: 5.41e-05 | GradNorm: 3.422
  Batch   12/48 | Loss: 2.7083 | LR: 4.94e-05 | GradNorm: 2.948
  Batch   16/48 | Loss: 2.6562 | LR: 4.50e-05 | GradNorm: 1.427
  Batch   20/48 | Loss: 2.6846 | LR: 4.07e-05 | GradNorm: 1.942
  Batch   24/48 | Loss: 2.7109 | LR: 3.66e-05 | GradNorm: 2.672
  Batch   28/48 | Loss: 2.7157 | LR: 3.27e-05 | GradNorm: 2.588
  Batch   32/48 | Loss: 2.7000 | LR: 2.90e-05 | GradNorm: 3.104
  Batch   36/48 | Loss: 2.7019 | LR: 2.55e-05 | GradNorm: 2.039
  Batch   40/48 | Loss: 2.6759 | LR: 2.22e-05 | GradNorm: 3.254
  Batch   44/48 | Loss: 2.6973 | LR: 1.92e-05 | GradNorm: 2.922
Epoch 9/10: Train=33.25%, Val=20.36%, Gap=12.89%, LR=1.70e-05
  Batch    0/48 | Loss: 2.7006 | LR: 1.63e-05 | GradNorm: 2.822
  Batch    4/48 | Loss: 2.6779 | LR: 1.37e-05 | GradNorm: 2.921
  Batch    8/48 | Loss: 2.6514 | LR: 1.13e-05 | GradNorm: 1.770
  Batch   12/48 | Loss: 2.6710 | LR: 9.16e-06 | GradNorm: 1.681
  Batch   16/48 | Loss: 2.6630 | LR: 7.22e-06 | GradNorm: 2.377
  Batch   20/48 | Loss: 2.6858 | LR: 5.50e-06 | GradNorm: 1.557
  Batch   24/48 | Loss: 2.6786 | LR: 4.03e-06 | GradNorm: 2.512
  Batch   28/48 | Loss: 2.6877 | LR: 2.78e-06 | GradNorm: 1.351
  Batch   32/48 | Loss: 2.6951 | LR: 1.77e-06 | GradNorm: 1.848
  Batch   36/48 | Loss: 2.6602 | LR: 1.00e-06 | GradNorm: 1.746
  Batch   40/48 | Loss: 2.6446 | LR: 4.65e-07 | GradNorm: 1.818
  Batch   44/48 | Loss: 2.6553 | LR: 1.67e-07 | GradNorm: 2.224
Epoch 10/10: Train=34.31%, Val=20.09%, Gap=14.22%, LR=1.00e-07
Best validation accuracy: 20.36%
