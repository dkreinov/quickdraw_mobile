=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002906915862036209
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9501 | LR: 5.90e-06 | GradNorm: 1.789
  Batch    4/48 | Loss: 3.9298 | LR: 1.79e-05 | GradNorm: 1.218
  Batch    8/48 | Loss: 3.9208 | LR: 2.99e-05 | GradNorm: 0.889
  Batch   12/48 | Loss: 3.9128 | LR: 4.19e-05 | GradNorm: 0.750
  Batch   16/48 | Loss: 3.9153 | LR: 5.39e-05 | GradNorm: 0.679
  Batch   20/48 | Loss: 3.9156 | LR: 6.59e-05 | GradNorm: 0.759
  Batch   24/48 | Loss: 3.9145 | LR: 7.79e-05 | GradNorm: 0.799
  Batch   28/48 | Loss: 3.9178 | LR: 8.98e-05 | GradNorm: 0.692
  Batch   32/48 | Loss: 3.9076 | LR: 1.02e-04 | GradNorm: 0.628
  Batch   36/48 | Loss: 3.8935 | LR: 1.14e-04 | GradNorm: 0.547
  Batch   40/48 | Loss: 3.8686 | LR: 1.26e-04 | GradNorm: 0.726
  Batch   44/48 | Loss: 3.8789 | LR: 1.38e-04 | GradNorm: 4.949
Epoch 1/10: Train=2.47%, Val=2.64%, Gap=-0.17%, LR=1.47e-04
  Batch    0/48 | Loss: 3.9339 | LR: 1.50e-04 | GradNorm: 6.276
  Batch    4/48 | Loss: 3.7937 | LR: 1.62e-04 | GradNorm: 1.465
  Batch    8/48 | Loss: 3.8253 | LR: 1.74e-04 | GradNorm: 3.839
  Batch   12/48 | Loss: 3.8007 | LR: 1.86e-04 | GradNorm: 4.060
  Batch   16/48 | Loss: 3.7785 | LR: 1.98e-04 | GradNorm: 1.921
  Batch   20/48 | Loss: 3.7854 | LR: 2.10e-04 | GradNorm: 2.931
  Batch   24/48 | Loss: 3.7483 | LR: 2.22e-04 | GradNorm: 3.860
  Batch   28/48 | Loss: 3.7186 | LR: 2.34e-04 | GradNorm: 2.434
  Batch   32/48 | Loss: 3.6926 | LR: 2.46e-04 | GradNorm: 3.372
  Batch   36/48 | Loss: 3.6433 | LR: 2.58e-04 | GradNorm: 2.558
  Batch   40/48 | Loss: 3.6080 | LR: 2.70e-04 | GradNorm: 4.551
  Batch   44/48 | Loss: 3.5371 | LR: 2.82e-04 | GradNorm: 3.345
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.02%, Val=11.43%, Gap=-4.41%, LR=2.91e-04
  Batch    0/48 | Loss: 3.5000 | LR: 2.91e-04 | GradNorm: 3.535
  Batch    4/48 | Loss: 3.6244 | LR: 2.91e-04 | GradNorm: 6.843
  Batch    8/48 | Loss: 3.5942 | LR: 2.90e-04 | GradNorm: 5.067
  Batch   12/48 | Loss: 3.4998 | LR: 2.90e-04 | GradNorm: 1.788
  Batch   16/48 | Loss: 3.5250 | LR: 2.89e-04 | GradNorm: 6.408
  Batch   20/48 | Loss: 3.5278 | LR: 2.89e-04 | GradNorm: 12.746
  Batch   24/48 | Loss: 3.4838 | LR: 2.88e-04 | GradNorm: 3.116
  Batch   28/48 | Loss: 3.4250 | LR: 2.87e-04 | GradNorm: 2.947
  Batch   32/48 | Loss: 3.5086 | LR: 2.85e-04 | GradNorm: 10.445
  Batch   36/48 | Loss: 3.4111 | LR: 2.84e-04 | GradNorm: 2.908
  Batch   40/48 | Loss: 3.3947 | LR: 2.83e-04 | GradNorm: 4.203
  Batch   44/48 | Loss: 3.3748 | LR: 2.81e-04 | GradNorm: 3.024
Epoch 3/10: Train=11.88%, Val=10.20%, Gap=1.68%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3372 | LR: 2.79e-04 | GradNorm: 3.262
  Batch    4/48 | Loss: 3.3208 | LR: 2.77e-04 | GradNorm: 3.090
  Batch    8/48 | Loss: 3.2908 | LR: 2.75e-04 | GradNorm: 3.115
  Batch   12/48 | Loss: 3.2611 | LR: 2.73e-04 | GradNorm: 3.914
  Batch   16/48 | Loss: 3.2656 | LR: 2.71e-04 | GradNorm: 3.534
  Batch   20/48 | Loss: 3.2809 | LR: 2.68e-04 | GradNorm: 5.324
  Batch   24/48 | Loss: 3.2216 | LR: 2.66e-04 | GradNorm: 1.527
  Batch   28/48 | Loss: 3.2455 | LR: 2.63e-04 | GradNorm: 5.171
  Batch   32/48 | Loss: 3.2185 | LR: 2.60e-04 | GradNorm: 2.161
  Batch   36/48 | Loss: 3.2310 | LR: 2.57e-04 | GradNorm: 4.020
  Batch   40/48 | Loss: 3.2372 | LR: 2.54e-04 | GradNorm: 3.548
  Batch   44/48 | Loss: 3.1591 | LR: 2.51e-04 | GradNorm: 1.436
Epoch 4/10: Train=17.09%, Val=11.13%, Gap=5.96%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1881 | LR: 2.47e-04 | GradNorm: 4.504
  Batch    4/48 | Loss: 3.1807 | LR: 2.44e-04 | GradNorm: 5.116
  Batch    8/48 | Loss: 3.1381 | LR: 2.40e-04 | GradNorm: 2.373
  Batch   12/48 | Loss: 3.1066 | LR: 2.37e-04 | GradNorm: 1.989
  Batch   16/48 | Loss: 3.1768 | LR: 2.33e-04 | GradNorm: 4.800
  Batch   20/48 | Loss: 3.0995 | LR: 2.29e-04 | GradNorm: 2.751
  Batch   24/48 | Loss: 3.1500 | LR: 2.25e-04 | GradNorm: 3.984
  Batch   28/48 | Loss: 3.1035 | LR: 2.21e-04 | GradNorm: 4.237
  Batch   32/48 | Loss: 3.0698 | LR: 2.17e-04 | GradNorm: 2.812
  Batch   36/48 | Loss: 3.1585 | LR: 2.13e-04 | GradNorm: 3.855
  Batch   40/48 | Loss: 3.1087 | LR: 2.09e-04 | GradNorm: 4.285
  Batch   44/48 | Loss: 3.0318 | LR: 2.04e-04 | GradNorm: 5.401
Epoch 5/10: Train=20.96%, Val=14.70%, Gap=6.26%, LR=2.01e-04
  Batch    0/48 | Loss: 2.9826 | LR: 2.00e-04 | GradNorm: 3.781
  Batch    4/48 | Loss: 2.9524 | LR: 1.95e-04 | GradNorm: 5.332
  Batch    8/48 | Loss: 3.0088 | LR: 1.91e-04 | GradNorm: 11.480
  Batch   12/48 | Loss: 2.9549 | LR: 1.86e-04 | GradNorm: 3.691
  Batch   16/48 | Loss: 2.9227 | LR: 1.82e-04 | GradNorm: 3.907
  Batch   20/48 | Loss: 2.9308 | LR: 1.77e-04 | GradNorm: 3.480
  Batch   24/48 | Loss: 2.9324 | LR: 1.73e-04 | GradNorm: 8.170
  Batch   28/48 | Loss: 2.8464 | LR: 1.68e-04 | GradNorm: 3.450
  Batch   32/48 | Loss: 2.8996 | LR: 1.63e-04 | GradNorm: 10.631
  Batch   36/48 | Loss: 2.9257 | LR: 1.58e-04 | GradNorm: 5.565
  Batch   40/48 | Loss: 2.9025 | LR: 1.54e-04 | GradNorm: 5.965
  Batch   44/48 | Loss: 2.9364 | LR: 1.49e-04 | GradNorm: 4.731
Epoch 6/10: Train=26.61%, Val=16.51%, Gap=10.10%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8656 | LR: 1.44e-04 | GradNorm: 4.766
  Batch    4/48 | Loss: 2.8287 | LR: 1.39e-04 | GradNorm: 2.637
  Batch    8/48 | Loss: 2.8445 | LR: 1.35e-04 | GradNorm: 2.922
  Batch   12/48 | Loss: 2.7777 | LR: 1.30e-04 | GradNorm: 4.411
  Batch   16/48 | Loss: 2.7864 | LR: 1.25e-04 | GradNorm: 2.662
  Batch   20/48 | Loss: 2.8337 | LR: 1.21e-04 | GradNorm: 4.095
  Batch   24/48 | Loss: 2.8444 | LR: 1.16e-04 | GradNorm: 4.402
  Batch   28/48 | Loss: 2.8424 | LR: 1.11e-04 | GradNorm: 3.172
  Batch   32/48 | Loss: 2.8372 | LR: 1.07e-04 | GradNorm: 4.610
  Batch   36/48 | Loss: 2.8586 | LR: 1.02e-04 | GradNorm: 6.591
  Batch   40/48 | Loss: 2.8016 | LR: 9.76e-05 | GradNorm: 5.192
  Batch   44/48 | Loss: 2.7881 | LR: 9.31e-05 | GradNorm: 4.310
Epoch 7/10: Train=30.36%, Val=20.19%, Gap=10.17%, LR=8.98e-05
  Batch    0/48 | Loss: 2.7924 | LR: 8.87e-05 | GradNorm: 4.288
  Batch    4/48 | Loss: 2.7428 | LR: 8.44e-05 | GradNorm: 4.688
  Batch    8/48 | Loss: 2.7591 | LR: 8.01e-05 | GradNorm: 3.864
  Batch   12/48 | Loss: 2.7822 | LR: 7.59e-05 | GradNorm: 4.682
  Batch   16/48 | Loss: 2.8136 | LR: 7.17e-05 | GradNorm: 5.529
  Batch   20/48 | Loss: 2.7241 | LR: 6.77e-05 | GradNorm: 5.055
  Batch   24/48 | Loss: 2.6931 | LR: 6.37e-05 | GradNorm: 4.046
  Batch   28/48 | Loss: 2.7354 | LR: 5.98e-05 | GradNorm: 4.320
  Batch   32/48 | Loss: 2.7303 | LR: 5.60e-05 | GradNorm: 2.823
  Batch   36/48 | Loss: 2.7476 | LR: 5.23e-05 | GradNorm: 4.507
  Batch   40/48 | Loss: 2.6607 | LR: 4.87e-05 | GradNorm: 4.275
  Batch   44/48 | Loss: 2.7134 | LR: 4.52e-05 | GradNorm: 4.726
Epoch 8/10: Train=32.92%, Val=20.27%, Gap=12.65%, LR=4.27e-05
  Batch    0/48 | Loss: 2.6697 | LR: 4.18e-05 | GradNorm: 2.541
  Batch    4/48 | Loss: 2.6557 | LR: 3.85e-05 | GradNorm: 3.291
  Batch    8/48 | Loss: 2.7158 | LR: 3.54e-05 | GradNorm: 3.286
  Batch   12/48 | Loss: 2.6611 | LR: 3.23e-05 | GradNorm: 2.603
  Batch   16/48 | Loss: 2.6252 | LR: 2.94e-05 | GradNorm: 2.751
  Batch   20/48 | Loss: 2.6369 | LR: 2.66e-05 | GradNorm: 2.104
  Batch   24/48 | Loss: 2.6585 | LR: 2.39e-05 | GradNorm: 2.396
  Batch   28/48 | Loss: 2.6800 | LR: 2.14e-05 | GradNorm: 2.420
  Batch   32/48 | Loss: 2.6262 | LR: 1.90e-05 | GradNorm: 3.279
  Batch   36/48 | Loss: 2.6413 | LR: 1.67e-05 | GradNorm: 3.476
  Batch   40/48 | Loss: 2.6164 | LR: 1.46e-05 | GradNorm: 3.419
  Batch   44/48 | Loss: 2.6352 | LR: 1.26e-05 | GradNorm: 2.535
Epoch 9/10: Train=35.57%, Val=21.18%, Gap=14.39%, LR=1.12e-05
  Batch    0/48 | Loss: 2.6227 | LR: 1.07e-05 | GradNorm: 4.385
  Batch    4/48 | Loss: 2.6288 | LR: 9.00e-06 | GradNorm: 1.712
  Batch    8/48 | Loss: 2.6071 | LR: 7.43e-06 | GradNorm: 2.772
  Batch   12/48 | Loss: 2.6063 | LR: 6.02e-06 | GradNorm: 3.599
  Batch   16/48 | Loss: 2.6134 | LR: 4.75e-06 | GradNorm: 1.864
  Batch   20/48 | Loss: 2.6245 | LR: 3.63e-06 | GradNorm: 3.018
  Batch   24/48 | Loss: 2.6120 | LR: 2.66e-06 | GradNorm: 2.561
  Batch   28/48 | Loss: 2.6447 | LR: 1.85e-06 | GradNorm: 2.356
  Batch   32/48 | Loss: 2.6553 | LR: 1.19e-06 | GradNorm: 3.306
  Batch   36/48 | Loss: 2.6112 | LR: 6.88e-07 | GradNorm: 2.608
  Batch   40/48 | Loss: 2.5927 | LR: 3.38e-07 | GradNorm: 2.451
  Batch   44/48 | Loss: 2.5993 | LR: 1.44e-07 | GradNorm: 3.439
Epoch 10/10: Train=36.82%, Val=20.98%, Gap=15.84%, LR=1.00e-07
Best validation accuracy: 21.18%
