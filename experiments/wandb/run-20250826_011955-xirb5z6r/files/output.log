=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044486354699477336
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9554 | LR: 9.04e-06 | GradNorm: 1.386
  Batch    4/48 | Loss: 3.9278 | LR: 2.74e-05 | GradNorm: 0.872
  Batch    8/48 | Loss: 3.9286 | LR: 4.57e-05 | GradNorm: 0.877
  Batch   12/48 | Loss: 3.9094 | LR: 6.41e-05 | GradNorm: 0.533
  Batch   16/48 | Loss: 3.9240 | LR: 8.24e-05 | GradNorm: 0.632
  Batch   20/48 | Loss: 3.9151 | LR: 1.01e-04 | GradNorm: 0.595
  Batch   24/48 | Loss: 3.9086 | LR: 1.19e-04 | GradNorm: 0.576
  Batch   28/48 | Loss: 3.9137 | LR: 1.37e-04 | GradNorm: 0.560
  Batch   32/48 | Loss: 3.9031 | LR: 1.56e-04 | GradNorm: 0.517
  Batch   36/48 | Loss: 3.8842 | LR: 1.74e-04 | GradNorm: 0.627
  Batch   40/48 | Loss: 3.8365 | LR: 1.93e-04 | GradNorm: 1.696
  Batch   44/48 | Loss: 3.8308 | LR: 2.11e-04 | GradNorm: 3.158
Epoch 1/10: Train=2.74%, Val=4.18%, Gap=-1.44%, LR=2.25e-04
  Batch    0/48 | Loss: 3.7925 | LR: 2.29e-04 | GradNorm: 2.444
  Batch    4/48 | Loss: 3.7757 | LR: 2.48e-04 | GradNorm: 1.760
  Batch    8/48 | Loss: 3.7492 | LR: 2.66e-04 | GradNorm: 2.074
  Batch   12/48 | Loss: 3.7300 | LR: 2.84e-04 | GradNorm: 3.567
  Batch   16/48 | Loss: 3.7401 | LR: 3.03e-04 | GradNorm: 1.393
  Batch   20/48 | Loss: 3.7095 | LR: 3.21e-04 | GradNorm: 1.876
  Batch   24/48 | Loss: 3.6444 | LR: 3.39e-04 | GradNorm: 1.556
  Batch   28/48 | Loss: 3.7151 | LR: 3.58e-04 | GradNorm: 8.054
  Batch   32/48 | Loss: 3.6457 | LR: 3.76e-04 | GradNorm: 2.734
  Batch   36/48 | Loss: 3.6378 | LR: 3.94e-04 | GradNorm: 5.791
  Batch   40/48 | Loss: 3.6548 | LR: 4.13e-04 | GradNorm: 4.735
  Batch   44/48 | Loss: 3.6255 | LR: 4.31e-04 | GradNorm: 6.839
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.20%, Val=8.51%, Gap=-1.31%, LR=4.45e-04
  Batch    0/48 | Loss: 3.5068 | LR: 4.45e-04 | GradNorm: 3.437
  Batch    4/48 | Loss: 3.5692 | LR: 4.45e-04 | GradNorm: 3.903
  Batch    8/48 | Loss: 3.5475 | LR: 4.44e-04 | GradNorm: 3.532
  Batch   12/48 | Loss: 3.4995 | LR: 4.44e-04 | GradNorm: 1.249
  Batch   16/48 | Loss: 3.8203 | LR: 4.43e-04 | GradNorm: 2.744
  Batch   20/48 | Loss: 3.9279 | LR: 4.42e-04 | GradNorm: 15.294
  Batch   24/48 | Loss: 3.6691 | LR: 4.40e-04 | GradNorm: 4.300
  Batch   28/48 | Loss: 3.5640 | LR: 4.39e-04 | GradNorm: 3.954
  Batch   32/48 | Loss: 3.5461 | LR: 4.37e-04 | GradNorm: 3.556
  Batch   36/48 | Loss: 3.5284 | LR: 4.35e-04 | GradNorm: 4.886
  Batch   40/48 | Loss: 3.4903 | LR: 4.32e-04 | GradNorm: 3.475
  Batch   44/48 | Loss: 3.4557 | LR: 4.30e-04 | GradNorm: 3.125
Epoch 3/10: Train=9.80%, Val=10.27%, Gap=-0.47%, LR=4.28e-04
  Batch    0/48 | Loss: 3.3623 | LR: 4.27e-04 | GradNorm: 1.396
  Batch    4/48 | Loss: 3.3663 | LR: 4.24e-04 | GradNorm: 4.541
  Batch    8/48 | Loss: 3.3469 | LR: 4.21e-04 | GradNorm: 2.715
  Batch   12/48 | Loss: 3.2870 | LR: 4.18e-04 | GradNorm: 2.734
  Batch   16/48 | Loss: 3.3092 | LR: 4.14e-04 | GradNorm: 4.699
  Batch   20/48 | Loss: 3.3094 | LR: 4.10e-04 | GradNorm: 4.679
  Batch   24/48 | Loss: 3.2349 | LR: 4.06e-04 | GradNorm: 1.544
  Batch   28/48 | Loss: 3.2145 | LR: 4.02e-04 | GradNorm: 3.278
  Batch   32/48 | Loss: 3.2232 | LR: 3.98e-04 | GradNorm: 3.647
  Batch   36/48 | Loss: 3.2246 | LR: 3.93e-04 | GradNorm: 3.759
  Batch   40/48 | Loss: 3.2034 | LR: 3.88e-04 | GradNorm: 2.234
  Batch   44/48 | Loss: 3.2613 | LR: 3.84e-04 | GradNorm: 6.551
Epoch 4/10: Train=16.32%, Val=12.81%, Gap=3.51%, LR=3.80e-04
  Batch    0/48 | Loss: 3.1557 | LR: 3.78e-04 | GradNorm: 2.597
  Batch    4/48 | Loss: 3.1201 | LR: 3.73e-04 | GradNorm: 2.775
  Batch    8/48 | Loss: 3.1123 | LR: 3.68e-04 | GradNorm: 2.665
  Batch   12/48 | Loss: 3.1169 | LR: 3.62e-04 | GradNorm: 4.247
  Batch   16/48 | Loss: 3.1599 | LR: 3.56e-04 | GradNorm: 3.530
  Batch   20/48 | Loss: 3.0991 | LR: 3.51e-04 | GradNorm: 3.495
  Batch   24/48 | Loss: 3.1661 | LR: 3.45e-04 | GradNorm: 4.127
  Batch   28/48 | Loss: 3.0676 | LR: 3.38e-04 | GradNorm: 1.851
  Batch   32/48 | Loss: 3.0494 | LR: 3.32e-04 | GradNorm: 1.118
  Batch   36/48 | Loss: 3.1954 | LR: 3.26e-04 | GradNorm: 4.576
  Batch   40/48 | Loss: 3.1366 | LR: 3.19e-04 | GradNorm: 6.617
  Batch   44/48 | Loss: 3.0747 | LR: 3.13e-04 | GradNorm: 2.843
Epoch 5/10: Train=20.07%, Val=15.19%, Gap=4.88%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0379 | LR: 3.06e-04 | GradNorm: 4.314
  Batch    4/48 | Loss: 2.9531 | LR: 2.99e-04 | GradNorm: 3.029
  Batch    8/48 | Loss: 3.0109 | LR: 2.92e-04 | GradNorm: 4.548
  Batch   12/48 | Loss: 2.9881 | LR: 2.85e-04 | GradNorm: 2.507
  Batch   16/48 | Loss: 2.9521 | LR: 2.78e-04 | GradNorm: 2.383
  Batch   20/48 | Loss: 2.9537 | LR: 2.71e-04 | GradNorm: 4.160
  Batch   24/48 | Loss: 3.0261 | LR: 2.64e-04 | GradNorm: 6.253
  Batch   28/48 | Loss: 2.9065 | LR: 2.57e-04 | GradNorm: 3.279
  Batch   32/48 | Loss: 2.9157 | LR: 2.50e-04 | GradNorm: 3.619
  Batch   36/48 | Loss: 2.9251 | LR: 2.42e-04 | GradNorm: 2.949
  Batch   40/48 | Loss: 2.9200 | LR: 2.35e-04 | GradNorm: 4.398
  Batch   44/48 | Loss: 3.0034 | LR: 2.28e-04 | GradNorm: 5.773
Epoch 6/10: Train=25.12%, Val=15.76%, Gap=9.36%, LR=2.22e-04
  Batch    0/48 | Loss: 2.9492 | LR: 2.21e-04 | GradNorm: 7.208
  Batch    4/48 | Loss: 2.8816 | LR: 2.13e-04 | GradNorm: 5.037
  Batch    8/48 | Loss: 2.8455 | LR: 2.06e-04 | GradNorm: 3.748
  Batch   12/48 | Loss: 2.7863 | LR: 1.99e-04 | GradNorm: 4.376
  Batch   16/48 | Loss: 2.7915 | LR: 1.92e-04 | GradNorm: 3.274
  Batch   20/48 | Loss: 2.8257 | LR: 1.84e-04 | GradNorm: 3.145
  Batch   24/48 | Loss: 2.8548 | LR: 1.77e-04 | GradNorm: 3.347
  Batch   28/48 | Loss: 2.8346 | LR: 1.70e-04 | GradNorm: 4.061
  Batch   32/48 | Loss: 2.8252 | LR: 1.63e-04 | GradNorm: 4.957
  Batch   36/48 | Loss: 2.8141 | LR: 1.56e-04 | GradNorm: 4.373
  Batch   40/48 | Loss: 2.8063 | LR: 1.49e-04 | GradNorm: 4.307
  Batch   44/48 | Loss: 2.7859 | LR: 1.42e-04 | GradNorm: 6.055
Epoch 7/10: Train=30.22%, Val=20.66%, Gap=9.56%, LR=1.37e-04
  Batch    0/48 | Loss: 2.7883 | LR: 1.36e-04 | GradNorm: 3.755
  Batch    4/48 | Loss: 2.7205 | LR: 1.29e-04 | GradNorm: 5.013
  Batch    8/48 | Loss: 2.7280 | LR: 1.22e-04 | GradNorm: 3.604
  Batch   12/48 | Loss: 2.8094 | LR: 1.16e-04 | GradNorm: 6.563
  Batch   16/48 | Loss: 2.7806 | LR: 1.10e-04 | GradNorm: 4.485
  Batch   20/48 | Loss: 2.7149 | LR: 1.04e-04 | GradNorm: 5.732
  Batch   24/48 | Loss: 2.6713 | LR: 9.74e-05 | GradNorm: 3.509
  Batch   28/48 | Loss: 2.7177 | LR: 9.15e-05 | GradNorm: 3.165
  Batch   32/48 | Loss: 2.7360 | LR: 8.57e-05 | GradNorm: 5.901
  Batch   36/48 | Loss: 2.7210 | LR: 8.00e-05 | GradNorm: 3.338
  Batch   40/48 | Loss: 2.6574 | LR: 7.45e-05 | GradNorm: 5.147
  Batch   44/48 | Loss: 2.7183 | LR: 6.91e-05 | GradNorm: 5.924
Epoch 8/10: Train=33.09%, Val=20.06%, Gap=13.03%, LR=6.52e-05
  Batch    0/48 | Loss: 2.6792 | LR: 6.40e-05 | GradNorm: 5.786
  Batch    4/48 | Loss: 2.6770 | LR: 5.89e-05 | GradNorm: 5.347
  Batch    8/48 | Loss: 2.7169 | LR: 5.41e-05 | GradNorm: 7.117
  Batch   12/48 | Loss: 2.6539 | LR: 4.94e-05 | GradNorm: 3.783
  Batch   16/48 | Loss: 2.5994 | LR: 4.50e-05 | GradNorm: 3.296
  Batch   20/48 | Loss: 2.5885 | LR: 4.07e-05 | GradNorm: 2.053
  Batch   24/48 | Loss: 2.6540 | LR: 3.66e-05 | GradNorm: 5.261
  Batch   28/48 | Loss: 2.6658 | LR: 3.27e-05 | GradNorm: 2.767
  Batch   32/48 | Loss: 2.6361 | LR: 2.90e-05 | GradNorm: 4.252
  Batch   36/48 | Loss: 2.6382 | LR: 2.55e-05 | GradNorm: 3.001
  Batch   40/48 | Loss: 2.6256 | LR: 2.22e-05 | GradNorm: 4.462
  Batch   44/48 | Loss: 2.6343 | LR: 1.92e-05 | GradNorm: 1.945
Epoch 9/10: Train=35.35%, Val=19.97%, Gap=15.38%, LR=1.70e-05
  Batch    0/48 | Loss: 2.6281 | LR: 1.63e-05 | GradNorm: 1.423
  Batch    4/48 | Loss: 2.6037 | LR: 1.37e-05 | GradNorm: 2.233
  Batch    8/48 | Loss: 2.5929 | LR: 1.13e-05 | GradNorm: 2.540
  Batch   12/48 | Loss: 2.5963 | LR: 9.15e-06 | GradNorm: 3.188
  Batch   16/48 | Loss: 2.5974 | LR: 7.21e-06 | GradNorm: 1.683
  Batch   20/48 | Loss: 2.6077 | LR: 5.50e-06 | GradNorm: 2.450
  Batch   24/48 | Loss: 2.6268 | LR: 4.03e-06 | GradNorm: 2.289
  Batch   28/48 | Loss: 2.6255 | LR: 2.78e-06 | GradNorm: 3.822
  Batch   32/48 | Loss: 2.6476 | LR: 1.77e-06 | GradNorm: 1.573
  Batch   36/48 | Loss: 2.5925 | LR: 1.00e-06 | GradNorm: 1.473
  Batch   40/48 | Loss: 2.5730 | LR: 4.65e-07 | GradNorm: 1.604
  Batch   44/48 | Loss: 2.5983 | LR: 1.67e-07 | GradNorm: 2.039
Epoch 10/10: Train=36.62%, Val=20.22%, Gap=16.40%, LR=1.00e-07
Best validation accuracy: 20.66%
