=== LAMB Sweep Run ===
LR: 0.000300
Weight Decay: 0.0500
Warmup Epochs: 3
Using device: cuda
Available GPUs: 4
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.48s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs with LAMB optimizer
Setting up deterministic training (seed=42)
Created lamb (fallback to AdamW) optimizer:
   Learning rate: 0.000300
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 144
   Total steps: 1440
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: lamb_lr_0.000300_wd_0.0500
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_lamb_runs
Starting LAMB training for 30 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9322 | LR: 5.06e-06 | GradNorm: 1.285
  Batch    4/48 | Loss: 3.9267 | LR: 1.33e-05 | GradNorm: 1.082
  Batch    8/48 | Loss: 3.9244 | LR: 2.16e-05 | GradNorm: 1.102
  Batch   12/48 | Loss: 3.9156 | LR: 2.98e-05 | GradNorm: 0.886
  Batch   16/48 | Loss: 3.9211 | LR: 3.81e-05 | GradNorm: 0.782
  Batch   20/48 | Loss: 3.9084 | LR: 4.63e-05 | GradNorm: 0.744
  Batch   24/48 | Loss: 3.9136 | LR: 5.46e-05 | GradNorm: 0.729
  Batch   28/48 | Loss: 3.9116 | LR: 6.28e-05 | GradNorm: 0.686
  Batch   32/48 | Loss: 3.9102 | LR: 7.11e-05 | GradNorm: 0.675
  Batch   36/48 | Loss: 3.9054 | LR: 7.93e-05 | GradNorm: 0.758
  Batch   40/48 | Loss: 3.8851 | LR: 8.76e-05 | GradNorm: 0.758
  Batch   44/48 | Loss: 3.8699 | LR: 9.58e-05 | GradNorm: 2.398
Epoch 1/30: Train=2.69%, Val=3.79%, Best=3.79% (E1), Gap=-1.10%, LR=1.02e-04
  Batch    0/48 | Loss: 3.8633 | LR: 1.04e-04 | GradNorm: 7.040
  Batch    4/48 | Loss: 3.9290 | LR: 1.12e-04 | GradNorm: 7.690
  Batch    8/48 | Loss: 3.9447 | LR: 1.21e-04 | GradNorm: 6.178
  Batch   12/48 | Loss: 3.8720 | LR: 1.29e-04 | GradNorm: 4.973
  Batch   16/48 | Loss: 3.8355 | LR: 1.37e-04 | GradNorm: 3.595
  Batch   20/48 | Loss: 3.7816 | LR: 1.45e-04 | GradNorm: 2.280
  Batch   24/48 | Loss: 3.7531 | LR: 1.54e-04 | GradNorm: 4.002
  Batch   28/48 | Loss: 3.7610 | LR: 1.62e-04 | GradNorm: 4.986
  Batch   32/48 | Loss: 3.7330 | LR: 1.70e-04 | GradNorm: 6.476
  Batch   36/48 | Loss: 3.6975 | LR: 1.78e-04 | GradNorm: 4.970
  Batch   40/48 | Loss: 3.6821 | LR: 1.87e-04 | GradNorm: 3.461
  Batch   44/48 | Loss: 3.6257 | LR: 1.95e-04 | GradNorm: 1.801
Epoch 2/30: Train=5.92%, Val=5.82%, Best=5.82% (E2), Gap=0.10%, LR=2.01e-04
  Batch    0/48 | Loss: 3.6694 | LR: 2.03e-04 | GradNorm: 8.647
  Batch    4/48 | Loss: 3.6007 | LR: 2.11e-04 | GradNorm: 3.018
  Batch    8/48 | Loss: 3.5565 | LR: 2.20e-04 | GradNorm: 1.617
  Batch   12/48 | Loss: 3.6754 | LR: 2.28e-04 | GradNorm: 8.292
  Batch   16/48 | Loss: 3.5456 | LR: 2.36e-04 | GradNorm: 3.269
  Batch   20/48 | Loss: 3.6244 | LR: 2.44e-04 | GradNorm: 6.469
  Batch   24/48 | Loss: 3.6108 | LR: 2.53e-04 | GradNorm: 4.264
  Batch   28/48 | Loss: 3.5099 | LR: 2.61e-04 | GradNorm: 2.733
  Batch   32/48 | Loss: 3.5168 | LR: 2.69e-04 | GradNorm: 2.628
  Batch   36/48 | Loss: 3.4653 | LR: 2.77e-04 | GradNorm: 1.467
  Batch   40/48 | Loss: 3.4981 | LR: 2.86e-04 | GradNorm: 4.059
  Batch   44/48 | Loss: 3.4462 | LR: 2.94e-04 | GradNorm: 2.270
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 3/30: Train=10.01%, Val=8.99%, Best=8.99% (E3), Gap=1.02%, LR=3.00e-04
  Batch    0/48 | Loss: 3.4502 | LR: 3.00e-04 | GradNorm: 4.968
  Batch    4/48 | Loss: 3.4256 | LR: 3.00e-04 | GradNorm: 4.560
  Batch    8/48 | Loss: 3.3625 | LR: 3.00e-04 | GradNorm: 3.145
  Batch   12/48 | Loss: 3.3092 | LR: 3.00e-04 | GradNorm: 2.820
  Batch   16/48 | Loss: 3.3356 | LR: 3.00e-04 | GradNorm: 3.907
  Batch   20/48 | Loss: 3.3892 | LR: 3.00e-04 | GradNorm: 6.384
  Batch   24/48 | Loss: 3.4148 | LR: 3.00e-04 | GradNorm: 5.760
  Batch   28/48 | Loss: 3.2707 | LR: 3.00e-04 | GradNorm: 3.029
  Batch   32/48 | Loss: 3.3305 | LR: 3.00e-04 | GradNorm: 8.812
  Batch   36/48 | Loss: 3.2955 | LR: 2.99e-04 | GradNorm: 4.456
  Batch   40/48 | Loss: 3.8571 | LR: 2.99e-04 | GradNorm: 66.233
  Batch   44/48 | Loss: 3.2620 | LR: 2.99e-04 | GradNorm: 2.684
Epoch 4/30: Train=14.52%, Val=11.23%, Best=11.23% (E4), Gap=3.29%, LR=2.99e-04
  Batch    0/48 | Loss: 3.2475 | LR: 2.99e-04 | GradNorm: 3.068
  Batch    4/48 | Loss: 3.1919 | LR: 2.99e-04 | GradNorm: 2.058
  Batch    8/48 | Loss: 3.1899 | LR: 2.99e-04 | GradNorm: 2.090
  Batch   12/48 | Loss: 3.1806 | LR: 2.98e-04 | GradNorm: 4.550
  Batch   16/48 | Loss: 3.2304 | LR: 2.98e-04 | GradNorm: 2.055
  Batch   20/48 | Loss: 3.1809 | LR: 2.98e-04 | GradNorm: 1.765
  Batch   24/48 | Loss: 3.1728 | LR: 2.98e-04 | GradNorm: 2.099
  Batch   28/48 | Loss: 3.1711 | LR: 2.97e-04 | GradNorm: 3.213
  Batch   32/48 | Loss: 3.1384 | LR: 2.97e-04 | GradNorm: 4.597
  Batch   36/48 | Loss: 3.1828 | LR: 2.97e-04 | GradNorm: 2.090
  Batch   40/48 | Loss: 3.1632 | LR: 2.97e-04 | GradNorm: 3.099
  Batch   44/48 | Loss: 3.1138 | LR: 2.96e-04 | GradNorm: 2.428
Epoch 5/30: Train=18.68%, Val=12.36%, Best=12.36% (E5), Gap=6.32%, LR=2.96e-04
  Batch    0/48 | Loss: 3.0638 | LR: 2.96e-04 | GradNorm: 3.236
  Batch    4/48 | Loss: 3.0105 | LR: 2.96e-04 | GradNorm: 2.632
  Batch    8/48 | Loss: 3.0485 | LR: 2.95e-04 | GradNorm: 3.222
  Batch   12/48 | Loss: 3.0216 | LR: 2.95e-04 | GradNorm: 3.519
  Batch   16/48 | Loss: 3.0072 | LR: 2.94e-04 | GradNorm: 4.682
  Batch   20/48 | Loss: 2.9790 | LR: 2.94e-04 | GradNorm: 2.744
  Batch   24/48 | Loss: 2.9933 | LR: 2.94e-04 | GradNorm: 5.354
  Batch   28/48 | Loss: 2.9102 | LR: 2.93e-04 | GradNorm: 3.284
  Batch   32/48 | Loss: 2.9093 | LR: 2.93e-04 | GradNorm: 3.832
  Batch   36/48 | Loss: 2.9392 | LR: 2.92e-04 | GradNorm: 4.994
  Batch   40/48 | Loss: 2.8999 | LR: 2.92e-04 | GradNorm: 3.823
  Batch   44/48 | Loss: 2.9342 | LR: 2.91e-04 | GradNorm: 4.641
Epoch 6/30: Train=25.27%, Val=15.35%, Best=15.35% (E6), Gap=9.92%, LR=2.91e-04
  Batch    0/48 | Loss: 2.8467 | LR: 2.91e-04 | GradNorm: 4.562
  Batch    4/48 | Loss: 2.8318 | LR: 2.90e-04 | GradNorm: 2.936
  Batch    8/48 | Loss: 2.8270 | LR: 2.90e-04 | GradNorm: 3.870
  Batch   12/48 | Loss: 2.8255 | LR: 2.89e-04 | GradNorm: 7.594
  Batch   16/48 | Loss: 2.7938 | LR: 2.89e-04 | GradNorm: 5.387
  Batch   20/48 | Loss: 2.8003 | LR: 2.88e-04 | GradNorm: 3.384
  Batch   24/48 | Loss: 2.8508 | LR: 2.88e-04 | GradNorm: 7.065
