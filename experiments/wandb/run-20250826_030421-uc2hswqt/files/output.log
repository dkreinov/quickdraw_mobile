=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002690977116802642
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9481 | LR: 5.47e-06 | GradNorm: 1.762
  Batch    4/48 | Loss: 3.9239 | LR: 1.66e-05 | GradNorm: 1.073
  Batch    8/48 | Loss: 3.9191 | LR: 2.77e-05 | GradNorm: 0.852
  Batch   12/48 | Loss: 3.9134 | LR: 3.88e-05 | GradNorm: 0.717
  Batch   16/48 | Loss: 3.9203 | LR: 4.99e-05 | GradNorm: 0.758
  Batch   20/48 | Loss: 3.9111 | LR: 6.10e-05 | GradNorm: 0.653
  Batch   24/48 | Loss: 3.9147 | LR: 7.21e-05 | GradNorm: 0.715
  Batch   28/48 | Loss: 3.9183 | LR: 8.32e-05 | GradNorm: 0.666
  Batch   32/48 | Loss: 3.9081 | LR: 9.43e-05 | GradNorm: 0.613
  Batch   36/48 | Loss: 3.9051 | LR: 1.05e-04 | GradNorm: 0.562
  Batch   40/48 | Loss: 3.8923 | LR: 1.16e-04 | GradNorm: 0.651
  Batch   44/48 | Loss: 3.8604 | LR: 1.28e-04 | GradNorm: 0.966
Epoch 1/10: Train=2.62%, Val=5.22%, Gap=-2.60%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8214 | LR: 1.39e-04 | GradNorm: 5.411
  Batch    4/48 | Loss: 3.8041 | LR: 1.50e-04 | GradNorm: 3.773
  Batch    8/48 | Loss: 3.8015 | LR: 1.61e-04 | GradNorm: 4.266
  Batch   12/48 | Loss: 3.8309 | LR: 1.72e-04 | GradNorm: 4.703
  Batch   16/48 | Loss: 3.7853 | LR: 1.83e-04 | GradNorm: 1.008
  Batch   20/48 | Loss: 3.7677 | LR: 1.94e-04 | GradNorm: 1.035
  Batch   24/48 | Loss: 3.7606 | LR: 2.05e-04 | GradNorm: 4.929
  Batch   28/48 | Loss: 3.7254 | LR: 2.16e-04 | GradNorm: 5.783
  Batch   32/48 | Loss: 3.6350 | LR: 2.27e-04 | GradNorm: 1.519
  Batch   36/48 | Loss: 3.6342 | LR: 2.39e-04 | GradNorm: 3.858
  Batch   40/48 | Loss: 3.6150 | LR: 2.50e-04 | GradNorm: 1.805
  Batch   44/48 | Loss: 3.5716 | LR: 2.61e-04 | GradNorm: 2.336
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.49%, Val=7.54%, Gap=-1.05%, LR=2.69e-04
  Batch    0/48 | Loss: 3.5346 | LR: 2.69e-04 | GradNorm: 4.370
  Batch    4/48 | Loss: 3.5348 | LR: 2.69e-04 | GradNorm: 4.351
  Batch    8/48 | Loss: 3.4950 | LR: 2.69e-04 | GradNorm: 4.509
  Batch   12/48 | Loss: 3.5244 | LR: 2.68e-04 | GradNorm: 6.323
  Batch   16/48 | Loss: 3.4879 | LR: 2.68e-04 | GradNorm: 3.737
  Batch   20/48 | Loss: 3.4527 | LR: 2.67e-04 | GradNorm: 3.301
  Batch   24/48 | Loss: 3.4406 | LR: 2.66e-04 | GradNorm: 4.760
  Batch   28/48 | Loss: 3.4229 | LR: 2.65e-04 | GradNorm: 4.422
  Batch   32/48 | Loss: 3.4602 | LR: 2.64e-04 | GradNorm: 5.868
  Batch   36/48 | Loss: 3.4540 | LR: 2.63e-04 | GradNorm: 5.909
  Batch   40/48 | Loss: 3.4583 | LR: 2.62e-04 | GradNorm: 8.004
  Batch   44/48 | Loss: 3.5080 | LR: 2.60e-04 | GradNorm: 7.362
Epoch 3/10: Train=12.48%, Val=12.22%, Gap=0.26%, LR=2.59e-04
  Batch    0/48 | Loss: 3.4285 | LR: 2.58e-04 | GradNorm: 4.124
  Batch    4/48 | Loss: 3.3541 | LR: 2.57e-04 | GradNorm: 3.469
  Batch    8/48 | Loss: 3.3624 | LR: 2.55e-04 | GradNorm: 4.970
  Batch   12/48 | Loss: 3.2475 | LR: 2.53e-04 | GradNorm: 1.589
  Batch   16/48 | Loss: 3.2885 | LR: 2.51e-04 | GradNorm: 4.561
  Batch   20/48 | Loss: 3.2716 | LR: 2.48e-04 | GradNorm: 3.719
  Batch   24/48 | Loss: 3.2373 | LR: 2.46e-04 | GradNorm: 2.329
  Batch   28/48 | Loss: 3.2513 | LR: 2.43e-04 | GradNorm: 4.407
  Batch   32/48 | Loss: 3.2692 | LR: 2.41e-04 | GradNorm: 4.113
  Batch   36/48 | Loss: 3.2358 | LR: 2.38e-04 | GradNorm: 3.050
  Batch   40/48 | Loss: 3.2086 | LR: 2.35e-04 | GradNorm: 3.017
  Batch   44/48 | Loss: 3.2049 | LR: 2.32e-04 | GradNorm: 6.645
Epoch 4/10: Train=16.79%, Val=12.75%, Gap=4.04%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1729 | LR: 2.29e-04 | GradNorm: 4.064
  Batch    4/48 | Loss: 3.1381 | LR: 2.26e-04 | GradNorm: 4.141
  Batch    8/48 | Loss: 3.1119 | LR: 2.22e-04 | GradNorm: 3.519
  Batch   12/48 | Loss: 3.1075 | LR: 2.19e-04 | GradNorm: 4.778
  Batch   16/48 | Loss: 3.1731 | LR: 2.16e-04 | GradNorm: 6.354
  Batch   20/48 | Loss: 3.0899 | LR: 2.12e-04 | GradNorm: 5.373
  Batch   24/48 | Loss: 3.1165 | LR: 2.08e-04 | GradNorm: 6.594
  Batch   28/48 | Loss: 3.1197 | LR: 2.05e-04 | GradNorm: 6.160
  Batch   32/48 | Loss: 3.0630 | LR: 2.01e-04 | GradNorm: 4.000
  Batch   36/48 | Loss: 3.0805 | LR: 1.97e-04 | GradNorm: 2.166
  Batch   40/48 | Loss: 3.0906 | LR: 1.93e-04 | GradNorm: 4.163
  Batch   44/48 | Loss: 3.0171 | LR: 1.89e-04 | GradNorm: 4.278
Epoch 5/10: Train=22.03%, Val=16.87%, Gap=5.16%, LR=1.86e-04
  Batch    0/48 | Loss: 2.9565 | LR: 1.85e-04 | GradNorm: 3.074
  Batch    4/48 | Loss: 2.9904 | LR: 1.81e-04 | GradNorm: 12.075
  Batch    8/48 | Loss: 2.9414 | LR: 1.77e-04 | GradNorm: 3.559
  Batch   12/48 | Loss: 2.9539 | LR: 1.73e-04 | GradNorm: 4.453
  Batch   16/48 | Loss: 2.9132 | LR: 1.68e-04 | GradNorm: 3.174
  Batch   20/48 | Loss: 2.9136 | LR: 1.64e-04 | GradNorm: 5.223
  Batch   24/48 | Loss: 2.9630 | LR: 1.60e-04 | GradNorm: 7.864
  Batch   28/48 | Loss: 2.8490 | LR: 1.55e-04 | GradNorm: 2.367
  Batch   32/48 | Loss: 2.8595 | LR: 1.51e-04 | GradNorm: 3.702
  Batch   36/48 | Loss: 2.9050 | LR: 1.47e-04 | GradNorm: 3.860
  Batch   40/48 | Loss: 2.8977 | LR: 1.42e-04 | GradNorm: 6.192
  Batch   44/48 | Loss: 2.9164 | LR: 1.38e-04 | GradNorm: 4.124
Epoch 6/10: Train=27.12%, Val=17.02%, Gap=10.10%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8972 | LR: 1.33e-04 | GradNorm: 9.880
  Batch    4/48 | Loss: 2.8567 | LR: 1.29e-04 | GradNorm: 4.740
  Batch    8/48 | Loss: 2.8260 | LR: 1.25e-04 | GradNorm: 3.079
  Batch   12/48 | Loss: 2.7819 | LR: 1.20e-04 | GradNorm: 4.277
  Batch   16/48 | Loss: 2.8001 | LR: 1.16e-04 | GradNorm: 2.612
  Batch   20/48 | Loss: 2.8343 | LR: 1.12e-04 | GradNorm: 3.867
  Batch   24/48 | Loss: 2.8348 | LR: 1.07e-04 | GradNorm: 3.589
  Batch   28/48 | Loss: 2.8419 | LR: 1.03e-04 | GradNorm: 3.990
  Batch   32/48 | Loss: 2.8182 | LR: 9.87e-05 | GradNorm: 5.798
  Batch   36/48 | Loss: 2.8232 | LR: 9.45e-05 | GradNorm: 4.513
  Batch   40/48 | Loss: 2.8013 | LR: 9.03e-05 | GradNorm: 6.013
  Batch   44/48 | Loss: 2.7776 | LR: 8.62e-05 | GradNorm: 5.887
Epoch 7/10: Train=30.06%, Val=19.81%, Gap=10.25%, LR=8.31e-05
  Batch    0/48 | Loss: 2.7748 | LR: 8.21e-05 | GradNorm: 5.466
  Batch    4/48 | Loss: 2.7309 | LR: 7.81e-05 | GradNorm: 4.454
  Batch    8/48 | Loss: 2.7424 | LR: 7.41e-05 | GradNorm: 3.739
  Batch   12/48 | Loss: 2.7806 | LR: 7.02e-05 | GradNorm: 4.241
  Batch   16/48 | Loss: 2.7856 | LR: 6.64e-05 | GradNorm: 5.279
  Batch   20/48 | Loss: 2.6999 | LR: 6.26e-05 | GradNorm: 5.356
  Batch   24/48 | Loss: 2.6988 | LR: 5.90e-05 | GradNorm: 6.780
  Batch   28/48 | Loss: 2.7276 | LR: 5.54e-05 | GradNorm: 4.353
  Batch   32/48 | Loss: 2.7139 | LR: 5.19e-05 | GradNorm: 2.594
  Batch   36/48 | Loss: 2.7145 | LR: 4.84e-05 | GradNorm: 2.411
  Batch   40/48 | Loss: 2.6429 | LR: 4.51e-05 | GradNorm: 3.488
  Batch   44/48 | Loss: 2.6966 | LR: 4.19e-05 | GradNorm: 2.834
Epoch 8/10: Train=32.98%, Val=20.80%, Gap=12.18%, LR=3.95e-05
  Batch    0/48 | Loss: 2.6705 | LR: 3.87e-05 | GradNorm: 4.890
  Batch    4/48 | Loss: 2.6544 | LR: 3.57e-05 | GradNorm: 5.029
  Batch    8/48 | Loss: 2.7070 | LR: 3.28e-05 | GradNorm: 3.615
  Batch   12/48 | Loss: 2.6534 | LR: 2.99e-05 | GradNorm: 3.199
  Batch   16/48 | Loss: 2.6115 | LR: 2.72e-05 | GradNorm: 3.052
  Batch   20/48 | Loss: 2.6311 | LR: 2.46e-05 | GradNorm: 3.507
  Batch   24/48 | Loss: 2.6614 | LR: 2.22e-05 | GradNorm: 4.248
  Batch   28/48 | Loss: 2.6546 | LR: 1.98e-05 | GradNorm: 2.929
  Batch   32/48 | Loss: 2.6397 | LR: 1.76e-05 | GradNorm: 4.519
  Batch   36/48 | Loss: 2.6152 | LR: 1.55e-05 | GradNorm: 3.930
  Batch   40/48 | Loss: 2.6172 | LR: 1.35e-05 | GradNorm: 3.367
  Batch   44/48 | Loss: 2.6453 | LR: 1.16e-05 | GradNorm: 3.667
Epoch 9/10: Train=35.74%, Val=23.16%, Gap=12.58%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6262 | LR: 9.92e-06 | GradNorm: 5.762
  Batch    4/48 | Loss: 2.6365 | LR: 8.34e-06 | GradNorm: 3.178
  Batch    8/48 | Loss: 2.6177 | LR: 6.89e-06 | GradNorm: 2.822
  Batch   12/48 | Loss: 2.6133 | LR: 5.58e-06 | GradNorm: 2.850
  Batch   16/48 | Loss: 2.6214 | LR: 4.40e-06 | GradNorm: 3.154
  Batch   20/48 | Loss: 2.6314 | LR: 3.37e-06 | GradNorm: 3.020
  Batch   24/48 | Loss: 2.6207 | LR: 2.47e-06 | GradNorm: 2.974
  Batch   28/48 | Loss: 2.6439 | LR: 1.72e-06 | GradNorm: 2.329
  Batch   32/48 | Loss: 2.6352 | LR: 1.11e-06 | GradNorm: 4.086
  Batch   36/48 | Loss: 2.6231 | LR: 6.44e-07 | GradNorm: 2.023
  Batch   40/48 | Loss: 2.5900 | LR: 3.20e-07 | GradNorm: 3.192
  Batch   44/48 | Loss: 2.6074 | LR: 1.41e-07 | GradNorm: 2.871
Epoch 10/10: Train=36.81%, Val=23.28%, Gap=13.53%, LR=1.00e-07
Best validation accuracy: 23.28%
