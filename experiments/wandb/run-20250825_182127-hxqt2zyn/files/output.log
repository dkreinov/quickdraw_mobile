=== W&B Sweep Run: LR=0.002243 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0022430163515999206
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002243
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9513 | LR: 4.56e-05 | GradNorm: 1.630
  Batch    4/48 | Loss: 3.9184 | LR: 1.38e-04 | GradNorm: 0.740
  Batch    8/48 | Loss: 3.9204 | LR: 2.31e-04 | GradNorm: 0.567
  Batch   12/48 | Loss: 3.9169 | LR: 3.23e-04 | GradNorm: 0.521
  Batch   16/48 | Loss: 3.9151 | LR: 4.16e-04 | GradNorm: 0.470
  Batch   20/48 | Loss: 3.9025 | LR: 5.08e-04 | GradNorm: 0.582
  Batch   24/48 | Loss: 3.8469 | LR: 6.01e-04 | GradNorm: 1.036
  Batch   28/48 | Loss: 4.0533 | LR: 6.93e-04 | GradNorm: 1.781
  Batch   32/48 | Loss: 3.8771 | LR: 7.86e-04 | GradNorm: 1.092
  Batch   36/48 | Loss: 3.8434 | LR: 8.78e-04 | GradNorm: 0.864
  Batch   40/48 | Loss: 3.8292 | LR: 9.71e-04 | GradNorm: 1.096
  Batch   44/48 | Loss: 3.7879 | LR: 1.06e-03 | GradNorm: 0.497
Epoch 1/10: Train=3.26%, Val=4.16%, Gap=-0.90%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7692 | LR: 1.16e-03 | GradNorm: 0.570
  Batch    4/48 | Loss: 3.7403 | LR: 1.25e-03 | GradNorm: 0.588
  Batch    8/48 | Loss: 3.8180 | LR: 1.34e-03 | GradNorm: 1.671
  Batch   12/48 | Loss: 3.6814 | LR: 1.43e-03 | GradNorm: 0.888
  Batch   16/48 | Loss: 4.0496 | LR: 1.53e-03 | GradNorm: 4.127
  Batch   20/48 | Loss: 3.7504 | LR: 1.62e-03 | GradNorm: 1.787
  Batch   24/48 | Loss: 3.8202 | LR: 1.71e-03 | GradNorm: 1.793
  Batch   28/48 | Loss: 3.7397 | LR: 1.80e-03 | GradNorm: 1.277
  Batch   32/48 | Loss: 3.8834 | LR: 1.90e-03 | GradNorm: 1.043
  Batch   36/48 | Loss: 3.8125 | LR: 1.99e-03 | GradNorm: 0.827
  Batch   40/48 | Loss: 3.7938 | LR: 2.08e-03 | GradNorm: 0.540
  Batch   44/48 | Loss: 3.7582 | LR: 2.17e-03 | GradNorm: 0.698
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.20%, Val=4.04%, Gap=1.16%, LR=2.24e-03
  Batch    0/48 | Loss: 3.7609 | LR: 2.24e-03 | GradNorm: 0.590
  Batch    4/48 | Loss: 3.7281 | LR: 2.24e-03 | GradNorm: 0.711
  Batch    8/48 | Loss: 3.7657 | LR: 2.24e-03 | GradNorm: 3.331
  Batch   12/48 | Loss: 3.7444 | LR: 2.24e-03 | GradNorm: 0.951
  Batch   16/48 | Loss: 3.7262 | LR: 2.23e-03 | GradNorm: 0.624
  Batch   20/48 | Loss: 3.9109 | LR: 2.23e-03 | GradNorm: 5.328
  Batch   24/48 | Loss: 3.6879 | LR: 2.22e-03 | GradNorm: 2.053
  Batch   28/48 | Loss: 3.9688 | LR: 2.21e-03 | GradNorm: 2.813
  Batch   32/48 | Loss: 3.7557 | LR: 2.20e-03 | GradNorm: 1.058
  Batch   36/48 | Loss: 3.6622 | LR: 2.19e-03 | GradNorm: 0.692
  Batch   40/48 | Loss: 3.9886 | LR: 2.18e-03 | GradNorm: 2.004
  Batch   44/48 | Loss: 3.8008 | LR: 2.17e-03 | GradNorm: 1.664
Epoch 3/10: Train=5.96%, Val=7.86%, Gap=-1.90%, LR=2.16e-03
  Batch    0/48 | Loss: 3.6889 | LR: 2.15e-03 | GradNorm: 0.974
  Batch    4/48 | Loss: 3.8186 | LR: 2.14e-03 | GradNorm: 2.021
  Batch    8/48 | Loss: 3.6613 | LR: 2.12e-03 | GradNorm: 0.706
  Batch   12/48 | Loss: 3.5735 | LR: 2.11e-03 | GradNorm: 0.869
  Batch   16/48 | Loss: 3.6287 | LR: 2.09e-03 | GradNorm: 2.507
  Batch   20/48 | Loss: 3.5852 | LR: 2.07e-03 | GradNorm: 3.298
  Batch   24/48 | Loss: 3.7719 | LR: 2.05e-03 | GradNorm: 2.408
  Batch   28/48 | Loss: 3.6627 | LR: 2.03e-03 | GradNorm: 1.172
  Batch   32/48 | Loss: 3.7311 | LR: 2.01e-03 | GradNorm: 1.630
  Batch   36/48 | Loss: 3.5667 | LR: 1.98e-03 | GradNorm: 0.710
  Batch   40/48 | Loss: 3.5650 | LR: 1.96e-03 | GradNorm: 1.099
  Batch   44/48 | Loss: 3.5506 | LR: 1.93e-03 | GradNorm: 0.587
Epoch 4/10: Train=7.80%, Val=7.81%, Gap=-0.01%, LR=1.91e-03
  Batch    0/48 | Loss: 3.5465 | LR: 1.91e-03 | GradNorm: 1.077
  Batch    4/48 | Loss: 3.5199 | LR: 1.88e-03 | GradNorm: 1.279
  Batch    8/48 | Loss: 3.5033 | LR: 1.85e-03 | GradNorm: 0.583
  Batch   12/48 | Loss: 3.5072 | LR: 1.83e-03 | GradNorm: 1.043
  Batch   16/48 | Loss: 3.5912 | LR: 1.80e-03 | GradNorm: 1.883
  Batch   20/48 | Loss: 3.5033 | LR: 1.77e-03 | GradNorm: 0.844
  Batch   24/48 | Loss: 3.5456 | LR: 1.74e-03 | GradNorm: 1.748
  Batch   28/48 | Loss: 3.4943 | LR: 1.71e-03 | GradNorm: 1.269
  Batch   32/48 | Loss: 3.5116 | LR: 1.67e-03 | GradNorm: 2.406
  Batch   36/48 | Loss: 3.5241 | LR: 1.64e-03 | GradNorm: 1.232
  Batch   40/48 | Loss: 3.4960 | LR: 1.61e-03 | GradNorm: 0.560
  Batch   44/48 | Loss: 3.5048 | LR: 1.58e-03 | GradNorm: 1.312
Epoch 5/10: Train=10.48%, Val=6.15%, Gap=4.33%, LR=1.55e-03
  Batch    0/48 | Loss: 3.5623 | LR: 1.54e-03 | GradNorm: 2.104
  Batch    4/48 | Loss: 3.4432 | LR: 1.51e-03 | GradNorm: 0.862
  Batch    8/48 | Loss: 3.5483 | LR: 1.47e-03 | GradNorm: 3.724
  Batch   12/48 | Loss: 3.5140 | LR: 1.44e-03 | GradNorm: 1.376
  Batch   16/48 | Loss: 3.4552 | LR: 1.40e-03 | GradNorm: 1.217
  Batch   20/48 | Loss: 3.4732 | LR: 1.37e-03 | GradNorm: 1.840
  Batch   24/48 | Loss: 3.4339 | LR: 1.33e-03 | GradNorm: 1.086
  Batch   28/48 | Loss: 3.4284 | LR: 1.30e-03 | GradNorm: 1.165
  Batch   32/48 | Loss: 3.4384 | LR: 1.26e-03 | GradNorm: 1.203
  Batch   36/48 | Loss: 3.5065 | LR: 1.22e-03 | GradNorm: 3.737
  Batch   40/48 | Loss: 3.4414 | LR: 1.19e-03 | GradNorm: 1.492
  Batch   44/48 | Loss: 3.4560 | LR: 1.15e-03 | GradNorm: 1.049
Epoch 6/10: Train=11.71%, Val=7.75%, Gap=3.96%, LR=1.12e-03
  Batch    0/48 | Loss: 3.3502 | LR: 1.11e-03 | GradNorm: 0.835
  Batch    4/48 | Loss: 3.3849 | LR: 1.08e-03 | GradNorm: 1.483
  Batch    8/48 | Loss: 3.3465 | LR: 1.04e-03 | GradNorm: 1.353
  Batch   12/48 | Loss: 3.2731 | LR: 1.00e-03 | GradNorm: 0.869
  Batch   16/48 | Loss: 3.3054 | LR: 9.66e-04 | GradNorm: 1.360
  Batch   20/48 | Loss: 3.3179 | LR: 9.30e-04 | GradNorm: 1.023
  Batch   24/48 | Loss: 3.3258 | LR: 8.94e-04 | GradNorm: 1.279
  Batch   28/48 | Loss: 3.2904 | LR: 8.58e-04 | GradNorm: 1.241
  Batch   32/48 | Loss: 3.2940 | LR: 8.22e-04 | GradNorm: 1.368
  Batch   36/48 | Loss: 3.2821 | LR: 7.87e-04 | GradNorm: 1.204
  Batch   40/48 | Loss: 3.2599 | LR: 7.52e-04 | GradNorm: 1.117
  Batch   44/48 | Loss: 3.2337 | LR: 7.18e-04 | GradNorm: 2.397
Epoch 7/10: Train=16.24%, Val=9.71%, Gap=6.53%, LR=6.92e-04
  Batch    0/48 | Loss: 3.2225 | LR: 6.84e-04 | GradNorm: 1.292
  Batch    4/48 | Loss: 3.1782 | LR: 6.50e-04 | GradNorm: 1.797
  Batch    8/48 | Loss: 3.1963 | LR: 6.17e-04 | GradNorm: 2.188
  Batch   12/48 | Loss: 3.2030 | LR: 5.85e-04 | GradNorm: 1.286
  Batch   16/48 | Loss: 3.1968 | LR: 5.53e-04 | GradNorm: 2.097
  Batch   20/48 | Loss: 3.1213 | LR: 5.22e-04 | GradNorm: 2.026
  Batch   24/48 | Loss: 3.0950 | LR: 4.91e-04 | GradNorm: 1.476
  Batch   28/48 | Loss: 3.1441 | LR: 4.61e-04 | GradNorm: 1.979
  Batch   32/48 | Loss: 3.1265 | LR: 4.32e-04 | GradNorm: 1.647
  Batch   36/48 | Loss: 3.1173 | LR: 4.03e-04 | GradNorm: 2.727
  Batch   40/48 | Loss: 3.0538 | LR: 3.75e-04 | GradNorm: 1.793
  Batch   44/48 | Loss: 3.1189 | LR: 3.48e-04 | GradNorm: 3.279
Epoch 8/10: Train=20.25%, Val=10.03%, Gap=10.22%, LR=3.29e-04
  Batch    0/48 | Loss: 3.0398 | LR: 3.22e-04 | GradNorm: 1.307
  Batch    4/48 | Loss: 3.0511 | LR: 2.97e-04 | GradNorm: 2.817
  Batch    8/48 | Loss: 3.0930 | LR: 2.72e-04 | GradNorm: 1.955
  Batch   12/48 | Loss: 3.0658 | LR: 2.49e-04 | GradNorm: 1.720
  Batch   16/48 | Loss: 3.0046 | LR: 2.26e-04 | GradNorm: 2.027
  Batch   20/48 | Loss: 3.0274 | LR: 2.05e-04 | GradNorm: 3.741
  Batch   24/48 | Loss: 3.0922 | LR: 1.84e-04 | GradNorm: 2.335
  Batch   28/48 | Loss: 3.0274 | LR: 1.64e-04 | GradNorm: 2.313
  Batch   32/48 | Loss: 3.0338 | LR: 1.46e-04 | GradNorm: 2.376
  Batch   36/48 | Loss: 3.0574 | LR: 1.28e-04 | GradNorm: 3.353
  Batch   40/48 | Loss: 2.9752 | LR: 1.12e-04 | GradNorm: 1.314
  Batch   44/48 | Loss: 3.0074 | LR: 9.63e-05 | GradNorm: 1.023
Epoch 9/10: Train=23.24%, Val=11.06%, Gap=12.18%, LR=8.55e-05
  Batch    0/48 | Loss: 3.0188 | LR: 8.20e-05 | GradNorm: 0.967
  Batch    4/48 | Loss: 3.0294 | LR: 6.88e-05 | GradNorm: 1.166
  Batch    8/48 | Loss: 2.9839 | LR: 5.67e-05 | GradNorm: 1.847
  Batch   12/48 | Loss: 2.9856 | LR: 4.58e-05 | GradNorm: 0.680
  Batch   16/48 | Loss: 2.9657 | LR: 3.60e-05 | GradNorm: 1.156
  Batch   20/48 | Loss: 2.9658 | LR: 2.73e-05 | GradNorm: 1.192
  Batch   24/48 | Loss: 2.9992 | LR: 1.99e-05 | GradNorm: 1.107
  Batch   28/48 | Loss: 3.0009 | LR: 1.36e-05 | GradNorm: 1.128
  Batch   32/48 | Loss: 3.0177 | LR: 8.53e-06 | GradNorm: 1.364
  Batch   36/48 | Loss: 2.9899 | LR: 4.64e-06 | GradNorm: 1.140
  Batch   40/48 | Loss: 2.9707 | LR: 1.94e-06 | GradNorm: 1.115
  Batch   44/48 | Loss: 3.0027 | LR: 4.38e-07 | GradNorm: 1.602
Epoch 10/10: Train=24.55%, Val=10.73%, Gap=13.82%, LR=1.00e-07
Best validation accuracy: 11.06%
