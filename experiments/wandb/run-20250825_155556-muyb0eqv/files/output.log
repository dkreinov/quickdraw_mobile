=== W&B Sweep Run: LR=0.001206 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0012055200557337226
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.001206
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9578 | LR: 2.45e-05 | GradNorm: 1.650
  Batch    4/48 | Loss: 3.9213 | LR: 7.42e-05 | GradNorm: 0.748
  Batch    8/48 | Loss: 3.9224 | LR: 1.24e-04 | GradNorm: 0.606
  Batch   12/48 | Loss: 3.9151 | LR: 1.74e-04 | GradNorm: 0.531
  Batch   16/48 | Loss: 3.9176 | LR: 2.23e-04 | GradNorm: 0.466
  Batch   20/48 | Loss: 3.9120 | LR: 2.73e-04 | GradNorm: 0.480
  Batch   24/48 | Loss: 3.9112 | LR: 3.23e-04 | GradNorm: 0.557
  Batch   28/48 | Loss: 3.9061 | LR: 3.73e-04 | GradNorm: 0.547
  Batch   32/48 | Loss: 3.8725 | LR: 4.22e-04 | GradNorm: 1.554
  Batch   36/48 | Loss: 3.9138 | LR: 4.72e-04 | GradNorm: 2.605
  Batch   40/48 | Loss: 3.8132 | LR: 5.22e-04 | GradNorm: 2.013
  Batch   44/48 | Loss: 3.7960 | LR: 5.71e-04 | GradNorm: 1.739
Epoch 1/10: Train=3.13%, Val=6.64%, Gap=-3.51%, LR=6.09e-04
  Batch    0/48 | Loss: 3.7897 | LR: 6.21e-04 | GradNorm: 2.021
  Batch    4/48 | Loss: 3.7326 | LR: 6.71e-04 | GradNorm: 2.067
  Batch    8/48 | Loss: 3.6850 | LR: 7.21e-04 | GradNorm: 0.648
  Batch   12/48 | Loss: 4.0300 | LR: 7.70e-04 | GradNorm: 13.190
  Batch   16/48 | Loss: 3.7784 | LR: 8.20e-04 | GradNorm: 3.437
  Batch   20/48 | Loss: 3.6859 | LR: 8.70e-04 | GradNorm: 2.588
  Batch   24/48 | Loss: 3.8352 | LR: 9.20e-04 | GradNorm: 4.877
  Batch   28/48 | Loss: 3.6505 | LR: 9.69e-04 | GradNorm: 1.054
  Batch   32/48 | Loss: 3.8064 | LR: 1.02e-03 | GradNorm: 2.720
  Batch   36/48 | Loss: 3.6986 | LR: 1.07e-03 | GradNorm: 1.893
  Batch   40/48 | Loss: 3.9046 | LR: 1.12e-03 | GradNorm: 0.864
  Batch   44/48 | Loss: 3.8527 | LR: 1.17e-03 | GradNorm: 0.675
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.53%, Val=4.13%, Gap=1.40%, LR=1.21e-03
  Batch    0/48 | Loss: 3.8518 | LR: 1.21e-03 | GradNorm: 0.616
  Batch    4/48 | Loss: 3.8341 | LR: 1.21e-03 | GradNorm: 0.600
  Batch    8/48 | Loss: 3.8030 | LR: 1.20e-03 | GradNorm: 0.539
  Batch   12/48 | Loss: 3.7935 | LR: 1.20e-03 | GradNorm: 0.936
  Batch   16/48 | Loss: 3.7679 | LR: 1.20e-03 | GradNorm: 0.814
  Batch   20/48 | Loss: 3.7766 | LR: 1.20e-03 | GradNorm: 0.547
  Batch   24/48 | Loss: 3.7564 | LR: 1.19e-03 | GradNorm: 0.972
  Batch   28/48 | Loss: 3.7380 | LR: 1.19e-03 | GradNorm: 0.489
  Batch   32/48 | Loss: 3.8312 | LR: 1.18e-03 | GradNorm: 1.833
  Batch   36/48 | Loss: 3.7798 | LR: 1.18e-03 | GradNorm: 0.522
  Batch   40/48 | Loss: 3.7462 | LR: 1.17e-03 | GradNorm: 0.514
  Batch   44/48 | Loss: 3.7311 | LR: 1.17e-03 | GradNorm: 0.507
Epoch 3/10: Train=4.43%, Val=4.41%, Gap=0.02%, LR=1.16e-03
  Batch    0/48 | Loss: 3.7794 | LR: 1.16e-03 | GradNorm: 1.472
  Batch    4/48 | Loss: 3.7048 | LR: 1.15e-03 | GradNorm: 0.517
  Batch    8/48 | Loss: 3.7417 | LR: 1.14e-03 | GradNorm: 1.111
  Batch   12/48 | Loss: 3.7074 | LR: 1.13e-03 | GradNorm: 0.906
  Batch   16/48 | Loss: 3.6871 | LR: 1.12e-03 | GradNorm: 1.101
  Batch   20/48 | Loss: 3.7079 | LR: 1.11e-03 | GradNorm: 1.972
  Batch   24/48 | Loss: 3.7747 | LR: 1.10e-03 | GradNorm: 3.452
  Batch   28/48 | Loss: 3.6991 | LR: 1.09e-03 | GradNorm: 0.753
  Batch   32/48 | Loss: 3.7376 | LR: 1.08e-03 | GradNorm: 1.104
  Batch   36/48 | Loss: 3.6539 | LR: 1.07e-03 | GradNorm: 1.293
  Batch   40/48 | Loss: 3.6199 | LR: 1.05e-03 | GradNorm: 1.995
  Batch   44/48 | Loss: 3.5606 | LR: 1.04e-03 | GradNorm: 2.082
Epoch 4/10: Train=6.84%, Val=4.12%, Gap=2.72%, LR=1.03e-03
  Batch    0/48 | Loss: 3.8537 | LR: 1.03e-03 | GradNorm: 8.044
  Batch    4/48 | Loss: 3.6864 | LR: 1.01e-03 | GradNorm: 3.900
  Batch    8/48 | Loss: 3.5734 | LR: 9.96e-04 | GradNorm: 1.909
  Batch   12/48 | Loss: 3.5586 | LR: 9.81e-04 | GradNorm: 1.227
  Batch   16/48 | Loss: 3.5707 | LR: 9.66e-04 | GradNorm: 2.431
  Batch   20/48 | Loss: 3.7835 | LR: 9.50e-04 | GradNorm: 5.395
  Batch   24/48 | Loss: 3.6746 | LR: 9.34e-04 | GradNorm: 4.049
  Batch   28/48 | Loss: 3.5430 | LR: 9.17e-04 | GradNorm: 1.452
  Batch   32/48 | Loss: 3.6294 | LR: 9.00e-04 | GradNorm: 6.382
  Batch   36/48 | Loss: 3.4994 | LR: 8.83e-04 | GradNorm: 0.655
  Batch   40/48 | Loss: 3.4842 | LR: 8.65e-04 | GradNorm: 0.902
  Batch   44/48 | Loss: 3.4384 | LR: 8.47e-04 | GradNorm: 2.376
Epoch 5/10: Train=9.61%, Val=10.39%, Gap=-0.78%, LR=8.33e-04
  Batch    0/48 | Loss: 3.4663 | LR: 8.29e-04 | GradNorm: 3.497
  Batch    4/48 | Loss: 3.3890 | LR: 8.10e-04 | GradNorm: 2.718
  Batch    8/48 | Loss: 3.3600 | LR: 7.92e-04 | GradNorm: 1.432
  Batch   12/48 | Loss: 3.6809 | LR: 7.73e-04 | GradNorm: 10.784
  Batch   16/48 | Loss: 3.3871 | LR: 7.54e-04 | GradNorm: 1.951
  Batch   20/48 | Loss: 3.4406 | LR: 7.35e-04 | GradNorm: 2.517
  Batch   24/48 | Loss: 3.3260 | LR: 7.16e-04 | GradNorm: 0.967
  Batch   28/48 | Loss: 3.3366 | LR: 6.96e-04 | GradNorm: 1.679
  Batch   32/48 | Loss: 3.3566 | LR: 6.77e-04 | GradNorm: 3.850
  Batch   36/48 | Loss: 3.3551 | LR: 6.57e-04 | GradNorm: 3.475
  Batch   40/48 | Loss: 3.2815 | LR: 6.37e-04 | GradNorm: 1.748
  Batch   44/48 | Loss: 3.3376 | LR: 6.18e-04 | GradNorm: 2.262
Epoch 6/10: Train=13.71%, Val=11.27%, Gap=2.44%, LR=6.03e-04
  Batch    0/48 | Loss: 3.2312 | LR: 5.98e-04 | GradNorm: 1.397
  Batch    4/48 | Loss: 3.2583 | LR: 5.78e-04 | GradNorm: 2.430
  Batch    8/48 | Loss: 3.2000 | LR: 5.58e-04 | GradNorm: 0.837
  Batch   12/48 | Loss: 3.1830 | LR: 5.39e-04 | GradNorm: 2.862
  Batch   16/48 | Loss: 3.2209 | LR: 5.19e-04 | GradNorm: 4.506
  Batch   20/48 | Loss: 3.2978 | LR: 5.00e-04 | GradNorm: 2.981
  Batch   24/48 | Loss: 3.2072 | LR: 4.80e-04 | GradNorm: 2.443
  Batch   28/48 | Loss: 3.1913 | LR: 4.61e-04 | GradNorm: 1.137
  Batch   32/48 | Loss: 3.2766 | LR: 4.42e-04 | GradNorm: 4.524
  Batch   36/48 | Loss: 3.2555 | LR: 4.23e-04 | GradNorm: 2.181
  Batch   40/48 | Loss: 3.2192 | LR: 4.04e-04 | GradNorm: 2.711
  Batch   44/48 | Loss: 3.1653 | LR: 3.86e-04 | GradNorm: 3.550
Epoch 7/10: Train=17.81%, Val=14.59%, Gap=3.22%, LR=3.72e-04
  Batch    0/48 | Loss: 3.1405 | LR: 3.68e-04 | GradNorm: 1.931
  Batch    4/48 | Loss: 3.1303 | LR: 3.50e-04 | GradNorm: 1.991
  Batch    8/48 | Loss: 3.1446 | LR: 3.32e-04 | GradNorm: 0.984
  Batch   12/48 | Loss: 3.1823 | LR: 3.14e-04 | GradNorm: 2.459
  Batch   16/48 | Loss: 3.1629 | LR: 2.97e-04 | GradNorm: 1.441
  Batch   20/48 | Loss: 3.0795 | LR: 2.80e-04 | GradNorm: 2.998
  Batch   24/48 | Loss: 3.0983 | LR: 2.64e-04 | GradNorm: 2.260
  Batch   28/48 | Loss: 3.1155 | LR: 2.48e-04 | GradNorm: 2.252
  Batch   32/48 | Loss: 3.0920 | LR: 2.32e-04 | GradNorm: 1.646
  Batch   36/48 | Loss: 3.1054 | LR: 2.17e-04 | GradNorm: 2.605
  Batch   40/48 | Loss: 3.0328 | LR: 2.02e-04 | GradNorm: 1.707
  Batch   44/48 | Loss: 3.1274 | LR: 1.87e-04 | GradNorm: 3.602
Epoch 8/10: Train=20.50%, Val=16.26%, Gap=4.24%, LR=1.77e-04
  Batch    0/48 | Loss: 3.0322 | LR: 1.73e-04 | GradNorm: 1.632
  Batch    4/48 | Loss: 3.0396 | LR: 1.60e-04 | GradNorm: 1.547
  Batch    8/48 | Loss: 3.1023 | LR: 1.46e-04 | GradNorm: 1.203
  Batch   12/48 | Loss: 3.0773 | LR: 1.34e-04 | GradNorm: 1.589
  Batch   16/48 | Loss: 3.0011 | LR: 1.22e-04 | GradNorm: 1.757
  Batch   20/48 | Loss: 3.0271 | LR: 1.10e-04 | GradNorm: 2.391
  Batch   24/48 | Loss: 3.0946 | LR: 9.90e-05 | GradNorm: 1.479
  Batch   28/48 | Loss: 3.0349 | LR: 8.84e-05 | GradNorm: 1.596
  Batch   32/48 | Loss: 3.0468 | LR: 7.84e-05 | GradNorm: 1.195
  Batch   36/48 | Loss: 3.0527 | LR: 6.90e-05 | GradNorm: 3.153
  Batch   40/48 | Loss: 2.9827 | LR: 6.01e-05 | GradNorm: 1.468
  Batch   44/48 | Loss: 3.0225 | LR: 5.18e-05 | GradNorm: 1.301
Epoch 9/10: Train=22.48%, Val=15.43%, Gap=7.05%, LR=4.60e-05
  Batch    0/48 | Loss: 3.0233 | LR: 4.41e-05 | GradNorm: 1.201
  Batch    4/48 | Loss: 3.0265 | LR: 3.70e-05 | GradNorm: 1.679
  Batch    8/48 | Loss: 2.9832 | LR: 3.05e-05 | GradNorm: 1.219
  Batch   12/48 | Loss: 3.0224 | LR: 2.46e-05 | GradNorm: 1.646
  Batch   16/48 | Loss: 2.9825 | LR: 1.94e-05 | GradNorm: 1.156
  Batch   20/48 | Loss: 2.9955 | LR: 1.47e-05 | GradNorm: 1.416
  Batch   24/48 | Loss: 2.9973 | LR: 1.07e-05 | GradNorm: 0.946
  Batch   28/48 | Loss: 3.0246 | LR: 7.37e-06 | GradNorm: 1.559
  Batch   32/48 | Loss: 3.0356 | LR: 4.63e-06 | GradNorm: 1.519
  Batch   36/48 | Loss: 3.0043 | LR: 2.54e-06 | GradNorm: 0.856
  Batch   40/48 | Loss: 2.9988 | LR: 1.09e-06 | GradNorm: 1.662
  Batch   44/48 | Loss: 3.0153 | LR: 2.82e-07 | GradNorm: 1.049
Epoch 10/10: Train=23.31%, Val=15.86%, Gap=7.45%, LR=1.00e-07
Best validation accuracy: 16.26%
