=== LAMB Sweep Run ===
LR: 0.000721
Weight Decay: 0.1149
Warmup Epochs: 2
Using device: cuda
Available GPUs: 4
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.47s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs with LAMB optimizer
Setting up deterministic training (seed=42)
Created lamb (fallback to AdamW) optimizer:
   Learning rate: 0.000721
   Weight decay: 0.11494472261469683
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 1440
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: lamb_lr_0.000721_wd_0.1149
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_lamb_runs
Starting LAMB training for 30 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9623 | LR: 1.46e-05 | GradNorm: 1.795
  Batch    4/48 | Loss: 3.9268 | LR: 4.44e-05 | GradNorm: 0.932
  Batch    8/48 | Loss: 3.9237 | LR: 7.41e-05 | GradNorm: 0.702
  Batch   12/48 | Loss: 3.9166 | LR: 1.04e-04 | GradNorm: 0.589
  Batch   16/48 | Loss: 3.9200 | LR: 1.34e-04 | GradNorm: 0.518
  Batch   20/48 | Loss: 3.9136 | LR: 1.63e-04 | GradNorm: 0.523
  Batch   24/48 | Loss: 3.9125 | LR: 1.93e-04 | GradNorm: 0.559
  Batch   28/48 | Loss: 3.9131 | LR: 2.23e-04 | GradNorm: 0.493
  Batch   32/48 | Loss: 3.9019 | LR: 2.53e-04 | GradNorm: 0.467
  Batch   36/48 | Loss: 3.8817 | LR: 2.82e-04 | GradNorm: 0.545
  Batch   40/48 | Loss: 3.8434 | LR: 3.12e-04 | GradNorm: 2.368
  Batch   44/48 | Loss: 3.8068 | LR: 3.42e-04 | GradNorm: 0.908
Epoch 1/30: Train=2.65%, Val=7.56%, Best=7.56% (E1), Gap=-4.91%, LR=3.64e-04
  Batch    0/48 | Loss: 3.7879 | LR: 3.72e-04 | GradNorm: 0.669
  Batch    4/48 | Loss: 3.8565 | LR: 4.01e-04 | GradNorm: 2.039
  Batch    8/48 | Loss: 3.8091 | LR: 4.31e-04 | GradNorm: 1.238
  Batch   12/48 | Loss: 3.7151 | LR: 4.61e-04 | GradNorm: 0.606
  Batch   16/48 | Loss: 3.7611 | LR: 4.90e-04 | GradNorm: 2.670
  Batch   20/48 | Loss: 3.8720 | LR: 5.20e-04 | GradNorm: 4.520
  Batch   24/48 | Loss: 3.6705 | LR: 5.50e-04 | GradNorm: 1.597
  Batch   28/48 | Loss: 3.6789 | LR: 5.80e-04 | GradNorm: 2.169
  Batch   32/48 | Loss: 3.6587 | LR: 6.09e-04 | GradNorm: 2.988
  Batch   36/48 | Loss: 3.6015 | LR: 6.39e-04 | GradNorm: 0.778
  Batch   40/48 | Loss: 3.6938 | LR: 6.69e-04 | GradNorm: 2.852
  Batch   44/48 | Loss: 3.8385 | LR: 6.99e-04 | GradNorm: 4.453
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/30: Train=6.33%, Val=2.67%, Best=7.56% (E1), Gap=3.66%, LR=7.21e-04
  Batch    0/48 | Loss: 4.1110 | LR: 7.21e-04 | GradNorm: 6.485
  Batch    4/48 | Loss: 4.0891 | LR: 7.21e-04 | GradNorm: 5.632
  Batch    8/48 | Loss: 3.7216 | LR: 7.21e-04 | GradNorm: 0.673
  Batch   12/48 | Loss: 3.6531 | LR: 7.21e-04 | GradNorm: 0.840
  Batch   16/48 | Loss: 3.6434 | LR: 7.21e-04 | GradNorm: 0.963
  Batch   20/48 | Loss: 3.6475 | LR: 7.21e-04 | GradNorm: 2.489
  Batch   24/48 | Loss: 3.6355 | LR: 7.20e-04 | GradNorm: 1.343
  Batch   28/48 | Loss: 3.5666 | LR: 7.20e-04 | GradNorm: 1.098
  Batch   32/48 | Loss: 3.7964 | LR: 7.20e-04 | GradNorm: 20.248
  Batch   36/48 | Loss: 3.8449 | LR: 7.20e-04 | GradNorm: 3.512
  Batch   40/48 | Loss: 3.5773 | LR: 7.19e-04 | GradNorm: 1.043
  Batch   44/48 | Loss: 3.6045 | LR: 7.19e-04 | GradNorm: 2.508
Epoch 3/30: Train=7.49%, Val=7.56%, Best=7.56% (E1), Gap=-0.07%, LR=7.19e-04
  Batch    0/48 | Loss: 3.4980 | LR: 7.19e-04 | GradNorm: 0.632
  Batch    4/48 | Loss: 3.4800 | LR: 7.18e-04 | GradNorm: 0.985
  Batch    8/48 | Loss: 3.4720 | LR: 7.18e-04 | GradNorm: 0.935
  Batch   12/48 | Loss: 3.4512 | LR: 7.17e-04 | GradNorm: 2.304
  Batch   16/48 | Loss: 3.4330 | LR: 7.17e-04 | GradNorm: 2.206
  Batch   20/48 | Loss: 3.3773 | LR: 7.16e-04 | GradNorm: 1.094
  Batch   24/48 | Loss: 3.3834 | LR: 7.16e-04 | GradNorm: 3.492
  Batch   28/48 | Loss: 3.2970 | LR: 7.15e-04 | GradNorm: 1.204
  Batch   32/48 | Loss: 3.3148 | LR: 7.15e-04 | GradNorm: 1.237
  Batch   36/48 | Loss: 3.3354 | LR: 7.14e-04 | GradNorm: 2.711
  Batch   40/48 | Loss: 3.3123 | LR: 7.13e-04 | GradNorm: 2.455
  Batch   44/48 | Loss: 3.2496 | LR: 7.12e-04 | GradNorm: 1.556
Epoch 4/30: Train=13.37%, Val=11.49%, Best=11.49% (E4), Gap=1.88%, LR=7.12e-04
  Batch    0/48 | Loss: 3.2243 | LR: 7.12e-04 | GradNorm: 2.091
  Batch    4/48 | Loss: 3.2013 | LR: 7.11e-04 | GradNorm: 3.102
  Batch    8/48 | Loss: 3.2370 | LR: 7.10e-04 | GradNorm: 3.108
  Batch   12/48 | Loss: 3.2345 | LR: 7.09e-04 | GradNorm: 3.273
  Batch   16/48 | Loss: 3.2528 | LR: 7.08e-04 | GradNorm: 2.053
  Batch   20/48 | Loss: 3.1686 | LR: 7.08e-04 | GradNorm: 1.888
  Batch   24/48 | Loss: 3.1951 | LR: 7.07e-04 | GradNorm: 1.885
  Batch   28/48 | Loss: 3.1758 | LR: 7.06e-04 | GradNorm: 2.218
  Batch   32/48 | Loss: 3.1354 | LR: 7.05e-04 | GradNorm: 2.872
  Batch   36/48 | Loss: 3.2103 | LR: 7.04e-04 | GradNorm: 2.577
  Batch   40/48 | Loss: 3.1756 | LR: 7.03e-04 | GradNorm: 1.486
  Batch   44/48 | Loss: 3.2061 | LR: 7.02e-04 | GradNorm: 4.022
Epoch 5/30: Train=18.34%, Val=9.44%, Best=11.49% (E4), Gap=8.90%, LR=7.01e-04
  Batch    0/48 | Loss: 3.1207 | LR: 7.00e-04 | GradNorm: 3.133
  Batch    4/48 | Loss: 3.0851 | LR: 6.99e-04 | GradNorm: 3.921
  Batch    8/48 | Loss: 3.1466 | LR: 6.98e-04 | GradNorm: 5.003
  Batch   12/48 | Loss: 3.0814 | LR: 6.97e-04 | GradNorm: 1.671
  Batch   16/48 | Loss: 3.0642 | LR: 6.96e-04 | GradNorm: 2.303
  Batch   20/48 | Loss: 3.0551 | LR: 6.94e-04 | GradNorm: 2.116
  Batch   24/48 | Loss: 3.0660 | LR: 6.93e-04 | GradNorm: 2.616
  Batch   28/48 | Loss: 3.0274 | LR: 6.92e-04 | GradNorm: 3.361
  Batch   32/48 | Loss: 3.0562 | LR: 6.91e-04 | GradNorm: 3.348
  Batch   36/48 | Loss: 3.0206 | LR: 6.89e-04 | GradNorm: 1.632
  Batch   40/48 | Loss: 3.0596 | LR: 6.88e-04 | GradNorm: 3.529
  Batch   44/48 | Loss: 3.1307 | LR: 6.86e-04 | GradNorm: 3.971
Epoch 6/30: Train=21.13%, Val=13.60%, Best=13.60% (E6), Gap=7.53%, LR=6.85e-04
  Batch    0/48 | Loss: 3.0292 | LR: 6.85e-04 | GradNorm: 2.392
  Batch    4/48 | Loss: 3.0237 | LR: 6.83e-04 | GradNorm: 3.163
  Batch    8/48 | Loss: 2.9551 | LR: 6.82e-04 | GradNorm: 1.409
  Batch   12/48 | Loss: 2.9346 | LR: 6.80e-04 | GradNorm: 2.448
  Batch   16/48 | Loss: 2.9795 | LR: 6.79e-04 | GradNorm: 3.650
  Batch   20/48 | Loss: 3.0235 | LR: 6.77e-04 | GradNorm: 3.264
  Batch   24/48 | Loss: 2.9642 | LR: 6.76e-04 | GradNorm: 2.440
  Batch   28/48 | Loss: 2.9725 | LR: 6.74e-04 | GradNorm: 3.909
  Batch   32/48 | Loss: 3.0086 | LR: 6.72e-04 | GradNorm: 3.920
  Batch   36/48 | Loss: 2.9365 | LR: 6.71e-04 | GradNorm: 2.009
  Batch   40/48 | Loss: 2.9386 | LR: 6.69e-04 | GradNorm: 2.970
  Batch   44/48 | Loss: 2.8390 | LR: 6.67e-04 | GradNorm: 1.291
Epoch 7/30: Train=25.61%, Val=14.81%, Best=14.81% (E7), Gap=10.80%, LR=6.66e-04
  Batch    0/48 | Loss: 2.8716 | LR: 6.65e-04 | GradNorm: 3.278
  Batch    4/48 | Loss: 2.8387 | LR: 6.63e-04 | GradNorm: 3.493
  Batch    8/48 | Loss: 2.8448 | LR: 6.62e-04 | GradNorm: 3.335
  Batch   12/48 | Loss: 2.9157 | LR: 6.60e-04 | GradNorm: 4.611
  Batch   16/48 | Loss: 2.8567 | LR: 6.58e-04 | GradNorm: 2.331
  Batch   20/48 | Loss: 2.7005 | LR: 6.56e-04 | GradNorm: 1.972
  Batch   24/48 | Loss: 2.7038 | LR: 6.54e-04 | GradNorm: 2.366
  Batch   28/48 | Loss: 2.8522 | LR: 6.52e-04 | GradNorm: 4.790
  Batch   32/48 | Loss: 2.8245 | LR: 6.50e-04 | GradNorm: 3.626
  Batch   36/48 | Loss: 2.7410 | LR: 6.48e-04 | GradNorm: 2.712
  Batch   40/48 | Loss: 2.6910 | LR: 6.46e-04 | GradNorm: 2.614
  Batch   44/48 | Loss: 2.7645 | LR: 6.44e-04 | GradNorm: 3.195
Epoch 8/30: Train=30.33%, Val=17.57%, Best=17.57% (E8), Gap=12.76%, LR=6.42e-04
