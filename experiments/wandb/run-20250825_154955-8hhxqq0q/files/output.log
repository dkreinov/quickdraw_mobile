=== W&B Sweep Run: LR=0.001617 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0016173706933763044
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.001617
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9426 | LR: 3.29e-05 | GradNorm: 1.359
  Batch    4/48 | Loss: 3.9213 | LR: 9.96e-05 | GradNorm: 0.741
  Batch    8/48 | Loss: 3.9257 | LR: 1.66e-04 | GradNorm: 0.638
  Batch   12/48 | Loss: 3.9138 | LR: 2.33e-04 | GradNorm: 0.494
  Batch   16/48 | Loss: 3.9240 | LR: 3.00e-04 | GradNorm: 0.547
  Batch   20/48 | Loss: 3.9075 | LR: 3.66e-04 | GradNorm: 0.542
  Batch   24/48 | Loss: 3.8717 | LR: 4.33e-04 | GradNorm: 0.598
  Batch   28/48 | Loss: 3.8892 | LR: 5.00e-04 | GradNorm: 2.868
  Batch   32/48 | Loss: 3.9618 | LR: 5.67e-04 | GradNorm: 3.315
  Batch   36/48 | Loss: 4.0401 | LR: 6.33e-04 | GradNorm: 1.382
  Batch   40/48 | Loss: 3.8956 | LR: 7.00e-04 | GradNorm: 0.906
  Batch   44/48 | Loss: 3.8403 | LR: 7.67e-04 | GradNorm: 0.589
Epoch 1/10: Train=2.88%, Val=5.02%, Gap=-2.14%, LR=8.17e-04
  Batch    0/48 | Loss: 3.8183 | LR: 8.33e-04 | GradNorm: 0.521
  Batch    4/48 | Loss: 3.7976 | LR: 9.00e-04 | GradNorm: 0.602
  Batch    8/48 | Loss: 3.7855 | LR: 9.67e-04 | GradNorm: 0.783
  Batch   12/48 | Loss: 3.7342 | LR: 1.03e-03 | GradNorm: 0.872
  Batch   16/48 | Loss: 3.7346 | LR: 1.10e-03 | GradNorm: 0.842
  Batch   20/48 | Loss: 3.8733 | LR: 1.17e-03 | GradNorm: 2.605
  Batch   24/48 | Loss: 3.7177 | LR: 1.23e-03 | GradNorm: 0.982
  Batch   28/48 | Loss: 3.8302 | LR: 1.30e-03 | GradNorm: 2.147
  Batch   32/48 | Loss: 3.7988 | LR: 1.37e-03 | GradNorm: 1.398
  Batch   36/48 | Loss: 3.7409 | LR: 1.43e-03 | GradNorm: 1.964
  Batch   40/48 | Loss: 3.9204 | LR: 1.50e-03 | GradNorm: 2.644
  Batch   44/48 | Loss: 3.7510 | LR: 1.57e-03 | GradNorm: 0.980
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.29%, Val=7.36%, Gap=-2.07%, LR=1.62e-03
  Batch    0/48 | Loss: 3.7195 | LR: 1.62e-03 | GradNorm: 1.428
  Batch    4/48 | Loss: 4.0045 | LR: 1.62e-03 | GradNorm: 4.637
  Batch    8/48 | Loss: 3.7316 | LR: 1.62e-03 | GradNorm: 2.588
  Batch   12/48 | Loss: 3.6748 | LR: 1.61e-03 | GradNorm: 0.590
  Batch   16/48 | Loss: 3.7640 | LR: 1.61e-03 | GradNorm: 1.862
  Batch   20/48 | Loss: 3.6324 | LR: 1.61e-03 | GradNorm: 1.074
  Batch   24/48 | Loss: 3.6232 | LR: 1.60e-03 | GradNorm: 1.041
  Batch   28/48 | Loss: 3.7039 | LR: 1.59e-03 | GradNorm: 1.690
  Batch   32/48 | Loss: 3.6344 | LR: 1.59e-03 | GradNorm: 1.139
  Batch   36/48 | Loss: 3.7780 | LR: 1.58e-03 | GradNorm: 2.679
  Batch   40/48 | Loss: 3.6465 | LR: 1.57e-03 | GradNorm: 0.712
  Batch   44/48 | Loss: 3.6648 | LR: 1.56e-03 | GradNorm: 1.677
Epoch 3/10: Train=6.66%, Val=5.59%, Gap=1.07%, LR=1.56e-03
  Batch    0/48 | Loss: 3.6839 | LR: 1.55e-03 | GradNorm: 2.018
  Batch    4/48 | Loss: 3.6186 | LR: 1.54e-03 | GradNorm: 1.876
  Batch    8/48 | Loss: 3.5712 | LR: 1.53e-03 | GradNorm: 0.666
  Batch   12/48 | Loss: 3.4999 | LR: 1.52e-03 | GradNorm: 0.627
  Batch   16/48 | Loss: 3.7082 | LR: 1.51e-03 | GradNorm: 3.626
  Batch   20/48 | Loss: 3.5780 | LR: 1.49e-03 | GradNorm: 1.514
  Batch   24/48 | Loss: 3.5111 | LR: 1.48e-03 | GradNorm: 1.080
  Batch   28/48 | Loss: 3.4821 | LR: 1.46e-03 | GradNorm: 0.728
  Batch   32/48 | Loss: 3.4989 | LR: 1.45e-03 | GradNorm: 0.657
  Batch   36/48 | Loss: 3.4730 | LR: 1.43e-03 | GradNorm: 0.963
  Batch   40/48 | Loss: 3.4788 | LR: 1.41e-03 | GradNorm: 1.201
  Batch   44/48 | Loss: 3.4836 | LR: 1.39e-03 | GradNorm: 1.023
Epoch 4/10: Train=9.52%, Val=6.85%, Gap=2.67%, LR=1.38e-03
  Batch    0/48 | Loss: 3.4537 | LR: 1.38e-03 | GradNorm: 0.963
  Batch    4/48 | Loss: 3.4941 | LR: 1.36e-03 | GradNorm: 1.604
  Batch    8/48 | Loss: 3.4978 | LR: 1.34e-03 | GradNorm: 1.296
  Batch   12/48 | Loss: 3.4527 | LR: 1.32e-03 | GradNorm: 1.051
  Batch   16/48 | Loss: 3.4982 | LR: 1.30e-03 | GradNorm: 1.591
  Batch   20/48 | Loss: 3.4506 | LR: 1.27e-03 | GradNorm: 0.842
  Batch   24/48 | Loss: 3.4448 | LR: 1.25e-03 | GradNorm: 1.407
  Batch   28/48 | Loss: 3.4258 | LR: 1.23e-03 | GradNorm: 0.653
  Batch   32/48 | Loss: 3.5227 | LR: 1.21e-03 | GradNorm: 4.022
  Batch   36/48 | Loss: 3.4872 | LR: 1.18e-03 | GradNorm: 1.217
  Batch   40/48 | Loss: 3.4647 | LR: 1.16e-03 | GradNorm: 1.417
  Batch   44/48 | Loss: 3.3993 | LR: 1.14e-03 | GradNorm: 1.132
Epoch 5/10: Train=12.09%, Val=6.28%, Gap=5.81%, LR=1.12e-03
  Batch    0/48 | Loss: 3.4436 | LR: 1.11e-03 | GradNorm: 2.718
  Batch    4/48 | Loss: 3.3612 | LR: 1.09e-03 | GradNorm: 2.636
  Batch    8/48 | Loss: 3.3286 | LR: 1.06e-03 | GradNorm: 1.004
  Batch   12/48 | Loss: 3.3183 | LR: 1.04e-03 | GradNorm: 0.740
  Batch   16/48 | Loss: 3.3647 | LR: 1.01e-03 | GradNorm: 2.703
  Batch   20/48 | Loss: 3.3235 | LR: 9.86e-04 | GradNorm: 1.565
  Batch   24/48 | Loss: 3.3787 | LR: 9.60e-04 | GradNorm: 1.399
  Batch   28/48 | Loss: 3.3390 | LR: 9.34e-04 | GradNorm: 0.935
  Batch   32/48 | Loss: 3.4334 | LR: 9.08e-04 | GradNorm: 2.467
  Batch   36/48 | Loss: 3.4249 | LR: 8.81e-04 | GradNorm: 1.915
  Batch   40/48 | Loss: 3.3487 | LR: 8.55e-04 | GradNorm: 0.873
  Batch   44/48 | Loss: 3.4291 | LR: 8.29e-04 | GradNorm: 2.017
Epoch 6/10: Train=14.07%, Val=5.71%, Gap=8.36%, LR=8.09e-04
  Batch    0/48 | Loss: 3.2851 | LR: 8.02e-04 | GradNorm: 0.954
  Batch    4/48 | Loss: 3.3272 | LR: 7.76e-04 | GradNorm: 1.474
  Batch    8/48 | Loss: 3.2803 | LR: 7.49e-04 | GradNorm: 0.942
  Batch   12/48 | Loss: 3.2183 | LR: 7.23e-04 | GradNorm: 1.510
  Batch   16/48 | Loss: 3.2621 | LR: 6.97e-04 | GradNorm: 1.450
  Batch   20/48 | Loss: 3.2660 | LR: 6.70e-04 | GradNorm: 1.887
  Batch   24/48 | Loss: 3.2538 | LR: 6.44e-04 | GradNorm: 1.260
  Batch   28/48 | Loss: 3.2511 | LR: 6.19e-04 | GradNorm: 1.460
  Batch   32/48 | Loss: 3.2580 | LR: 5.93e-04 | GradNorm: 2.209
  Batch   36/48 | Loss: 3.2531 | LR: 5.68e-04 | GradNorm: 2.263
  Batch   40/48 | Loss: 3.2373 | LR: 5.43e-04 | GradNorm: 2.567
  Batch   44/48 | Loss: 3.1782 | LR: 5.18e-04 | GradNorm: 2.140
Epoch 7/10: Train=18.02%, Val=6.62%, Gap=11.40%, LR=4.99e-04
  Batch    0/48 | Loss: 3.1801 | LR: 4.93e-04 | GradNorm: 1.121
  Batch    4/48 | Loss: 3.1037 | LR: 4.69e-04 | GradNorm: 2.280
  Batch    8/48 | Loss: 3.1321 | LR: 4.45e-04 | GradNorm: 1.915
  Batch   12/48 | Loss: 3.1612 | LR: 4.22e-04 | GradNorm: 2.917
  Batch   16/48 | Loss: 3.1322 | LR: 3.99e-04 | GradNorm: 1.319
  Batch   20/48 | Loss: 3.0804 | LR: 3.76e-04 | GradNorm: 1.932
  Batch   24/48 | Loss: 3.1111 | LR: 3.54e-04 | GradNorm: 4.447
  Batch   28/48 | Loss: 3.0960 | LR: 3.32e-04 | GradNorm: 1.601
  Batch   32/48 | Loss: 3.0815 | LR: 3.11e-04 | GradNorm: 2.423
  Batch   36/48 | Loss: 3.0538 | LR: 2.91e-04 | GradNorm: 2.403
  Batch   40/48 | Loss: 3.0083 | LR: 2.71e-04 | GradNorm: 2.409
  Batch   44/48 | Loss: 3.0642 | LR: 2.51e-04 | GradNorm: 2.606
Epoch 8/10: Train=22.00%, Val=7.80%, Gap=14.20%, LR=2.37e-04
  Batch    0/48 | Loss: 3.0402 | LR: 2.32e-04 | GradNorm: 2.064
  Batch    4/48 | Loss: 2.9903 | LR: 2.14e-04 | GradNorm: 0.940
  Batch    8/48 | Loss: 3.0545 | LR: 1.96e-04 | GradNorm: 2.326
  Batch   12/48 | Loss: 3.0153 | LR: 1.79e-04 | GradNorm: 2.104
  Batch   16/48 | Loss: 2.9424 | LR: 1.63e-04 | GradNorm: 1.566
  Batch   20/48 | Loss: 2.9621 | LR: 1.48e-04 | GradNorm: 1.450
  Batch   24/48 | Loss: 3.0059 | LR: 1.33e-04 | GradNorm: 1.446
  Batch   28/48 | Loss: 2.9752 | LR: 1.19e-04 | GradNorm: 1.210
  Batch   32/48 | Loss: 2.9716 | LR: 1.05e-04 | GradNorm: 1.890
  Batch   36/48 | Loss: 2.9888 | LR: 9.25e-05 | GradNorm: 2.096
  Batch   40/48 | Loss: 2.9023 | LR: 8.06e-05 | GradNorm: 1.689
  Batch   44/48 | Loss: 2.9780 | LR: 6.95e-05 | GradNorm: 1.887
Epoch 9/10: Train=25.24%, Val=7.60%, Gap=17.64%, LR=6.17e-05
  Batch    0/48 | Loss: 2.9964 | LR: 5.91e-05 | GradNorm: 2.026
  Batch    4/48 | Loss: 2.9640 | LR: 4.96e-05 | GradNorm: 1.585
  Batch    8/48 | Loss: 2.9108 | LR: 4.09e-05 | GradNorm: 1.202
  Batch   12/48 | Loss: 2.9229 | LR: 3.30e-05 | GradNorm: 1.227
  Batch   16/48 | Loss: 2.9188 | LR: 2.60e-05 | GradNorm: 1.354
  Batch   20/48 | Loss: 2.9301 | LR: 1.97e-05 | GradNorm: 1.687
  Batch   24/48 | Loss: 2.9616 | LR: 1.44e-05 | GradNorm: 1.295
  Batch   28/48 | Loss: 2.9475 | LR: 9.85e-06 | GradNorm: 1.743
  Batch   32/48 | Loss: 2.9605 | LR: 6.18e-06 | GradNorm: 1.829
  Batch   36/48 | Loss: 2.9426 | LR: 3.37e-06 | GradNorm: 0.984
  Batch   40/48 | Loss: 2.9237 | LR: 1.43e-06 | GradNorm: 1.101
  Batch   44/48 | Loss: 2.9438 | LR: 3.44e-07 | GradNorm: 1.919
Epoch 10/10: Train=26.47%, Val=7.53%, Gap=18.94%, LR=1.00e-07
Best validation accuracy: 7.80%
