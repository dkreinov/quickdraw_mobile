=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002693844761400356
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9403 | LR: 5.47e-06 | GradNorm: 1.486
  Batch    4/48 | Loss: 3.9232 | LR: 1.66e-05 | GradNorm: 0.917
  Batch    8/48 | Loss: 3.9265 | LR: 2.77e-05 | GradNorm: 0.953
  Batch   12/48 | Loss: 3.9175 | LR: 3.88e-05 | GradNorm: 0.746
  Batch   16/48 | Loss: 3.9186 | LR: 4.99e-05 | GradNorm: 0.668
  Batch   20/48 | Loss: 3.9133 | LR: 6.10e-05 | GradNorm: 0.611
  Batch   24/48 | Loss: 3.9155 | LR: 7.21e-05 | GradNorm: 0.728
  Batch   28/48 | Loss: 3.9143 | LR: 8.33e-05 | GradNorm: 0.609
  Batch   32/48 | Loss: 3.9091 | LR: 9.44e-05 | GradNorm: 0.541
  Batch   36/48 | Loss: 3.9080 | LR: 1.05e-04 | GradNorm: 0.573
  Batch   40/48 | Loss: 3.9016 | LR: 1.17e-04 | GradNorm: 0.629
  Batch   44/48 | Loss: 3.8799 | LR: 1.28e-04 | GradNorm: 0.905
Epoch 1/10: Train=2.35%, Val=4.09%, Gap=-1.74%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8588 | LR: 1.39e-04 | GradNorm: 3.192
  Batch    4/48 | Loss: 3.8265 | LR: 1.50e-04 | GradNorm: 5.082
  Batch    8/48 | Loss: 3.7779 | LR: 1.61e-04 | GradNorm: 1.083
  Batch   12/48 | Loss: 3.8366 | LR: 1.72e-04 | GradNorm: 10.843
  Batch   16/48 | Loss: 3.8855 | LR: 1.83e-04 | GradNorm: 6.449
  Batch   20/48 | Loss: 3.7958 | LR: 1.94e-04 | GradNorm: 3.381
  Batch   24/48 | Loss: 3.7526 | LR: 2.05e-04 | GradNorm: 3.887
  Batch   28/48 | Loss: 3.9011 | LR: 2.17e-04 | GradNorm: 6.782
  Batch   32/48 | Loss: 3.8505 | LR: 2.28e-04 | GradNorm: 6.916
  Batch   36/48 | Loss: 3.7378 | LR: 2.39e-04 | GradNorm: 3.539
  Batch   40/48 | Loss: 3.6800 | LR: 2.50e-04 | GradNorm: 2.561
  Batch   44/48 | Loss: 3.6151 | LR: 2.61e-04 | GradNorm: 3.037
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.36%, Val=7.48%, Gap=-1.12%, LR=2.69e-04
  Batch    0/48 | Loss: 3.5785 | LR: 2.69e-04 | GradNorm: 5.477
  Batch    4/48 | Loss: 3.5405 | LR: 2.69e-04 | GradNorm: 3.181
  Batch    8/48 | Loss: 3.5933 | LR: 2.69e-04 | GradNorm: 6.759
  Batch   12/48 | Loss: 3.5095 | LR: 2.69e-04 | GradNorm: 4.159
  Batch   16/48 | Loss: 3.4565 | LR: 2.68e-04 | GradNorm: 2.868
  Batch   20/48 | Loss: 3.4374 | LR: 2.67e-04 | GradNorm: 4.849
  Batch   24/48 | Loss: 3.3974 | LR: 2.67e-04 | GradNorm: 5.342
  Batch   28/48 | Loss: 3.3243 | LR: 2.66e-04 | GradNorm: 3.245
  Batch   32/48 | Loss: 3.3388 | LR: 2.65e-04 | GradNorm: 2.080
  Batch   36/48 | Loss: 3.3419 | LR: 2.63e-04 | GradNorm: 2.900
  Batch   40/48 | Loss: 3.3278 | LR: 2.62e-04 | GradNorm: 4.724
  Batch   44/48 | Loss: 3.3190 | LR: 2.60e-04 | GradNorm: 3.455
Epoch 3/10: Train=14.02%, Val=12.13%, Gap=1.89%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3085 | LR: 2.59e-04 | GradNorm: 5.754
  Batch    4/48 | Loss: 3.3028 | LR: 2.57e-04 | GradNorm: 4.944
  Batch    8/48 | Loss: 3.2771 | LR: 2.55e-04 | GradNorm: 4.919
  Batch   12/48 | Loss: 3.2122 | LR: 2.53e-04 | GradNorm: 3.975
  Batch   16/48 | Loss: 3.2396 | LR: 2.51e-04 | GradNorm: 3.164
  Batch   20/48 | Loss: 3.1912 | LR: 2.48e-04 | GradNorm: 1.423
  Batch   24/48 | Loss: 3.2276 | LR: 2.46e-04 | GradNorm: 3.258
  Batch   28/48 | Loss: 3.1924 | LR: 2.44e-04 | GradNorm: 2.433
  Batch   32/48 | Loss: 3.2134 | LR: 2.41e-04 | GradNorm: 2.436
  Batch   36/48 | Loss: 3.2004 | LR: 2.38e-04 | GradNorm: 2.751
  Batch   40/48 | Loss: 3.2097 | LR: 2.35e-04 | GradNorm: 3.369
  Batch   44/48 | Loss: 3.1726 | LR: 2.32e-04 | GradNorm: 3.558
Epoch 4/10: Train=17.40%, Val=16.45%, Gap=0.95%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1191 | LR: 2.29e-04 | GradNorm: 1.723
  Batch    4/48 | Loss: 3.0899 | LR: 2.26e-04 | GradNorm: 3.110
  Batch    8/48 | Loss: 3.0822 | LR: 2.23e-04 | GradNorm: 2.823
  Batch   12/48 | Loss: 3.0722 | LR: 2.19e-04 | GradNorm: 2.981
  Batch   16/48 | Loss: 3.1250 | LR: 2.16e-04 | GradNorm: 3.109
  Batch   20/48 | Loss: 3.0866 | LR: 2.12e-04 | GradNorm: 5.515
  Batch   24/48 | Loss: 3.1050 | LR: 2.09e-04 | GradNorm: 5.448
  Batch   28/48 | Loss: 3.0772 | LR: 2.05e-04 | GradNorm: 6.621
  Batch   32/48 | Loss: 3.0616 | LR: 2.01e-04 | GradNorm: 7.135
  Batch   36/48 | Loss: 3.0873 | LR: 1.97e-04 | GradNorm: 6.732
  Batch   40/48 | Loss: 3.0368 | LR: 1.93e-04 | GradNorm: 2.857
  Batch   44/48 | Loss: 3.0437 | LR: 1.89e-04 | GradNorm: 7.435
Epoch 5/10: Train=22.43%, Val=14.11%, Gap=8.32%, LR=1.86e-04
  Batch    0/48 | Loss: 2.9837 | LR: 1.85e-04 | GradNorm: 5.255
  Batch    4/48 | Loss: 2.9309 | LR: 1.81e-04 | GradNorm: 5.946
  Batch    8/48 | Loss: 2.9851 | LR: 1.77e-04 | GradNorm: 8.472
  Batch   12/48 | Loss: 2.9555 | LR: 1.73e-04 | GradNorm: 5.386
  Batch   16/48 | Loss: 2.9449 | LR: 1.69e-04 | GradNorm: 5.659
  Batch   20/48 | Loss: 2.9089 | LR: 1.64e-04 | GradNorm: 3.743
  Batch   24/48 | Loss: 2.9478 | LR: 1.60e-04 | GradNorm: 7.227
  Batch   28/48 | Loss: 2.8924 | LR: 1.56e-04 | GradNorm: 4.879
  Batch   32/48 | Loss: 2.8628 | LR: 1.51e-04 | GradNorm: 2.480
  Batch   36/48 | Loss: 2.9271 | LR: 1.47e-04 | GradNorm: 3.825
  Batch   40/48 | Loss: 2.8857 | LR: 1.42e-04 | GradNorm: 3.150
  Batch   44/48 | Loss: 2.9575 | LR: 1.38e-04 | GradNorm: 3.490
Epoch 6/10: Train=26.02%, Val=14.75%, Gap=11.27%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8883 | LR: 1.34e-04 | GradNorm: 3.110
  Batch    4/48 | Loss: 2.8809 | LR: 1.29e-04 | GradNorm: 4.389
  Batch    8/48 | Loss: 2.8669 | LR: 1.25e-04 | GradNorm: 5.234
  Batch   12/48 | Loss: 2.7865 | LR: 1.20e-04 | GradNorm: 4.556
  Batch   16/48 | Loss: 2.8108 | LR: 1.16e-04 | GradNorm: 5.096
  Batch   20/48 | Loss: 2.8481 | LR: 1.12e-04 | GradNorm: 4.969
  Batch   24/48 | Loss: 2.8405 | LR: 1.07e-04 | GradNorm: 5.032
  Batch   28/48 | Loss: 2.8422 | LR: 1.03e-04 | GradNorm: 1.936
  Batch   32/48 | Loss: 2.8351 | LR: 9.88e-05 | GradNorm: 6.187
  Batch   36/48 | Loss: 2.8366 | LR: 9.46e-05 | GradNorm: 2.920
  Batch   40/48 | Loss: 2.8286 | LR: 9.04e-05 | GradNorm: 5.358
  Batch   44/48 | Loss: 2.8116 | LR: 8.63e-05 | GradNorm: 3.376
Epoch 7/10: Train=29.12%, Val=20.75%, Gap=8.37%, LR=8.32e-05
  Batch    0/48 | Loss: 2.8186 | LR: 8.22e-05 | GradNorm: 6.532
  Batch    4/48 | Loss: 2.7643 | LR: 7.82e-05 | GradNorm: 4.081
  Batch    8/48 | Loss: 2.7977 | LR: 7.42e-05 | GradNorm: 6.219
  Batch   12/48 | Loss: 2.8294 | LR: 7.03e-05 | GradNorm: 7.796
  Batch   16/48 | Loss: 2.8050 | LR: 6.65e-05 | GradNorm: 3.074
  Batch   20/48 | Loss: 2.7434 | LR: 6.27e-05 | GradNorm: 5.018
  Batch   24/48 | Loss: 2.7332 | LR: 5.90e-05 | GradNorm: 1.892
  Batch   28/48 | Loss: 2.7973 | LR: 5.54e-05 | GradNorm: 5.969
  Batch   32/48 | Loss: 2.7718 | LR: 5.19e-05 | GradNorm: 4.543
  Batch   36/48 | Loss: 2.7725 | LR: 4.85e-05 | GradNorm: 2.931
  Batch   40/48 | Loss: 2.7065 | LR: 4.51e-05 | GradNorm: 4.089
  Batch   44/48 | Loss: 2.7458 | LR: 4.19e-05 | GradNorm: 4.530
Epoch 8/10: Train=31.19%, Val=17.58%, Gap=13.61%, LR=3.95e-05
  Batch    0/48 | Loss: 2.6997 | LR: 3.88e-05 | GradNorm: 3.452
  Batch    4/48 | Loss: 2.6912 | LR: 3.57e-05 | GradNorm: 3.447
  Batch    8/48 | Loss: 2.7687 | LR: 3.28e-05 | GradNorm: 2.833
  Batch   12/48 | Loss: 2.7207 | LR: 3.00e-05 | GradNorm: 2.434
  Batch   16/48 | Loss: 2.6561 | LR: 2.73e-05 | GradNorm: 2.238
  Batch   20/48 | Loss: 2.6620 | LR: 2.47e-05 | GradNorm: 2.974
  Batch   24/48 | Loss: 2.7043 | LR: 2.22e-05 | GradNorm: 2.322
  Batch   28/48 | Loss: 2.7088 | LR: 1.98e-05 | GradNorm: 3.870
  Batch   32/48 | Loss: 2.6989 | LR: 1.76e-05 | GradNorm: 4.114
  Batch   36/48 | Loss: 2.6873 | LR: 1.55e-05 | GradNorm: 4.134
  Batch   40/48 | Loss: 2.6780 | LR: 1.35e-05 | GradNorm: 4.624
  Batch   44/48 | Loss: 2.6914 | LR: 1.17e-05 | GradNorm: 2.734
Epoch 9/10: Train=33.59%, Val=18.27%, Gap=15.32%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6929 | LR: 9.93e-06 | GradNorm: 1.788
  Batch    4/48 | Loss: 2.7003 | LR: 8.35e-06 | GradNorm: 2.008
  Batch    8/48 | Loss: 2.6670 | LR: 6.90e-06 | GradNorm: 2.574
  Batch   12/48 | Loss: 2.6792 | LR: 5.58e-06 | GradNorm: 2.629
  Batch   16/48 | Loss: 2.6800 | LR: 4.41e-06 | GradNorm: 2.539
  Batch   20/48 | Loss: 2.6831 | LR: 3.37e-06 | GradNorm: 2.207
  Batch   24/48 | Loss: 2.6698 | LR: 2.48e-06 | GradNorm: 3.969
  Batch   28/48 | Loss: 2.7013 | LR: 1.72e-06 | GradNorm: 2.148
  Batch   32/48 | Loss: 2.7009 | LR: 1.11e-06 | GradNorm: 3.081
  Batch   36/48 | Loss: 2.6752 | LR: 6.45e-07 | GradNorm: 2.149
  Batch   40/48 | Loss: 2.6473 | LR: 3.21e-07 | GradNorm: 2.636
  Batch   44/48 | Loss: 2.6683 | LR: 1.41e-07 | GradNorm: 3.005
Epoch 10/10: Train=34.30%, Val=18.66%, Gap=15.64%, LR=1.00e-07
Best validation accuracy: 20.75%
