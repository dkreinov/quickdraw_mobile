=== W&B Sweep Run: LR=0.000438 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004383590082793221
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000438
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9534 | LR: 8.90e-06 | GradNorm: 1.580
  Batch    4/48 | Loss: 3.9304 | LR: 2.70e-05 | GradNorm: 0.974
  Batch    8/48 | Loss: 3.9287 | LR: 4.51e-05 | GradNorm: 0.831
  Batch   12/48 | Loss: 3.9169 | LR: 6.32e-05 | GradNorm: 0.621
  Batch   16/48 | Loss: 3.9199 | LR: 8.12e-05 | GradNorm: 0.566
  Batch   20/48 | Loss: 3.9160 | LR: 9.93e-05 | GradNorm: 0.593
  Batch   24/48 | Loss: 3.9104 | LR: 1.17e-04 | GradNorm: 0.550
  Batch   28/48 | Loss: 3.9205 | LR: 1.35e-04 | GradNorm: 0.567
  Batch   32/48 | Loss: 3.9048 | LR: 1.54e-04 | GradNorm: 0.444
  Batch   36/48 | Loss: 3.9094 | LR: 1.72e-04 | GradNorm: 0.505
  Batch   40/48 | Loss: 3.9003 | LR: 1.90e-04 | GradNorm: 0.543
  Batch   44/48 | Loss: 3.8716 | LR: 2.08e-04 | GradNorm: 0.607
Epoch 1/10: Train=2.32%, Val=4.97%, Gap=-2.65%, LR=2.21e-04
  Batch    0/48 | Loss: 3.8211 | LR: 2.26e-04 | GradNorm: 1.927
  Batch    4/48 | Loss: 3.8301 | LR: 2.44e-04 | GradNorm: 4.126
  Batch    8/48 | Loss: 3.7882 | LR: 2.62e-04 | GradNorm: 2.949
  Batch   12/48 | Loss: 3.7529 | LR: 2.80e-04 | GradNorm: 2.775
  Batch   16/48 | Loss: 3.7434 | LR: 2.98e-04 | GradNorm: 0.818
  Batch   20/48 | Loss: 3.8703 | LR: 3.16e-04 | GradNorm: 5.699
  Batch   24/48 | Loss: 3.6820 | LR: 3.34e-04 | GradNorm: 1.474
  Batch   28/48 | Loss: 3.7192 | LR: 3.52e-04 | GradNorm: 1.651
  Batch   32/48 | Loss: 3.6481 | LR: 3.71e-04 | GradNorm: 0.833
  Batch   36/48 | Loss: 3.7035 | LR: 3.89e-04 | GradNorm: 4.342
  Batch   40/48 | Loss: 3.6589 | LR: 4.07e-04 | GradNorm: 2.799
  Batch   44/48 | Loss: 3.6437 | LR: 4.25e-04 | GradNorm: 3.383
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.38%, Val=4.84%, Gap=1.54%, LR=4.38e-04
  Batch    0/48 | Loss: 3.7122 | LR: 4.38e-04 | GradNorm: 6.210
  Batch    4/48 | Loss: 3.6537 | LR: 4.38e-04 | GradNorm: 7.602
  Batch    8/48 | Loss: 3.6309 | LR: 4.38e-04 | GradNorm: 4.010
  Batch   12/48 | Loss: 3.5700 | LR: 4.37e-04 | GradNorm: 2.037
  Batch   16/48 | Loss: 3.5492 | LR: 4.36e-04 | GradNorm: 2.544
  Batch   20/48 | Loss: 3.4951 | LR: 4.35e-04 | GradNorm: 2.529
  Batch   24/48 | Loss: 3.5186 | LR: 4.34e-04 | GradNorm: 3.972
  Batch   28/48 | Loss: 3.5185 | LR: 4.32e-04 | GradNorm: 3.587
  Batch   32/48 | Loss: 3.5053 | LR: 4.30e-04 | GradNorm: 3.877
  Batch   36/48 | Loss: 3.4380 | LR: 4.28e-04 | GradNorm: 2.262
  Batch   40/48 | Loss: 3.4182 | LR: 4.26e-04 | GradNorm: 2.532
  Batch   44/48 | Loss: 3.3390 | LR: 4.24e-04 | GradNorm: 1.774
Epoch 3/10: Train=10.85%, Val=11.04%, Gap=-0.19%, LR=4.22e-04
  Batch    0/48 | Loss: 3.3251 | LR: 4.21e-04 | GradNorm: 1.536
  Batch    4/48 | Loss: 3.2888 | LR: 4.18e-04 | GradNorm: 1.441
  Batch    8/48 | Loss: 3.3305 | LR: 4.15e-04 | GradNorm: 3.654
  Batch   12/48 | Loss: 3.2802 | LR: 4.12e-04 | GradNorm: 3.966
  Batch   16/48 | Loss: 3.2365 | LR: 4.08e-04 | GradNorm: 2.594
  Batch   20/48 | Loss: 3.2230 | LR: 4.04e-04 | GradNorm: 2.080
  Batch   24/48 | Loss: 3.1946 | LR: 4.00e-04 | GradNorm: 1.532
  Batch   28/48 | Loss: 3.2074 | LR: 3.96e-04 | GradNorm: 3.989
  Batch   32/48 | Loss: 3.1995 | LR: 3.92e-04 | GradNorm: 2.282
  Batch   36/48 | Loss: 3.2264 | LR: 3.87e-04 | GradNorm: 4.411
  Batch   40/48 | Loss: 3.1904 | LR: 3.83e-04 | GradNorm: 2.400
  Batch   44/48 | Loss: 3.1558 | LR: 3.78e-04 | GradNorm: 4.316
Epoch 4/10: Train=17.04%, Val=12.23%, Gap=4.81%, LR=3.74e-04
  Batch    0/48 | Loss: 3.1395 | LR: 3.73e-04 | GradNorm: 1.850
  Batch    4/48 | Loss: 3.1766 | LR: 3.68e-04 | GradNorm: 7.577
  Batch    8/48 | Loss: 3.1663 | LR: 3.62e-04 | GradNorm: 3.650
  Batch   12/48 | Loss: 3.1024 | LR: 3.57e-04 | GradNorm: 2.986
  Batch   16/48 | Loss: 3.1572 | LR: 3.51e-04 | GradNorm: 2.278
  Batch   20/48 | Loss: 3.1066 | LR: 3.45e-04 | GradNorm: 1.510
  Batch   24/48 | Loss: 3.1058 | LR: 3.39e-04 | GradNorm: 1.521
  Batch   28/48 | Loss: 3.1361 | LR: 3.33e-04 | GradNorm: 4.908
  Batch   32/48 | Loss: 3.0813 | LR: 3.27e-04 | GradNorm: 2.730
  Batch   36/48 | Loss: 3.0882 | LR: 3.21e-04 | GradNorm: 2.362
  Batch   40/48 | Loss: 3.1273 | LR: 3.15e-04 | GradNorm: 3.827
  Batch   44/48 | Loss: 3.0210 | LR: 3.08e-04 | GradNorm: 1.610
Epoch 5/10: Train=20.67%, Val=11.93%, Gap=8.74%, LR=3.03e-04
  Batch    0/48 | Loss: 2.9676 | LR: 3.01e-04 | GradNorm: 2.156
  Batch    4/48 | Loss: 2.9459 | LR: 2.95e-04 | GradNorm: 3.058
  Batch    8/48 | Loss: 2.9323 | LR: 2.88e-04 | GradNorm: 1.795
  Batch   12/48 | Loss: 2.9537 | LR: 2.81e-04 | GradNorm: 4.370
  Batch   16/48 | Loss: 2.9225 | LR: 2.74e-04 | GradNorm: 3.175
  Batch   20/48 | Loss: 2.9173 | LR: 2.67e-04 | GradNorm: 2.502
  Batch   24/48 | Loss: 2.8901 | LR: 2.60e-04 | GradNorm: 3.083
  Batch   28/48 | Loss: 2.8487 | LR: 2.53e-04 | GradNorm: 4.389
  Batch   32/48 | Loss: 2.8609 | LR: 2.46e-04 | GradNorm: 5.535
  Batch   36/48 | Loss: 2.8488 | LR: 2.39e-04 | GradNorm: 2.030
  Batch   40/48 | Loss: 2.8283 | LR: 2.32e-04 | GradNorm: 2.259
  Batch   44/48 | Loss: 2.9133 | LR: 2.25e-04 | GradNorm: 3.984
Epoch 6/10: Train=27.13%, Val=15.81%, Gap=11.32%, LR=2.19e-04
  Batch    0/48 | Loss: 2.8473 | LR: 2.17e-04 | GradNorm: 4.189
  Batch    4/48 | Loss: 2.8067 | LR: 2.10e-04 | GradNorm: 3.774
  Batch    8/48 | Loss: 2.8023 | LR: 2.03e-04 | GradNorm: 3.871
  Batch   12/48 | Loss: 2.7144 | LR: 1.96e-04 | GradNorm: 3.121
  Batch   16/48 | Loss: 2.7295 | LR: 1.89e-04 | GradNorm: 1.673
  Batch   20/48 | Loss: 2.8207 | LR: 1.82e-04 | GradNorm: 5.138
  Batch   24/48 | Loss: 2.8258 | LR: 1.75e-04 | GradNorm: 4.820
  Batch   28/48 | Loss: 2.8006 | LR: 1.68e-04 | GradNorm: 3.793
  Batch   32/48 | Loss: 2.7897 | LR: 1.61e-04 | GradNorm: 5.137
  Batch   36/48 | Loss: 2.8050 | LR: 1.54e-04 | GradNorm: 4.599
  Batch   40/48 | Loss: 2.7719 | LR: 1.47e-04 | GradNorm: 4.053
  Batch   44/48 | Loss: 2.7278 | LR: 1.40e-04 | GradNorm: 3.172
Epoch 7/10: Train=31.38%, Val=16.80%, Gap=14.58%, LR=1.35e-04
  Batch    0/48 | Loss: 2.7322 | LR: 1.34e-04 | GradNorm: 2.394
  Batch    4/48 | Loss: 2.6726 | LR: 1.27e-04 | GradNorm: 3.481
  Batch    8/48 | Loss: 2.6874 | LR: 1.21e-04 | GradNorm: 3.099
  Batch   12/48 | Loss: 2.7200 | LR: 1.14e-04 | GradNorm: 3.974
  Batch   16/48 | Loss: 2.7507 | LR: 1.08e-04 | GradNorm: 3.837
  Batch   20/48 | Loss: 2.6413 | LR: 1.02e-04 | GradNorm: 4.237
  Batch   24/48 | Loss: 2.6411 | LR: 9.60e-05 | GradNorm: 3.311
  Batch   28/48 | Loss: 2.6647 | LR: 9.01e-05 | GradNorm: 2.697
  Batch   32/48 | Loss: 2.6613 | LR: 8.44e-05 | GradNorm: 2.510
  Batch   36/48 | Loss: 2.6335 | LR: 7.88e-05 | GradNorm: 3.362
  Batch   40/48 | Loss: 2.5847 | LR: 7.34e-05 | GradNorm: 2.631
  Batch   44/48 | Loss: 2.6266 | LR: 6.81e-05 | GradNorm: 1.882
Epoch 8/10: Train=34.97%, Val=19.29%, Gap=15.68%, LR=6.43e-05
  Batch    0/48 | Loss: 2.5928 | LR: 6.30e-05 | GradNorm: 2.038
  Batch    4/48 | Loss: 2.5819 | LR: 5.81e-05 | GradNorm: 2.522
  Batch    8/48 | Loss: 2.6532 | LR: 5.33e-05 | GradNorm: 3.002
  Batch   12/48 | Loss: 2.5810 | LR: 4.87e-05 | GradNorm: 1.854
  Batch   16/48 | Loss: 2.5274 | LR: 4.43e-05 | GradNorm: 2.184
  Batch   20/48 | Loss: 2.5338 | LR: 4.01e-05 | GradNorm: 2.513
  Batch   24/48 | Loss: 2.5738 | LR: 3.60e-05 | GradNorm: 4.228
  Batch   28/48 | Loss: 2.5851 | LR: 3.22e-05 | GradNorm: 2.001
  Batch   32/48 | Loss: 2.5452 | LR: 2.86e-05 | GradNorm: 1.667
  Batch   36/48 | Loss: 2.5581 | LR: 2.51e-05 | GradNorm: 2.974
  Batch   40/48 | Loss: 2.5367 | LR: 2.19e-05 | GradNorm: 3.168
  Batch   44/48 | Loss: 2.5802 | LR: 1.89e-05 | GradNorm: 1.875
Epoch 9/10: Train=37.82%, Val=18.57%, Gap=19.25%, LR=1.68e-05
  Batch    0/48 | Loss: 2.5414 | LR: 1.61e-05 | GradNorm: 2.229
  Batch    4/48 | Loss: 2.5429 | LR: 1.35e-05 | GradNorm: 1.705
  Batch    8/48 | Loss: 2.5266 | LR: 1.12e-05 | GradNorm: 1.839
  Batch   12/48 | Loss: 2.5316 | LR: 9.02e-06 | GradNorm: 2.487
  Batch   16/48 | Loss: 2.5239 | LR: 7.11e-06 | GradNorm: 1.551
  Batch   20/48 | Loss: 2.5457 | LR: 5.42e-06 | GradNorm: 2.172
  Batch   24/48 | Loss: 2.5617 | LR: 3.97e-06 | GradNorm: 2.117
  Batch   28/48 | Loss: 2.5826 | LR: 2.74e-06 | GradNorm: 1.798
  Batch   32/48 | Loss: 2.5659 | LR: 1.75e-06 | GradNorm: 1.913
  Batch   36/48 | Loss: 2.5244 | LR: 9.87e-07 | GradNorm: 1.687
  Batch   40/48 | Loss: 2.5081 | LR: 4.59e-07 | GradNorm: 1.488
  Batch   44/48 | Loss: 2.5244 | LR: 1.66e-07 | GradNorm: 1.744
Epoch 10/10: Train=38.72%, Val=19.14%, Gap=19.58%, LR=1.00e-07
Best validation accuracy: 19.29%
