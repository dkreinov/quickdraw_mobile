=== W&B Sweep Run: LR=0.000250 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002496492724583267
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000250
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9534 | LR: 5.07e-06 | GradNorm: 1.701
  Batch    4/48 | Loss: 3.9413 | LR: 1.54e-05 | GradNorm: 1.361
  Batch    8/48 | Loss: 3.9227 | LR: 2.57e-05 | GradNorm: 0.978
  Batch   12/48 | Loss: 3.9086 | LR: 3.60e-05 | GradNorm: 0.701
  Batch   16/48 | Loss: 3.9189 | LR: 4.63e-05 | GradNorm: 0.741
  Batch   20/48 | Loss: 3.9165 | LR: 5.66e-05 | GradNorm: 0.766
  Batch   24/48 | Loss: 3.9150 | LR: 6.69e-05 | GradNorm: 0.749
  Batch   28/48 | Loss: 3.9147 | LR: 7.72e-05 | GradNorm: 0.651
  Batch   32/48 | Loss: 3.9032 | LR: 8.75e-05 | GradNorm: 0.544
  Batch   36/48 | Loss: 3.8972 | LR: 9.78e-05 | GradNorm: 0.588
  Batch   40/48 | Loss: 3.8817 | LR: 1.08e-04 | GradNorm: 0.684
  Batch   44/48 | Loss: 3.8464 | LR: 1.18e-04 | GradNorm: 2.721
Epoch 1/10: Train=2.64%, Val=4.57%, Gap=-1.93%, LR=1.26e-04
  Batch    0/48 | Loss: 3.8044 | LR: 1.29e-04 | GradNorm: 2.076
  Batch    4/48 | Loss: 3.8287 | LR: 1.39e-04 | GradNorm: 6.765
  Batch    8/48 | Loss: 3.7821 | LR: 1.49e-04 | GradNorm: 6.888
  Batch   12/48 | Loss: 3.7237 | LR: 1.60e-04 | GradNorm: 2.765
  Batch   16/48 | Loss: 3.7776 | LR: 1.70e-04 | GradNorm: 2.262
  Batch   20/48 | Loss: 3.7974 | LR: 1.80e-04 | GradNorm: 2.885
  Batch   24/48 | Loss: 3.7610 | LR: 1.90e-04 | GradNorm: 1.120
  Batch   28/48 | Loss: 3.7260 | LR: 2.01e-04 | GradNorm: 1.110
  Batch   32/48 | Loss: 3.7808 | LR: 2.11e-04 | GradNorm: 4.054
  Batch   36/48 | Loss: 3.7046 | LR: 2.21e-04 | GradNorm: 2.004
  Batch   40/48 | Loss: 3.6871 | LR: 2.32e-04 | GradNorm: 1.532
  Batch   44/48 | Loss: 3.6271 | LR: 2.42e-04 | GradNorm: 0.887
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.22%, Val=5.53%, Gap=-0.31%, LR=2.50e-04
  Batch    0/48 | Loss: 3.6080 | LR: 2.50e-04 | GradNorm: 4.443
  Batch    4/48 | Loss: 3.6936 | LR: 2.50e-04 | GradNorm: 3.446
  Batch    8/48 | Loss: 3.6446 | LR: 2.49e-04 | GradNorm: 2.481
  Batch   12/48 | Loss: 3.5962 | LR: 2.49e-04 | GradNorm: 1.143
  Batch   16/48 | Loss: 3.5663 | LR: 2.48e-04 | GradNorm: 4.025
  Batch   20/48 | Loss: 3.5086 | LR: 2.48e-04 | GradNorm: 3.211
  Batch   24/48 | Loss: 3.4839 | LR: 2.47e-04 | GradNorm: 1.211
  Batch   28/48 | Loss: 3.4974 | LR: 2.46e-04 | GradNorm: 6.644
  Batch   32/48 | Loss: 3.4295 | LR: 2.45e-04 | GradNorm: 1.626
  Batch   36/48 | Loss: 3.4219 | LR: 2.44e-04 | GradNorm: 2.204
  Batch   40/48 | Loss: 3.4966 | LR: 2.43e-04 | GradNorm: 8.834
  Batch   44/48 | Loss: 3.4554 | LR: 2.41e-04 | GradNorm: 4.896
Epoch 3/10: Train=10.76%, Val=14.33%, Gap=-3.57%, LR=2.40e-04
  Batch    0/48 | Loss: 3.3966 | LR: 2.40e-04 | GradNorm: 3.434
  Batch    4/48 | Loss: 3.4177 | LR: 2.38e-04 | GradNorm: 5.853
  Batch    8/48 | Loss: 3.3754 | LR: 2.36e-04 | GradNorm: 4.429
  Batch   12/48 | Loss: 3.3428 | LR: 2.34e-04 | GradNorm: 4.340
  Batch   16/48 | Loss: 3.3648 | LR: 2.32e-04 | GradNorm: 4.026
  Batch   20/48 | Loss: 3.3146 | LR: 2.30e-04 | GradNorm: 4.119
  Batch   24/48 | Loss: 3.2926 | LR: 2.28e-04 | GradNorm: 6.090
  Batch   28/48 | Loss: 3.2580 | LR: 2.26e-04 | GradNorm: 3.456
  Batch   32/48 | Loss: 3.2991 | LR: 2.23e-04 | GradNorm: 7.549
  Batch   36/48 | Loss: 3.2490 | LR: 2.21e-04 | GradNorm: 2.817
  Batch   40/48 | Loss: 3.2629 | LR: 2.18e-04 | GradNorm: 3.033
  Batch   44/48 | Loss: 3.2144 | LR: 2.15e-04 | GradNorm: 3.410
Epoch 4/10: Train=16.06%, Val=12.80%, Gap=3.26%, LR=2.13e-04
  Batch    0/48 | Loss: 3.2054 | LR: 2.12e-04 | GradNorm: 3.533
  Batch    4/48 | Loss: 3.2015 | LR: 2.09e-04 | GradNorm: 4.908
  Batch    8/48 | Loss: 3.1709 | LR: 2.06e-04 | GradNorm: 2.921
  Batch   12/48 | Loss: 3.1717 | LR: 2.03e-04 | GradNorm: 3.053
  Batch   16/48 | Loss: 3.2192 | LR: 2.00e-04 | GradNorm: 3.708
  Batch   20/48 | Loss: 3.1488 | LR: 1.97e-04 | GradNorm: 2.263
  Batch   24/48 | Loss: 3.1822 | LR: 1.93e-04 | GradNorm: 3.023
  Batch   28/48 | Loss: 3.1468 | LR: 1.90e-04 | GradNorm: 3.092
  Batch   32/48 | Loss: 3.1093 | LR: 1.86e-04 | GradNorm: 2.337
  Batch   36/48 | Loss: 3.1732 | LR: 1.83e-04 | GradNorm: 2.801
  Batch   40/48 | Loss: 3.1748 | LR: 1.79e-04 | GradNorm: 3.410
  Batch   44/48 | Loss: 3.1160 | LR: 1.75e-04 | GradNorm: 2.575
Epoch 5/10: Train=19.67%, Val=13.05%, Gap=6.62%, LR=1.73e-04
  Batch    0/48 | Loss: 3.0885 | LR: 1.72e-04 | GradNorm: 4.837
  Batch    4/48 | Loss: 3.0365 | LR: 1.68e-04 | GradNorm: 3.574
  Batch    8/48 | Loss: 3.0569 | LR: 1.64e-04 | GradNorm: 4.618
  Batch   12/48 | Loss: 3.0588 | LR: 1.60e-04 | GradNorm: 5.730
  Batch   16/48 | Loss: 3.1011 | LR: 1.56e-04 | GradNorm: 9.412
  Batch   20/48 | Loss: 3.0303 | LR: 1.52e-04 | GradNorm: 5.523
  Batch   24/48 | Loss: 2.9928 | LR: 1.48e-04 | GradNorm: 3.543
  Batch   28/48 | Loss: 3.0209 | LR: 1.44e-04 | GradNorm: 9.428
  Batch   32/48 | Loss: 3.0115 | LR: 1.40e-04 | GradNorm: 5.517
  Batch   36/48 | Loss: 3.0290 | LR: 1.36e-04 | GradNorm: 7.551
  Batch   40/48 | Loss: 2.9864 | LR: 1.32e-04 | GradNorm: 3.066
  Batch   44/48 | Loss: 3.0503 | LR: 1.28e-04 | GradNorm: 2.963
Epoch 6/10: Train=23.32%, Val=14.78%, Gap=8.54%, LR=1.25e-04
  Batch    0/48 | Loss: 2.9841 | LR: 1.24e-04 | GradNorm: 3.137
  Batch    4/48 | Loss: 3.0134 | LR: 1.20e-04 | GradNorm: 7.477
  Batch    8/48 | Loss: 2.9662 | LR: 1.16e-04 | GradNorm: 3.433
  Batch   12/48 | Loss: 2.9053 | LR: 1.12e-04 | GradNorm: 6.730
  Batch   16/48 | Loss: 2.9001 | LR: 1.08e-04 | GradNorm: 2.280
  Batch   20/48 | Loss: 2.9828 | LR: 1.04e-04 | GradNorm: 6.505
  Batch   24/48 | Loss: 2.9613 | LR: 9.95e-05 | GradNorm: 3.695
  Batch   28/48 | Loss: 2.9490 | LR: 9.55e-05 | GradNorm: 5.007
  Batch   32/48 | Loss: 2.9424 | LR: 9.16e-05 | GradNorm: 4.186
  Batch   36/48 | Loss: 2.9523 | LR: 8.77e-05 | GradNorm: 4.034
  Batch   40/48 | Loss: 2.9407 | LR: 8.38e-05 | GradNorm: 6.643
  Batch   44/48 | Loss: 2.9164 | LR: 8.00e-05 | GradNorm: 4.173
Epoch 7/10: Train=26.60%, Val=15.73%, Gap=10.87%, LR=7.71e-05
  Batch    0/48 | Loss: 2.8978 | LR: 7.62e-05 | GradNorm: 3.276
  Batch    4/48 | Loss: 2.8473 | LR: 7.25e-05 | GradNorm: 2.932
  Batch    8/48 | Loss: 2.8743 | LR: 6.88e-05 | GradNorm: 3.513
  Batch   12/48 | Loss: 2.9205 | LR: 6.52e-05 | GradNorm: 3.405
  Batch   16/48 | Loss: 2.9085 | LR: 6.16e-05 | GradNorm: 5.272
  Batch   20/48 | Loss: 2.8393 | LR: 5.81e-05 | GradNorm: 5.066
  Batch   24/48 | Loss: 2.8245 | LR: 5.47e-05 | GradNorm: 4.890
  Batch   28/48 | Loss: 2.8713 | LR: 5.14e-05 | GradNorm: 3.826
  Batch   32/48 | Loss: 2.8628 | LR: 4.81e-05 | GradNorm: 4.889
  Batch   36/48 | Loss: 2.8530 | LR: 4.49e-05 | GradNorm: 3.131
  Batch   40/48 | Loss: 2.7923 | LR: 4.18e-05 | GradNorm: 6.440
  Batch   44/48 | Loss: 2.8516 | LR: 3.88e-05 | GradNorm: 5.514
Epoch 8/10: Train=29.47%, Val=16.39%, Gap=13.08%, LR=3.66e-05
  Batch    0/48 | Loss: 2.8123 | LR: 3.59e-05 | GradNorm: 5.274
  Batch    4/48 | Loss: 2.8102 | LR: 3.31e-05 | GradNorm: 5.741
  Batch    8/48 | Loss: 2.8659 | LR: 3.04e-05 | GradNorm: 4.442
  Batch   12/48 | Loss: 2.8045 | LR: 2.78e-05 | GradNorm: 3.931
  Batch   16/48 | Loss: 2.7607 | LR: 2.53e-05 | GradNorm: 3.198
  Batch   20/48 | Loss: 2.7549 | LR: 2.29e-05 | GradNorm: 3.885
  Batch   24/48 | Loss: 2.7901 | LR: 2.06e-05 | GradNorm: 2.162
  Batch   28/48 | Loss: 2.8056 | LR: 1.84e-05 | GradNorm: 3.424
  Batch   32/48 | Loss: 2.7980 | LR: 1.63e-05 | GradNorm: 5.770
  Batch   36/48 | Loss: 2.7945 | LR: 1.44e-05 | GradNorm: 5.904
  Batch   40/48 | Loss: 2.7776 | LR: 1.25e-05 | GradNorm: 4.777
  Batch   44/48 | Loss: 2.7790 | LR: 1.08e-05 | GradNorm: 3.377
Epoch 9/10: Train=31.49%, Val=15.14%, Gap=16.35%, LR=9.60e-06
  Batch    0/48 | Loss: 2.7928 | LR: 9.21e-06 | GradNorm: 2.138
  Batch    4/48 | Loss: 2.7898 | LR: 7.74e-06 | GradNorm: 2.734
  Batch    8/48 | Loss: 2.7771 | LR: 6.40e-06 | GradNorm: 2.982
  Batch   12/48 | Loss: 2.7623 | LR: 5.18e-06 | GradNorm: 2.415
  Batch   16/48 | Loss: 2.7765 | LR: 4.09e-06 | GradNorm: 2.079
  Batch   20/48 | Loss: 2.7759 | LR: 3.13e-06 | GradNorm: 2.923
  Batch   24/48 | Loss: 2.7669 | LR: 2.30e-06 | GradNorm: 2.997
  Batch   28/48 | Loss: 2.7753 | LR: 1.60e-06 | GradNorm: 1.960
  Batch   32/48 | Loss: 2.8038 | LR: 1.04e-06 | GradNorm: 3.065
  Batch   36/48 | Loss: 2.7853 | LR: 6.05e-07 | GradNorm: 2.194
  Batch   40/48 | Loss: 2.7534 | LR: 3.05e-07 | GradNorm: 2.623
  Batch   44/48 | Loss: 2.7609 | LR: 1.38e-07 | GradNorm: 2.388
Epoch 10/10: Train=32.09%, Val=15.97%, Gap=16.12%, LR=1.00e-07
Best validation accuracy: 16.39%
