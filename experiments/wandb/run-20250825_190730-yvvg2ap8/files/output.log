=== W&B Sweep Run: LR=0.002239 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0022389829517965648
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002239
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9489 | LR: 4.55e-05 | GradNorm: 1.358
  Batch    4/48 | Loss: 3.9224 | LR: 1.38e-04 | GradNorm: 0.746
  Batch    8/48 | Loss: 3.9305 | LR: 2.30e-04 | GradNorm: 0.626
  Batch   12/48 | Loss: 3.9126 | LR: 3.23e-04 | GradNorm: 0.465
  Batch   16/48 | Loss: 3.9205 | LR: 4.15e-04 | GradNorm: 0.503
  Batch   20/48 | Loss: 3.9138 | LR: 5.07e-04 | GradNorm: 0.572
  Batch   24/48 | Loss: 3.8841 | LR: 6.00e-04 | GradNorm: 0.701
  Batch   28/48 | Loss: 3.8497 | LR: 6.92e-04 | GradNorm: 2.920
  Batch   32/48 | Loss: 4.0645 | LR: 7.84e-04 | GradNorm: 1.528
  Batch   36/48 | Loss: 3.8929 | LR: 8.77e-04 | GradNorm: 1.078
  Batch   40/48 | Loss: 3.8449 | LR: 9.69e-04 | GradNorm: 0.545
  Batch   44/48 | Loss: 3.8351 | LR: 1.06e-03 | GradNorm: 0.523
Epoch 1/10: Train=3.06%, Val=5.81%, Gap=-2.75%, LR=1.13e-03
  Batch    0/48 | Loss: 3.8055 | LR: 1.15e-03 | GradNorm: 0.554
  Batch    4/48 | Loss: 3.7438 | LR: 1.25e-03 | GradNorm: 0.458
  Batch    8/48 | Loss: 3.8825 | LR: 1.34e-03 | GradNorm: 1.145
  Batch   12/48 | Loss: 3.7497 | LR: 1.43e-03 | GradNorm: 0.713
  Batch   16/48 | Loss: 3.7707 | LR: 1.52e-03 | GradNorm: 1.101
  Batch   20/48 | Loss: 3.7776 | LR: 1.62e-03 | GradNorm: 1.231
  Batch   24/48 | Loss: 3.6785 | LR: 1.71e-03 | GradNorm: 1.031
  Batch   28/48 | Loss: 3.7909 | LR: 1.80e-03 | GradNorm: 1.469
  Batch   32/48 | Loss: 3.6554 | LR: 1.89e-03 | GradNorm: 0.557
  Batch   36/48 | Loss: 3.6196 | LR: 1.98e-03 | GradNorm: 1.213
  Batch   40/48 | Loss: 3.7302 | LR: 2.08e-03 | GradNorm: 1.404
  Batch   44/48 | Loss: 3.6062 | LR: 2.17e-03 | GradNorm: 0.953
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.94%, Val=6.13%, Gap=-0.19%, LR=2.24e-03
  Batch    0/48 | Loss: 3.5675 | LR: 2.24e-03 | GradNorm: 1.212
  Batch    4/48 | Loss: 3.6188 | LR: 2.24e-03 | GradNorm: 0.805
  Batch    8/48 | Loss: 3.6939 | LR: 2.24e-03 | GradNorm: 1.955
  Batch   12/48 | Loss: 3.7930 | LR: 2.23e-03 | GradNorm: 0.806
  Batch   16/48 | Loss: 3.7379 | LR: 2.23e-03 | GradNorm: 0.528
  Batch   20/48 | Loss: 3.7275 | LR: 2.22e-03 | GradNorm: 0.922
  Batch   24/48 | Loss: 3.6543 | LR: 2.22e-03 | GradNorm: 0.533
  Batch   28/48 | Loss: 3.5953 | LR: 2.21e-03 | GradNorm: 0.634
  Batch   32/48 | Loss: 3.5840 | LR: 2.20e-03 | GradNorm: 0.850
  Batch   36/48 | Loss: 3.6119 | LR: 2.19e-03 | GradNorm: 1.515
  Batch   40/48 | Loss: 3.5844 | LR: 2.18e-03 | GradNorm: 1.007
  Batch   44/48 | Loss: 3.5958 | LR: 2.16e-03 | GradNorm: 1.687
Epoch 3/10: Train=7.30%, Val=8.11%, Gap=-0.81%, LR=2.15e-03
  Batch    0/48 | Loss: 3.5292 | LR: 2.15e-03 | GradNorm: 0.779
  Batch    4/48 | Loss: 3.5356 | LR: 2.14e-03 | GradNorm: 0.871
  Batch    8/48 | Loss: 3.5548 | LR: 2.12e-03 | GradNorm: 1.163
  Batch   12/48 | Loss: 3.5384 | LR: 2.10e-03 | GradNorm: 1.289
  Batch   16/48 | Loss: 3.4869 | LR: 2.08e-03 | GradNorm: 0.578
  Batch   20/48 | Loss: 3.5403 | LR: 2.07e-03 | GradNorm: 1.278
  Batch   24/48 | Loss: 3.4973 | LR: 2.05e-03 | GradNorm: 0.847
  Batch   28/48 | Loss: 3.4723 | LR: 2.02e-03 | GradNorm: 0.627
  Batch   32/48 | Loss: 3.5167 | LR: 2.00e-03 | GradNorm: 1.035
  Batch   36/48 | Loss: 3.5061 | LR: 1.98e-03 | GradNorm: 1.014
  Batch   40/48 | Loss: 3.4890 | LR: 1.96e-03 | GradNorm: 1.088
  Batch   44/48 | Loss: 3.7257 | LR: 1.93e-03 | GradNorm: 3.192
Epoch 4/10: Train=9.81%, Val=8.48%, Gap=1.33%, LR=1.91e-03
  Batch    0/48 | Loss: 3.4817 | LR: 1.90e-03 | GradNorm: 0.731
  Batch    4/48 | Loss: 3.4367 | LR: 1.88e-03 | GradNorm: 0.521
  Batch    8/48 | Loss: 3.4647 | LR: 1.85e-03 | GradNorm: 0.639
  Batch   12/48 | Loss: 3.4306 | LR: 1.82e-03 | GradNorm: 0.701
  Batch   16/48 | Loss: 3.4716 | LR: 1.79e-03 | GradNorm: 0.768
  Batch   20/48 | Loss: 3.4428 | LR: 1.76e-03 | GradNorm: 0.732
  Batch   24/48 | Loss: 3.4402 | LR: 1.73e-03 | GradNorm: 0.483
  Batch   28/48 | Loss: 3.4373 | LR: 1.70e-03 | GradNorm: 0.687
  Batch   32/48 | Loss: 3.3825 | LR: 1.67e-03 | GradNorm: 0.433
  Batch   36/48 | Loss: 3.4610 | LR: 1.64e-03 | GradNorm: 0.691
  Batch   40/48 | Loss: 3.4914 | LR: 1.61e-03 | GradNorm: 1.162
  Batch   44/48 | Loss: 3.4137 | LR: 1.57e-03 | GradNorm: 0.794
Epoch 5/10: Train=11.59%, Val=9.90%, Gap=1.69%, LR=1.55e-03
  Batch    0/48 | Loss: 3.4016 | LR: 1.54e-03 | GradNorm: 1.188
  Batch    4/48 | Loss: 3.3718 | LR: 1.51e-03 | GradNorm: 0.643
  Batch    8/48 | Loss: 3.3914 | LR: 1.47e-03 | GradNorm: 1.124
  Batch   12/48 | Loss: 3.3847 | LR: 1.44e-03 | GradNorm: 0.662
  Batch   16/48 | Loss: 3.3666 | LR: 1.40e-03 | GradNorm: 0.566
  Batch   20/48 | Loss: 3.3550 | LR: 1.36e-03 | GradNorm: 0.681
  Batch   24/48 | Loss: 3.3637 | LR: 1.33e-03 | GradNorm: 1.341
  Batch   28/48 | Loss: 3.3720 | LR: 1.29e-03 | GradNorm: 0.908
  Batch   32/48 | Loss: 3.4038 | LR: 1.26e-03 | GradNorm: 1.081
  Batch   36/48 | Loss: 3.4003 | LR: 1.22e-03 | GradNorm: 0.823
  Batch   40/48 | Loss: 3.3590 | LR: 1.18e-03 | GradNorm: 0.863
  Batch   44/48 | Loss: 3.4072 | LR: 1.15e-03 | GradNorm: 0.982
Epoch 6/10: Train=13.53%, Val=12.50%, Gap=1.03%, LR=1.12e-03
  Batch    0/48 | Loss: 3.3132 | LR: 1.11e-03 | GradNorm: 1.149
  Batch    4/48 | Loss: 3.3451 | LR: 1.07e-03 | GradNorm: 1.115
  Batch    8/48 | Loss: 3.2821 | LR: 1.04e-03 | GradNorm: 0.953
  Batch   12/48 | Loss: 3.2503 | LR: 1.00e-03 | GradNorm: 1.973
  Batch   16/48 | Loss: 3.2718 | LR: 9.64e-04 | GradNorm: 2.773
  Batch   20/48 | Loss: 3.2898 | LR: 9.28e-04 | GradNorm: 1.185
  Batch   24/48 | Loss: 3.3254 | LR: 8.92e-04 | GradNorm: 1.820
  Batch   28/48 | Loss: 3.2636 | LR: 8.56e-04 | GradNorm: 1.471
  Batch   32/48 | Loss: 3.2441 | LR: 8.21e-04 | GradNorm: 1.217
  Batch   36/48 | Loss: 3.2358 | LR: 7.86e-04 | GradNorm: 1.708
  Batch   40/48 | Loss: 3.1983 | LR: 7.51e-04 | GradNorm: 1.326
  Batch   44/48 | Loss: 3.1569 | LR: 7.17e-04 | GradNorm: 1.397
Epoch 7/10: Train=17.39%, Val=10.17%, Gap=7.22%, LR=6.91e-04
  Batch    0/48 | Loss: 3.1644 | LR: 6.83e-04 | GradNorm: 1.256
  Batch    4/48 | Loss: 3.1432 | LR: 6.49e-04 | GradNorm: 2.522
  Batch    8/48 | Loss: 3.1736 | LR: 6.16e-04 | GradNorm: 2.504
  Batch   12/48 | Loss: 3.1919 | LR: 5.84e-04 | GradNorm: 2.144
  Batch   16/48 | Loss: 3.1514 | LR: 5.52e-04 | GradNorm: 1.967
  Batch   20/48 | Loss: 3.0715 | LR: 5.21e-04 | GradNorm: 2.112
  Batch   24/48 | Loss: 3.1090 | LR: 4.90e-04 | GradNorm: 3.331
  Batch   28/48 | Loss: 3.1222 | LR: 4.60e-04 | GradNorm: 2.187
  Batch   32/48 | Loss: 3.0838 | LR: 4.31e-04 | GradNorm: 1.327
  Batch   36/48 | Loss: 3.0656 | LR: 4.02e-04 | GradNorm: 1.809
  Batch   40/48 | Loss: 3.0168 | LR: 3.75e-04 | GradNorm: 1.793
  Batch   44/48 | Loss: 3.0697 | LR: 3.48e-04 | GradNorm: 1.305
Epoch 8/10: Train=21.41%, Val=9.85%, Gap=11.56%, LR=3.28e-04
  Batch    0/48 | Loss: 3.0268 | LR: 3.22e-04 | GradNorm: 4.286
  Batch    4/48 | Loss: 3.0506 | LR: 2.96e-04 | GradNorm: 3.790
  Batch    8/48 | Loss: 3.0661 | LR: 2.72e-04 | GradNorm: 2.443
  Batch   12/48 | Loss: 3.0121 | LR: 2.48e-04 | GradNorm: 0.754
  Batch   16/48 | Loss: 2.9598 | LR: 2.26e-04 | GradNorm: 1.389
  Batch   20/48 | Loss: 2.9688 | LR: 2.04e-04 | GradNorm: 1.649
  Batch   24/48 | Loss: 2.9999 | LR: 1.84e-04 | GradNorm: 1.085
  Batch   28/48 | Loss: 2.9952 | LR: 1.64e-04 | GradNorm: 1.343
  Batch   32/48 | Loss: 3.0003 | LR: 1.46e-04 | GradNorm: 2.737
  Batch   36/48 | Loss: 3.0015 | LR: 1.28e-04 | GradNorm: 2.451
  Batch   40/48 | Loss: 2.8999 | LR: 1.12e-04 | GradNorm: 1.445
  Batch   44/48 | Loss: 2.9633 | LR: 9.61e-05 | GradNorm: 1.453
Epoch 9/10: Train=24.34%, Val=12.35%, Gap=11.99%, LR=8.53e-05
  Batch    0/48 | Loss: 2.9765 | LR: 8.18e-05 | GradNorm: 0.857
  Batch    4/48 | Loss: 2.9472 | LR: 6.87e-05 | GradNorm: 0.967
  Batch    8/48 | Loss: 2.9216 | LR: 5.66e-05 | GradNorm: 1.584
  Batch   12/48 | Loss: 2.9457 | LR: 4.57e-05 | GradNorm: 2.000
  Batch   16/48 | Loss: 2.9131 | LR: 3.59e-05 | GradNorm: 1.198
  Batch   20/48 | Loss: 2.9180 | LR: 2.73e-05 | GradNorm: 1.164
  Batch   24/48 | Loss: 2.9657 | LR: 1.99e-05 | GradNorm: 1.294
  Batch   28/48 | Loss: 2.9598 | LR: 1.36e-05 | GradNorm: 1.366
  Batch   32/48 | Loss: 2.9878 | LR: 8.52e-06 | GradNorm: 1.406
  Batch   36/48 | Loss: 2.9266 | LR: 4.63e-06 | GradNorm: 1.278
  Batch   40/48 | Loss: 2.9538 | LR: 1.94e-06 | GradNorm: 1.280
  Batch   44/48 | Loss: 2.9433 | LR: 4.37e-07 | GradNorm: 1.106
Epoch 10/10: Train=25.80%, Val=13.32%, Gap=12.48%, LR=1.00e-07
Best validation accuracy: 13.32%
