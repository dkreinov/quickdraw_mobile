=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004469766508282028
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9565 | LR: 9.08e-06 | GradNorm: 1.966
  Batch    4/48 | Loss: 3.9310 | LR: 2.75e-05 | GradNorm: 1.074
  Batch    8/48 | Loss: 3.9330 | LR: 4.60e-05 | GradNorm: 1.012
  Batch   12/48 | Loss: 3.9183 | LR: 6.44e-05 | GradNorm: 0.749
  Batch   16/48 | Loss: 3.9234 | LR: 8.28e-05 | GradNorm: 0.677
  Batch   20/48 | Loss: 3.9144 | LR: 1.01e-04 | GradNorm: 0.588
  Batch   24/48 | Loss: 3.9135 | LR: 1.20e-04 | GradNorm: 0.619
  Batch   28/48 | Loss: 3.9154 | LR: 1.38e-04 | GradNorm: 0.545
  Batch   32/48 | Loss: 3.9074 | LR: 1.57e-04 | GradNorm: 0.525
  Batch   36/48 | Loss: 3.8986 | LR: 1.75e-04 | GradNorm: 0.510
  Batch   40/48 | Loss: 3.8726 | LR: 1.93e-04 | GradNorm: 0.592
  Batch   44/48 | Loss: 3.8283 | LR: 2.12e-04 | GradNorm: 1.013
Epoch 1/10: Train=2.65%, Val=4.47%, Gap=-1.82%, LR=2.26e-04
  Batch    0/48 | Loss: 3.9313 | LR: 2.30e-04 | GradNorm: 5.774
  Batch    4/48 | Loss: 3.8966 | LR: 2.49e-04 | GradNorm: 3.619
  Batch    8/48 | Loss: 3.7744 | LR: 2.67e-04 | GradNorm: 1.690
  Batch   12/48 | Loss: 3.7168 | LR: 2.86e-04 | GradNorm: 0.783
  Batch   16/48 | Loss: 3.7483 | LR: 3.04e-04 | GradNorm: 3.058
  Batch   20/48 | Loss: 3.7675 | LR: 3.23e-04 | GradNorm: 5.080
  Batch   24/48 | Loss: 3.6937 | LR: 3.41e-04 | GradNorm: 4.781
  Batch   28/48 | Loss: 3.6632 | LR: 3.59e-04 | GradNorm: 4.901
  Batch   32/48 | Loss: 3.5891 | LR: 3.78e-04 | GradNorm: 1.529
  Batch   36/48 | Loss: 3.6382 | LR: 3.96e-04 | GradNorm: 4.284
  Batch   40/48 | Loss: 3.5496 | LR: 4.15e-04 | GradNorm: 0.799
  Batch   44/48 | Loss: 3.5098 | LR: 4.33e-04 | GradNorm: 4.130
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.11%, Val=7.01%, Gap=0.10%, LR=4.47e-04
  Batch    0/48 | Loss: 3.4696 | LR: 4.47e-04 | GradNorm: 1.863
  Batch    4/48 | Loss: 3.5403 | LR: 4.47e-04 | GradNorm: 4.994
  Batch    8/48 | Loss: 3.5037 | LR: 4.46e-04 | GradNorm: 3.578
  Batch   12/48 | Loss: 3.5489 | LR: 4.46e-04 | GradNorm: 4.185
  Batch   16/48 | Loss: 3.6559 | LR: 4.45e-04 | GradNorm: 7.367
  Batch   20/48 | Loss: 3.4670 | LR: 4.44e-04 | GradNorm: 1.956
  Batch   24/48 | Loss: 3.3764 | LR: 4.42e-04 | GradNorm: 1.508
  Batch   28/48 | Loss: 3.3857 | LR: 4.41e-04 | GradNorm: 4.182
  Batch   32/48 | Loss: 3.3723 | LR: 4.39e-04 | GradNorm: 2.376
  Batch   36/48 | Loss: 3.3240 | LR: 4.37e-04 | GradNorm: 1.299
  Batch   40/48 | Loss: 3.3107 | LR: 4.35e-04 | GradNorm: 3.868
  Batch   44/48 | Loss: 3.3087 | LR: 4.32e-04 | GradNorm: 3.318
Epoch 3/10: Train=12.53%, Val=12.74%, Gap=-0.21%, LR=4.30e-04
  Batch    0/48 | Loss: 3.2951 | LR: 4.29e-04 | GradNorm: 2.970
  Batch    4/48 | Loss: 3.2260 | LR: 4.26e-04 | GradNorm: 1.502
  Batch    8/48 | Loss: 3.2188 | LR: 4.23e-04 | GradNorm: 3.787
  Batch   12/48 | Loss: 3.1806 | LR: 4.20e-04 | GradNorm: 2.744
  Batch   16/48 | Loss: 3.2244 | LR: 4.16e-04 | GradNorm: 3.587
  Batch   20/48 | Loss: 3.1932 | LR: 4.12e-04 | GradNorm: 3.786
  Batch   24/48 | Loss: 3.1580 | LR: 4.08e-04 | GradNorm: 2.196
  Batch   28/48 | Loss: 3.1182 | LR: 4.04e-04 | GradNorm: 2.800
  Batch   32/48 | Loss: 3.1925 | LR: 4.00e-04 | GradNorm: 3.672
  Batch   36/48 | Loss: 3.1660 | LR: 3.95e-04 | GradNorm: 2.576
  Batch   40/48 | Loss: 3.1533 | LR: 3.90e-04 | GradNorm: 3.807
  Batch   44/48 | Loss: 3.1399 | LR: 3.85e-04 | GradNorm: 4.628
Epoch 4/10: Train=19.04%, Val=11.21%, Gap=7.83%, LR=3.82e-04
  Batch    0/48 | Loss: 3.1439 | LR: 3.80e-04 | GradNorm: 3.977
  Batch    4/48 | Loss: 3.0165 | LR: 3.75e-04 | GradNorm: 1.500
  Batch    8/48 | Loss: 3.1565 | LR: 3.69e-04 | GradNorm: 6.162
  Batch   12/48 | Loss: 3.0506 | LR: 3.64e-04 | GradNorm: 2.089
  Batch   16/48 | Loss: 3.1275 | LR: 3.58e-04 | GradNorm: 3.536
  Batch   20/48 | Loss: 3.1511 | LR: 3.52e-04 | GradNorm: 6.377
  Batch   24/48 | Loss: 3.0765 | LR: 3.46e-04 | GradNorm: 2.647
  Batch   28/48 | Loss: 3.0032 | LR: 3.40e-04 | GradNorm: 2.012
  Batch   32/48 | Loss: 2.9442 | LR: 3.34e-04 | GradNorm: 1.269
  Batch   36/48 | Loss: 3.0351 | LR: 3.27e-04 | GradNorm: 2.061
  Batch   40/48 | Loss: 3.0033 | LR: 3.21e-04 | GradNorm: 1.951
  Batch   44/48 | Loss: 2.9829 | LR: 3.14e-04 | GradNorm: 5.570
Epoch 5/10: Train=22.84%, Val=12.59%, Gap=10.25%, LR=3.09e-04
  Batch    0/48 | Loss: 2.9243 | LR: 3.07e-04 | GradNorm: 5.373
  Batch    4/48 | Loss: 2.8216 | LR: 3.01e-04 | GradNorm: 1.442
  Batch    8/48 | Loss: 2.8888 | LR: 2.94e-04 | GradNorm: 4.064
  Batch   12/48 | Loss: 2.8495 | LR: 2.87e-04 | GradNorm: 2.066
  Batch   16/48 | Loss: 2.8126 | LR: 2.80e-04 | GradNorm: 4.252
  Batch   20/48 | Loss: 2.8358 | LR: 2.72e-04 | GradNorm: 3.538
  Batch   24/48 | Loss: 2.8107 | LR: 2.65e-04 | GradNorm: 4.255
  Batch   28/48 | Loss: 2.7378 | LR: 2.58e-04 | GradNorm: 2.894
  Batch   32/48 | Loss: 2.7891 | LR: 2.51e-04 | GradNorm: 5.821
  Batch   36/48 | Loss: 2.7481 | LR: 2.44e-04 | GradNorm: 1.681
  Batch   40/48 | Loss: 2.7882 | LR: 2.36e-04 | GradNorm: 4.772
  Batch   44/48 | Loss: 2.8564 | LR: 2.29e-04 | GradNorm: 9.398
Epoch 6/10: Train=30.25%, Val=14.87%, Gap=15.38%, LR=2.24e-04
  Batch    0/48 | Loss: 2.7763 | LR: 2.22e-04 | GradNorm: 3.899
  Batch    4/48 | Loss: 2.7528 | LR: 2.14e-04 | GradNorm: 3.906
  Batch    8/48 | Loss: 2.7166 | LR: 2.07e-04 | GradNorm: 3.565
  Batch   12/48 | Loss: 2.6339 | LR: 2.00e-04 | GradNorm: 1.785
  Batch   16/48 | Loss: 2.6576 | LR: 1.93e-04 | GradNorm: 1.962
  Batch   20/48 | Loss: 2.6792 | LR: 1.85e-04 | GradNorm: 2.292
  Batch   24/48 | Loss: 2.7267 | LR: 1.78e-04 | GradNorm: 3.396
  Batch   28/48 | Loss: 2.6832 | LR: 1.71e-04 | GradNorm: 2.933
  Batch   32/48 | Loss: 2.6970 | LR: 1.64e-04 | GradNorm: 6.220
  Batch   36/48 | Loss: 2.7573 | LR: 1.57e-04 | GradNorm: 7.547
  Batch   40/48 | Loss: 2.6518 | LR: 1.50e-04 | GradNorm: 2.793
  Batch   44/48 | Loss: 2.6263 | LR: 1.43e-04 | GradNorm: 3.491
Epoch 7/10: Train=34.46%, Val=19.12%, Gap=15.34%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6792 | LR: 1.36e-04 | GradNorm: 5.073
  Batch    4/48 | Loss: 2.5938 | LR: 1.30e-04 | GradNorm: 4.549
  Batch    8/48 | Loss: 2.6188 | LR: 1.23e-04 | GradNorm: 3.920
  Batch   12/48 | Loss: 2.6378 | LR: 1.17e-04 | GradNorm: 4.344
  Batch   16/48 | Loss: 2.6614 | LR: 1.10e-04 | GradNorm: 4.691
  Batch   20/48 | Loss: 2.5532 | LR: 1.04e-04 | GradNorm: 2.958
  Batch   24/48 | Loss: 2.5345 | LR: 9.79e-05 | GradNorm: 2.332
  Batch   28/48 | Loss: 2.5834 | LR: 9.19e-05 | GradNorm: 3.582
  Batch   32/48 | Loss: 2.5841 | LR: 8.61e-05 | GradNorm: 4.928
  Batch   36/48 | Loss: 2.5404 | LR: 8.04e-05 | GradNorm: 2.541
  Batch   40/48 | Loss: 2.4878 | LR: 7.48e-05 | GradNorm: 3.444
  Batch   44/48 | Loss: 2.5652 | LR: 6.95e-05 | GradNorm: 3.794
Epoch 8/10: Train=37.73%, Val=21.28%, Gap=16.45%, LR=6.55e-05
  Batch    0/48 | Loss: 2.5212 | LR: 6.43e-05 | GradNorm: 3.025
  Batch    4/48 | Loss: 2.5070 | LR: 5.92e-05 | GradNorm: 2.026
  Batch    8/48 | Loss: 2.5292 | LR: 5.43e-05 | GradNorm: 3.159
  Batch   12/48 | Loss: 2.4947 | LR: 4.97e-05 | GradNorm: 2.249
  Batch   16/48 | Loss: 2.4436 | LR: 4.52e-05 | GradNorm: 1.983
  Batch   20/48 | Loss: 2.4495 | LR: 4.09e-05 | GradNorm: 2.567
  Batch   24/48 | Loss: 2.4984 | LR: 3.67e-05 | GradNorm: 2.662
  Batch   28/48 | Loss: 2.4828 | LR: 3.28e-05 | GradNorm: 1.749
  Batch   32/48 | Loss: 2.4559 | LR: 2.91e-05 | GradNorm: 2.735
  Batch   36/48 | Loss: 2.4500 | LR: 2.56e-05 | GradNorm: 4.105
  Batch   40/48 | Loss: 2.4455 | LR: 2.23e-05 | GradNorm: 2.209
  Batch   44/48 | Loss: 2.4793 | LR: 1.93e-05 | GradNorm: 3.155
Epoch 9/10: Train=41.13%, Val=22.68%, Gap=18.45%, LR=1.71e-05
  Batch    0/48 | Loss: 2.4512 | LR: 1.64e-05 | GradNorm: 2.546
  Batch    4/48 | Loss: 2.4602 | LR: 1.38e-05 | GradNorm: 2.676
  Batch    8/48 | Loss: 2.4080 | LR: 1.14e-05 | GradNorm: 1.643
  Batch   12/48 | Loss: 2.4166 | LR: 9.20e-06 | GradNorm: 2.500
  Batch   16/48 | Loss: 2.4430 | LR: 7.25e-06 | GradNorm: 2.291
  Batch   20/48 | Loss: 2.4572 | LR: 5.53e-06 | GradNorm: 2.935
  Batch   24/48 | Loss: 2.4600 | LR: 4.04e-06 | GradNorm: 1.870
  Batch   28/48 | Loss: 2.4836 | LR: 2.79e-06 | GradNorm: 1.206
  Batch   32/48 | Loss: 2.4895 | LR: 1.78e-06 | GradNorm: 2.875
  Batch   36/48 | Loss: 2.4397 | LR: 1.00e-06 | GradNorm: 2.076
  Batch   40/48 | Loss: 2.4104 | LR: 4.66e-07 | GradNorm: 2.203
  Batch   44/48 | Loss: 2.4297 | LR: 1.67e-07 | GradNorm: 2.347
Epoch 10/10: Train=42.13%, Val=22.73%, Gap=19.40%, LR=1.00e-07
Best validation accuracy: 22.73%
