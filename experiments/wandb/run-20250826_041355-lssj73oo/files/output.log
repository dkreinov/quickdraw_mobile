=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002908076927160609
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9330 | LR: 5.91e-06 | GradNorm: 1.213
  Batch    4/48 | Loss: 3.9241 | LR: 1.79e-05 | GradNorm: 0.949
  Batch    8/48 | Loss: 3.9262 | LR: 2.99e-05 | GradNorm: 1.042
  Batch   12/48 | Loss: 3.9165 | LR: 4.19e-05 | GradNorm: 0.772
  Batch   16/48 | Loss: 3.9151 | LR: 5.39e-05 | GradNorm: 0.608
  Batch   20/48 | Loss: 3.9195 | LR: 6.59e-05 | GradNorm: 0.765
  Batch   24/48 | Loss: 3.9108 | LR: 7.79e-05 | GradNorm: 0.677
  Batch   28/48 | Loss: 3.9183 | LR: 8.99e-05 | GradNorm: 0.671
  Batch   32/48 | Loss: 3.9093 | LR: 1.02e-04 | GradNorm: 0.559
  Batch   36/48 | Loss: 3.9002 | LR: 1.14e-04 | GradNorm: 0.607
  Batch   40/48 | Loss: 3.8818 | LR: 1.26e-04 | GradNorm: 0.656
  Batch   44/48 | Loss: 3.8393 | LR: 1.38e-04 | GradNorm: 0.854
Epoch 1/10: Train=2.81%, Val=3.99%, Gap=-1.18%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8108 | LR: 1.50e-04 | GradNorm: 2.619
  Batch    4/48 | Loss: 3.7906 | LR: 1.62e-04 | GradNorm: 1.638
  Batch    8/48 | Loss: 3.7610 | LR: 1.74e-04 | GradNorm: 2.653
  Batch   12/48 | Loss: 3.7382 | LR: 1.86e-04 | GradNorm: 7.465
  Batch   16/48 | Loss: 3.7256 | LR: 1.98e-04 | GradNorm: 3.022
  Batch   20/48 | Loss: 3.7562 | LR: 2.10e-04 | GradNorm: 5.013
  Batch   24/48 | Loss: 3.7656 | LR: 2.22e-04 | GradNorm: 4.305
  Batch   28/48 | Loss: 3.6969 | LR: 2.34e-04 | GradNorm: 2.295
  Batch   32/48 | Loss: 3.7221 | LR: 2.46e-04 | GradNorm: 4.225
  Batch   36/48 | Loss: 3.6746 | LR: 2.58e-04 | GradNorm: 5.055
  Batch   40/48 | Loss: 3.6143 | LR: 2.70e-04 | GradNorm: 1.607
  Batch   44/48 | Loss: 3.5424 | LR: 2.82e-04 | GradNorm: 3.241
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.89%, Val=5.02%, Gap=1.87%, LR=2.91e-04
  Batch    0/48 | Loss: 3.5878 | LR: 2.91e-04 | GradNorm: 7.907
  Batch    4/48 | Loss: 3.5791 | LR: 2.91e-04 | GradNorm: 7.417
  Batch    8/48 | Loss: 3.5012 | LR: 2.90e-04 | GradNorm: 5.413
  Batch   12/48 | Loss: 3.4473 | LR: 2.90e-04 | GradNorm: 3.118
  Batch   16/48 | Loss: 3.4640 | LR: 2.89e-04 | GradNorm: 8.823
  Batch   20/48 | Loss: 3.4106 | LR: 2.89e-04 | GradNorm: 3.260
  Batch   24/48 | Loss: 3.3559 | LR: 2.88e-04 | GradNorm: 1.954
  Batch   28/48 | Loss: 3.3429 | LR: 2.87e-04 | GradNorm: 2.537
  Batch   32/48 | Loss: 3.4325 | LR: 2.86e-04 | GradNorm: 10.156
  Batch   36/48 | Loss: 3.3568 | LR: 2.84e-04 | GradNorm: 2.918
  Batch   40/48 | Loss: 3.2980 | LR: 2.83e-04 | GradNorm: 2.452
  Batch   44/48 | Loss: 3.2906 | LR: 2.81e-04 | GradNorm: 1.039
Epoch 3/10: Train=13.42%, Val=8.76%, Gap=4.66%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3079 | LR: 2.79e-04 | GradNorm: 4.296
  Batch    4/48 | Loss: 3.2526 | LR: 2.77e-04 | GradNorm: 1.684
  Batch    8/48 | Loss: 3.2648 | LR: 2.75e-04 | GradNorm: 3.516
  Batch   12/48 | Loss: 3.2015 | LR: 2.73e-04 | GradNorm: 2.854
  Batch   16/48 | Loss: 3.3703 | LR: 2.71e-04 | GradNorm: 9.737
  Batch   20/48 | Loss: 3.2271 | LR: 2.68e-04 | GradNorm: 3.805
  Batch   24/48 | Loss: 3.2240 | LR: 2.66e-04 | GradNorm: 3.017
  Batch   28/48 | Loss: 3.1944 | LR: 2.63e-04 | GradNorm: 3.721
  Batch   32/48 | Loss: 3.1918 | LR: 2.60e-04 | GradNorm: 2.603
  Batch   36/48 | Loss: 3.1649 | LR: 2.57e-04 | GradNorm: 1.856
  Batch   40/48 | Loss: 3.2086 | LR: 2.54e-04 | GradNorm: 4.021
  Batch   44/48 | Loss: 3.1741 | LR: 2.51e-04 | GradNorm: 5.187
Epoch 4/10: Train=18.01%, Val=14.89%, Gap=3.12%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1090 | LR: 2.47e-04 | GradNorm: 2.817
  Batch    4/48 | Loss: 3.0918 | LR: 2.44e-04 | GradNorm: 3.675
  Batch    8/48 | Loss: 3.0583 | LR: 2.40e-04 | GradNorm: 3.181
  Batch   12/48 | Loss: 3.0573 | LR: 2.37e-04 | GradNorm: 2.453
  Batch   16/48 | Loss: 3.0890 | LR: 2.33e-04 | GradNorm: 1.688
  Batch   20/48 | Loss: 3.0354 | LR: 2.29e-04 | GradNorm: 3.004
  Batch   24/48 | Loss: 3.0304 | LR: 2.25e-04 | GradNorm: 2.444
  Batch   28/48 | Loss: 3.0153 | LR: 2.21e-04 | GradNorm: 6.871
  Batch   32/48 | Loss: 2.9526 | LR: 2.17e-04 | GradNorm: 3.368
  Batch   36/48 | Loss: 3.0703 | LR: 2.13e-04 | GradNorm: 8.669
  Batch   40/48 | Loss: 3.0813 | LR: 2.09e-04 | GradNorm: 5.781
  Batch   44/48 | Loss: 3.0411 | LR: 2.04e-04 | GradNorm: 9.080
Epoch 5/10: Train=23.65%, Val=14.26%, Gap=9.39%, LR=2.01e-04
  Batch    0/48 | Loss: 2.9033 | LR: 2.00e-04 | GradNorm: 3.734
  Batch    4/48 | Loss: 2.8914 | LR: 1.96e-04 | GradNorm: 3.986
  Batch    8/48 | Loss: 2.9197 | LR: 1.91e-04 | GradNorm: 6.888
  Batch   12/48 | Loss: 2.9177 | LR: 1.87e-04 | GradNorm: 6.050
  Batch   16/48 | Loss: 2.8832 | LR: 1.82e-04 | GradNorm: 4.644
  Batch   20/48 | Loss: 2.8764 | LR: 1.77e-04 | GradNorm: 5.822
  Batch   24/48 | Loss: 2.8823 | LR: 1.73e-04 | GradNorm: 6.498
  Batch   28/48 | Loss: 2.8244 | LR: 1.68e-04 | GradNorm: 4.082
  Batch   32/48 | Loss: 2.8247 | LR: 1.63e-04 | GradNorm: 3.310
  Batch   36/48 | Loss: 2.8630 | LR: 1.59e-04 | GradNorm: 4.135
  Batch   40/48 | Loss: 2.9418 | LR: 1.54e-04 | GradNorm: 10.028
  Batch   44/48 | Loss: 2.9146 | LR: 1.49e-04 | GradNorm: 5.321
Epoch 6/10: Train=27.94%, Val=16.44%, Gap=11.50%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8485 | LR: 1.44e-04 | GradNorm: 4.940
  Batch    4/48 | Loss: 2.8593 | LR: 1.40e-04 | GradNorm: 7.688
  Batch    8/48 | Loss: 2.8251 | LR: 1.35e-04 | GradNorm: 4.255
  Batch   12/48 | Loss: 2.7595 | LR: 1.30e-04 | GradNorm: 5.186
  Batch   16/48 | Loss: 2.7830 | LR: 1.25e-04 | GradNorm: 5.549
  Batch   20/48 | Loss: 2.8103 | LR: 1.21e-04 | GradNorm: 5.388
  Batch   24/48 | Loss: 2.8270 | LR: 1.16e-04 | GradNorm: 3.848
  Batch   28/48 | Loss: 2.8290 | LR: 1.11e-04 | GradNorm: 4.419
  Batch   32/48 | Loss: 2.8060 | LR: 1.07e-04 | GradNorm: 5.596
  Batch   36/48 | Loss: 2.8440 | LR: 1.02e-04 | GradNorm: 6.939
  Batch   40/48 | Loss: 2.7566 | LR: 9.76e-05 | GradNorm: 3.542
  Batch   44/48 | Loss: 2.7560 | LR: 9.31e-05 | GradNorm: 2.923
Epoch 7/10: Train=30.87%, Val=20.13%, Gap=10.74%, LR=8.98e-05
  Batch    0/48 | Loss: 2.7380 | LR: 8.87e-05 | GradNorm: 3.355
  Batch    4/48 | Loss: 2.7012 | LR: 8.44e-05 | GradNorm: 3.856
  Batch    8/48 | Loss: 2.6925 | LR: 8.01e-05 | GradNorm: 3.370
  Batch   12/48 | Loss: 2.7394 | LR: 7.59e-05 | GradNorm: 6.884
  Batch   16/48 | Loss: 2.7566 | LR: 7.17e-05 | GradNorm: 3.946
  Batch   20/48 | Loss: 2.6618 | LR: 6.77e-05 | GradNorm: 4.599
  Batch   24/48 | Loss: 2.6721 | LR: 6.37e-05 | GradNorm: 6.166
  Batch   28/48 | Loss: 2.7000 | LR: 5.98e-05 | GradNorm: 3.753
  Batch   32/48 | Loss: 2.6871 | LR: 5.60e-05 | GradNorm: 4.347
  Batch   36/48 | Loss: 2.6734 | LR: 5.23e-05 | GradNorm: 4.532
  Batch   40/48 | Loss: 2.6182 | LR: 4.87e-05 | GradNorm: 6.112
  Batch   44/48 | Loss: 2.6692 | LR: 4.52e-05 | GradNorm: 3.109
Epoch 8/10: Train=33.83%, Val=23.21%, Gap=10.62%, LR=4.27e-05
  Batch    0/48 | Loss: 2.6344 | LR: 4.18e-05 | GradNorm: 3.091
  Batch    4/48 | Loss: 2.6257 | LR: 3.86e-05 | GradNorm: 3.193
  Batch    8/48 | Loss: 2.6952 | LR: 3.54e-05 | GradNorm: 2.099
  Batch   12/48 | Loss: 2.6376 | LR: 3.23e-05 | GradNorm: 3.600
  Batch   16/48 | Loss: 2.5796 | LR: 2.94e-05 | GradNorm: 4.491
  Batch   20/48 | Loss: 2.5994 | LR: 2.66e-05 | GradNorm: 7.494
  Batch   24/48 | Loss: 2.6447 | LR: 2.39e-05 | GradNorm: 6.678
  Batch   28/48 | Loss: 2.6442 | LR: 2.14e-05 | GradNorm: 9.050
  Batch   32/48 | Loss: 2.6137 | LR: 1.90e-05 | GradNorm: 8.044
  Batch   36/48 | Loss: 2.6136 | LR: 1.67e-05 | GradNorm: 4.856
  Batch   40/48 | Loss: 2.6301 | LR: 1.46e-05 | GradNorm: 7.168
  Batch   44/48 | Loss: 2.6335 | LR: 1.26e-05 | GradNorm: 4.364
Epoch 9/10: Train=36.07%, Val=22.32%, Gap=13.75%, LR=1.12e-05
  Batch    0/48 | Loss: 2.6074 | LR: 1.07e-05 | GradNorm: 3.738
  Batch    4/48 | Loss: 2.6049 | LR: 9.00e-06 | GradNorm: 2.234
  Batch    8/48 | Loss: 2.5962 | LR: 7.44e-06 | GradNorm: 3.250
  Batch   12/48 | Loss: 2.5952 | LR: 6.02e-06 | GradNorm: 4.083
  Batch   16/48 | Loss: 2.5864 | LR: 4.75e-06 | GradNorm: 4.021
  Batch   20/48 | Loss: 2.6086 | LR: 3.63e-06 | GradNorm: 2.434
  Batch   24/48 | Loss: 2.6045 | LR: 2.67e-06 | GradNorm: 2.183
  Batch   28/48 | Loss: 2.6301 | LR: 1.85e-06 | GradNorm: 3.210
  Batch   32/48 | Loss: 2.6277 | LR: 1.19e-06 | GradNorm: 3.037
  Batch   36/48 | Loss: 2.5917 | LR: 6.88e-07 | GradNorm: 2.664
  Batch   40/48 | Loss: 2.5894 | LR: 3.38e-07 | GradNorm: 2.376
  Batch   44/48 | Loss: 2.5851 | LR: 1.44e-07 | GradNorm: 1.856
Epoch 10/10: Train=37.16%, Val=23.27%, Gap=13.89%, LR=1.00e-07
Best validation accuracy: 23.27%
