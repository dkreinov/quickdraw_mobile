=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004468204710297642
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9585 | LR: 9.08e-06 | GradNorm: 1.691
  Batch    4/48 | Loss: 3.9235 | LR: 2.75e-05 | GradNorm: 1.101
  Batch    8/48 | Loss: 3.9223 | LR: 4.59e-05 | GradNorm: 0.923
  Batch   12/48 | Loss: 3.9096 | LR: 6.44e-05 | GradNorm: 0.629
  Batch   16/48 | Loss: 3.9161 | LR: 8.28e-05 | GradNorm: 0.590
  Batch   20/48 | Loss: 3.9176 | LR: 1.01e-04 | GradNorm: 0.668
  Batch   24/48 | Loss: 3.9164 | LR: 1.20e-04 | GradNorm: 0.647
  Batch   28/48 | Loss: 3.9119 | LR: 1.38e-04 | GradNorm: 0.538
  Batch   32/48 | Loss: 3.9039 | LR: 1.57e-04 | GradNorm: 0.530
  Batch   36/48 | Loss: 3.8880 | LR: 1.75e-04 | GradNorm: 0.649
  Batch   40/48 | Loss: 3.8534 | LR: 1.93e-04 | GradNorm: 2.696
  Batch   44/48 | Loss: 3.8045 | LR: 2.12e-04 | GradNorm: 3.361
Epoch 1/10: Train=2.86%, Val=4.16%, Gap=-1.30%, LR=2.26e-04
  Batch    0/48 | Loss: 3.7772 | LR: 2.30e-04 | GradNorm: 6.676
  Batch    4/48 | Loss: 3.7971 | LR: 2.49e-04 | GradNorm: 8.290
  Batch    8/48 | Loss: 3.7376 | LR: 2.67e-04 | GradNorm: 2.684
  Batch   12/48 | Loss: 3.7040 | LR: 2.86e-04 | GradNorm: 4.816
  Batch   16/48 | Loss: 3.7267 | LR: 3.04e-04 | GradNorm: 3.894
  Batch   20/48 | Loss: 3.8624 | LR: 3.22e-04 | GradNorm: 10.822
  Batch   24/48 | Loss: 3.7832 | LR: 3.41e-04 | GradNorm: 8.028
  Batch   28/48 | Loss: 3.8011 | LR: 3.59e-04 | GradNorm: 4.524
  Batch   32/48 | Loss: 3.7344 | LR: 3.78e-04 | GradNorm: 6.409
  Batch   36/48 | Loss: 3.7398 | LR: 3.96e-04 | GradNorm: 7.022
  Batch   40/48 | Loss: 3.6820 | LR: 4.15e-04 | GradNorm: 5.718
  Batch   44/48 | Loss: 3.5917 | LR: 4.33e-04 | GradNorm: 0.982
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.41%, Val=6.10%, Gap=0.31%, LR=4.47e-04
  Batch    0/48 | Loss: 3.6001 | LR: 4.47e-04 | GradNorm: 0.885
  Batch    4/48 | Loss: 3.6420 | LR: 4.47e-04 | GradNorm: 7.147
  Batch    8/48 | Loss: 3.6296 | LR: 4.46e-04 | GradNorm: 7.365
  Batch   12/48 | Loss: 3.6201 | LR: 4.46e-04 | GradNorm: 4.847
  Batch   16/48 | Loss: 3.5609 | LR: 4.45e-04 | GradNorm: 1.758
  Batch   20/48 | Loss: 3.5990 | LR: 4.44e-04 | GradNorm: 6.806
  Batch   24/48 | Loss: 3.4805 | LR: 4.42e-04 | GradNorm: 0.864
  Batch   28/48 | Loss: 3.5303 | LR: 4.41e-04 | GradNorm: 6.870
  Batch   32/48 | Loss: 3.7267 | LR: 4.39e-04 | GradNorm: 15.054
  Batch   36/48 | Loss: 3.7449 | LR: 4.37e-04 | GradNorm: 7.526
  Batch   40/48 | Loss: 3.4951 | LR: 4.34e-04 | GradNorm: 4.370
  Batch   44/48 | Loss: 3.4191 | LR: 4.32e-04 | GradNorm: 2.343
Epoch 3/10: Train=9.79%, Val=5.80%, Gap=3.99%, LR=4.30e-04
  Batch    0/48 | Loss: 3.4277 | LR: 4.29e-04 | GradNorm: 4.512
  Batch    4/48 | Loss: 3.3630 | LR: 4.26e-04 | GradNorm: 1.202
  Batch    8/48 | Loss: 3.3351 | LR: 4.23e-04 | GradNorm: 1.890
  Batch   12/48 | Loss: 3.2826 | LR: 4.20e-04 | GradNorm: 2.078
  Batch   16/48 | Loss: 3.2877 | LR: 4.16e-04 | GradNorm: 2.010
  Batch   20/48 | Loss: 3.2623 | LR: 4.12e-04 | GradNorm: 3.782
  Batch   24/48 | Loss: 3.2921 | LR: 4.08e-04 | GradNorm: 3.881
  Batch   28/48 | Loss: 3.2523 | LR: 4.04e-04 | GradNorm: 4.439
  Batch   32/48 | Loss: 3.3219 | LR: 4.00e-04 | GradNorm: 5.201
  Batch   36/48 | Loss: 3.2968 | LR: 3.95e-04 | GradNorm: 4.653
  Batch   40/48 | Loss: 3.2591 | LR: 3.90e-04 | GradNorm: 2.968
  Batch   44/48 | Loss: 3.2593 | LR: 3.85e-04 | GradNorm: 6.288
Epoch 4/10: Train=15.80%, Val=12.95%, Gap=2.85%, LR=3.81e-04
  Batch    0/48 | Loss: 3.1642 | LR: 3.80e-04 | GradNorm: 2.323
  Batch    4/48 | Loss: 3.1534 | LR: 3.75e-04 | GradNorm: 3.769
  Batch    8/48 | Loss: 3.1167 | LR: 3.69e-04 | GradNorm: 1.413
  Batch   12/48 | Loss: 3.1092 | LR: 3.64e-04 | GradNorm: 3.163
  Batch   16/48 | Loss: 3.1566 | LR: 3.58e-04 | GradNorm: 3.628
  Batch   20/48 | Loss: 3.1039 | LR: 3.52e-04 | GradNorm: 1.933
  Batch   24/48 | Loss: 3.1443 | LR: 3.46e-04 | GradNorm: 3.542
  Batch   28/48 | Loss: 3.0567 | LR: 3.40e-04 | GradNorm: 2.190
  Batch   32/48 | Loss: 3.0973 | LR: 3.34e-04 | GradNorm: 4.631
  Batch   36/48 | Loss: 3.1090 | LR: 3.27e-04 | GradNorm: 2.367
  Batch   40/48 | Loss: 3.1055 | LR: 3.21e-04 | GradNorm: 2.258
  Batch   44/48 | Loss: 3.0924 | LR: 3.14e-04 | GradNorm: 6.738
Epoch 5/10: Train=21.30%, Val=16.32%, Gap=4.98%, LR=3.09e-04
  Batch    0/48 | Loss: 3.0137 | LR: 3.07e-04 | GradNorm: 4.708
  Batch    4/48 | Loss: 2.9438 | LR: 3.00e-04 | GradNorm: 1.596
  Batch    8/48 | Loss: 2.9584 | LR: 2.94e-04 | GradNorm: 2.691
  Batch   12/48 | Loss: 2.9581 | LR: 2.87e-04 | GradNorm: 2.014
  Batch   16/48 | Loss: 2.8989 | LR: 2.80e-04 | GradNorm: 2.987
  Batch   20/48 | Loss: 2.9242 | LR: 2.72e-04 | GradNorm: 3.382
  Batch   24/48 | Loss: 2.8908 | LR: 2.65e-04 | GradNorm: 2.728
  Batch   28/48 | Loss: 2.8930 | LR: 2.58e-04 | GradNorm: 6.125
  Batch   32/48 | Loss: 2.8884 | LR: 2.51e-04 | GradNorm: 4.962
  Batch   36/48 | Loss: 2.8643 | LR: 2.44e-04 | GradNorm: 2.239
  Batch   40/48 | Loss: 2.8884 | LR: 2.36e-04 | GradNorm: 5.495
  Batch   44/48 | Loss: 2.8895 | LR: 2.29e-04 | GradNorm: 2.573
Epoch 6/10: Train=27.27%, Val=15.98%, Gap=11.29%, LR=2.23e-04
  Batch    0/48 | Loss: 2.8451 | LR: 2.22e-04 | GradNorm: 6.032
  Batch    4/48 | Loss: 2.8130 | LR: 2.14e-04 | GradNorm: 3.231
  Batch    8/48 | Loss: 2.8191 | LR: 2.07e-04 | GradNorm: 3.541
  Batch   12/48 | Loss: 2.7841 | LR: 2.00e-04 | GradNorm: 7.462
  Batch   16/48 | Loss: 2.7793 | LR: 1.92e-04 | GradNorm: 5.286
  Batch   20/48 | Loss: 2.8067 | LR: 1.85e-04 | GradNorm: 4.310
  Batch   24/48 | Loss: 2.8115 | LR: 1.78e-04 | GradNorm: 3.858
  Batch   28/48 | Loss: 2.7868 | LR: 1.71e-04 | GradNorm: 3.000
  Batch   32/48 | Loss: 2.8115 | LR: 1.64e-04 | GradNorm: 5.392
  Batch   36/48 | Loss: 2.8209 | LR: 1.57e-04 | GradNorm: 4.603
  Batch   40/48 | Loss: 2.7696 | LR: 1.50e-04 | GradNorm: 3.459
  Batch   44/48 | Loss: 2.7617 | LR: 1.43e-04 | GradNorm: 4.426
Epoch 7/10: Train=31.68%, Val=16.37%, Gap=15.31%, LR=1.38e-04
  Batch    0/48 | Loss: 2.7929 | LR: 1.36e-04 | GradNorm: 6.386
  Batch    4/48 | Loss: 2.6956 | LR: 1.30e-04 | GradNorm: 4.221
  Batch    8/48 | Loss: 2.6889 | LR: 1.23e-04 | GradNorm: 2.740
  Batch   12/48 | Loss: 2.7462 | LR: 1.17e-04 | GradNorm: 4.027
  Batch   16/48 | Loss: 2.7408 | LR: 1.10e-04 | GradNorm: 2.227
  Batch   20/48 | Loss: 2.6650 | LR: 1.04e-04 | GradNorm: 4.078
  Batch   24/48 | Loss: 2.6781 | LR: 9.79e-05 | GradNorm: 3.073
  Batch   28/48 | Loss: 2.7006 | LR: 9.19e-05 | GradNorm: 4.562
  Batch   32/48 | Loss: 2.6890 | LR: 8.60e-05 | GradNorm: 3.433
  Batch   36/48 | Loss: 2.6760 | LR: 8.04e-05 | GradNorm: 4.045
  Batch   40/48 | Loss: 2.6162 | LR: 7.48e-05 | GradNorm: 4.344
  Batch   44/48 | Loss: 2.6790 | LR: 6.94e-05 | GradNorm: 2.288
Epoch 8/10: Train=34.10%, Val=16.32%, Gap=17.78%, LR=6.55e-05
  Batch    0/48 | Loss: 2.6442 | LR: 6.42e-05 | GradNorm: 3.451
  Batch    4/48 | Loss: 2.6316 | LR: 5.92e-05 | GradNorm: 2.002
  Batch    8/48 | Loss: 2.6679 | LR: 5.43e-05 | GradNorm: 3.214
  Batch   12/48 | Loss: 2.6145 | LR: 4.96e-05 | GradNorm: 2.297
  Batch   16/48 | Loss: 2.5664 | LR: 4.52e-05 | GradNorm: 3.535
  Batch   20/48 | Loss: 2.5696 | LR: 4.08e-05 | GradNorm: 3.104
  Batch   24/48 | Loss: 2.6100 | LR: 3.67e-05 | GradNorm: 2.987
  Batch   28/48 | Loss: 2.6119 | LR: 3.28e-05 | GradNorm: 3.042
  Batch   32/48 | Loss: 2.5782 | LR: 2.91e-05 | GradNorm: 2.723
  Batch   36/48 | Loss: 2.5807 | LR: 2.56e-05 | GradNorm: 1.481
  Batch   40/48 | Loss: 2.5600 | LR: 2.23e-05 | GradNorm: 2.883
  Batch   44/48 | Loss: 2.6092 | LR: 1.93e-05 | GradNorm: 3.617
Epoch 9/10: Train=37.07%, Val=19.19%, Gap=17.88%, LR=1.71e-05
  Batch    0/48 | Loss: 2.5823 | LR: 1.64e-05 | GradNorm: 3.079
  Batch    4/48 | Loss: 2.5787 | LR: 1.38e-05 | GradNorm: 2.066
  Batch    8/48 | Loss: 2.5467 | LR: 1.14e-05 | GradNorm: 1.727
  Batch   12/48 | Loss: 2.5522 | LR: 9.19e-06 | GradNorm: 3.058
  Batch   16/48 | Loss: 2.5648 | LR: 7.25e-06 | GradNorm: 2.403
  Batch   20/48 | Loss: 2.5702 | LR: 5.53e-06 | GradNorm: 2.818
  Batch   24/48 | Loss: 2.5770 | LR: 4.04e-06 | GradNorm: 3.726
  Batch   28/48 | Loss: 2.6027 | LR: 2.79e-06 | GradNorm: 1.872
  Batch   32/48 | Loss: 2.5982 | LR: 1.78e-06 | GradNorm: 2.987
  Batch   36/48 | Loss: 2.5776 | LR: 1.00e-06 | GradNorm: 1.873
  Batch   40/48 | Loss: 2.5514 | LR: 4.66e-07 | GradNorm: 2.510
  Batch   44/48 | Loss: 2.5721 | LR: 1.67e-07 | GradNorm: 2.143
Epoch 10/10: Train=38.21%, Val=19.03%, Gap=19.18%, LR=1.00e-07
Best validation accuracy: 19.19%
