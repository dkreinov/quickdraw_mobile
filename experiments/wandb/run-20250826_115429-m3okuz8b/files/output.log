=== W&B Sweep Run: LR=0.007571 ===
Using device: cuda
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.47s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.007570954267993541
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.007571
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9533 | LR: 1.54e-04 | GradNorm: 1.779
  Batch    4/48 | Loss: 3.9213 | LR: 4.66e-04 | GradNorm: 0.512
  Batch    8/48 | Loss: 3.9287 | LR: 7.78e-04 | GradNorm: 0.527
  Batch   12/48 | Loss: 3.9184 | LR: 1.09e-03 | GradNorm: 0.488
  Batch   16/48 | Loss: 3.9131 | LR: 1.40e-03 | GradNorm: 0.497
  Batch   20/48 | Loss: 3.9987 | LR: 1.72e-03 | GradNorm: 1.302
  Batch   24/48 | Loss: 3.9007 | LR: 2.03e-03 | GradNorm: 2.988
  Batch   28/48 | Loss: 3.8770 | LR: 2.34e-03 | GradNorm: 0.409
  Batch   32/48 | Loss: 3.8903 | LR: 2.65e-03 | GradNorm: 0.571
  Batch   36/48 | Loss: 3.8863 | LR: 2.96e-03 | GradNorm: 0.557
  Batch   40/48 | Loss: 3.8712 | LR: 3.28e-03 | GradNorm: 0.468
  Batch   44/48 | Loss: 3.8905 | LR: 3.59e-03 | GradNorm: 0.489
Epoch 1/10: Train=2.75%, Val=2.84%, Gap=-0.09%, LR=3.82e-03
  Batch    0/48 | Loss: 3.8846 | LR: 3.90e-03 | GradNorm: 0.582
  Batch    4/48 | Loss: 3.8728 | LR: 4.21e-03 | GradNorm: 0.367
  Batch    8/48 | Loss: 3.8831 | LR: 4.53e-03 | GradNorm: 0.544
  Batch   12/48 | Loss: 3.8522 | LR: 4.84e-03 | GradNorm: 0.521
  Batch   16/48 | Loss: 3.8671 | LR: 5.15e-03 | GradNorm: 0.429
  Batch   20/48 | Loss: 3.8704 | LR: 5.46e-03 | GradNorm: 0.574
  Batch   24/48 | Loss: 3.8696 | LR: 5.78e-03 | GradNorm: 0.694
  Batch   28/48 | Loss: 3.8588 | LR: 6.09e-03 | GradNorm: 0.484
  Batch   32/48 | Loss: 3.8703 | LR: 6.40e-03 | GradNorm: 0.541
  Batch   36/48 | Loss: 3.8737 | LR: 6.71e-03 | GradNorm: 0.601
  Batch   40/48 | Loss: 3.8839 | LR: 7.02e-03 | GradNorm: 0.628
  Batch   44/48 | Loss: 3.8663 | LR: 7.34e-03 | GradNorm: 0.529
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=3.33%, Val=3.74%, Gap=-0.41%, LR=7.57e-03
  Batch    0/48 | Loss: 3.8563 | LR: 7.57e-03 | GradNorm: 0.485
  Batch    4/48 | Loss: 3.8649 | LR: 7.57e-03 | GradNorm: 0.458
  Batch    8/48 | Loss: 3.8806 | LR: 7.56e-03 | GradNorm: 0.911
  Batch   12/48 | Loss: 3.8495 | LR: 7.55e-03 | GradNorm: 0.392
  Batch   16/48 | Loss: 3.9087 | LR: 7.53e-03 | GradNorm: 0.717
  Batch   20/48 | Loss: 3.9089 | LR: 7.52e-03 | GradNorm: 0.410
  Batch   24/48 | Loss: 3.8872 | LR: 7.49e-03 | GradNorm: 0.514
  Batch   28/48 | Loss: 3.8703 | LR: 7.46e-03 | GradNorm: 0.412
  Batch   32/48 | Loss: 3.8699 | LR: 7.43e-03 | GradNorm: 0.299
  Batch   36/48 | Loss: 3.8813 | LR: 7.40e-03 | GradNorm: 0.283
  Batch   40/48 | Loss: 3.8598 | LR: 7.36e-03 | GradNorm: 0.273
  Batch   44/48 | Loss: 3.8500 | LR: 7.32e-03 | GradNorm: 0.380
Epoch 3/10: Train=3.77%, Val=4.75%, Gap=-0.98%, LR=7.28e-03
  Batch    0/48 | Loss: 3.8405 | LR: 7.27e-03 | GradNorm: 0.268
  Batch    4/48 | Loss: 3.8174 | LR: 7.22e-03 | GradNorm: 0.407
  Batch    8/48 | Loss: 3.8562 | LR: 7.17e-03 | GradNorm: 0.291
  Batch   12/48 | Loss: 3.8736 | LR: 7.11e-03 | GradNorm: 0.254
  Batch   16/48 | Loss: 3.8372 | LR: 7.05e-03 | GradNorm: 0.183
  Batch   20/48 | Loss: 3.8525 | LR: 6.98e-03 | GradNorm: 0.199
  Batch   24/48 | Loss: 3.8274 | LR: 6.92e-03 | GradNorm: 0.184
  Batch   28/48 | Loss: 3.8354 | LR: 6.84e-03 | GradNorm: 0.169
  Batch   32/48 | Loss: 3.8436 | LR: 6.77e-03 | GradNorm: 0.216
  Batch   36/48 | Loss: 3.8265 | LR: 6.69e-03 | GradNorm: 0.152
  Batch   40/48 | Loss: 3.8198 | LR: 6.61e-03 | GradNorm: 0.138
  Batch   44/48 | Loss: 3.8237 | LR: 6.53e-03 | GradNorm: 0.173
Epoch 4/10: Train=4.03%, Val=4.43%, Gap=-0.40%, LR=6.46e-03
  Batch    0/48 | Loss: 3.8187 | LR: 6.44e-03 | GradNorm: 0.137
  Batch    4/48 | Loss: 3.7926 | LR: 6.35e-03 | GradNorm: 0.203
  Batch    8/48 | Loss: 3.8136 | LR: 6.26e-03 | GradNorm: 0.259
  Batch   12/48 | Loss: 3.7873 | LR: 6.16e-03 | GradNorm: 0.156
  Batch   16/48 | Loss: 3.8150 | LR: 6.07e-03 | GradNorm: 0.321
  Batch   20/48 | Loss: 3.8085 | LR: 5.97e-03 | GradNorm: 0.176
  Batch   24/48 | Loss: 3.7926 | LR: 5.86e-03 | GradNorm: 0.518
  Batch   28/48 | Loss: 3.8921 | LR: 5.76e-03 | GradNorm: 0.633
  Batch   32/48 | Loss: 3.8543 | LR: 5.65e-03 | GradNorm: 0.285
  Batch   36/48 | Loss: 3.8442 | LR: 5.54e-03 | GradNorm: 0.231
  Batch   40/48 | Loss: 3.8422 | LR: 5.43e-03 | GradNorm: 0.151
  Batch   44/48 | Loss: 3.8370 | LR: 5.32e-03 | GradNorm: 0.250
Epoch 5/10: Train=4.41%, Val=5.28%, Gap=-0.87%, LR=5.23e-03
  Batch    0/48 | Loss: 3.8151 | LR: 5.21e-03 | GradNorm: 0.153
  Batch    4/48 | Loss: 3.8281 | LR: 5.09e-03 | GradNorm: 0.306
  Batch    8/48 | Loss: 3.8060 | LR: 4.97e-03 | GradNorm: 1.332
  Batch   12/48 | Loss: 3.8538 | LR: 4.85e-03 | GradNorm: 0.843
  Batch   16/48 | Loss: 3.8684 | LR: 4.74e-03 | GradNorm: 0.292
  Batch   20/48 | Loss: 3.8559 | LR: 4.61e-03 | GradNorm: 0.121
  Batch   24/48 | Loss: 3.8390 | LR: 4.49e-03 | GradNorm: 0.115
  Batch   28/48 | Loss: 3.8502 | LR: 4.37e-03 | GradNorm: 0.096
  Batch   32/48 | Loss: 3.8411 | LR: 4.25e-03 | GradNorm: 0.093
  Batch   36/48 | Loss: 3.8415 | LR: 4.13e-03 | GradNorm: 0.137
  Batch   40/48 | Loss: 3.8439 | LR: 4.00e-03 | GradNorm: 0.102
  Batch   44/48 | Loss: 3.8374 | LR: 3.88e-03 | GradNorm: 0.092
Epoch 6/10: Train=4.03%, Val=4.41%, Gap=-0.38%, LR=3.79e-03
  Batch    0/48 | Loss: 3.8199 | LR: 3.75e-03 | GradNorm: 0.171
  Batch    4/48 | Loss: 3.8558 | LR: 3.63e-03 | GradNorm: 0.210
  Batch    8/48 | Loss: 3.8184 | LR: 3.51e-03 | GradNorm: 0.135
  Batch   12/48 | Loss: 3.8387 | LR: 3.38e-03 | GradNorm: 0.171
  Batch   16/48 | Loss: 3.8045 | LR: 3.26e-03 | GradNorm: 0.135
  Batch   20/48 | Loss: 3.8298 | LR: 3.14e-03 | GradNorm: 0.233
  Batch   24/48 | Loss: 3.8002 | LR: 3.02e-03 | GradNorm: 0.143
  Batch   28/48 | Loss: 3.7625 | LR: 2.90e-03 | GradNorm: 0.177
  Batch   32/48 | Loss: 3.8076 | LR: 2.78e-03 | GradNorm: 0.312
  Batch   36/48 | Loss: 3.7862 | LR: 2.66e-03 | GradNorm: 0.137
  Batch   40/48 | Loss: 3.7672 | LR: 2.54e-03 | GradNorm: 0.146
  Batch   44/48 | Loss: 3.7470 | LR: 2.42e-03 | GradNorm: 0.445
Epoch 7/10: Train=4.90%, Val=4.83%, Gap=0.07%, LR=2.34e-03
  Batch    0/48 | Loss: 3.8295 | LR: 2.31e-03 | GradNorm: 0.265
  Batch    4/48 | Loss: 3.8046 | LR: 2.20e-03 | GradNorm: 0.115
  Batch    8/48 | Loss: 3.8277 | LR: 2.08e-03 | GradNorm: 0.139
  Batch   12/48 | Loss: 3.8142 | LR: 1.97e-03 | GradNorm: 0.117
  Batch   16/48 | Loss: 3.8325 | LR: 1.87e-03 | GradNorm: 0.114
  Batch   20/48 | Loss: 3.7955 | LR: 1.76e-03 | GradNorm: 0.118
  Batch   24/48 | Loss: 3.8056 | LR: 1.66e-03 | GradNorm: 0.121
  Batch   28/48 | Loss: 3.7798 | LR: 1.56e-03 | GradNorm: 0.206
  Batch   32/48 | Loss: 3.7795 | LR: 1.46e-03 | GradNorm: 0.150
  Batch   36/48 | Loss: 3.7904 | LR: 1.36e-03 | GradNorm: 0.141
  Batch   40/48 | Loss: 3.7608 | LR: 1.27e-03 | GradNorm: 0.183
  Batch   44/48 | Loss: 3.7890 | LR: 1.18e-03 | GradNorm: 0.115
Epoch 8/10: Train=4.39%, Val=4.40%, Gap=-0.01%, LR=1.11e-03
  Batch    0/48 | Loss: 3.7738 | LR: 1.09e-03 | GradNorm: 0.134
  Batch    4/48 | Loss: 3.7875 | LR: 1.00e-03 | GradNorm: 0.254
  Batch    8/48 | Loss: 3.7933 | LR: 9.19e-04 | GradNorm: 0.230
  Batch   12/48 | Loss: 3.7831 | LR: 8.40e-04 | GradNorm: 0.281
  Batch   16/48 | Loss: 3.7699 | LR: 7.64e-04 | GradNorm: 0.124
  Batch   20/48 | Loss: 3.7728 | LR: 6.91e-04 | GradNorm: 0.190
  Batch   24/48 | Loss: 3.7629 | LR: 6.21e-04 | GradNorm: 0.108
  Batch   28/48 | Loss: 3.7655 | LR: 5.55e-04 | GradNorm: 0.112
  Batch   32/48 | Loss: 3.7587 | LR: 4.92e-04 | GradNorm: 0.155
  Batch   36/48 | Loss: 3.7488 | LR: 4.33e-04 | GradNorm: 0.096
  Batch   40/48 | Loss: 3.7156 | LR: 3.77e-04 | GradNorm: 0.204
  Batch   44/48 | Loss: 3.7552 | LR: 3.25e-04 | GradNorm: 0.133
Epoch 9/10: Train=5.02%, Val=4.26%, Gap=0.76%, LR=2.88e-04
  Batch    0/48 | Loss: 3.7494 | LR: 2.77e-04 | GradNorm: 0.144
  Batch    4/48 | Loss: 3.7593 | LR: 2.32e-04 | GradNorm: 0.111
  Batch    8/48 | Loss: 3.7603 | LR: 1.91e-04 | GradNorm: 0.189
  Batch   12/48 | Loss: 3.7539 | LR: 1.54e-04 | GradNorm: 0.115
  Batch   16/48 | Loss: 3.7540 | LR: 1.21e-04 | GradNorm: 0.167
  Batch   20/48 | Loss: 3.7463 | LR: 9.21e-05 | GradNorm: 0.186
  Batch   24/48 | Loss: 3.7536 | LR: 6.69e-05 | GradNorm: 0.117
  Batch   28/48 | Loss: 3.7608 | LR: 4.57e-05 | GradNorm: 0.140
  Batch   32/48 | Loss: 3.7786 | LR: 2.86e-05 | GradNorm: 0.140
  Batch   36/48 | Loss: 3.7856 | LR: 1.54e-05 | GradNorm: 0.109
  Batch   40/48 | Loss: 3.7446 | LR: 6.31e-06 | GradNorm: 0.219
  Batch   44/48 | Loss: 3.7587 | LR: 1.24e-06 | GradNorm: 0.186
Epoch 10/10: Train=5.38%, Val=4.56%, Gap=0.82%, LR=1.00e-07
Best validation accuracy: 5.28%
