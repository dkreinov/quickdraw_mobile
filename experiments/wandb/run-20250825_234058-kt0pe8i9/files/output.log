=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004453132002207505
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9504 | LR: 9.05e-06 | GradNorm: 1.680
  Batch    4/48 | Loss: 3.9197 | LR: 2.74e-05 | GradNorm: 0.838
  Batch    8/48 | Loss: 3.9232 | LR: 4.58e-05 | GradNorm: 0.924
  Batch   12/48 | Loss: 3.9132 | LR: 6.42e-05 | GradNorm: 0.666
  Batch   16/48 | Loss: 3.9202 | LR: 8.25e-05 | GradNorm: 0.623
  Batch   20/48 | Loss: 3.9111 | LR: 1.01e-04 | GradNorm: 0.569
  Batch   24/48 | Loss: 3.9103 | LR: 1.19e-04 | GradNorm: 0.584
  Batch   28/48 | Loss: 3.9158 | LR: 1.38e-04 | GradNorm: 0.569
  Batch   32/48 | Loss: 3.9055 | LR: 1.56e-04 | GradNorm: 0.514
  Batch   36/48 | Loss: 3.8974 | LR: 1.74e-04 | GradNorm: 0.543
  Batch   40/48 | Loss: 3.8564 | LR: 1.93e-04 | GradNorm: 0.777
  Batch   44/48 | Loss: 3.9532 | LR: 2.11e-04 | GradNorm: 6.502
Epoch 1/10: Train=2.69%, Val=5.01%, Gap=-2.32%, LR=2.25e-04
  Batch    0/48 | Loss: 3.8561 | LR: 2.29e-04 | GradNorm: 6.209
  Batch    4/48 | Loss: 3.8027 | LR: 2.48e-04 | GradNorm: 4.260
  Batch    8/48 | Loss: 3.7647 | LR: 2.66e-04 | GradNorm: 2.879
  Batch   12/48 | Loss: 3.7141 | LR: 2.85e-04 | GradNorm: 2.580
  Batch   16/48 | Loss: 3.7773 | LR: 3.03e-04 | GradNorm: 4.026
  Batch   20/48 | Loss: 3.6915 | LR: 3.21e-04 | GradNorm: 1.672
  Batch   24/48 | Loss: 3.7484 | LR: 3.40e-04 | GradNorm: 5.000
  Batch   28/48 | Loss: 3.6175 | LR: 3.58e-04 | GradNorm: 2.791
  Batch   32/48 | Loss: 3.6947 | LR: 3.76e-04 | GradNorm: 5.581
  Batch   36/48 | Loss: 3.5884 | LR: 3.95e-04 | GradNorm: 4.590
  Batch   40/48 | Loss: 3.5564 | LR: 4.13e-04 | GradNorm: 5.847
  Batch   44/48 | Loss: 3.5394 | LR: 4.32e-04 | GradNorm: 6.376
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.79%, Val=10.52%, Gap=-2.73%, LR=4.45e-04
  Batch    0/48 | Loss: 3.4043 | LR: 4.45e-04 | GradNorm: 1.901
  Batch    4/48 | Loss: 3.4622 | LR: 4.45e-04 | GradNorm: 4.319
  Batch    8/48 | Loss: 3.3868 | LR: 4.45e-04 | GradNorm: 3.626
  Batch   12/48 | Loss: 3.5700 | LR: 4.44e-04 | GradNorm: 6.665
  Batch   16/48 | Loss: 3.4684 | LR: 4.43e-04 | GradNorm: 4.779
  Batch   20/48 | Loss: 3.3832 | LR: 4.42e-04 | GradNorm: 4.145
  Batch   24/48 | Loss: 3.3370 | LR: 4.41e-04 | GradNorm: 4.090
  Batch   28/48 | Loss: 3.3094 | LR: 4.39e-04 | GradNorm: 3.542
  Batch   32/48 | Loss: 3.3215 | LR: 4.37e-04 | GradNorm: 2.710
  Batch   36/48 | Loss: 3.2748 | LR: 4.35e-04 | GradNorm: 2.282
  Batch   40/48 | Loss: 3.2316 | LR: 4.33e-04 | GradNorm: 1.778
  Batch   44/48 | Loss: 3.2922 | LR: 4.30e-04 | GradNorm: 4.532
Epoch 3/10: Train=14.40%, Val=16.18%, Gap=-1.78%, LR=4.28e-04
  Batch    0/48 | Loss: 3.2650 | LR: 4.28e-04 | GradNorm: 4.865
  Batch    4/48 | Loss: 3.2731 | LR: 4.25e-04 | GradNorm: 5.863
  Batch    8/48 | Loss: 3.2231 | LR: 4.22e-04 | GradNorm: 2.868
  Batch   12/48 | Loss: 3.1835 | LR: 4.18e-04 | GradNorm: 4.475
  Batch   16/48 | Loss: 3.1947 | LR: 4.15e-04 | GradNorm: 2.873
  Batch   20/48 | Loss: 3.1328 | LR: 4.11e-04 | GradNorm: 2.728
  Batch   24/48 | Loss: 3.2167 | LR: 4.07e-04 | GradNorm: 9.277
  Batch   28/48 | Loss: 3.2029 | LR: 4.03e-04 | GradNorm: 6.465
  Batch   32/48 | Loss: 3.1826 | LR: 3.98e-04 | GradNorm: 2.889
  Batch   36/48 | Loss: 3.1123 | LR: 3.94e-04 | GradNorm: 1.855
  Batch   40/48 | Loss: 3.1679 | LR: 3.89e-04 | GradNorm: 3.041
  Batch   44/48 | Loss: 3.2576 | LR: 3.84e-04 | GradNorm: 7.895
Epoch 4/10: Train=18.14%, Val=16.61%, Gap=1.53%, LR=3.80e-04
  Batch    0/48 | Loss: 3.1760 | LR: 3.79e-04 | GradNorm: 5.367
  Batch    4/48 | Loss: 3.0927 | LR: 3.74e-04 | GradNorm: 3.914
  Batch    8/48 | Loss: 3.0640 | LR: 3.68e-04 | GradNorm: 1.865
  Batch   12/48 | Loss: 3.0123 | LR: 3.63e-04 | GradNorm: 2.597
  Batch   16/48 | Loss: 3.1208 | LR: 3.57e-04 | GradNorm: 4.116
  Batch   20/48 | Loss: 3.0715 | LR: 3.51e-04 | GradNorm: 5.406
  Batch   24/48 | Loss: 3.0833 | LR: 3.45e-04 | GradNorm: 3.671
  Batch   28/48 | Loss: 3.0234 | LR: 3.39e-04 | GradNorm: 5.020
  Batch   32/48 | Loss: 2.9870 | LR: 3.32e-04 | GradNorm: 4.463
  Batch   36/48 | Loss: 3.0017 | LR: 3.26e-04 | GradNorm: 2.186
  Batch   40/48 | Loss: 3.0275 | LR: 3.20e-04 | GradNorm: 3.621
  Batch   44/48 | Loss: 2.9137 | LR: 3.13e-04 | GradNorm: 2.343
Epoch 5/10: Train=23.76%, Val=16.79%, Gap=6.97%, LR=3.08e-04
  Batch    0/48 | Loss: 2.8532 | LR: 3.06e-04 | GradNorm: 3.307
  Batch    4/48 | Loss: 2.7844 | LR: 2.99e-04 | GradNorm: 2.981
  Batch    8/48 | Loss: 2.8565 | LR: 2.93e-04 | GradNorm: 5.557
  Batch   12/48 | Loss: 2.8297 | LR: 2.86e-04 | GradNorm: 2.512
  Batch   16/48 | Loss: 2.7813 | LR: 2.79e-04 | GradNorm: 2.357
  Batch   20/48 | Loss: 2.7582 | LR: 2.71e-04 | GradNorm: 2.989
  Batch   24/48 | Loss: 2.8292 | LR: 2.64e-04 | GradNorm: 6.747
  Batch   28/48 | Loss: 2.7067 | LR: 2.57e-04 | GradNorm: 2.734
  Batch   32/48 | Loss: 2.7170 | LR: 2.50e-04 | GradNorm: 3.489
  Batch   36/48 | Loss: 2.7907 | LR: 2.43e-04 | GradNorm: 4.718
  Batch   40/48 | Loss: 2.7390 | LR: 2.35e-04 | GradNorm: 3.558
  Batch   44/48 | Loss: 2.7765 | LR: 2.28e-04 | GradNorm: 2.458
Epoch 6/10: Train=30.31%, Val=20.20%, Gap=10.11%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7103 | LR: 2.21e-04 | GradNorm: 2.286
  Batch    4/48 | Loss: 2.6955 | LR: 2.14e-04 | GradNorm: 2.990
  Batch    8/48 | Loss: 2.7042 | LR: 2.06e-04 | GradNorm: 3.861
  Batch   12/48 | Loss: 2.6171 | LR: 1.99e-04 | GradNorm: 3.016
  Batch   16/48 | Loss: 2.6526 | LR: 1.92e-04 | GradNorm: 3.324
  Batch   20/48 | Loss: 2.6684 | LR: 1.85e-04 | GradNorm: 3.150
  Batch   24/48 | Loss: 2.6939 | LR: 1.77e-04 | GradNorm: 2.870
  Batch   28/48 | Loss: 2.6957 | LR: 1.70e-04 | GradNorm: 2.929
  Batch   32/48 | Loss: 2.6593 | LR: 1.63e-04 | GradNorm: 2.886
  Batch   36/48 | Loss: 2.7303 | LR: 1.56e-04 | GradNorm: 7.317
  Batch   40/48 | Loss: 2.6593 | LR: 1.49e-04 | GradNorm: 5.932
  Batch   44/48 | Loss: 2.6191 | LR: 1.43e-04 | GradNorm: 3.660
Epoch 7/10: Train=34.76%, Val=20.95%, Gap=13.81%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6362 | LR: 1.36e-04 | GradNorm: 3.851
  Batch    4/48 | Loss: 2.5767 | LR: 1.29e-04 | GradNorm: 4.022
  Batch    8/48 | Loss: 2.6047 | LR: 1.23e-04 | GradNorm: 3.960
  Batch   12/48 | Loss: 2.6223 | LR: 1.16e-04 | GradNorm: 4.663
  Batch   16/48 | Loss: 2.6542 | LR: 1.10e-04 | GradNorm: 5.227
  Batch   20/48 | Loss: 2.5699 | LR: 1.04e-04 | GradNorm: 6.187
  Batch   24/48 | Loss: 2.5434 | LR: 9.75e-05 | GradNorm: 5.811
  Batch   28/48 | Loss: 2.5600 | LR: 9.16e-05 | GradNorm: 4.920
  Batch   32/48 | Loss: 2.5522 | LR: 8.58e-05 | GradNorm: 2.798
  Batch   36/48 | Loss: 2.5166 | LR: 8.01e-05 | GradNorm: 3.410
  Batch   40/48 | Loss: 2.4738 | LR: 7.46e-05 | GradNorm: 3.388
  Batch   44/48 | Loss: 2.5395 | LR: 6.92e-05 | GradNorm: 5.192
Epoch 8/10: Train=38.60%, Val=23.21%, Gap=15.39%, LR=6.53e-05
  Batch    0/48 | Loss: 2.5123 | LR: 6.40e-05 | GradNorm: 4.227
  Batch    4/48 | Loss: 2.5052 | LR: 5.90e-05 | GradNorm: 4.715
  Batch    8/48 | Loss: 2.5490 | LR: 5.41e-05 | GradNorm: 5.831
  Batch   12/48 | Loss: 2.4692 | LR: 4.95e-05 | GradNorm: 3.348
  Batch   16/48 | Loss: 2.4347 | LR: 4.50e-05 | GradNorm: 1.894
  Batch   20/48 | Loss: 2.4249 | LR: 4.07e-05 | GradNorm: 3.332
  Batch   24/48 | Loss: 2.4756 | LR: 3.66e-05 | GradNorm: 3.129
  Batch   28/48 | Loss: 2.4844 | LR: 3.27e-05 | GradNorm: 2.152
  Batch   32/48 | Loss: 2.4488 | LR: 2.90e-05 | GradNorm: 3.592
  Batch   36/48 | Loss: 2.4593 | LR: 2.55e-05 | GradNorm: 3.732
  Batch   40/48 | Loss: 2.4314 | LR: 2.23e-05 | GradNorm: 4.034
  Batch   44/48 | Loss: 2.4618 | LR: 1.92e-05 | GradNorm: 2.458
Epoch 9/10: Train=41.15%, Val=24.10%, Gap=17.05%, LR=1.70e-05
  Batch    0/48 | Loss: 2.4326 | LR: 1.64e-05 | GradNorm: 4.069
  Batch    4/48 | Loss: 2.4382 | LR: 1.37e-05 | GradNorm: 1.846
  Batch    8/48 | Loss: 2.4344 | LR: 1.13e-05 | GradNorm: 1.708
  Batch   12/48 | Loss: 2.4304 | LR: 9.16e-06 | GradNorm: 2.807
  Batch   16/48 | Loss: 2.4489 | LR: 7.22e-06 | GradNorm: 2.653
  Batch   20/48 | Loss: 2.4348 | LR: 5.51e-06 | GradNorm: 3.353
  Batch   24/48 | Loss: 2.4686 | LR: 4.03e-06 | GradNorm: 3.157
  Batch   28/48 | Loss: 2.4845 | LR: 2.78e-06 | GradNorm: 2.062
  Batch   32/48 | Loss: 2.4861 | LR: 1.77e-06 | GradNorm: 2.639
  Batch   36/48 | Loss: 2.4188 | LR: 1.00e-06 | GradNorm: 2.146
  Batch   40/48 | Loss: 2.4010 | LR: 4.65e-07 | GradNorm: 2.836
  Batch   44/48 | Loss: 2.4291 | LR: 1.67e-07 | GradNorm: 2.523
Epoch 10/10: Train=42.08%, Val=24.52%, Gap=17.56%, LR=1.00e-07
Best validation accuracy: 24.52%
