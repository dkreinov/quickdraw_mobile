=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004453450032907394
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9420 | LR: 9.05e-06 | GradNorm: 1.435
  Batch    4/48 | Loss: 3.9270 | LR: 2.74e-05 | GradNorm: 0.997
  Batch    8/48 | Loss: 3.9291 | LR: 4.58e-05 | GradNorm: 0.912
  Batch   12/48 | Loss: 3.9124 | LR: 6.42e-05 | GradNorm: 0.584
  Batch   16/48 | Loss: 3.9161 | LR: 8.25e-05 | GradNorm: 0.520
  Batch   20/48 | Loss: 3.9126 | LR: 1.01e-04 | GradNorm: 0.565
  Batch   24/48 | Loss: 3.9143 | LR: 1.19e-04 | GradNorm: 0.609
  Batch   28/48 | Loss: 3.9198 | LR: 1.38e-04 | GradNorm: 0.583
  Batch   32/48 | Loss: 3.9089 | LR: 1.56e-04 | GradNorm: 0.497
  Batch   36/48 | Loss: 3.9060 | LR: 1.74e-04 | GradNorm: 0.514
  Batch   40/48 | Loss: 3.8928 | LR: 1.93e-04 | GradNorm: 0.568
  Batch   44/48 | Loss: 3.8542 | LR: 2.11e-04 | GradNorm: 0.711
Epoch 1/10: Train=2.71%, Val=4.18%, Gap=-1.47%, LR=2.25e-04
  Batch    0/48 | Loss: 3.8128 | LR: 2.29e-04 | GradNorm: 3.874
  Batch    4/48 | Loss: 3.8251 | LR: 2.48e-04 | GradNorm: 5.799
  Batch    8/48 | Loss: 3.7997 | LR: 2.66e-04 | GradNorm: 7.434
  Batch   12/48 | Loss: 3.7874 | LR: 2.85e-04 | GradNorm: 5.517
  Batch   16/48 | Loss: 3.7518 | LR: 3.03e-04 | GradNorm: 2.405
  Batch   20/48 | Loss: 3.7142 | LR: 3.21e-04 | GradNorm: 2.269
  Batch   24/48 | Loss: 3.6744 | LR: 3.40e-04 | GradNorm: 3.318
  Batch   28/48 | Loss: 3.6696 | LR: 3.58e-04 | GradNorm: 1.955
  Batch   32/48 | Loss: 3.6172 | LR: 3.76e-04 | GradNorm: 4.134
  Batch   36/48 | Loss: 3.6571 | LR: 3.95e-04 | GradNorm: 2.770
  Batch   40/48 | Loss: 3.6940 | LR: 4.13e-04 | GradNorm: 7.668
  Batch   44/48 | Loss: 3.6219 | LR: 4.32e-04 | GradNorm: 3.855
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.72%, Val=6.79%, Gap=-0.07%, LR=4.45e-04
  Batch    0/48 | Loss: 3.5392 | LR: 4.45e-04 | GradNorm: 1.220
  Batch    4/48 | Loss: 3.6016 | LR: 4.45e-04 | GradNorm: 3.517
  Batch    8/48 | Loss: 3.4732 | LR: 4.45e-04 | GradNorm: 2.302
  Batch   12/48 | Loss: 3.4716 | LR: 4.44e-04 | GradNorm: 1.832
  Batch   16/48 | Loss: 3.4470 | LR: 4.43e-04 | GradNorm: 2.370
  Batch   20/48 | Loss: 3.4559 | LR: 4.42e-04 | GradNorm: 3.639
  Batch   24/48 | Loss: 3.3854 | LR: 4.41e-04 | GradNorm: 3.046
  Batch   28/48 | Loss: 3.3960 | LR: 4.39e-04 | GradNorm: 9.021
  Batch   32/48 | Loss: 3.3562 | LR: 4.37e-04 | GradNorm: 2.456
  Batch   36/48 | Loss: 3.3035 | LR: 4.35e-04 | GradNorm: 1.898
  Batch   40/48 | Loss: 3.2685 | LR: 4.33e-04 | GradNorm: 1.798
  Batch   44/48 | Loss: 3.3153 | LR: 4.30e-04 | GradNorm: 3.251
Epoch 3/10: Train=13.43%, Val=10.06%, Gap=3.37%, LR=4.28e-04
  Batch    0/48 | Loss: 3.2702 | LR: 4.28e-04 | GradNorm: 3.650
  Batch    4/48 | Loss: 3.2318 | LR: 4.25e-04 | GradNorm: 3.102
  Batch    8/48 | Loss: 3.2278 | LR: 4.22e-04 | GradNorm: 3.427
  Batch   12/48 | Loss: 3.2275 | LR: 4.18e-04 | GradNorm: 4.205
  Batch   16/48 | Loss: 3.2152 | LR: 4.15e-04 | GradNorm: 1.897
  Batch   20/48 | Loss: 3.1968 | LR: 4.11e-04 | GradNorm: 4.305
  Batch   24/48 | Loss: 3.1975 | LR: 4.07e-04 | GradNorm: 2.504
  Batch   28/48 | Loss: 3.1190 | LR: 4.03e-04 | GradNorm: 2.732
  Batch   32/48 | Loss: 3.1304 | LR: 3.98e-04 | GradNorm: 2.578
  Batch   36/48 | Loss: 3.0899 | LR: 3.94e-04 | GradNorm: 2.070
  Batch   40/48 | Loss: 3.1395 | LR: 3.89e-04 | GradNorm: 4.735
  Batch   44/48 | Loss: 3.0556 | LR: 3.84e-04 | GradNorm: 2.869
Epoch 4/10: Train=18.84%, Val=16.62%, Gap=2.22%, LR=3.80e-04
  Batch    0/48 | Loss: 3.0376 | LR: 3.79e-04 | GradNorm: 3.689
  Batch    4/48 | Loss: 2.9545 | LR: 3.74e-04 | GradNorm: 1.571
  Batch    8/48 | Loss: 3.0642 | LR: 3.68e-04 | GradNorm: 8.217
  Batch   12/48 | Loss: 2.9812 | LR: 3.63e-04 | GradNorm: 3.342
  Batch   16/48 | Loss: 3.0359 | LR: 3.57e-04 | GradNorm: 4.180
  Batch   20/48 | Loss: 3.0039 | LR: 3.51e-04 | GradNorm: 3.871
  Batch   24/48 | Loss: 3.0046 | LR: 3.45e-04 | GradNorm: 4.255
  Batch   28/48 | Loss: 2.9612 | LR: 3.39e-04 | GradNorm: 5.537
  Batch   32/48 | Loss: 2.9640 | LR: 3.32e-04 | GradNorm: 5.372
  Batch   36/48 | Loss: 3.0106 | LR: 3.26e-04 | GradNorm: 5.770
  Batch   40/48 | Loss: 2.9479 | LR: 3.20e-04 | GradNorm: 3.406
  Batch   44/48 | Loss: 2.9058 | LR: 3.13e-04 | GradNorm: 3.962
Epoch 5/10: Train=25.19%, Val=14.84%, Gap=10.35%, LR=3.08e-04
  Batch    0/48 | Loss: 2.8484 | LR: 3.06e-04 | GradNorm: 4.741
  Batch    4/48 | Loss: 2.8398 | LR: 2.99e-04 | GradNorm: 4.491
  Batch    8/48 | Loss: 2.8282 | LR: 2.93e-04 | GradNorm: 5.892
  Batch   12/48 | Loss: 2.8170 | LR: 2.86e-04 | GradNorm: 2.581
  Batch   16/48 | Loss: 2.8309 | LR: 2.79e-04 | GradNorm: 5.451
  Batch   20/48 | Loss: 2.8180 | LR: 2.71e-04 | GradNorm: 4.280
  Batch   24/48 | Loss: 2.8229 | LR: 2.64e-04 | GradNorm: 6.080
  Batch   28/48 | Loss: 2.7374 | LR: 2.57e-04 | GradNorm: 2.670
  Batch   32/48 | Loss: 2.8131 | LR: 2.50e-04 | GradNorm: 9.209
  Batch   36/48 | Loss: 2.8281 | LR: 2.43e-04 | GradNorm: 4.761
  Batch   40/48 | Loss: 2.8136 | LR: 2.35e-04 | GradNorm: 4.675
  Batch   44/48 | Loss: 2.8346 | LR: 2.28e-04 | GradNorm: 2.435
Epoch 6/10: Train=29.34%, Val=15.52%, Gap=13.82%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7506 | LR: 2.21e-04 | GradNorm: 2.426
  Batch    4/48 | Loss: 2.7375 | LR: 2.14e-04 | GradNorm: 3.454
  Batch    8/48 | Loss: 2.7509 | LR: 2.06e-04 | GradNorm: 5.028
  Batch   12/48 | Loss: 2.6587 | LR: 1.99e-04 | GradNorm: 4.250
  Batch   16/48 | Loss: 2.6981 | LR: 1.92e-04 | GradNorm: 4.774
  Batch   20/48 | Loss: 2.7235 | LR: 1.85e-04 | GradNorm: 3.176
  Batch   24/48 | Loss: 2.7259 | LR: 1.78e-04 | GradNorm: 3.893
  Batch   28/48 | Loss: 2.7306 | LR: 1.70e-04 | GradNorm: 3.446
  Batch   32/48 | Loss: 2.6980 | LR: 1.63e-04 | GradNorm: 5.085
  Batch   36/48 | Loss: 2.7024 | LR: 1.56e-04 | GradNorm: 3.070
  Batch   40/48 | Loss: 2.6687 | LR: 1.49e-04 | GradNorm: 3.571
  Batch   44/48 | Loss: 2.6771 | LR: 1.43e-04 | GradNorm: 3.733
Epoch 7/10: Train=33.43%, Val=20.04%, Gap=13.39%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6627 | LR: 1.36e-04 | GradNorm: 3.740
  Batch    4/48 | Loss: 2.6146 | LR: 1.29e-04 | GradNorm: 4.067
  Batch    8/48 | Loss: 2.6190 | LR: 1.23e-04 | GradNorm: 3.791
  Batch   12/48 | Loss: 2.6405 | LR: 1.16e-04 | GradNorm: 4.924
  Batch   16/48 | Loss: 2.6808 | LR: 1.10e-04 | GradNorm: 6.301
  Batch   20/48 | Loss: 2.5809 | LR: 1.04e-04 | GradNorm: 4.636
  Batch   24/48 | Loss: 2.5721 | LR: 9.75e-05 | GradNorm: 5.710
  Batch   28/48 | Loss: 2.6045 | LR: 9.16e-05 | GradNorm: 5.046
  Batch   32/48 | Loss: 2.5750 | LR: 8.58e-05 | GradNorm: 3.505
  Batch   36/48 | Loss: 2.5886 | LR: 8.01e-05 | GradNorm: 4.231
  Batch   40/48 | Loss: 2.5249 | LR: 7.46e-05 | GradNorm: 5.914
  Batch   44/48 | Loss: 2.5958 | LR: 6.92e-05 | GradNorm: 4.185
Epoch 8/10: Train=36.58%, Val=22.68%, Gap=13.90%, LR=6.53e-05
  Batch    0/48 | Loss: 2.5706 | LR: 6.40e-05 | GradNorm: 5.631
  Batch    4/48 | Loss: 2.5309 | LR: 5.90e-05 | GradNorm: 4.862
  Batch    8/48 | Loss: 2.5812 | LR: 5.42e-05 | GradNorm: 3.559
  Batch   12/48 | Loss: 2.5176 | LR: 4.95e-05 | GradNorm: 2.813
  Batch   16/48 | Loss: 2.5038 | LR: 4.50e-05 | GradNorm: 3.096
  Batch   20/48 | Loss: 2.4958 | LR: 4.07e-05 | GradNorm: 5.051
  Batch   24/48 | Loss: 2.5284 | LR: 3.66e-05 | GradNorm: 3.953
  Batch   28/48 | Loss: 2.5419 | LR: 3.27e-05 | GradNorm: 3.948
  Batch   32/48 | Loss: 2.4840 | LR: 2.90e-05 | GradNorm: 2.450
  Batch   36/48 | Loss: 2.4913 | LR: 2.55e-05 | GradNorm: 3.421
  Batch   40/48 | Loss: 2.4759 | LR: 2.23e-05 | GradNorm: 2.602
  Batch   44/48 | Loss: 2.5038 | LR: 1.92e-05 | GradNorm: 3.560
Epoch 9/10: Train=39.84%, Val=23.73%, Gap=16.11%, LR=1.70e-05
  Batch    0/48 | Loss: 2.4916 | LR: 1.64e-05 | GradNorm: 2.833
  Batch    4/48 | Loss: 2.4983 | LR: 1.37e-05 | GradNorm: 2.089
  Batch    8/48 | Loss: 2.4638 | LR: 1.13e-05 | GradNorm: 2.396
  Batch   12/48 | Loss: 2.4742 | LR: 9.16e-06 | GradNorm: 3.398
  Batch   16/48 | Loss: 2.4942 | LR: 7.22e-06 | GradNorm: 1.908
  Batch   20/48 | Loss: 2.5061 | LR: 5.51e-06 | GradNorm: 2.853
  Batch   24/48 | Loss: 2.5003 | LR: 4.03e-06 | GradNorm: 2.724
  Batch   28/48 | Loss: 2.5239 | LR: 2.78e-06 | GradNorm: 2.541
  Batch   32/48 | Loss: 2.5107 | LR: 1.77e-06 | GradNorm: 2.122
  Batch   36/48 | Loss: 2.4635 | LR: 1.00e-06 | GradNorm: 1.841
  Batch   40/48 | Loss: 2.4398 | LR: 4.65e-07 | GradNorm: 2.126
  Batch   44/48 | Loss: 2.4789 | LR: 1.67e-07 | GradNorm: 2.593
Epoch 10/10: Train=40.96%, Val=24.97%, Gap=15.99%, LR=1.00e-07
Best validation accuracy: 24.97%
