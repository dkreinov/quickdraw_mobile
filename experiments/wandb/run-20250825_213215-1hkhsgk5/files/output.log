=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026858705464031125
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9412 | LR: 5.46e-06 | GradNorm: 1.293
  Batch    4/48 | Loss: 3.9374 | LR: 1.65e-05 | GradNorm: 1.182
  Batch    8/48 | Loss: 3.9227 | LR: 2.76e-05 | GradNorm: 0.852
  Batch   12/48 | Loss: 3.9140 | LR: 3.87e-05 | GradNorm: 0.650
  Batch   16/48 | Loss: 3.9196 | LR: 4.98e-05 | GradNorm: 0.648
  Batch   20/48 | Loss: 3.9158 | LR: 6.09e-05 | GradNorm: 0.620
  Batch   24/48 | Loss: 3.9186 | LR: 7.19e-05 | GradNorm: 0.702
  Batch   28/48 | Loss: 3.9187 | LR: 8.30e-05 | GradNorm: 0.605
  Batch   32/48 | Loss: 3.9087 | LR: 9.41e-05 | GradNorm: 0.504
  Batch   36/48 | Loss: 3.9102 | LR: 1.05e-04 | GradNorm: 0.521
  Batch   40/48 | Loss: 3.9039 | LR: 1.16e-04 | GradNorm: 0.581
  Batch   44/48 | Loss: 3.8841 | LR: 1.27e-04 | GradNorm: 0.600
Epoch 1/10: Train=2.31%, Val=5.36%, Gap=-3.05%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8532 | LR: 1.38e-04 | GradNorm: 0.915
  Batch    4/48 | Loss: 3.8065 | LR: 1.49e-04 | GradNorm: 1.171
  Batch    8/48 | Loss: 3.7938 | LR: 1.61e-04 | GradNorm: 3.076
  Batch   12/48 | Loss: 3.7507 | LR: 1.72e-04 | GradNorm: 3.233
  Batch   16/48 | Loss: 3.7849 | LR: 1.83e-04 | GradNorm: 3.594
  Batch   20/48 | Loss: 3.7467 | LR: 1.94e-04 | GradNorm: 2.993
  Batch   24/48 | Loss: 3.6964 | LR: 2.05e-04 | GradNorm: 4.348
  Batch   28/48 | Loss: 3.6854 | LR: 2.16e-04 | GradNorm: 4.531
  Batch   32/48 | Loss: 3.6736 | LR: 2.27e-04 | GradNorm: 5.728
  Batch   36/48 | Loss: 3.6861 | LR: 2.38e-04 | GradNorm: 7.602
  Batch   40/48 | Loss: 3.6071 | LR: 2.49e-04 | GradNorm: 1.785
  Batch   44/48 | Loss: 3.6346 | LR: 2.60e-04 | GradNorm: 8.310
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.71%, Val=9.32%, Gap=-2.61%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6891 | LR: 2.69e-04 | GradNorm: 4.161
  Batch    4/48 | Loss: 3.6758 | LR: 2.68e-04 | GradNorm: 4.702
  Batch    8/48 | Loss: 3.5835 | LR: 2.68e-04 | GradNorm: 5.334
  Batch   12/48 | Loss: 3.5552 | LR: 2.68e-04 | GradNorm: 2.012
  Batch   16/48 | Loss: 3.6529 | LR: 2.67e-04 | GradNorm: 5.186
  Batch   20/48 | Loss: 3.5435 | LR: 2.67e-04 | GradNorm: 2.853
  Batch   24/48 | Loss: 3.5279 | LR: 2.66e-04 | GradNorm: 4.377
  Batch   28/48 | Loss: 3.4369 | LR: 2.65e-04 | GradNorm: 4.068
  Batch   32/48 | Loss: 3.4329 | LR: 2.64e-04 | GradNorm: 3.316
  Batch   36/48 | Loss: 3.4280 | LR: 2.62e-04 | GradNorm: 2.372
  Batch   40/48 | Loss: 3.4219 | LR: 2.61e-04 | GradNorm: 5.465
  Batch   44/48 | Loss: 3.3616 | LR: 2.60e-04 | GradNorm: 2.204
Epoch 3/10: Train=11.02%, Val=10.26%, Gap=0.76%, LR=2.58e-04
  Batch    0/48 | Loss: 3.3603 | LR: 2.58e-04 | GradNorm: 3.518
  Batch    4/48 | Loss: 3.3066 | LR: 2.56e-04 | GradNorm: 1.538
  Batch    8/48 | Loss: 3.5787 | LR: 2.54e-04 | GradNorm: 31.997
  Batch   12/48 | Loss: 3.3544 | LR: 2.52e-04 | GradNorm: 4.280
  Batch   16/48 | Loss: 3.3344 | LR: 2.50e-04 | GradNorm: 1.749
  Batch   20/48 | Loss: 3.3374 | LR: 2.48e-04 | GradNorm: 5.702
  Batch   24/48 | Loss: 3.3291 | LR: 2.45e-04 | GradNorm: 3.213
  Batch   28/48 | Loss: 3.3092 | LR: 2.43e-04 | GradNorm: 4.508
  Batch   32/48 | Loss: 3.2876 | LR: 2.40e-04 | GradNorm: 2.347
  Batch   36/48 | Loss: 3.2425 | LR: 2.37e-04 | GradNorm: 1.862
  Batch   40/48 | Loss: 3.2659 | LR: 2.35e-04 | GradNorm: 3.803
  Batch   44/48 | Loss: 3.1911 | LR: 2.32e-04 | GradNorm: 1.216
Epoch 4/10: Train=15.25%, Val=14.22%, Gap=1.03%, LR=2.29e-04
  Batch    0/48 | Loss: 3.1873 | LR: 2.28e-04 | GradNorm: 2.471
  Batch    4/48 | Loss: 3.1734 | LR: 2.25e-04 | GradNorm: 3.518
  Batch    8/48 | Loss: 3.1438 | LR: 2.22e-04 | GradNorm: 2.127
  Batch   12/48 | Loss: 3.1074 | LR: 2.19e-04 | GradNorm: 2.653
  Batch   16/48 | Loss: 3.1937 | LR: 2.15e-04 | GradNorm: 3.622
  Batch   20/48 | Loss: 3.1691 | LR: 2.12e-04 | GradNorm: 6.334
  Batch   24/48 | Loss: 3.2170 | LR: 2.08e-04 | GradNorm: 4.786
  Batch   28/48 | Loss: 3.1709 | LR: 2.04e-04 | GradNorm: 6.129
  Batch   32/48 | Loss: 3.1121 | LR: 2.01e-04 | GradNorm: 2.922
  Batch   36/48 | Loss: 3.1981 | LR: 1.97e-04 | GradNorm: 5.440
  Batch   40/48 | Loss: 3.1658 | LR: 1.93e-04 | GradNorm: 3.166
  Batch   44/48 | Loss: 3.0956 | LR: 1.89e-04 | GradNorm: 1.863
Epoch 5/10: Train=20.16%, Val=17.45%, Gap=2.71%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0964 | LR: 1.85e-04 | GradNorm: 6.857
  Batch    4/48 | Loss: 2.9803 | LR: 1.81e-04 | GradNorm: 1.965
  Batch    8/48 | Loss: 3.0320 | LR: 1.76e-04 | GradNorm: 3.832
  Batch   12/48 | Loss: 3.0069 | LR: 1.72e-04 | GradNorm: 2.855
  Batch   16/48 | Loss: 2.9890 | LR: 1.68e-04 | GradNorm: 3.553
  Batch   20/48 | Loss: 2.9761 | LR: 1.64e-04 | GradNorm: 2.485
  Batch   24/48 | Loss: 2.9578 | LR: 1.59e-04 | GradNorm: 2.481
  Batch   28/48 | Loss: 2.9065 | LR: 1.55e-04 | GradNorm: 3.288
  Batch   32/48 | Loss: 2.9101 | LR: 1.51e-04 | GradNorm: 4.503
  Batch   36/48 | Loss: 2.9530 | LR: 1.46e-04 | GradNorm: 3.950
  Batch   40/48 | Loss: 2.9348 | LR: 1.42e-04 | GradNorm: 6.062
  Batch   44/48 | Loss: 2.9783 | LR: 1.38e-04 | GradNorm: 3.598
Epoch 6/10: Train=25.17%, Val=14.83%, Gap=10.34%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9140 | LR: 1.33e-04 | GradNorm: 4.493
  Batch    4/48 | Loss: 2.9086 | LR: 1.29e-04 | GradNorm: 6.222
  Batch    8/48 | Loss: 2.8680 | LR: 1.24e-04 | GradNorm: 2.638
  Batch   12/48 | Loss: 2.8223 | LR: 1.20e-04 | GradNorm: 5.756
  Batch   16/48 | Loss: 2.8381 | LR: 1.16e-04 | GradNorm: 2.767
  Batch   20/48 | Loss: 2.8666 | LR: 1.11e-04 | GradNorm: 3.957
  Batch   24/48 | Loss: 2.8867 | LR: 1.07e-04 | GradNorm: 5.191
  Batch   28/48 | Loss: 2.8962 | LR: 1.03e-04 | GradNorm: 6.922
  Batch   32/48 | Loss: 2.8683 | LR: 9.85e-05 | GradNorm: 3.797
  Batch   36/48 | Loss: 2.8685 | LR: 9.43e-05 | GradNorm: 2.925
  Batch   40/48 | Loss: 2.8481 | LR: 9.02e-05 | GradNorm: 4.824
  Batch   44/48 | Loss: 2.8150 | LR: 8.60e-05 | GradNorm: 3.909
Epoch 7/10: Train=29.39%, Val=19.75%, Gap=9.64%, LR=8.30e-05
  Batch    0/48 | Loss: 2.8400 | LR: 8.20e-05 | GradNorm: 4.937
  Batch    4/48 | Loss: 2.7691 | LR: 7.79e-05 | GradNorm: 3.013
  Batch    8/48 | Loss: 2.7566 | LR: 7.40e-05 | GradNorm: 2.011
  Batch   12/48 | Loss: 2.8224 | LR: 7.01e-05 | GradNorm: 3.002
  Batch   16/48 | Loss: 2.8016 | LR: 6.63e-05 | GradNorm: 2.478
  Batch   20/48 | Loss: 2.7166 | LR: 6.25e-05 | GradNorm: 2.714
  Batch   24/48 | Loss: 2.7329 | LR: 5.89e-05 | GradNorm: 3.687
  Batch   28/48 | Loss: 2.7526 | LR: 5.53e-05 | GradNorm: 2.565
  Batch   32/48 | Loss: 2.7532 | LR: 5.18e-05 | GradNorm: 3.905
  Batch   36/48 | Loss: 2.7423 | LR: 4.83e-05 | GradNorm: 2.458
  Batch   40/48 | Loss: 2.6798 | LR: 4.50e-05 | GradNorm: 2.849
  Batch   44/48 | Loss: 2.7352 | LR: 4.18e-05 | GradNorm: 3.797
Epoch 8/10: Train=32.24%, Val=20.02%, Gap=12.22%, LR=3.94e-05
  Batch    0/48 | Loss: 2.6961 | LR: 3.86e-05 | GradNorm: 2.181
  Batch    4/48 | Loss: 2.6843 | LR: 3.56e-05 | GradNorm: 2.659
  Batch    8/48 | Loss: 2.7460 | LR: 3.27e-05 | GradNorm: 5.486
  Batch   12/48 | Loss: 2.6895 | LR: 2.99e-05 | GradNorm: 3.766
  Batch   16/48 | Loss: 2.6240 | LR: 2.72e-05 | GradNorm: 2.748
  Batch   20/48 | Loss: 2.6513 | LR: 2.46e-05 | GradNorm: 2.697
  Batch   24/48 | Loss: 2.6769 | LR: 2.21e-05 | GradNorm: 3.780
  Batch   28/48 | Loss: 2.6851 | LR: 1.98e-05 | GradNorm: 3.105
  Batch   32/48 | Loss: 2.6783 | LR: 1.75e-05 | GradNorm: 4.583
  Batch   36/48 | Loss: 2.6525 | LR: 1.54e-05 | GradNorm: 3.611
  Batch   40/48 | Loss: 2.6630 | LR: 1.35e-05 | GradNorm: 4.303
  Batch   44/48 | Loss: 2.6558 | LR: 1.16e-05 | GradNorm: 2.618
Epoch 9/10: Train=35.10%, Val=22.05%, Gap=13.05%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6588 | LR: 9.90e-06 | GradNorm: 3.335
  Batch    4/48 | Loss: 2.6634 | LR: 8.32e-06 | GradNorm: 1.570
  Batch    8/48 | Loss: 2.6402 | LR: 6.88e-06 | GradNorm: 1.738
  Batch   12/48 | Loss: 2.6327 | LR: 5.57e-06 | GradNorm: 2.541
  Batch   16/48 | Loss: 2.6386 | LR: 4.39e-06 | GradNorm: 2.243
  Batch   20/48 | Loss: 2.6513 | LR: 3.36e-06 | GradNorm: 3.036
  Batch   24/48 | Loss: 2.6460 | LR: 2.47e-06 | GradNorm: 3.049
  Batch   28/48 | Loss: 2.6680 | LR: 1.72e-06 | GradNorm: 2.669
  Batch   32/48 | Loss: 2.6643 | LR: 1.11e-06 | GradNorm: 2.724
  Batch   36/48 | Loss: 2.6411 | LR: 6.43e-07 | GradNorm: 2.052
  Batch   40/48 | Loss: 2.6084 | LR: 3.20e-07 | GradNorm: 2.010
  Batch   44/48 | Loss: 2.6359 | LR: 1.40e-07 | GradNorm: 2.459
Epoch 10/10: Train=36.39%, Val=22.43%, Gap=13.96%, LR=1.00e-07
Best validation accuracy: 22.43%
