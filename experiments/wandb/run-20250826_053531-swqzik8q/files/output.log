=== W&B Sweep Run: LR=0.000593 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0005934615573651031
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000593
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9621 | LR: 1.21e-05 | GradNorm: 1.588
  Batch    4/48 | Loss: 3.9226 | LR: 3.65e-05 | GradNorm: 0.934
  Batch    8/48 | Loss: 3.9270 | LR: 6.10e-05 | GradNorm: 0.812
  Batch   12/48 | Loss: 3.9102 | LR: 8.55e-05 | GradNorm: 0.569
  Batch   16/48 | Loss: 3.9182 | LR: 1.10e-04 | GradNorm: 0.551
  Batch   20/48 | Loss: 3.9195 | LR: 1.34e-04 | GradNorm: 0.611
  Batch   24/48 | Loss: 3.9111 | LR: 1.59e-04 | GradNorm: 0.570
  Batch   28/48 | Loss: 3.9203 | LR: 1.83e-04 | GradNorm: 0.580
  Batch   32/48 | Loss: 3.8936 | LR: 2.08e-04 | GradNorm: 0.444
  Batch   36/48 | Loss: 3.8792 | LR: 2.32e-04 | GradNorm: 0.570
  Batch   40/48 | Loss: 3.8228 | LR: 2.57e-04 | GradNorm: 1.275
  Batch   44/48 | Loss: 3.8786 | LR: 2.81e-04 | GradNorm: 2.887
Epoch 1/10: Train=2.73%, Val=4.49%, Gap=-1.76%, LR=3.00e-04
  Batch    0/48 | Loss: 3.8587 | LR: 3.06e-04 | GradNorm: 1.990
  Batch    4/48 | Loss: 3.7921 | LR: 3.30e-04 | GradNorm: 1.281
  Batch    8/48 | Loss: 3.7772 | LR: 3.55e-04 | GradNorm: 0.559
  Batch   12/48 | Loss: 3.7391 | LR: 3.79e-04 | GradNorm: 1.041
  Batch   16/48 | Loss: 3.7515 | LR: 4.04e-04 | GradNorm: 2.258
  Batch   20/48 | Loss: 3.7251 | LR: 4.28e-04 | GradNorm: 2.659
  Batch   24/48 | Loss: 3.6168 | LR: 4.53e-04 | GradNorm: 1.873
  Batch   28/48 | Loss: 3.5976 | LR: 4.77e-04 | GradNorm: 1.395
  Batch   32/48 | Loss: 3.5805 | LR: 5.02e-04 | GradNorm: 3.060
  Batch   36/48 | Loss: 3.7576 | LR: 5.26e-04 | GradNorm: 5.691
  Batch   40/48 | Loss: 3.7981 | LR: 5.51e-04 | GradNorm: 6.875
  Batch   44/48 | Loss: 4.1140 | LR: 5.75e-04 | GradNorm: 9.157
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.59%, Val=8.10%, Gap=-1.51%, LR=5.93e-04
  Batch    0/48 | Loss: 3.6926 | LR: 5.93e-04 | GradNorm: 1.943
  Batch    4/48 | Loss: 3.6196 | LR: 5.93e-04 | GradNorm: 1.732
  Batch    8/48 | Loss: 3.5048 | LR: 5.93e-04 | GradNorm: 2.160
  Batch   12/48 | Loss: 3.4943 | LR: 5.92e-04 | GradNorm: 4.241
  Batch   16/48 | Loss: 3.6249 | LR: 5.91e-04 | GradNorm: 6.083
  Batch   20/48 | Loss: 3.4206 | LR: 5.89e-04 | GradNorm: 1.563
  Batch   24/48 | Loss: 3.4987 | LR: 5.87e-04 | GradNorm: 4.394
  Batch   28/48 | Loss: 3.4443 | LR: 5.85e-04 | GradNorm: 2.629
  Batch   32/48 | Loss: 3.3686 | LR: 5.83e-04 | GradNorm: 1.893
  Batch   36/48 | Loss: 3.4051 | LR: 5.80e-04 | GradNorm: 2.678
  Batch   40/48 | Loss: 3.3371 | LR: 5.77e-04 | GradNorm: 3.160
  Batch   44/48 | Loss: 3.3635 | LR: 5.74e-04 | GradNorm: 3.602
Epoch 3/10: Train=12.15%, Val=8.75%, Gap=3.40%, LR=5.71e-04
  Batch    0/48 | Loss: 3.3511 | LR: 5.70e-04 | GradNorm: 2.648
  Batch    4/48 | Loss: 3.3978 | LR: 5.66e-04 | GradNorm: 4.129
  Batch    8/48 | Loss: 3.3451 | LR: 5.62e-04 | GradNorm: 5.445
  Batch   12/48 | Loss: 3.2585 | LR: 5.57e-04 | GradNorm: 2.542
  Batch   16/48 | Loss: 3.2660 | LR: 5.52e-04 | GradNorm: 2.153
  Batch   20/48 | Loss: 3.2878 | LR: 5.47e-04 | GradNorm: 3.472
  Batch   24/48 | Loss: 3.4358 | LR: 5.42e-04 | GradNorm: 6.463
  Batch   28/48 | Loss: 3.2842 | LR: 5.37e-04 | GradNorm: 3.877
  Batch   32/48 | Loss: 3.2574 | LR: 5.31e-04 | GradNorm: 2.712
  Batch   36/48 | Loss: 3.1926 | LR: 5.25e-04 | GradNorm: 1.591
  Batch   40/48 | Loss: 3.2564 | LR: 5.18e-04 | GradNorm: 3.312
  Batch   44/48 | Loss: 3.1499 | LR: 5.12e-04 | GradNorm: 1.252
Epoch 4/10: Train=15.99%, Val=10.42%, Gap=5.57%, LR=5.07e-04
  Batch    0/48 | Loss: 3.1866 | LR: 5.05e-04 | GradNorm: 4.595
  Batch    4/48 | Loss: 3.1815 | LR: 4.98e-04 | GradNorm: 3.259
  Batch    8/48 | Loss: 3.3478 | LR: 4.91e-04 | GradNorm: 5.242
  Batch   12/48 | Loss: 3.1446 | LR: 4.83e-04 | GradNorm: 2.469
  Batch   16/48 | Loss: 3.2298 | LR: 4.75e-04 | GradNorm: 3.892
  Batch   20/48 | Loss: 3.1630 | LR: 4.68e-04 | GradNorm: 3.263
  Batch   24/48 | Loss: 3.1809 | LR: 4.60e-04 | GradNorm: 2.888
  Batch   28/48 | Loss: 3.1337 | LR: 4.51e-04 | GradNorm: 1.792
  Batch   32/48 | Loss: 3.0591 | LR: 4.43e-04 | GradNorm: 1.713
  Batch   36/48 | Loss: 3.1332 | LR: 4.34e-04 | GradNorm: 1.925
  Batch   40/48 | Loss: 3.1487 | LR: 4.26e-04 | GradNorm: 4.115
  Batch   44/48 | Loss: 3.0863 | LR: 4.17e-04 | GradNorm: 1.082
Epoch 5/10: Train=19.90%, Val=11.84%, Gap=8.06%, LR=4.10e-04
  Batch    0/48 | Loss: 3.0610 | LR: 4.08e-04 | GradNorm: 2.747
  Batch    4/48 | Loss: 2.9815 | LR: 3.99e-04 | GradNorm: 2.143
  Batch    8/48 | Loss: 3.0230 | LR: 3.90e-04 | GradNorm: 2.817
  Batch   12/48 | Loss: 2.9870 | LR: 3.81e-04 | GradNorm: 1.651
  Batch   16/48 | Loss: 2.9667 | LR: 3.71e-04 | GradNorm: 3.449
  Batch   20/48 | Loss: 2.9753 | LR: 3.62e-04 | GradNorm: 2.877
  Batch   24/48 | Loss: 2.9521 | LR: 3.52e-04 | GradNorm: 2.193
  Batch   28/48 | Loss: 2.9320 | LR: 3.43e-04 | GradNorm: 4.400
  Batch   32/48 | Loss: 2.9014 | LR: 3.33e-04 | GradNorm: 1.531
  Batch   36/48 | Loss: 2.9970 | LR: 3.23e-04 | GradNorm: 5.184
  Batch   40/48 | Loss: 2.9896 | LR: 3.14e-04 | GradNorm: 3.901
  Batch   44/48 | Loss: 3.0209 | LR: 3.04e-04 | GradNorm: 2.414
Epoch 6/10: Train=23.85%, Val=14.11%, Gap=9.74%, LR=2.97e-04
  Batch    0/48 | Loss: 2.9104 | LR: 2.94e-04 | GradNorm: 2.063
  Batch    4/48 | Loss: 2.9273 | LR: 2.85e-04 | GradNorm: 4.577
  Batch    8/48 | Loss: 2.9248 | LR: 2.75e-04 | GradNorm: 3.255
  Batch   12/48 | Loss: 2.8316 | LR: 2.65e-04 | GradNorm: 3.240
  Batch   16/48 | Loss: 2.8279 | LR: 2.56e-04 | GradNorm: 1.762
  Batch   20/48 | Loss: 2.9021 | LR: 2.46e-04 | GradNorm: 5.068
  Batch   24/48 | Loss: 2.9235 | LR: 2.37e-04 | GradNorm: 4.607
  Batch   28/48 | Loss: 2.9072 | LR: 2.27e-04 | GradNorm: 3.687
  Batch   32/48 | Loss: 2.9833 | LR: 2.18e-04 | GradNorm: 9.426
  Batch   36/48 | Loss: 2.8733 | LR: 2.08e-04 | GradNorm: 2.841
  Batch   40/48 | Loss: 2.8811 | LR: 1.99e-04 | GradNorm: 3.655
  Batch   44/48 | Loss: 2.8603 | LR: 1.90e-04 | GradNorm: 3.762
Epoch 7/10: Train=27.61%, Val=15.88%, Gap=11.73%, LR=1.83e-04
  Batch    0/48 | Loss: 2.8291 | LR: 1.81e-04 | GradNorm: 3.177
  Batch    4/48 | Loss: 2.7955 | LR: 1.72e-04 | GradNorm: 2.983
  Batch    8/48 | Loss: 2.7603 | LR: 1.63e-04 | GradNorm: 1.713
  Batch   12/48 | Loss: 2.8348 | LR: 1.55e-04 | GradNorm: 3.034
  Batch   16/48 | Loss: 2.8453 | LR: 1.46e-04 | GradNorm: 2.012
  Batch   20/48 | Loss: 2.7558 | LR: 1.38e-04 | GradNorm: 4.156
  Batch   24/48 | Loss: 2.7223 | LR: 1.30e-04 | GradNorm: 3.271
  Batch   28/48 | Loss: 2.7786 | LR: 1.22e-04 | GradNorm: 2.017
  Batch   32/48 | Loss: 2.7856 | LR: 1.14e-04 | GradNorm: 3.249
  Batch   36/48 | Loss: 2.7551 | LR: 1.07e-04 | GradNorm: 2.621
  Batch   40/48 | Loss: 2.6886 | LR: 9.93e-05 | GradNorm: 3.599
  Batch   44/48 | Loss: 2.7493 | LR: 9.22e-05 | GradNorm: 2.549
Epoch 8/10: Train=30.98%, Val=15.08%, Gap=15.90%, LR=8.70e-05
  Batch    0/48 | Loss: 2.7041 | LR: 8.53e-05 | GradNorm: 2.402
  Batch    4/48 | Loss: 2.6999 | LR: 7.86e-05 | GradNorm: 1.638
  Batch    8/48 | Loss: 2.7738 | LR: 7.21e-05 | GradNorm: 2.812
  Batch   12/48 | Loss: 2.7031 | LR: 6.59e-05 | GradNorm: 2.484
  Batch   16/48 | Loss: 2.6535 | LR: 5.99e-05 | GradNorm: 2.702
  Batch   20/48 | Loss: 2.6521 | LR: 5.42e-05 | GradNorm: 2.448
  Batch   24/48 | Loss: 2.6954 | LR: 4.88e-05 | GradNorm: 2.033
  Batch   28/48 | Loss: 2.7061 | LR: 4.36e-05 | GradNorm: 1.753
  Batch   32/48 | Loss: 2.6791 | LR: 3.86e-05 | GradNorm: 3.449
  Batch   36/48 | Loss: 2.6816 | LR: 3.40e-05 | GradNorm: 2.265
  Batch   40/48 | Loss: 2.6769 | LR: 2.96e-05 | GradNorm: 1.610
  Batch   44/48 | Loss: 2.6916 | LR: 2.56e-05 | GradNorm: 1.095
Epoch 9/10: Train=33.22%, Val=16.56%, Gap=16.66%, LR=2.27e-05
  Batch    0/48 | Loss: 2.6704 | LR: 2.18e-05 | GradNorm: 2.823
  Batch    4/48 | Loss: 2.6759 | LR: 1.83e-05 | GradNorm: 2.108
  Batch    8/48 | Loss: 2.6349 | LR: 1.51e-05 | GradNorm: 1.456
  Batch   12/48 | Loss: 2.6546 | LR: 1.22e-05 | GradNorm: 2.782
  Batch   16/48 | Loss: 2.6472 | LR: 9.59e-06 | GradNorm: 1.498
  Batch   20/48 | Loss: 2.6740 | LR: 7.31e-06 | GradNorm: 2.043
  Batch   24/48 | Loss: 2.6973 | LR: 5.34e-06 | GradNorm: 2.059
  Batch   28/48 | Loss: 2.6749 | LR: 3.68e-06 | GradNorm: 1.333
  Batch   32/48 | Loss: 2.6944 | LR: 2.33e-06 | GradNorm: 1.903
  Batch   36/48 | Loss: 2.6604 | LR: 1.30e-06 | GradNorm: 1.511
  Batch   40/48 | Loss: 2.6238 | LR: 5.86e-07 | GradNorm: 1.311
  Batch   44/48 | Loss: 2.6364 | LR: 1.89e-07 | GradNorm: 1.562
Epoch 10/10: Train=34.18%, Val=17.10%, Gap=17.08%, LR=1.00e-07
Best validation accuracy: 17.10%
