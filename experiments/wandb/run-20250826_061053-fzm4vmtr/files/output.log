=== W&B Sweep Run: LR=0.000445 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044452097394732346
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000445
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9467 | LR: 9.03e-06 | GradNorm: 1.444
  Batch    4/48 | Loss: 3.9234 | LR: 2.74e-05 | GradNorm: 0.858
  Batch    8/48 | Loss: 3.9243 | LR: 4.57e-05 | GradNorm: 0.814
  Batch   12/48 | Loss: 3.9082 | LR: 6.40e-05 | GradNorm: 0.572
  Batch   16/48 | Loss: 3.9271 | LR: 8.24e-05 | GradNorm: 0.700
  Batch   20/48 | Loss: 3.9155 | LR: 1.01e-04 | GradNorm: 0.626
  Batch   24/48 | Loss: 3.9066 | LR: 1.19e-04 | GradNorm: 0.565
  Batch   28/48 | Loss: 3.9165 | LR: 1.37e-04 | GradNorm: 0.575
  Batch   32/48 | Loss: 3.9056 | LR: 1.56e-04 | GradNorm: 0.502
  Batch   36/48 | Loss: 3.8980 | LR: 1.74e-04 | GradNorm: 0.595
  Batch   40/48 | Loss: 3.8571 | LR: 1.92e-04 | GradNorm: 0.610
  Batch   44/48 | Loss: 3.8027 | LR: 2.11e-04 | GradNorm: 0.815
Epoch 1/10: Train=2.80%, Val=3.40%, Gap=-0.60%, LR=2.24e-04
  Batch    0/48 | Loss: 4.0057 | LR: 2.29e-04 | GradNorm: 4.453
  Batch    4/48 | Loss: 3.8654 | LR: 2.47e-04 | GradNorm: 4.869
  Batch    8/48 | Loss: 3.7311 | LR: 2.66e-04 | GradNorm: 0.729
  Batch   12/48 | Loss: 3.6757 | LR: 2.84e-04 | GradNorm: 0.860
  Batch   16/48 | Loss: 3.7534 | LR: 3.02e-04 | GradNorm: 5.284
  Batch   20/48 | Loss: 3.7319 | LR: 3.21e-04 | GradNorm: 5.512
  Batch   24/48 | Loss: 3.6496 | LR: 3.39e-04 | GradNorm: 2.928
  Batch   28/48 | Loss: 3.6475 | LR: 3.57e-04 | GradNorm: 3.409
  Batch   32/48 | Loss: 3.6049 | LR: 3.76e-04 | GradNorm: 2.695
  Batch   36/48 | Loss: 3.7375 | LR: 3.94e-04 | GradNorm: 5.406
  Batch   40/48 | Loss: 3.7093 | LR: 4.12e-04 | GradNorm: 4.449
  Batch   44/48 | Loss: 3.6004 | LR: 4.31e-04 | GradNorm: 4.105
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.94%, Val=4.68%, Gap=2.26%, LR=4.45e-04
  Batch    0/48 | Loss: 3.6973 | LR: 4.45e-04 | GradNorm: 4.949
  Batch    4/48 | Loss: 3.6201 | LR: 4.44e-04 | GradNorm: 4.079
  Batch    8/48 | Loss: 3.5745 | LR: 4.44e-04 | GradNorm: 4.197
  Batch   12/48 | Loss: 3.5286 | LR: 4.43e-04 | GradNorm: 2.599
  Batch   16/48 | Loss: 3.4830 | LR: 4.42e-04 | GradNorm: 2.286
  Batch   20/48 | Loss: 3.4853 | LR: 4.41e-04 | GradNorm: 4.446
  Batch   24/48 | Loss: 3.5044 | LR: 4.40e-04 | GradNorm: 3.288
  Batch   28/48 | Loss: 3.4959 | LR: 4.38e-04 | GradNorm: 4.371
  Batch   32/48 | Loss: 3.4485 | LR: 4.36e-04 | GradNorm: 3.913
  Batch   36/48 | Loss: 3.4486 | LR: 4.34e-04 | GradNorm: 4.247
  Batch   40/48 | Loss: 3.3715 | LR: 4.32e-04 | GradNorm: 3.169
  Batch   44/48 | Loss: 3.3693 | LR: 4.30e-04 | GradNorm: 4.492
Epoch 3/10: Train=11.58%, Val=7.73%, Gap=3.85%, LR=4.28e-04
  Batch    0/48 | Loss: 3.2971 | LR: 4.27e-04 | GradNorm: 2.049
  Batch    4/48 | Loss: 3.2767 | LR: 4.24e-04 | GradNorm: 1.428
  Batch    8/48 | Loss: 3.2335 | LR: 4.21e-04 | GradNorm: 1.448
  Batch   12/48 | Loss: 3.2336 | LR: 4.17e-04 | GradNorm: 3.307
  Batch   16/48 | Loss: 3.3343 | LR: 4.14e-04 | GradNorm: 5.828
  Batch   20/48 | Loss: 3.2271 | LR: 4.10e-04 | GradNorm: 3.088
  Batch   24/48 | Loss: 3.1970 | LR: 4.06e-04 | GradNorm: 2.258
  Batch   28/48 | Loss: 3.2194 | LR: 4.02e-04 | GradNorm: 2.808
  Batch   32/48 | Loss: 3.2905 | LR: 3.97e-04 | GradNorm: 5.938
  Batch   36/48 | Loss: 3.1788 | LR: 3.93e-04 | GradNorm: 3.171
  Batch   40/48 | Loss: 3.1897 | LR: 3.88e-04 | GradNorm: 3.674
  Batch   44/48 | Loss: 3.1380 | LR: 3.83e-04 | GradNorm: 3.098
Epoch 4/10: Train=17.48%, Val=11.97%, Gap=5.51%, LR=3.79e-04
  Batch    0/48 | Loss: 3.1172 | LR: 3.78e-04 | GradNorm: 2.903
  Batch    4/48 | Loss: 3.0865 | LR: 3.73e-04 | GradNorm: 2.520
  Batch    8/48 | Loss: 3.1269 | LR: 3.67e-04 | GradNorm: 3.085
  Batch   12/48 | Loss: 3.0772 | LR: 3.62e-04 | GradNorm: 1.883
  Batch   16/48 | Loss: 3.1568 | LR: 3.56e-04 | GradNorm: 4.085
  Batch   20/48 | Loss: 3.0688 | LR: 3.50e-04 | GradNorm: 2.166
  Batch   24/48 | Loss: 3.1302 | LR: 3.44e-04 | GradNorm: 3.282
  Batch   28/48 | Loss: 3.0651 | LR: 3.38e-04 | GradNorm: 3.568
  Batch   32/48 | Loss: 3.0012 | LR: 3.32e-04 | GradNorm: 1.692
  Batch   36/48 | Loss: 3.0959 | LR: 3.25e-04 | GradNorm: 4.021
  Batch   40/48 | Loss: 3.0935 | LR: 3.19e-04 | GradNorm: 3.345
  Batch   44/48 | Loss: 3.0226 | LR: 3.12e-04 | GradNorm: 1.907
Epoch 5/10: Train=21.48%, Val=12.41%, Gap=9.07%, LR=3.07e-04
  Batch    0/48 | Loss: 3.0220 | LR: 3.06e-04 | GradNorm: 3.917
  Batch    4/48 | Loss: 2.9476 | LR: 2.99e-04 | GradNorm: 3.745
  Batch    8/48 | Loss: 2.9551 | LR: 2.92e-04 | GradNorm: 2.473
  Batch   12/48 | Loss: 2.8987 | LR: 2.85e-04 | GradNorm: 1.936
  Batch   16/48 | Loss: 2.9063 | LR: 2.78e-04 | GradNorm: 2.829
  Batch   20/48 | Loss: 2.9277 | LR: 2.71e-04 | GradNorm: 4.319
  Batch   24/48 | Loss: 2.9386 | LR: 2.64e-04 | GradNorm: 4.817
  Batch   28/48 | Loss: 2.8487 | LR: 2.57e-04 | GradNorm: 3.556
  Batch   32/48 | Loss: 2.8773 | LR: 2.50e-04 | GradNorm: 6.017
  Batch   36/48 | Loss: 2.8762 | LR: 2.42e-04 | GradNorm: 3.760
  Batch   40/48 | Loss: 2.8567 | LR: 2.35e-04 | GradNorm: 2.803
  Batch   44/48 | Loss: 2.8935 | LR: 2.28e-04 | GradNorm: 4.276
Epoch 6/10: Train=26.60%, Val=16.04%, Gap=10.56%, LR=2.22e-04
  Batch    0/48 | Loss: 2.8656 | LR: 2.20e-04 | GradNorm: 5.616
  Batch    4/48 | Loss: 2.8259 | LR: 2.13e-04 | GradNorm: 2.246
  Batch    8/48 | Loss: 2.8643 | LR: 2.06e-04 | GradNorm: 5.645
  Batch   12/48 | Loss: 2.8061 | LR: 1.99e-04 | GradNorm: 5.850
  Batch   16/48 | Loss: 2.7991 | LR: 1.92e-04 | GradNorm: 3.956
  Batch   20/48 | Loss: 2.8105 | LR: 1.84e-04 | GradNorm: 3.642
  Batch   24/48 | Loss: 2.8406 | LR: 1.77e-04 | GradNorm: 4.451
  Batch   28/48 | Loss: 2.8006 | LR: 1.70e-04 | GradNorm: 2.746
  Batch   32/48 | Loss: 2.8149 | LR: 1.63e-04 | GradNorm: 4.003
  Batch   36/48 | Loss: 2.8344 | LR: 1.56e-04 | GradNorm: 5.045
  Batch   40/48 | Loss: 2.7710 | LR: 1.49e-04 | GradNorm: 4.035
  Batch   44/48 | Loss: 2.7498 | LR: 1.42e-04 | GradNorm: 3.219
Epoch 7/10: Train=30.42%, Val=19.65%, Gap=10.77%, LR=1.37e-04
  Batch    0/48 | Loss: 2.7271 | LR: 1.36e-04 | GradNorm: 3.410
  Batch    4/48 | Loss: 2.6928 | LR: 1.29e-04 | GradNorm: 3.611
  Batch    8/48 | Loss: 2.6701 | LR: 1.22e-04 | GradNorm: 4.131
  Batch   12/48 | Loss: 2.7412 | LR: 1.16e-04 | GradNorm: 4.547
  Batch   16/48 | Loss: 2.7522 | LR: 1.10e-04 | GradNorm: 3.480
  Batch   20/48 | Loss: 2.6513 | LR: 1.03e-04 | GradNorm: 3.935
  Batch   24/48 | Loss: 2.6371 | LR: 9.73e-05 | GradNorm: 4.255
  Batch   28/48 | Loss: 2.6744 | LR: 9.14e-05 | GradNorm: 3.359
  Batch   32/48 | Loss: 2.6727 | LR: 8.56e-05 | GradNorm: 4.353
  Batch   36/48 | Loss: 2.6687 | LR: 7.99e-05 | GradNorm: 5.041
  Batch   40/48 | Loss: 2.5895 | LR: 7.44e-05 | GradNorm: 4.035
  Batch   44/48 | Loss: 2.6467 | LR: 6.91e-05 | GradNorm: 4.055
Epoch 8/10: Train=34.86%, Val=22.23%, Gap=12.63%, LR=6.52e-05
  Batch    0/48 | Loss: 2.6064 | LR: 6.39e-05 | GradNorm: 1.858
  Batch    4/48 | Loss: 2.6074 | LR: 5.89e-05 | GradNorm: 3.285
  Batch    8/48 | Loss: 2.6421 | LR: 5.41e-05 | GradNorm: 2.411
  Batch   12/48 | Loss: 2.5860 | LR: 4.94e-05 | GradNorm: 3.848
  Batch   16/48 | Loss: 2.5481 | LR: 4.49e-05 | GradNorm: 2.924
  Batch   20/48 | Loss: 2.5459 | LR: 4.06e-05 | GradNorm: 2.089
  Batch   24/48 | Loss: 2.5807 | LR: 3.65e-05 | GradNorm: 3.242
  Batch   28/48 | Loss: 2.6024 | LR: 3.27e-05 | GradNorm: 2.440
  Batch   32/48 | Loss: 2.5755 | LR: 2.90e-05 | GradNorm: 3.009
  Batch   36/48 | Loss: 2.5683 | LR: 2.55e-05 | GradNorm: 2.462
  Batch   40/48 | Loss: 2.5704 | LR: 2.22e-05 | GradNorm: 3.475
  Batch   44/48 | Loss: 2.5702 | LR: 1.92e-05 | GradNorm: 4.370
Epoch 9/10: Train=37.51%, Val=24.60%, Gap=12.91%, LR=1.70e-05
  Batch    0/48 | Loss: 2.5560 | LR: 1.63e-05 | GradNorm: 4.272
  Batch    4/48 | Loss: 2.5700 | LR: 1.37e-05 | GradNorm: 2.846
  Batch    8/48 | Loss: 2.5143 | LR: 1.13e-05 | GradNorm: 1.823
  Batch   12/48 | Loss: 2.5254 | LR: 9.15e-06 | GradNorm: 2.748
  Batch   16/48 | Loss: 2.5326 | LR: 7.21e-06 | GradNorm: 2.188
  Batch   20/48 | Loss: 2.5467 | LR: 5.50e-06 | GradNorm: 3.151
  Batch   24/48 | Loss: 2.5580 | LR: 4.02e-06 | GradNorm: 2.908
  Batch   28/48 | Loss: 2.5854 | LR: 2.78e-06 | GradNorm: 2.211
  Batch   32/48 | Loss: 2.5772 | LR: 1.77e-06 | GradNorm: 1.908
  Batch   36/48 | Loss: 2.5363 | LR: 9.99e-07 | GradNorm: 2.059
  Batch   40/48 | Loss: 2.5195 | LR: 4.64e-07 | GradNorm: 2.082
  Batch   44/48 | Loss: 2.5222 | LR: 1.67e-07 | GradNorm: 2.532
Epoch 10/10: Train=38.32%, Val=24.23%, Gap=14.09%, LR=1.00e-07
Best validation accuracy: 24.60%
