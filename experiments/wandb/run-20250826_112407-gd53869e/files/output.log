=== W&B Sweep Run: LR=0.000298 ===
Using device: cuda
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.47s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00029816670658295896
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000298
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9487 | LR: 6.06e-06 | GradNorm: 1.601
  Batch    4/48 | Loss: 3.9282 | LR: 1.84e-05 | GradNorm: 0.928
  Batch    8/48 | Loss: 3.9259 | LR: 3.07e-05 | GradNorm: 0.949
  Batch   12/48 | Loss: 3.9095 | LR: 4.30e-05 | GradNorm: 0.611
  Batch   16/48 | Loss: 3.9162 | LR: 5.53e-05 | GradNorm: 0.612
  Batch   20/48 | Loss: 3.9137 | LR: 6.76e-05 | GradNorm: 0.619
  Batch   24/48 | Loss: 3.9122 | LR: 7.99e-05 | GradNorm: 0.670
  Batch   28/48 | Loss: 3.9185 | LR: 9.22e-05 | GradNorm: 0.610
  Batch   32/48 | Loss: 3.9054 | LR: 1.04e-04 | GradNorm: 0.500
  Batch   36/48 | Loss: 3.9072 | LR: 1.17e-04 | GradNorm: 0.554
  Batch   40/48 | Loss: 3.8957 | LR: 1.29e-04 | GradNorm: 0.571
  Batch   44/48 | Loss: 3.8760 | LR: 1.41e-04 | GradNorm: 0.730
Epoch 1/10: Train=2.47%, Val=4.49%, Gap=-2.02%, LR=1.51e-04
  Batch    0/48 | Loss: 3.8216 | LR: 1.54e-04 | GradNorm: 0.937
  Batch    4/48 | Loss: 3.8682 | LR: 1.66e-04 | GradNorm: 7.129
  Batch    8/48 | Loss: 3.9811 | LR: 1.78e-04 | GradNorm: 5.712
  Batch   12/48 | Loss: 3.7587 | LR: 1.91e-04 | GradNorm: 3.583
  Batch   16/48 | Loss: 3.8370 | LR: 2.03e-04 | GradNorm: 4.104
  Batch   20/48 | Loss: 3.8004 | LR: 2.15e-04 | GradNorm: 1.965
  Batch   24/48 | Loss: 3.7690 | LR: 2.27e-04 | GradNorm: 2.709
  Batch   28/48 | Loss: 3.7648 | LR: 2.40e-04 | GradNorm: 3.443
  Batch   32/48 | Loss: 3.7915 | LR: 2.52e-04 | GradNorm: 5.607
  Batch   36/48 | Loss: 3.6931 | LR: 2.64e-04 | GradNorm: 1.766
  Batch   40/48 | Loss: 3.6992 | LR: 2.77e-04 | GradNorm: 2.247
  Batch   44/48 | Loss: 3.6455 | LR: 2.89e-04 | GradNorm: 2.054
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.59%, Val=6.57%, Gap=-0.98%, LR=2.98e-04
  Batch    0/48 | Loss: 3.5809 | LR: 2.98e-04 | GradNorm: 1.454
  Batch    4/48 | Loss: 3.8822 | LR: 2.98e-04 | GradNorm: 6.147
  Batch    8/48 | Loss: 3.6071 | LR: 2.98e-04 | GradNorm: 1.577
  Batch   12/48 | Loss: 3.6374 | LR: 2.97e-04 | GradNorm: 2.793
  Batch   16/48 | Loss: 3.6097 | LR: 2.97e-04 | GradNorm: 2.185
  Batch   20/48 | Loss: 3.5463 | LR: 2.96e-04 | GradNorm: 2.975
  Batch   24/48 | Loss: 3.5086 | LR: 2.95e-04 | GradNorm: 1.419
  Batch   28/48 | Loss: 3.5048 | LR: 2.94e-04 | GradNorm: 3.856
  Batch   32/48 | Loss: 3.5728 | LR: 2.93e-04 | GradNorm: 4.621
  Batch   36/48 | Loss: 3.4918 | LR: 2.91e-04 | GradNorm: 3.370
  Batch   40/48 | Loss: 3.4621 | LR: 2.90e-04 | GradNorm: 3.946
  Batch   44/48 | Loss: 3.4244 | LR: 2.88e-04 | GradNorm: 3.242
Epoch 3/10: Train=9.90%, Val=11.55%, Gap=-1.65%, LR=2.87e-04
  Batch    0/48 | Loss: 3.4184 | LR: 2.86e-04 | GradNorm: 5.634
  Batch    4/48 | Loss: 3.3905 | LR: 2.84e-04 | GradNorm: 4.394
  Batch    8/48 | Loss: 3.3486 | LR: 2.82e-04 | GradNorm: 3.608
  Batch   12/48 | Loss: 3.2890 | LR: 2.80e-04 | GradNorm: 2.536
  Batch   16/48 | Loss: 3.3047 | LR: 2.78e-04 | GradNorm: 3.723
  Batch   20/48 | Loss: 3.2728 | LR: 2.75e-04 | GradNorm: 2.474
  Batch   24/48 | Loss: 3.2835 | LR: 2.72e-04 | GradNorm: 4.821
  Batch   28/48 | Loss: 3.2552 | LR: 2.70e-04 | GradNorm: 4.581
  Batch   32/48 | Loss: 3.2917 | LR: 2.67e-04 | GradNorm: 2.708
  Batch   36/48 | Loss: 3.2606 | LR: 2.64e-04 | GradNorm: 3.462
  Batch   40/48 | Loss: 3.2706 | LR: 2.60e-04 | GradNorm: 3.309
  Batch   44/48 | Loss: 3.2010 | LR: 2.57e-04 | GradNorm: 2.690
Epoch 4/10: Train=16.08%, Val=13.87%, Gap=2.21%, LR=2.55e-04
  Batch    0/48 | Loss: 3.2110 | LR: 2.54e-04 | GradNorm: 3.732
  Batch    4/48 | Loss: 3.1605 | LR: 2.50e-04 | GradNorm: 4.138
  Batch    8/48 | Loss: 3.1358 | LR: 2.46e-04 | GradNorm: 2.808
  Batch   12/48 | Loss: 3.1132 | LR: 2.43e-04 | GradNorm: 2.425
  Batch   16/48 | Loss: 3.2577 | LR: 2.39e-04 | GradNorm: 6.675
  Batch   20/48 | Loss: 3.2086 | LR: 2.35e-04 | GradNorm: 5.829
  Batch   24/48 | Loss: 3.2221 | LR: 2.31e-04 | GradNorm: 5.311
  Batch   28/48 | Loss: 3.2222 | LR: 2.27e-04 | GradNorm: 7.469
  Batch   32/48 | Loss: 3.1988 | LR: 2.23e-04 | GradNorm: 7.459
  Batch   36/48 | Loss: 3.1742 | LR: 2.18e-04 | GradNorm: 3.323
  Batch   40/48 | Loss: 3.1724 | LR: 2.14e-04 | GradNorm: 5.549
  Batch   44/48 | Loss: 3.1600 | LR: 2.10e-04 | GradNorm: 5.140
Epoch 5/10: Train=19.42%, Val=14.64%, Gap=4.78%, LR=2.06e-04
  Batch    0/48 | Loss: 3.0644 | LR: 2.05e-04 | GradNorm: 3.862
  Batch    4/48 | Loss: 3.0304 | LR: 2.00e-04 | GradNorm: 2.920
  Batch    8/48 | Loss: 3.0367 | LR: 1.96e-04 | GradNorm: 3.137
  Batch   12/48 | Loss: 3.0375 | LR: 1.91e-04 | GradNorm: 2.736
  Batch   16/48 | Loss: 3.0131 | LR: 1.87e-04 | GradNorm: 2.886
  Batch   20/48 | Loss: 3.0406 | LR: 1.82e-04 | GradNorm: 6.806
  Batch   24/48 | Loss: 3.0186 | LR: 1.77e-04 | GradNorm: 3.816
  Batch   28/48 | Loss: 2.9608 | LR: 1.72e-04 | GradNorm: 3.373
  Batch   32/48 | Loss: 2.9723 | LR: 1.67e-04 | GradNorm: 5.794
  Batch   36/48 | Loss: 3.0060 | LR: 1.63e-04 | GradNorm: 6.315
  Batch   40/48 | Loss: 2.9589 | LR: 1.58e-04 | GradNorm: 3.621
  Batch   44/48 | Loss: 3.0502 | LR: 1.53e-04 | GradNorm: 8.106
Epoch 6/10: Train=24.01%, Val=15.35%, Gap=8.66%, LR=1.49e-04
  Batch    0/48 | Loss: 2.9554 | LR: 1.48e-04 | GradNorm: 4.222
  Batch    4/48 | Loss: 2.9630 | LR: 1.43e-04 | GradNorm: 6.712
  Batch    8/48 | Loss: 2.9231 | LR: 1.38e-04 | GradNorm: 3.511
  Batch   12/48 | Loss: 2.8537 | LR: 1.33e-04 | GradNorm: 5.416
  Batch   16/48 | Loss: 2.8790 | LR: 1.28e-04 | GradNorm: 4.054
  Batch   20/48 | Loss: 2.9554 | LR: 1.24e-04 | GradNorm: 8.480
  Batch   24/48 | Loss: 2.9458 | LR: 1.19e-04 | GradNorm: 5.783
  Batch   28/48 | Loss: 2.9283 | LR: 1.14e-04 | GradNorm: 5.681
  Batch   32/48 | Loss: 2.9081 | LR: 1.09e-04 | GradNorm: 4.564
  Batch   36/48 | Loss: 2.9151 | LR: 1.05e-04 | GradNorm: 4.058
  Batch   40/48 | Loss: 2.8762 | LR: 1.00e-04 | GradNorm: 3.991
  Batch   44/48 | Loss: 2.8688 | LR: 9.55e-05 | GradNorm: 2.205
Epoch 7/10: Train=27.79%, Val=16.46%, Gap=11.33%, LR=9.21e-05
  Batch    0/48 | Loss: 2.8559 | LR: 9.10e-05 | GradNorm: 2.521
  Batch    4/48 | Loss: 2.8046 | LR: 8.65e-05 | GradNorm: 3.300
  Batch    8/48 | Loss: 2.8257 | LR: 8.21e-05 | GradNorm: 4.186
  Batch   12/48 | Loss: 2.8682 | LR: 7.78e-05 | GradNorm: 4.052
  Batch   16/48 | Loss: 2.9008 | LR: 7.36e-05 | GradNorm: 7.722
  Batch   20/48 | Loss: 2.8254 | LR: 6.94e-05 | GradNorm: 8.637
  Batch   24/48 | Loss: 2.8007 | LR: 6.53e-05 | GradNorm: 4.718
  Batch   28/48 | Loss: 2.8365 | LR: 6.13e-05 | GradNorm: 3.533
  Batch   32/48 | Loss: 2.8071 | LR: 5.74e-05 | GradNorm: 2.210
  Batch   36/48 | Loss: 2.8236 | LR: 5.36e-05 | GradNorm: 6.471
  Batch   40/48 | Loss: 2.7629 | LR: 5.00e-05 | GradNorm: 5.209
  Batch   44/48 | Loss: 2.8298 | LR: 4.64e-05 | GradNorm: 3.171
Epoch 8/10: Train=30.17%, Val=15.44%, Gap=14.73%, LR=4.38e-05
  Batch    0/48 | Loss: 2.7746 | LR: 4.29e-05 | GradNorm: 4.243
  Batch    4/48 | Loss: 2.7526 | LR: 3.95e-05 | GradNorm: 1.941
  Batch    8/48 | Loss: 2.8381 | LR: 3.63e-05 | GradNorm: 5.654
  Batch   12/48 | Loss: 2.7588 | LR: 3.32e-05 | GradNorm: 4.383
  Batch   16/48 | Loss: 2.7098 | LR: 3.02e-05 | GradNorm: 3.231
  Batch   20/48 | Loss: 2.7309 | LR: 2.73e-05 | GradNorm: 2.437
  Batch   24/48 | Loss: 2.7582 | LR: 2.45e-05 | GradNorm: 1.645
  Batch   28/48 | Loss: 2.7712 | LR: 2.19e-05 | GradNorm: 2.294
  Batch   32/48 | Loss: 2.7650 | LR: 1.95e-05 | GradNorm: 3.384
  Batch   36/48 | Loss: 2.7568 | LR: 1.71e-05 | GradNorm: 4.986
  Batch   40/48 | Loss: 2.7307 | LR: 1.49e-05 | GradNorm: 2.896
  Batch   44/48 | Loss: 2.7417 | LR: 1.29e-05 | GradNorm: 2.185
Epoch 9/10: Train=32.12%, Val=15.80%, Gap=16.32%, LR=1.14e-05
  Batch    0/48 | Loss: 2.7540 | LR: 1.10e-05 | GradNorm: 2.432
  Batch    4/48 | Loss: 2.7255 | LR: 9.23e-06 | GradNorm: 2.495
  Batch    8/48 | Loss: 2.7148 | LR: 7.62e-06 | GradNorm: 1.313
  Batch   12/48 | Loss: 2.7147 | LR: 6.17e-06 | GradNorm: 3.367
  Batch   16/48 | Loss: 2.7209 | LR: 4.87e-06 | GradNorm: 1.651
  Batch   20/48 | Loss: 2.7306 | LR: 3.72e-06 | GradNorm: 2.400
  Batch   24/48 | Loss: 2.7259 | LR: 2.73e-06 | GradNorm: 2.212
  Batch   28/48 | Loss: 2.7548 | LR: 1.90e-06 | GradNorm: 2.021
  Batch   32/48 | Loss: 2.7541 | LR: 1.22e-06 | GradNorm: 3.101
  Batch   36/48 | Loss: 2.7208 | LR: 7.03e-07 | GradNorm: 1.802
  Batch   40/48 | Loss: 2.6978 | LR: 3.44e-07 | GradNorm: 1.805
  Batch   44/48 | Loss: 2.7172 | LR: 1.45e-07 | GradNorm: 2.368
Epoch 10/10: Train=33.05%, Val=16.06%, Gap=16.99%, LR=1.00e-07
Best validation accuracy: 16.46%
