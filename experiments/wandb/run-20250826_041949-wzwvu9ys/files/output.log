=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002687458687689337
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9477 | LR: 5.46e-06 | GradNorm: 1.473
  Batch    4/48 | Loss: 3.9249 | LR: 1.65e-05 | GradNorm: 1.016
  Batch    8/48 | Loss: 3.9183 | LR: 2.76e-05 | GradNorm: 0.970
  Batch   12/48 | Loss: 3.9111 | LR: 3.87e-05 | GradNorm: 0.725
  Batch   16/48 | Loss: 3.9181 | LR: 4.98e-05 | GradNorm: 0.709
  Batch   20/48 | Loss: 3.9163 | LR: 6.09e-05 | GradNorm: 0.721
  Batch   24/48 | Loss: 3.9082 | LR: 7.20e-05 | GradNorm: 0.637
  Batch   28/48 | Loss: 3.9134 | LR: 8.31e-05 | GradNorm: 0.599
  Batch   32/48 | Loss: 3.9055 | LR: 9.41e-05 | GradNorm: 0.534
  Batch   36/48 | Loss: 3.9040 | LR: 1.05e-04 | GradNorm: 0.603
  Batch   40/48 | Loss: 3.8920 | LR: 1.16e-04 | GradNorm: 0.674
  Batch   44/48 | Loss: 3.8534 | LR: 1.27e-04 | GradNorm: 1.749
Epoch 1/10: Train=2.84%, Val=4.95%, Gap=-2.11%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8116 | LR: 1.38e-04 | GradNorm: 2.802
  Batch    4/48 | Loss: 3.8464 | LR: 1.50e-04 | GradNorm: 6.266
  Batch    8/48 | Loss: 3.8826 | LR: 1.61e-04 | GradNorm: 8.089
  Batch   12/48 | Loss: 3.8689 | LR: 1.72e-04 | GradNorm: 6.539
  Batch   16/48 | Loss: 3.9401 | LR: 1.83e-04 | GradNorm: 3.512
  Batch   20/48 | Loss: 3.8206 | LR: 1.94e-04 | GradNorm: 2.341
  Batch   24/48 | Loss: 3.7723 | LR: 2.05e-04 | GradNorm: 2.811
  Batch   28/48 | Loss: 3.7335 | LR: 2.16e-04 | GradNorm: 0.635
  Batch   32/48 | Loss: 3.7919 | LR: 2.27e-04 | GradNorm: 5.432
  Batch   36/48 | Loss: 3.7999 | LR: 2.38e-04 | GradNorm: 5.143
  Batch   40/48 | Loss: 3.6984 | LR: 2.49e-04 | GradNorm: 1.643
  Batch   44/48 | Loss: 3.6663 | LR: 2.60e-04 | GradNorm: 1.748
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.31%, Val=5.48%, Gap=-0.17%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6203 | LR: 2.69e-04 | GradNorm: 2.135
  Batch    4/48 | Loss: 3.6012 | LR: 2.69e-04 | GradNorm: 2.601
  Batch    8/48 | Loss: 3.5617 | LR: 2.68e-04 | GradNorm: 3.338
  Batch   12/48 | Loss: 3.5373 | LR: 2.68e-04 | GradNorm: 1.856
  Batch   16/48 | Loss: 3.4898 | LR: 2.67e-04 | GradNorm: 1.841
  Batch   20/48 | Loss: 3.5065 | LR: 2.67e-04 | GradNorm: 8.151
  Batch   24/48 | Loss: 3.4629 | LR: 2.66e-04 | GradNorm: 4.478
  Batch   28/48 | Loss: 3.3941 | LR: 2.65e-04 | GradNorm: 3.749
  Batch   32/48 | Loss: 3.4462 | LR: 2.64e-04 | GradNorm: 3.838
  Batch   36/48 | Loss: 3.4008 | LR: 2.63e-04 | GradNorm: 2.848
  Batch   40/48 | Loss: 3.3578 | LR: 2.61e-04 | GradNorm: 3.677
  Batch   44/48 | Loss: 3.3994 | LR: 2.60e-04 | GradNorm: 4.587
Epoch 3/10: Train=11.88%, Val=12.53%, Gap=-0.65%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3220 | LR: 2.58e-04 | GradNorm: 1.967
  Batch    4/48 | Loss: 3.3266 | LR: 2.56e-04 | GradNorm: 3.465
  Batch    8/48 | Loss: 3.3017 | LR: 2.54e-04 | GradNorm: 3.279
  Batch   12/48 | Loss: 3.2772 | LR: 2.52e-04 | GradNorm: 4.736
  Batch   16/48 | Loss: 3.2897 | LR: 2.50e-04 | GradNorm: 3.460
  Batch   20/48 | Loss: 3.2534 | LR: 2.48e-04 | GradNorm: 3.060
  Batch   24/48 | Loss: 3.2330 | LR: 2.45e-04 | GradNorm: 2.690
  Batch   28/48 | Loss: 3.2099 | LR: 2.43e-04 | GradNorm: 2.553
  Batch   32/48 | Loss: 3.2697 | LR: 2.40e-04 | GradNorm: 5.295
  Batch   36/48 | Loss: 3.2358 | LR: 2.38e-04 | GradNorm: 5.127
  Batch   40/48 | Loss: 3.2203 | LR: 2.35e-04 | GradNorm: 2.360
  Batch   44/48 | Loss: 3.2006 | LR: 2.32e-04 | GradNorm: 4.149
Epoch 4/10: Train=16.89%, Val=13.45%, Gap=3.44%, LR=2.29e-04
  Batch    0/48 | Loss: 3.1509 | LR: 2.29e-04 | GradNorm: 1.834
  Batch    4/48 | Loss: 3.1663 | LR: 2.25e-04 | GradNorm: 5.226
  Batch    8/48 | Loss: 3.1770 | LR: 2.22e-04 | GradNorm: 6.235
  Batch   12/48 | Loss: 3.1253 | LR: 2.19e-04 | GradNorm: 3.933
  Batch   16/48 | Loss: 3.1802 | LR: 2.15e-04 | GradNorm: 2.465
  Batch   20/48 | Loss: 3.1793 | LR: 2.12e-04 | GradNorm: 6.006
  Batch   24/48 | Loss: 3.1596 | LR: 2.08e-04 | GradNorm: 2.651
  Batch   28/48 | Loss: 3.1445 | LR: 2.04e-04 | GradNorm: 6.047
  Batch   32/48 | Loss: 3.1272 | LR: 2.01e-04 | GradNorm: 5.673
  Batch   36/48 | Loss: 3.1475 | LR: 1.97e-04 | GradNorm: 3.208
  Batch   40/48 | Loss: 3.1281 | LR: 1.93e-04 | GradNorm: 3.417
  Batch   44/48 | Loss: 3.0823 | LR: 1.89e-04 | GradNorm: 2.118
Epoch 5/10: Train=20.24%, Val=12.31%, Gap=7.93%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0435 | LR: 1.85e-04 | GradNorm: 2.789
  Batch    4/48 | Loss: 3.0234 | LR: 1.81e-04 | GradNorm: 5.370
  Batch    8/48 | Loss: 3.0557 | LR: 1.77e-04 | GradNorm: 6.670
  Batch   12/48 | Loss: 3.0337 | LR: 1.72e-04 | GradNorm: 6.165
  Batch   16/48 | Loss: 2.9808 | LR: 1.68e-04 | GradNorm: 4.011
  Batch   20/48 | Loss: 2.9666 | LR: 1.64e-04 | GradNorm: 3.110
  Batch   24/48 | Loss: 3.1009 | LR: 1.60e-04 | GradNorm: 17.729
  Batch   28/48 | Loss: 2.9336 | LR: 1.55e-04 | GradNorm: 3.754
  Batch   32/48 | Loss: 2.9387 | LR: 1.51e-04 | GradNorm: 2.976
  Batch   36/48 | Loss: 2.9543 | LR: 1.46e-04 | GradNorm: 2.526
  Batch   40/48 | Loss: 2.9392 | LR: 1.42e-04 | GradNorm: 1.848
  Batch   44/48 | Loss: 2.9872 | LR: 1.38e-04 | GradNorm: 2.258
Epoch 6/10: Train=24.77%, Val=14.11%, Gap=10.66%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9514 | LR: 1.33e-04 | GradNorm: 7.132
  Batch    4/48 | Loss: 2.9627 | LR: 1.29e-04 | GradNorm: 9.421
  Batch    8/48 | Loss: 2.9125 | LR: 1.25e-04 | GradNorm: 3.912
  Batch   12/48 | Loss: 2.8388 | LR: 1.20e-04 | GradNorm: 5.939
  Batch   16/48 | Loss: 2.8545 | LR: 1.16e-04 | GradNorm: 3.370
  Batch   20/48 | Loss: 2.9001 | LR: 1.11e-04 | GradNorm: 2.978
  Batch   24/48 | Loss: 2.9199 | LR: 1.07e-04 | GradNorm: 7.043
  Batch   28/48 | Loss: 2.9115 | LR: 1.03e-04 | GradNorm: 4.853
  Batch   32/48 | Loss: 2.8921 | LR: 9.86e-05 | GradNorm: 3.187
  Batch   36/48 | Loss: 2.8798 | LR: 9.44e-05 | GradNorm: 3.737
  Batch   40/48 | Loss: 2.8663 | LR: 9.02e-05 | GradNorm: 4.301
  Batch   44/48 | Loss: 2.8622 | LR: 8.61e-05 | GradNorm: 5.207
Epoch 7/10: Train=28.35%, Val=18.36%, Gap=9.99%, LR=8.30e-05
  Batch    0/48 | Loss: 2.8742 | LR: 8.20e-05 | GradNorm: 4.742
  Batch    4/48 | Loss: 2.8071 | LR: 7.80e-05 | GradNorm: 4.162
  Batch    8/48 | Loss: 2.8155 | LR: 7.40e-05 | GradNorm: 6.027
  Batch   12/48 | Loss: 2.8396 | LR: 7.01e-05 | GradNorm: 1.683
  Batch   16/48 | Loss: 2.8628 | LR: 6.63e-05 | GradNorm: 7.249
  Batch   20/48 | Loss: 2.7756 | LR: 6.26e-05 | GradNorm: 2.483
  Batch   24/48 | Loss: 2.7611 | LR: 5.89e-05 | GradNorm: 3.272
  Batch   28/48 | Loss: 2.8144 | LR: 5.53e-05 | GradNorm: 4.033
  Batch   32/48 | Loss: 2.7919 | LR: 5.18e-05 | GradNorm: 2.177
  Batch   36/48 | Loss: 2.7835 | LR: 4.84e-05 | GradNorm: 2.598
  Batch   40/48 | Loss: 2.7375 | LR: 4.50e-05 | GradNorm: 4.017
  Batch   44/48 | Loss: 2.7830 | LR: 4.18e-05 | GradNorm: 5.554
Epoch 8/10: Train=30.70%, Val=18.81%, Gap=11.89%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7437 | LR: 3.87e-05 | GradNorm: 4.501
  Batch    4/48 | Loss: 2.7343 | LR: 3.56e-05 | GradNorm: 2.420
  Batch    8/48 | Loss: 2.7880 | LR: 3.27e-05 | GradNorm: 2.861
  Batch   12/48 | Loss: 2.7434 | LR: 2.99e-05 | GradNorm: 2.208
  Batch   16/48 | Loss: 2.6851 | LR: 2.72e-05 | GradNorm: 2.394
  Batch   20/48 | Loss: 2.7047 | LR: 2.46e-05 | GradNorm: 3.834
  Batch   24/48 | Loss: 2.7354 | LR: 2.21e-05 | GradNorm: 4.657
  Batch   28/48 | Loss: 2.7564 | LR: 1.98e-05 | GradNorm: 3.328
  Batch   32/48 | Loss: 2.7277 | LR: 1.76e-05 | GradNorm: 3.484
  Batch   36/48 | Loss: 2.7146 | LR: 1.54e-05 | GradNorm: 3.119
  Batch   40/48 | Loss: 2.7110 | LR: 1.35e-05 | GradNorm: 2.855
  Batch   44/48 | Loss: 2.7175 | LR: 1.16e-05 | GradNorm: 1.843
Epoch 9/10: Train=32.78%, Val=17.75%, Gap=15.03%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7228 | LR: 9.91e-06 | GradNorm: 2.371
  Batch    4/48 | Loss: 2.7089 | LR: 8.33e-06 | GradNorm: 2.981
  Batch    8/48 | Loss: 2.6832 | LR: 6.88e-06 | GradNorm: 2.454
  Batch   12/48 | Loss: 2.6931 | LR: 5.57e-06 | GradNorm: 3.018
  Batch   16/48 | Loss: 2.7156 | LR: 4.40e-06 | GradNorm: 1.817
  Batch   20/48 | Loss: 2.7139 | LR: 3.36e-06 | GradNorm: 2.240
  Batch   24/48 | Loss: 2.7080 | LR: 2.47e-06 | GradNorm: 2.498
  Batch   28/48 | Loss: 2.7262 | LR: 1.72e-06 | GradNorm: 1.848
  Batch   32/48 | Loss: 2.7352 | LR: 1.11e-06 | GradNorm: 2.556
  Batch   36/48 | Loss: 2.6946 | LR: 6.44e-07 | GradNorm: 1.671
  Batch   40/48 | Loss: 2.6777 | LR: 3.20e-07 | GradNorm: 2.156
  Batch   44/48 | Loss: 2.6884 | LR: 1.40e-07 | GradNorm: 2.919
Epoch 10/10: Train=33.82%, Val=18.04%, Gap=15.78%, LR=1.00e-07
Best validation accuracy: 18.81%
