=== W&B Sweep Run: LR=0.002240 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00223999473576823
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002240
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9532 | LR: 4.55e-05 | GradNorm: 1.645
  Batch    4/48 | Loss: 3.9267 | LR: 1.38e-04 | GradNorm: 0.770
  Batch    8/48 | Loss: 3.9190 | LR: 2.30e-04 | GradNorm: 0.500
  Batch   12/48 | Loss: 3.9118 | LR: 3.23e-04 | GradNorm: 0.448
  Batch   16/48 | Loss: 3.9213 | LR: 4.15e-04 | GradNorm: 0.497
  Batch   20/48 | Loss: 3.9126 | LR: 5.07e-04 | GradNorm: 0.532
  Batch   24/48 | Loss: 3.8767 | LR: 6.00e-04 | GradNorm: 0.568
  Batch   28/48 | Loss: 3.9200 | LR: 6.92e-04 | GradNorm: 2.387
  Batch   32/48 | Loss: 3.9183 | LR: 7.85e-04 | GradNorm: 1.006
  Batch   36/48 | Loss: 3.8702 | LR: 8.77e-04 | GradNorm: 0.589
  Batch   40/48 | Loss: 3.8245 | LR: 9.69e-04 | GradNorm: 0.486
  Batch   44/48 | Loss: 3.8398 | LR: 1.06e-03 | GradNorm: 0.537
Epoch 1/10: Train=3.12%, Val=5.44%, Gap=-2.32%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7983 | LR: 1.15e-03 | GradNorm: 0.602
  Batch    4/48 | Loss: 3.7320 | LR: 1.25e-03 | GradNorm: 1.099
  Batch    8/48 | Loss: 3.7367 | LR: 1.34e-03 | GradNorm: 1.376
  Batch   12/48 | Loss: 3.8910 | LR: 1.43e-03 | GradNorm: 7.822
  Batch   16/48 | Loss: 4.3335 | LR: 1.52e-03 | GradNorm: 2.272
  Batch   20/48 | Loss: 3.9745 | LR: 1.62e-03 | GradNorm: 0.888
  Batch   24/48 | Loss: 3.8224 | LR: 1.71e-03 | GradNorm: 1.704
  Batch   28/48 | Loss: 3.8956 | LR: 1.80e-03 | GradNorm: 3.627
  Batch   32/48 | Loss: 3.8613 | LR: 1.89e-03 | GradNorm: 2.682
  Batch   36/48 | Loss: 3.8571 | LR: 1.99e-03 | GradNorm: 1.108
  Batch   40/48 | Loss: 3.8249 | LR: 2.08e-03 | GradNorm: 0.502
  Batch   44/48 | Loss: 3.8093 | LR: 2.17e-03 | GradNorm: 0.473
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.63%, Val=3.23%, Gap=1.40%, LR=2.24e-03
  Batch    0/48 | Loss: 3.7837 | LR: 2.24e-03 | GradNorm: 0.473
  Batch    4/48 | Loss: 3.7931 | LR: 2.24e-03 | GradNorm: 0.480
  Batch    8/48 | Loss: 3.7268 | LR: 2.24e-03 | GradNorm: 0.420
  Batch   12/48 | Loss: 3.8852 | LR: 2.23e-03 | GradNorm: 1.776
  Batch   16/48 | Loss: 3.7397 | LR: 2.23e-03 | GradNorm: 0.582
  Batch   20/48 | Loss: 3.8068 | LR: 2.22e-03 | GradNorm: 3.030
  Batch   24/48 | Loss: 3.7424 | LR: 2.22e-03 | GradNorm: 0.698
  Batch   28/48 | Loss: 3.7043 | LR: 2.21e-03 | GradNorm: 0.631
  Batch   32/48 | Loss: 3.9957 | LR: 2.20e-03 | GradNorm: 0.954
  Batch   36/48 | Loss: 3.8458 | LR: 2.19e-03 | GradNorm: 0.748
  Batch   40/48 | Loss: 3.8144 | LR: 2.18e-03 | GradNorm: 0.673
  Batch   44/48 | Loss: 3.7733 | LR: 2.16e-03 | GradNorm: 0.616
Epoch 3/10: Train=5.31%, Val=4.70%, Gap=0.61%, LR=2.15e-03
  Batch    0/48 | Loss: 3.7866 | LR: 2.15e-03 | GradNorm: 0.508
  Batch    4/48 | Loss: 3.7462 | LR: 2.14e-03 | GradNorm: 0.534
  Batch    8/48 | Loss: 3.7803 | LR: 2.12e-03 | GradNorm: 0.575
  Batch   12/48 | Loss: 3.7760 | LR: 2.10e-03 | GradNorm: 0.996
  Batch   16/48 | Loss: 3.7628 | LR: 2.09e-03 | GradNorm: 0.862
  Batch   20/48 | Loss: 3.7885 | LR: 2.07e-03 | GradNorm: 0.860
  Batch   24/48 | Loss: 3.7395 | LR: 2.05e-03 | GradNorm: 0.495
  Batch   28/48 | Loss: 3.7207 | LR: 2.03e-03 | GradNorm: 0.494
  Batch   32/48 | Loss: 3.7626 | LR: 2.00e-03 | GradNorm: 0.803
  Batch   36/48 | Loss: 3.7242 | LR: 1.98e-03 | GradNorm: 0.888
  Batch   40/48 | Loss: 3.7492 | LR: 1.96e-03 | GradNorm: 0.748
  Batch   44/48 | Loss: 3.7520 | LR: 1.93e-03 | GradNorm: 0.759
Epoch 4/10: Train=5.35%, Val=3.75%, Gap=1.60%, LR=1.91e-03
  Batch    0/48 | Loss: 3.7548 | LR: 1.91e-03 | GradNorm: 0.856
  Batch    4/48 | Loss: 3.6930 | LR: 1.88e-03 | GradNorm: 0.501
  Batch    8/48 | Loss: 3.7385 | LR: 1.85e-03 | GradNorm: 0.656
  Batch   12/48 | Loss: 3.7211 | LR: 1.82e-03 | GradNorm: 0.627
  Batch   16/48 | Loss: 3.6881 | LR: 1.79e-03 | GradNorm: 0.449
  Batch   20/48 | Loss: 3.7008 | LR: 1.76e-03 | GradNorm: 0.558
  Batch   24/48 | Loss: 3.6800 | LR: 1.73e-03 | GradNorm: 0.530
  Batch   28/48 | Loss: 3.7932 | LR: 1.70e-03 | GradNorm: 1.761
  Batch   32/48 | Loss: 3.6406 | LR: 1.67e-03 | GradNorm: 1.122
  Batch   36/48 | Loss: 3.6589 | LR: 1.64e-03 | GradNorm: 0.637
  Batch   40/48 | Loss: 3.6491 | LR: 1.61e-03 | GradNorm: 0.528
  Batch   44/48 | Loss: 3.5948 | LR: 1.57e-03 | GradNorm: 1.121
Epoch 5/10: Train=7.23%, Val=7.03%, Gap=0.20%, LR=1.55e-03
  Batch    0/48 | Loss: 3.5903 | LR: 1.54e-03 | GradNorm: 1.629
  Batch    4/48 | Loss: 3.5459 | LR: 1.51e-03 | GradNorm: 2.195
  Batch    8/48 | Loss: 3.6816 | LR: 1.47e-03 | GradNorm: 3.154
  Batch   12/48 | Loss: 3.6012 | LR: 1.44e-03 | GradNorm: 1.248
  Batch   16/48 | Loss: 3.5292 | LR: 1.40e-03 | GradNorm: 1.038
  Batch   20/48 | Loss: 3.4817 | LR: 1.37e-03 | GradNorm: 0.876
  Batch   24/48 | Loss: 3.6118 | LR: 1.33e-03 | GradNorm: 3.266
  Batch   28/48 | Loss: 3.4867 | LR: 1.29e-03 | GradNorm: 0.764
  Batch   32/48 | Loss: 3.5407 | LR: 1.26e-03 | GradNorm: 1.368
  Batch   36/48 | Loss: 3.4839 | LR: 1.22e-03 | GradNorm: 1.739
  Batch   40/48 | Loss: 3.6407 | LR: 1.18e-03 | GradNorm: 4.336
  Batch   44/48 | Loss: 3.5007 | LR: 1.15e-03 | GradNorm: 0.855
Epoch 6/10: Train=9.79%, Val=8.24%, Gap=1.55%, LR=1.12e-03
  Batch    0/48 | Loss: 3.4328 | LR: 1.11e-03 | GradNorm: 0.886
  Batch    4/48 | Loss: 3.4530 | LR: 1.07e-03 | GradNorm: 1.183
  Batch    8/48 | Loss: 3.4159 | LR: 1.04e-03 | GradNorm: 1.273
  Batch   12/48 | Loss: 3.3753 | LR: 1.00e-03 | GradNorm: 1.669
  Batch   16/48 | Loss: 3.3413 | LR: 9.65e-04 | GradNorm: 0.837
  Batch   20/48 | Loss: 3.3767 | LR: 9.29e-04 | GradNorm: 1.316
  Batch   24/48 | Loss: 3.3648 | LR: 8.93e-04 | GradNorm: 1.920
  Batch   28/48 | Loss: 3.3338 | LR: 8.57e-04 | GradNorm: 1.711
  Batch   32/48 | Loss: 3.3463 | LR: 8.21e-04 | GradNorm: 1.734
  Batch   36/48 | Loss: 3.4058 | LR: 7.86e-04 | GradNorm: 2.598
  Batch   40/48 | Loss: 3.3150 | LR: 7.51e-04 | GradNorm: 1.953
  Batch   44/48 | Loss: 3.3359 | LR: 7.17e-04 | GradNorm: 6.792
Epoch 7/10: Train=14.64%, Val=12.13%, Gap=2.51%, LR=6.91e-04
  Batch    0/48 | Loss: 3.3209 | LR: 6.83e-04 | GradNorm: 3.407
  Batch    4/48 | Loss: 3.2714 | LR: 6.50e-04 | GradNorm: 2.739
  Batch    8/48 | Loss: 3.2801 | LR: 6.17e-04 | GradNorm: 3.399
  Batch   12/48 | Loss: 3.2648 | LR: 5.84e-04 | GradNorm: 2.155
  Batch   16/48 | Loss: 3.2468 | LR: 5.52e-04 | GradNorm: 2.505
  Batch   20/48 | Loss: 3.1554 | LR: 5.21e-04 | GradNorm: 2.072
  Batch   24/48 | Loss: 3.2116 | LR: 4.90e-04 | GradNorm: 7.814
  Batch   28/48 | Loss: 3.2131 | LR: 4.60e-04 | GradNorm: 8.462
  Batch   32/48 | Loss: 3.2053 | LR: 4.31e-04 | GradNorm: 5.896
  Batch   36/48 | Loss: 3.2113 | LR: 4.03e-04 | GradNorm: 3.102
  Batch   40/48 | Loss: 3.1339 | LR: 3.75e-04 | GradNorm: 1.690
  Batch   44/48 | Loss: 3.1837 | LR: 3.48e-04 | GradNorm: 3.352
Epoch 8/10: Train=18.55%, Val=14.55%, Gap=4.00%, LR=3.28e-04
  Batch    0/48 | Loss: 3.1297 | LR: 3.22e-04 | GradNorm: 2.228
  Batch    4/48 | Loss: 3.1423 | LR: 2.96e-04 | GradNorm: 7.345
  Batch    8/48 | Loss: 3.1943 | LR: 2.72e-04 | GradNorm: 7.804
  Batch   12/48 | Loss: 3.1258 | LR: 2.49e-04 | GradNorm: 11.172
  Batch   16/48 | Loss: 3.1159 | LR: 2.26e-04 | GradNorm: 7.286
  Batch   20/48 | Loss: 3.1109 | LR: 2.04e-04 | GradNorm: 3.460
  Batch   24/48 | Loss: 3.1562 | LR: 1.84e-04 | GradNorm: 4.171
  Batch   28/48 | Loss: 3.1327 | LR: 1.64e-04 | GradNorm: 1.649
  Batch   32/48 | Loss: 3.1351 | LR: 1.46e-04 | GradNorm: 1.785
  Batch   36/48 | Loss: 3.1351 | LR: 1.28e-04 | GradNorm: 2.925
  Batch   40/48 | Loss: 3.0674 | LR: 1.12e-04 | GradNorm: 2.208
  Batch   44/48 | Loss: 3.0922 | LR: 9.62e-05 | GradNorm: 3.322
Epoch 9/10: Train=21.02%, Val=15.79%, Gap=5.23%, LR=8.54e-05
  Batch    0/48 | Loss: 3.0534 | LR: 8.19e-05 | GradNorm: 1.782
  Batch    4/48 | Loss: 3.0971 | LR: 6.87e-05 | GradNorm: 2.289
  Batch    8/48 | Loss: 3.0639 | LR: 5.66e-05 | GradNorm: 1.807
  Batch   12/48 | Loss: 3.0615 | LR: 4.57e-05 | GradNorm: 1.702
  Batch   16/48 | Loss: 3.0504 | LR: 3.59e-05 | GradNorm: 2.684
  Batch   20/48 | Loss: 3.0509 | LR: 2.73e-05 | GradNorm: 1.478
  Batch   24/48 | Loss: 3.0810 | LR: 1.99e-05 | GradNorm: 2.109
  Batch   28/48 | Loss: 3.0898 | LR: 1.36e-05 | GradNorm: 1.309
  Batch   32/48 | Loss: 3.0979 | LR: 8.52e-06 | GradNorm: 1.865
  Batch   36/48 | Loss: 3.0572 | LR: 4.63e-06 | GradNorm: 1.209
  Batch   40/48 | Loss: 3.0547 | LR: 1.94e-06 | GradNorm: 1.010
  Batch   44/48 | Loss: 3.0656 | LR: 4.37e-07 | GradNorm: 2.575
Epoch 10/10: Train=22.44%, Val=16.31%, Gap=6.13%, LR=1.00e-07
Best validation accuracy: 16.31%
