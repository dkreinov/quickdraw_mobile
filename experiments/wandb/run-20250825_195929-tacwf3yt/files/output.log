=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002907353331427857
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9276 | LR: 5.91e-06 | GradNorm: 1.311
  Batch    4/48 | Loss: 3.9214 | LR: 1.79e-05 | GradNorm: 0.894
  Batch    8/48 | Loss: 3.9242 | LR: 2.99e-05 | GradNorm: 0.963
  Batch   12/48 | Loss: 3.9133 | LR: 4.19e-05 | GradNorm: 0.748
  Batch   16/48 | Loss: 3.9177 | LR: 5.39e-05 | GradNorm: 0.654
  Batch   20/48 | Loss: 3.9148 | LR: 6.59e-05 | GradNorm: 0.722
  Batch   24/48 | Loss: 3.9120 | LR: 7.79e-05 | GradNorm: 0.745
  Batch   28/48 | Loss: 3.9113 | LR: 8.99e-05 | GradNorm: 0.551
  Batch   32/48 | Loss: 3.9124 | LR: 1.02e-04 | GradNorm: 0.625
  Batch   36/48 | Loss: 3.9077 | LR: 1.14e-04 | GradNorm: 0.610
  Batch   40/48 | Loss: 3.8904 | LR: 1.26e-04 | GradNorm: 0.743
  Batch   44/48 | Loss: 3.8629 | LR: 1.38e-04 | GradNorm: 1.225
Epoch 1/10: Train=2.33%, Val=5.14%, Gap=-2.81%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8218 | LR: 1.50e-04 | GradNorm: 3.742
  Batch    4/48 | Loss: 3.7965 | LR: 1.62e-04 | GradNorm: 2.241
  Batch    8/48 | Loss: 3.7742 | LR: 1.74e-04 | GradNorm: 1.373
  Batch   12/48 | Loss: 3.8484 | LR: 1.86e-04 | GradNorm: 8.478
  Batch   16/48 | Loss: 3.8560 | LR: 1.98e-04 | GradNorm: 6.706
  Batch   20/48 | Loss: 3.7857 | LR: 2.10e-04 | GradNorm: 5.084
  Batch   24/48 | Loss: 3.7970 | LR: 2.22e-04 | GradNorm: 6.234
  Batch   28/48 | Loss: 3.7075 | LR: 2.34e-04 | GradNorm: 1.711
  Batch   32/48 | Loss: 3.7137 | LR: 2.46e-04 | GradNorm: 2.758
  Batch   36/48 | Loss: 3.6974 | LR: 2.58e-04 | GradNorm: 2.292
  Batch   40/48 | Loss: 3.6999 | LR: 2.70e-04 | GradNorm: 3.050
  Batch   44/48 | Loss: 3.9203 | LR: 2.82e-04 | GradNorm: 7.667
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.87%, Val=6.78%, Gap=-0.91%, LR=2.91e-04
  Batch    0/48 | Loss: 3.6914 | LR: 2.91e-04 | GradNorm: 6.928
  Batch    4/48 | Loss: 3.6863 | LR: 2.91e-04 | GradNorm: 5.435
  Batch    8/48 | Loss: 3.6073 | LR: 2.90e-04 | GradNorm: 4.662
  Batch   12/48 | Loss: 3.5456 | LR: 2.90e-04 | GradNorm: 1.772
  Batch   16/48 | Loss: 3.5278 | LR: 2.89e-04 | GradNorm: 2.421
  Batch   20/48 | Loss: 3.4660 | LR: 2.89e-04 | GradNorm: 1.956
  Batch   24/48 | Loss: 3.5171 | LR: 2.88e-04 | GradNorm: 5.497
  Batch   28/48 | Loss: 3.4108 | LR: 2.87e-04 | GradNorm: 2.844
  Batch   32/48 | Loss: 3.4579 | LR: 2.85e-04 | GradNorm: 5.809
  Batch   36/48 | Loss: 3.4045 | LR: 2.84e-04 | GradNorm: 4.289
  Batch   40/48 | Loss: 3.3594 | LR: 2.83e-04 | GradNorm: 2.205
  Batch   44/48 | Loss: 3.3510 | LR: 2.81e-04 | GradNorm: 1.808
Epoch 3/10: Train=11.85%, Val=8.39%, Gap=3.46%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3635 | LR: 2.79e-04 | GradNorm: 3.301
  Batch    4/48 | Loss: 3.3044 | LR: 2.77e-04 | GradNorm: 1.846
  Batch    8/48 | Loss: 3.2870 | LR: 2.75e-04 | GradNorm: 2.944
  Batch   12/48 | Loss: 3.2857 | LR: 2.73e-04 | GradNorm: 3.935
  Batch   16/48 | Loss: 3.2334 | LR: 2.71e-04 | GradNorm: 1.284
  Batch   20/48 | Loss: 3.2988 | LR: 2.68e-04 | GradNorm: 6.394
  Batch   24/48 | Loss: 3.2444 | LR: 2.66e-04 | GradNorm: 3.815
  Batch   28/48 | Loss: 3.1962 | LR: 2.63e-04 | GradNorm: 2.208
  Batch   32/48 | Loss: 3.2108 | LR: 2.60e-04 | GradNorm: 2.017
  Batch   36/48 | Loss: 3.1894 | LR: 2.57e-04 | GradNorm: 3.751
  Batch   40/48 | Loss: 3.3103 | LR: 2.54e-04 | GradNorm: 8.979
  Batch   44/48 | Loss: 3.2517 | LR: 2.51e-04 | GradNorm: 5.187
Epoch 4/10: Train=17.09%, Val=10.44%, Gap=6.65%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1971 | LR: 2.47e-04 | GradNorm: 5.217
  Batch    4/48 | Loss: 3.1595 | LR: 2.44e-04 | GradNorm: 5.609
  Batch    8/48 | Loss: 3.1142 | LR: 2.40e-04 | GradNorm: 3.498
  Batch   12/48 | Loss: 3.0983 | LR: 2.37e-04 | GradNorm: 2.353
  Batch   16/48 | Loss: 3.1934 | LR: 2.33e-04 | GradNorm: 5.893
  Batch   20/48 | Loss: 3.1326 | LR: 2.29e-04 | GradNorm: 4.558
  Batch   24/48 | Loss: 3.1647 | LR: 2.25e-04 | GradNorm: 8.144
  Batch   28/48 | Loss: 3.0709 | LR: 2.21e-04 | GradNorm: 2.169
  Batch   32/48 | Loss: 3.0628 | LR: 2.17e-04 | GradNorm: 4.111
  Batch   36/48 | Loss: 3.1200 | LR: 2.13e-04 | GradNorm: 2.991
  Batch   40/48 | Loss: 3.0816 | LR: 2.09e-04 | GradNorm: 1.044
  Batch   44/48 | Loss: 3.0685 | LR: 2.04e-04 | GradNorm: 3.421
Epoch 5/10: Train=20.90%, Val=11.80%, Gap=9.10%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0023 | LR: 2.00e-04 | GradNorm: 3.201
  Batch    4/48 | Loss: 2.9711 | LR: 1.95e-04 | GradNorm: 3.911
  Batch    8/48 | Loss: 3.0009 | LR: 1.91e-04 | GradNorm: 5.231
  Batch   12/48 | Loss: 3.0039 | LR: 1.86e-04 | GradNorm: 4.347
  Batch   16/48 | Loss: 2.9599 | LR: 1.82e-04 | GradNorm: 4.150
  Batch   20/48 | Loss: 2.9279 | LR: 1.77e-04 | GradNorm: 2.101
  Batch   24/48 | Loss: 2.9307 | LR: 1.73e-04 | GradNorm: 3.155
  Batch   28/48 | Loss: 2.9045 | LR: 1.68e-04 | GradNorm: 6.081
  Batch   32/48 | Loss: 2.9083 | LR: 1.63e-04 | GradNorm: 5.522
  Batch   36/48 | Loss: 2.9151 | LR: 1.58e-04 | GradNorm: 2.951
  Batch   40/48 | Loss: 2.9153 | LR: 1.54e-04 | GradNorm: 5.000
  Batch   44/48 | Loss: 2.9460 | LR: 1.49e-04 | GradNorm: 4.579
Epoch 6/10: Train=26.24%, Val=15.25%, Gap=10.99%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8670 | LR: 1.44e-04 | GradNorm: 4.441
  Batch    4/48 | Loss: 2.8628 | LR: 1.39e-04 | GradNorm: 4.672
  Batch    8/48 | Loss: 2.8216 | LR: 1.35e-04 | GradNorm: 2.775
  Batch   12/48 | Loss: 2.7649 | LR: 1.30e-04 | GradNorm: 4.108
  Batch   16/48 | Loss: 2.7822 | LR: 1.25e-04 | GradNorm: 2.555
  Batch   20/48 | Loss: 2.8178 | LR: 1.21e-04 | GradNorm: 3.329
  Batch   24/48 | Loss: 2.8088 | LR: 1.16e-04 | GradNorm: 3.956
  Batch   28/48 | Loss: 2.8382 | LR: 1.11e-04 | GradNorm: 4.766
  Batch   32/48 | Loss: 2.7861 | LR: 1.07e-04 | GradNorm: 2.537
  Batch   36/48 | Loss: 2.8142 | LR: 1.02e-04 | GradNorm: 5.150
  Batch   40/48 | Loss: 2.7946 | LR: 9.76e-05 | GradNorm: 4.469
  Batch   44/48 | Loss: 2.7718 | LR: 9.31e-05 | GradNorm: 5.885
Epoch 7/10: Train=31.30%, Val=21.33%, Gap=9.97%, LR=8.98e-05
  Batch    0/48 | Loss: 2.7722 | LR: 8.87e-05 | GradNorm: 4.149
  Batch    4/48 | Loss: 2.7232 | LR: 8.44e-05 | GradNorm: 5.592
  Batch    8/48 | Loss: 2.7039 | LR: 8.01e-05 | GradNorm: 3.456
  Batch   12/48 | Loss: 2.7244 | LR: 7.59e-05 | GradNorm: 3.577
  Batch   16/48 | Loss: 2.7499 | LR: 7.17e-05 | GradNorm: 4.511
  Batch   20/48 | Loss: 2.6699 | LR: 6.77e-05 | GradNorm: 6.392
  Batch   24/48 | Loss: 2.6506 | LR: 6.37e-05 | GradNorm: 3.234
  Batch   28/48 | Loss: 2.6897 | LR: 5.98e-05 | GradNorm: 3.655
  Batch   32/48 | Loss: 2.6871 | LR: 5.60e-05 | GradNorm: 2.532
  Batch   36/48 | Loss: 2.6676 | LR: 5.23e-05 | GradNorm: 3.907
  Batch   40/48 | Loss: 2.6154 | LR: 4.87e-05 | GradNorm: 4.750
  Batch   44/48 | Loss: 2.6489 | LR: 4.52e-05 | GradNorm: 4.614
Epoch 8/10: Train=34.77%, Val=21.24%, Gap=13.53%, LR=4.27e-05
  Batch    0/48 | Loss: 2.6313 | LR: 4.18e-05 | GradNorm: 2.652
  Batch    4/48 | Loss: 2.6439 | LR: 3.85e-05 | GradNorm: 3.339
  Batch    8/48 | Loss: 2.6869 | LR: 3.54e-05 | GradNorm: 4.601
  Batch   12/48 | Loss: 2.6208 | LR: 3.23e-05 | GradNorm: 4.366
  Batch   16/48 | Loss: 2.5752 | LR: 2.94e-05 | GradNorm: 2.928
  Batch   20/48 | Loss: 2.5829 | LR: 2.66e-05 | GradNorm: 4.875
  Batch   24/48 | Loss: 2.6192 | LR: 2.39e-05 | GradNorm: 5.542
  Batch   28/48 | Loss: 2.6282 | LR: 2.14e-05 | GradNorm: 3.358
  Batch   32/48 | Loss: 2.6117 | LR: 1.90e-05 | GradNorm: 4.125
  Batch   36/48 | Loss: 2.5943 | LR: 1.67e-05 | GradNorm: 2.586
  Batch   40/48 | Loss: 2.5590 | LR: 1.46e-05 | GradNorm: 3.328
  Batch   44/48 | Loss: 2.6109 | LR: 1.26e-05 | GradNorm: 2.325
Epoch 9/10: Train=37.31%, Val=22.37%, Gap=14.94%, LR=1.12e-05
  Batch    0/48 | Loss: 2.5934 | LR: 1.07e-05 | GradNorm: 2.839
  Batch    4/48 | Loss: 2.5957 | LR: 9.00e-06 | GradNorm: 2.422
  Batch    8/48 | Loss: 2.5613 | LR: 7.43e-06 | GradNorm: 2.381
  Batch   12/48 | Loss: 2.5813 | LR: 6.02e-06 | GradNorm: 3.884
  Batch   16/48 | Loss: 2.5685 | LR: 4.75e-06 | GradNorm: 3.026
  Batch   20/48 | Loss: 2.5928 | LR: 3.63e-06 | GradNorm: 3.292
  Batch   24/48 | Loss: 2.6035 | LR: 2.67e-06 | GradNorm: 2.402
  Batch   28/48 | Loss: 2.6182 | LR: 1.85e-06 | GradNorm: 1.963
  Batch   32/48 | Loss: 2.5995 | LR: 1.19e-06 | GradNorm: 2.890
  Batch   36/48 | Loss: 2.5804 | LR: 6.88e-07 | GradNorm: 2.436
  Batch   40/48 | Loss: 2.5593 | LR: 3.38e-07 | GradNorm: 2.727
  Batch   44/48 | Loss: 2.5640 | LR: 1.44e-07 | GradNorm: 2.874
Epoch 10/10: Train=38.36%, Val=23.32%, Gap=15.04%, LR=1.00e-07
Best validation accuracy: 23.32%
