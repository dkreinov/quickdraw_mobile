=== W&B Sweep Run: LR=0.000446 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004460800407779284
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000446
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9404 | LR: 9.06e-06 | GradNorm: 1.381
  Batch    4/48 | Loss: 3.9210 | LR: 2.75e-05 | GradNorm: 0.818
  Batch    8/48 | Loss: 3.9243 | LR: 4.59e-05 | GradNorm: 0.826
  Batch   12/48 | Loss: 3.9088 | LR: 6.43e-05 | GradNorm: 0.616
  Batch   16/48 | Loss: 3.9197 | LR: 8.27e-05 | GradNorm: 0.610
  Batch   20/48 | Loss: 3.9141 | LR: 1.01e-04 | GradNorm: 0.635
  Batch   24/48 | Loss: 3.9115 | LR: 1.19e-04 | GradNorm: 0.627
  Batch   28/48 | Loss: 3.9144 | LR: 1.38e-04 | GradNorm: 0.581
  Batch   32/48 | Loss: 3.8996 | LR: 1.56e-04 | GradNorm: 0.574
  Batch   36/48 | Loss: 3.8842 | LR: 1.75e-04 | GradNorm: 0.648
  Batch   40/48 | Loss: 3.8215 | LR: 1.93e-04 | GradNorm: 1.032
  Batch   44/48 | Loss: 3.8099 | LR: 2.11e-04 | GradNorm: 6.228
Epoch 1/10: Train=3.01%, Val=5.04%, Gap=-2.03%, LR=2.25e-04
  Batch    0/48 | Loss: 3.7729 | LR: 2.30e-04 | GradNorm: 5.739
  Batch    4/48 | Loss: 3.7555 | LR: 2.48e-04 | GradNorm: 3.541
  Batch    8/48 | Loss: 3.7149 | LR: 2.67e-04 | GradNorm: 4.785
  Batch   12/48 | Loss: 3.6574 | LR: 2.85e-04 | GradNorm: 3.319
  Batch   16/48 | Loss: 3.6840 | LR: 3.03e-04 | GradNorm: 3.653
  Batch   20/48 | Loss: 3.6752 | LR: 3.22e-04 | GradNorm: 6.085
  Batch   24/48 | Loss: 3.9267 | LR: 3.40e-04 | GradNorm: 11.085
  Batch   28/48 | Loss: 3.7976 | LR: 3.59e-04 | GradNorm: 3.629
  Batch   32/48 | Loss: 3.6720 | LR: 3.77e-04 | GradNorm: 3.797
  Batch   36/48 | Loss: 3.8494 | LR: 3.95e-04 | GradNorm: 6.301
  Batch   40/48 | Loss: 3.7588 | LR: 4.14e-04 | GradNorm: 2.183
  Batch   44/48 | Loss: 3.6270 | LR: 4.32e-04 | GradNorm: 3.446
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.45%, Val=6.97%, Gap=-0.52%, LR=4.46e-04
  Batch    0/48 | Loss: 3.6800 | LR: 4.46e-04 | GradNorm: 7.938
  Batch    4/48 | Loss: 3.6125 | LR: 4.46e-04 | GradNorm: 1.922
  Batch    8/48 | Loss: 3.5506 | LR: 4.45e-04 | GradNorm: 2.445
  Batch   12/48 | Loss: 3.5449 | LR: 4.45e-04 | GradNorm: 4.888
  Batch   16/48 | Loss: 3.4801 | LR: 4.44e-04 | GradNorm: 1.483
  Batch   20/48 | Loss: 3.4638 | LR: 4.43e-04 | GradNorm: 4.386
  Batch   24/48 | Loss: 3.4988 | LR: 4.41e-04 | GradNorm: 3.351
  Batch   28/48 | Loss: 3.7204 | LR: 4.40e-04 | GradNorm: 9.309
  Batch   32/48 | Loss: 3.4671 | LR: 4.38e-04 | GradNorm: 2.951
  Batch   36/48 | Loss: 3.4215 | LR: 4.36e-04 | GradNorm: 3.811
  Batch   40/48 | Loss: 3.3221 | LR: 4.34e-04 | GradNorm: 1.323
  Batch   44/48 | Loss: 3.4384 | LR: 4.31e-04 | GradNorm: 5.322
Epoch 3/10: Train=11.12%, Val=14.47%, Gap=-3.35%, LR=4.29e-04
  Batch    0/48 | Loss: 3.4138 | LR: 4.28e-04 | GradNorm: 3.304
  Batch    4/48 | Loss: 3.3309 | LR: 4.25e-04 | GradNorm: 3.081
  Batch    8/48 | Loss: 3.3248 | LR: 4.22e-04 | GradNorm: 5.631
  Batch   12/48 | Loss: 3.2661 | LR: 4.19e-04 | GradNorm: 3.406
  Batch   16/48 | Loss: 3.2504 | LR: 4.15e-04 | GradNorm: 2.651
  Batch   20/48 | Loss: 3.2223 | LR: 4.11e-04 | GradNorm: 2.571
  Batch   24/48 | Loss: 3.3126 | LR: 4.07e-04 | GradNorm: 5.160
  Batch   28/48 | Loss: 3.1624 | LR: 4.03e-04 | GradNorm: 1.501
  Batch   32/48 | Loss: 3.2516 | LR: 3.99e-04 | GradNorm: 3.835
  Batch   36/48 | Loss: 3.1842 | LR: 3.94e-04 | GradNorm: 4.018
  Batch   40/48 | Loss: 3.2084 | LR: 3.90e-04 | GradNorm: 3.821
  Batch   44/48 | Loss: 3.1698 | LR: 3.85e-04 | GradNorm: 2.651
Epoch 4/10: Train=16.98%, Val=12.79%, Gap=4.19%, LR=3.81e-04
  Batch    0/48 | Loss: 3.1846 | LR: 3.79e-04 | GradNorm: 4.877
  Batch    4/48 | Loss: 3.1021 | LR: 3.74e-04 | GradNorm: 2.910
  Batch    8/48 | Loss: 3.0825 | LR: 3.69e-04 | GradNorm: 2.490
  Batch   12/48 | Loss: 3.0484 | LR: 3.63e-04 | GradNorm: 1.316
  Batch   16/48 | Loss: 3.1205 | LR: 3.57e-04 | GradNorm: 2.167
  Batch   20/48 | Loss: 3.0575 | LR: 3.51e-04 | GradNorm: 1.084
  Batch   24/48 | Loss: 3.1476 | LR: 3.45e-04 | GradNorm: 5.151
  Batch   28/48 | Loss: 3.0597 | LR: 3.39e-04 | GradNorm: 2.846
  Batch   32/48 | Loss: 2.9999 | LR: 3.33e-04 | GradNorm: 1.656
  Batch   36/48 | Loss: 3.1074 | LR: 3.27e-04 | GradNorm: 3.308
  Batch   40/48 | Loss: 3.0857 | LR: 3.20e-04 | GradNorm: 3.199
  Batch   44/48 | Loss: 3.0023 | LR: 3.13e-04 | GradNorm: 2.080
Epoch 5/10: Train=21.94%, Val=13.65%, Gap=8.29%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0012 | LR: 3.07e-04 | GradNorm: 4.323
  Batch    4/48 | Loss: 2.9630 | LR: 3.00e-04 | GradNorm: 5.071
  Batch    8/48 | Loss: 2.9597 | LR: 2.93e-04 | GradNorm: 3.381
  Batch   12/48 | Loss: 2.9608 | LR: 2.86e-04 | GradNorm: 4.476
  Batch   16/48 | Loss: 2.9198 | LR: 2.79e-04 | GradNorm: 3.023
  Batch   20/48 | Loss: 2.9148 | LR: 2.72e-04 | GradNorm: 3.165
  Batch   24/48 | Loss: 2.9693 | LR: 2.65e-04 | GradNorm: 7.560
  Batch   28/48 | Loss: 2.9332 | LR: 2.58e-04 | GradNorm: 5.293
  Batch   32/48 | Loss: 2.8664 | LR: 2.50e-04 | GradNorm: 4.228
  Batch   36/48 | Loss: 2.8840 | LR: 2.43e-04 | GradNorm: 3.215
  Batch   40/48 | Loss: 2.8516 | LR: 2.36e-04 | GradNorm: 4.230
  Batch   44/48 | Loss: 2.9249 | LR: 2.29e-04 | GradNorm: 3.915
Epoch 6/10: Train=26.63%, Val=18.84%, Gap=7.79%, LR=2.23e-04
  Batch    0/48 | Loss: 2.8104 | LR: 2.21e-04 | GradNorm: 2.803
  Batch    4/48 | Loss: 2.8175 | LR: 2.14e-04 | GradNorm: 4.303
  Batch    8/48 | Loss: 2.7771 | LR: 2.07e-04 | GradNorm: 1.442
  Batch   12/48 | Loss: 2.7702 | LR: 1.99e-04 | GradNorm: 5.357
  Batch   16/48 | Loss: 2.7598 | LR: 1.92e-04 | GradNorm: 3.336
  Batch   20/48 | Loss: 2.7703 | LR: 1.85e-04 | GradNorm: 2.332
  Batch   24/48 | Loss: 2.7776 | LR: 1.78e-04 | GradNorm: 3.420
  Batch   28/48 | Loss: 2.7886 | LR: 1.71e-04 | GradNorm: 3.511
  Batch   32/48 | Loss: 2.7803 | LR: 1.64e-04 | GradNorm: 5.345
  Batch   36/48 | Loss: 2.7976 | LR: 1.57e-04 | GradNorm: 5.211
  Batch   40/48 | Loss: 2.7341 | LR: 1.50e-04 | GradNorm: 3.389
  Batch   44/48 | Loss: 2.7060 | LR: 1.43e-04 | GradNorm: 3.100
Epoch 7/10: Train=32.08%, Val=19.49%, Gap=12.59%, LR=1.38e-04
  Batch    0/48 | Loss: 2.7167 | LR: 1.36e-04 | GradNorm: 3.328
  Batch    4/48 | Loss: 2.6627 | LR: 1.29e-04 | GradNorm: 4.266
  Batch    8/48 | Loss: 2.6808 | LR: 1.23e-04 | GradNorm: 3.704
  Batch   12/48 | Loss: 2.6936 | LR: 1.16e-04 | GradNorm: 2.503
  Batch   16/48 | Loss: 2.7222 | LR: 1.10e-04 | GradNorm: 5.187
  Batch   20/48 | Loss: 2.6342 | LR: 1.04e-04 | GradNorm: 4.755
  Batch   24/48 | Loss: 2.6189 | LR: 9.77e-05 | GradNorm: 4.814
  Batch   28/48 | Loss: 2.6256 | LR: 9.17e-05 | GradNorm: 2.331
  Batch   32/48 | Loss: 2.6429 | LR: 8.59e-05 | GradNorm: 3.922
  Batch   36/48 | Loss: 2.6106 | LR: 8.02e-05 | GradNorm: 3.867
  Batch   40/48 | Loss: 2.5662 | LR: 7.47e-05 | GradNorm: 5.478
  Batch   44/48 | Loss: 2.6250 | LR: 6.93e-05 | GradNorm: 3.283
Epoch 8/10: Train=35.99%, Val=20.03%, Gap=15.96%, LR=6.54e-05
  Batch    0/48 | Loss: 2.5918 | LR: 6.41e-05 | GradNorm: 3.993
  Batch    4/48 | Loss: 2.5914 | LR: 5.91e-05 | GradNorm: 4.368
  Batch    8/48 | Loss: 2.6228 | LR: 5.42e-05 | GradNorm: 3.212
  Batch   12/48 | Loss: 2.5503 | LR: 4.96e-05 | GradNorm: 2.241
  Batch   16/48 | Loss: 2.5391 | LR: 4.51e-05 | GradNorm: 2.800
  Batch   20/48 | Loss: 2.5293 | LR: 4.08e-05 | GradNorm: 2.694
  Batch   24/48 | Loss: 2.5509 | LR: 3.67e-05 | GradNorm: 2.476
  Batch   28/48 | Loss: 2.5565 | LR: 3.28e-05 | GradNorm: 2.521
  Batch   32/48 | Loss: 2.5296 | LR: 2.91e-05 | GradNorm: 2.479
  Batch   36/48 | Loss: 2.5311 | LR: 2.56e-05 | GradNorm: 2.803
  Batch   40/48 | Loss: 2.5279 | LR: 2.23e-05 | GradNorm: 1.924
  Batch   44/48 | Loss: 2.5486 | LR: 1.92e-05 | GradNorm: 2.585
Epoch 9/10: Train=38.67%, Val=23.09%, Gap=15.58%, LR=1.71e-05
  Batch    0/48 | Loss: 2.5337 | LR: 1.64e-05 | GradNorm: 3.729
  Batch    4/48 | Loss: 2.5333 | LR: 1.38e-05 | GradNorm: 1.604
  Batch    8/48 | Loss: 2.4916 | LR: 1.14e-05 | GradNorm: 1.751
  Batch   12/48 | Loss: 2.5273 | LR: 9.18e-06 | GradNorm: 2.392
  Batch   16/48 | Loss: 2.5191 | LR: 7.23e-06 | GradNorm: 2.259
  Batch   20/48 | Loss: 2.5217 | LR: 5.52e-06 | GradNorm: 3.371
  Batch   24/48 | Loss: 2.5427 | LR: 4.04e-06 | GradNorm: 2.261
  Batch   28/48 | Loss: 2.5695 | LR: 2.79e-06 | GradNorm: 1.452
  Batch   32/48 | Loss: 2.5380 | LR: 1.78e-06 | GradNorm: 2.194
  Batch   36/48 | Loss: 2.5126 | LR: 1.00e-06 | GradNorm: 2.081
  Batch   40/48 | Loss: 2.5013 | LR: 4.66e-07 | GradNorm: 2.923
  Batch   44/48 | Loss: 2.5290 | LR: 1.67e-07 | GradNorm: 2.278
Epoch 10/10: Train=39.58%, Val=23.02%, Gap=16.56%, LR=1.00e-07
Best validation accuracy: 23.09%
