=== W&B Sweep Run: LR=0.000289 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00028923385841385965
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000289
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9513 | LR: 5.88e-06 | GradNorm: 1.363
  Batch    4/48 | Loss: 3.9203 | LR: 1.78e-05 | GradNorm: 0.948
  Batch    8/48 | Loss: 3.9165 | LR: 2.97e-05 | GradNorm: 0.766
  Batch   12/48 | Loss: 3.9133 | LR: 4.17e-05 | GradNorm: 0.651
  Batch   16/48 | Loss: 3.9214 | LR: 5.36e-05 | GradNorm: 0.696
  Batch   20/48 | Loss: 3.9126 | LR: 6.55e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9119 | LR: 7.75e-05 | GradNorm: 0.678
  Batch   28/48 | Loss: 3.9112 | LR: 8.94e-05 | GradNorm: 0.559
  Batch   32/48 | Loss: 3.9038 | LR: 1.01e-04 | GradNorm: 0.549
  Batch   36/48 | Loss: 3.8980 | LR: 1.13e-04 | GradNorm: 0.510
  Batch   40/48 | Loss: 3.8844 | LR: 1.25e-04 | GradNorm: 0.645
  Batch   44/48 | Loss: 3.8477 | LR: 1.37e-04 | GradNorm: 0.868
Epoch 1/10: Train=2.48%, Val=4.64%, Gap=-2.16%, LR=1.46e-04
  Batch    0/48 | Loss: 3.7802 | LR: 1.49e-04 | GradNorm: 1.065
  Batch    4/48 | Loss: 3.8722 | LR: 1.61e-04 | GradNorm: 12.881
  Batch    8/48 | Loss: 3.9815 | LR: 1.73e-04 | GradNorm: 9.243
  Batch   12/48 | Loss: 3.8542 | LR: 1.85e-04 | GradNorm: 8.699
  Batch   16/48 | Loss: 3.7335 | LR: 1.97e-04 | GradNorm: 3.195
  Batch   20/48 | Loss: 3.7342 | LR: 2.09e-04 | GradNorm: 4.565
  Batch   24/48 | Loss: 3.7595 | LR: 2.21e-04 | GradNorm: 13.293
  Batch   28/48 | Loss: 3.7093 | LR: 2.33e-04 | GradNorm: 10.131
  Batch   32/48 | Loss: 3.6548 | LR: 2.44e-04 | GradNorm: 4.871
  Batch   36/48 | Loss: 3.6354 | LR: 2.56e-04 | GradNorm: 2.207
  Batch   40/48 | Loss: 3.6369 | LR: 2.68e-04 | GradNorm: 1.353
  Batch   44/48 | Loss: 3.6110 | LR: 2.80e-04 | GradNorm: 3.387
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.33%, Val=5.32%, Gap=1.01%, LR=2.89e-04
  Batch    0/48 | Loss: 3.5798 | LR: 2.89e-04 | GradNorm: 1.954
  Batch    4/48 | Loss: 3.5635 | LR: 2.89e-04 | GradNorm: 2.129
  Batch    8/48 | Loss: 3.5683 | LR: 2.89e-04 | GradNorm: 4.927
  Batch   12/48 | Loss: 3.6097 | LR: 2.88e-04 | GradNorm: 4.290
  Batch   16/48 | Loss: 3.5933 | LR: 2.88e-04 | GradNorm: 4.908
  Batch   20/48 | Loss: 3.5439 | LR: 2.87e-04 | GradNorm: 4.381
  Batch   24/48 | Loss: 3.5236 | LR: 2.86e-04 | GradNorm: 3.714
  Batch   28/48 | Loss: 3.5207 | LR: 2.85e-04 | GradNorm: 4.109
  Batch   32/48 | Loss: 3.4980 | LR: 2.84e-04 | GradNorm: 1.412
  Batch   36/48 | Loss: 3.5178 | LR: 2.83e-04 | GradNorm: 4.334
  Batch   40/48 | Loss: 3.4459 | LR: 2.81e-04 | GradNorm: 3.113
  Batch   44/48 | Loss: 3.4218 | LR: 2.80e-04 | GradNorm: 2.227
Epoch 3/10: Train=10.33%, Val=7.15%, Gap=3.18%, LR=2.78e-04
  Batch    0/48 | Loss: 3.4053 | LR: 2.78e-04 | GradNorm: 3.329
  Batch    4/48 | Loss: 3.4218 | LR: 2.76e-04 | GradNorm: 3.885
  Batch    8/48 | Loss: 3.3415 | LR: 2.74e-04 | GradNorm: 2.352
  Batch   12/48 | Loss: 3.2938 | LR: 2.72e-04 | GradNorm: 2.191
  Batch   16/48 | Loss: 3.3297 | LR: 2.69e-04 | GradNorm: 2.976
  Batch   20/48 | Loss: 3.2941 | LR: 2.67e-04 | GradNorm: 2.354
  Batch   24/48 | Loss: 3.2594 | LR: 2.64e-04 | GradNorm: 2.123
  Batch   28/48 | Loss: 3.2476 | LR: 2.61e-04 | GradNorm: 2.845
  Batch   32/48 | Loss: 3.2870 | LR: 2.59e-04 | GradNorm: 3.564
  Batch   36/48 | Loss: 3.2989 | LR: 2.56e-04 | GradNorm: 3.860
  Batch   40/48 | Loss: 3.2683 | LR: 2.53e-04 | GradNorm: 3.979
  Batch   44/48 | Loss: 3.2025 | LR: 2.49e-04 | GradNorm: 1.561
Epoch 4/10: Train=15.83%, Val=11.07%, Gap=4.76%, LR=2.47e-04
  Batch    0/48 | Loss: 3.2247 | LR: 2.46e-04 | GradNorm: 5.035
  Batch    4/48 | Loss: 3.1742 | LR: 2.43e-04 | GradNorm: 2.682
  Batch    8/48 | Loss: 3.1593 | LR: 2.39e-04 | GradNorm: 3.518
  Batch   12/48 | Loss: 3.1408 | LR: 2.35e-04 | GradNorm: 2.748
  Batch   16/48 | Loss: 3.1806 | LR: 2.32e-04 | GradNorm: 2.915
  Batch   20/48 | Loss: 3.1588 | LR: 2.28e-04 | GradNorm: 4.702
  Batch   24/48 | Loss: 3.1454 | LR: 2.24e-04 | GradNorm: 2.731
  Batch   28/48 | Loss: 3.1377 | LR: 2.20e-04 | GradNorm: 4.314
  Batch   32/48 | Loss: 3.1127 | LR: 2.16e-04 | GradNorm: 2.279
  Batch   36/48 | Loss: 3.1595 | LR: 2.12e-04 | GradNorm: 2.072
  Batch   40/48 | Loss: 3.1237 | LR: 2.08e-04 | GradNorm: 1.506
  Batch   44/48 | Loss: 3.1106 | LR: 2.03e-04 | GradNorm: 3.214
Epoch 5/10: Train=19.56%, Val=14.52%, Gap=5.04%, LR=2.00e-04
  Batch    0/48 | Loss: 3.0797 | LR: 1.99e-04 | GradNorm: 4.628
  Batch    4/48 | Loss: 3.0326 | LR: 1.94e-04 | GradNorm: 1.890
  Batch    8/48 | Loss: 3.0602 | LR: 1.90e-04 | GradNorm: 2.942
  Batch   12/48 | Loss: 3.0430 | LR: 1.85e-04 | GradNorm: 2.145
  Batch   16/48 | Loss: 3.0464 | LR: 1.81e-04 | GradNorm: 6.272
  Batch   20/48 | Loss: 3.0421 | LR: 1.76e-04 | GradNorm: 3.770
  Batch   24/48 | Loss: 3.0392 | LR: 1.72e-04 | GradNorm: 5.974
  Batch   28/48 | Loss: 2.9755 | LR: 1.67e-04 | GradNorm: 3.749
  Batch   32/48 | Loss: 2.9617 | LR: 1.62e-04 | GradNorm: 4.551
  Batch   36/48 | Loss: 3.0009 | LR: 1.58e-04 | GradNorm: 2.687
  Batch   40/48 | Loss: 2.9829 | LR: 1.53e-04 | GradNorm: 4.727
  Batch   44/48 | Loss: 3.0405 | LR: 1.48e-04 | GradNorm: 4.356
Epoch 6/10: Train=23.32%, Val=14.61%, Gap=8.71%, LR=1.45e-04
  Batch    0/48 | Loss: 2.9445 | LR: 1.43e-04 | GradNorm: 4.935
  Batch    4/48 | Loss: 2.9463 | LR: 1.39e-04 | GradNorm: 5.751
  Batch    8/48 | Loss: 2.9051 | LR: 1.34e-04 | GradNorm: 3.086
  Batch   12/48 | Loss: 2.8959 | LR: 1.29e-04 | GradNorm: 8.680
  Batch   16/48 | Loss: 2.8877 | LR: 1.25e-04 | GradNorm: 7.088
  Batch   20/48 | Loss: 2.8899 | LR: 1.20e-04 | GradNorm: 3.648
  Batch   24/48 | Loss: 2.8829 | LR: 1.15e-04 | GradNorm: 3.226
  Batch   28/48 | Loss: 2.9032 | LR: 1.11e-04 | GradNorm: 4.844
  Batch   32/48 | Loss: 2.8861 | LR: 1.06e-04 | GradNorm: 4.415
  Batch   36/48 | Loss: 2.9029 | LR: 1.02e-04 | GradNorm: 5.926
  Batch   40/48 | Loss: 2.8482 | LR: 9.71e-05 | GradNorm: 3.514
  Batch   44/48 | Loss: 2.8377 | LR: 9.26e-05 | GradNorm: 4.650
Epoch 7/10: Train=28.73%, Val=19.32%, Gap=9.41%, LR=8.93e-05
  Batch    0/48 | Loss: 2.8376 | LR: 8.83e-05 | GradNorm: 5.267
  Batch    4/48 | Loss: 2.7879 | LR: 8.39e-05 | GradNorm: 2.696
  Batch    8/48 | Loss: 2.7936 | LR: 7.97e-05 | GradNorm: 4.025
  Batch   12/48 | Loss: 2.8155 | LR: 7.55e-05 | GradNorm: 3.505
  Batch   16/48 | Loss: 2.8247 | LR: 7.14e-05 | GradNorm: 6.045
  Batch   20/48 | Loss: 2.7490 | LR: 6.73e-05 | GradNorm: 5.984
  Batch   24/48 | Loss: 2.7506 | LR: 6.34e-05 | GradNorm: 6.281
  Batch   28/48 | Loss: 2.7571 | LR: 5.95e-05 | GradNorm: 6.840
  Batch   32/48 | Loss: 2.7608 | LR: 5.57e-05 | GradNorm: 4.696
  Batch   36/48 | Loss: 2.7576 | LR: 5.20e-05 | GradNorm: 3.806
  Batch   40/48 | Loss: 2.7008 | LR: 4.85e-05 | GradNorm: 5.351
  Batch   44/48 | Loss: 2.7581 | LR: 4.50e-05 | GradNorm: 4.178
Epoch 8/10: Train=32.41%, Val=21.78%, Gap=10.63%, LR=4.24e-05
  Batch    0/48 | Loss: 2.7423 | LR: 4.16e-05 | GradNorm: 6.583
  Batch    4/48 | Loss: 2.7113 | LR: 3.83e-05 | GradNorm: 4.423
  Batch    8/48 | Loss: 2.7642 | LR: 3.52e-05 | GradNorm: 3.011
  Batch   12/48 | Loss: 2.7036 | LR: 3.22e-05 | GradNorm: 2.904
  Batch   16/48 | Loss: 2.6547 | LR: 2.93e-05 | GradNorm: 3.966
  Batch   20/48 | Loss: 2.6561 | LR: 2.65e-05 | GradNorm: 3.152
  Batch   24/48 | Loss: 2.6885 | LR: 2.38e-05 | GradNorm: 3.024
  Batch   28/48 | Loss: 2.7130 | LR: 2.13e-05 | GradNorm: 4.482
  Batch   32/48 | Loss: 2.6795 | LR: 1.89e-05 | GradNorm: 4.626
  Batch   36/48 | Loss: 2.6878 | LR: 1.66e-05 | GradNorm: 4.596
  Batch   40/48 | Loss: 2.6672 | LR: 1.45e-05 | GradNorm: 3.120
  Batch   44/48 | Loss: 2.6750 | LR: 1.25e-05 | GradNorm: 2.641
Epoch 9/10: Train=34.78%, Val=20.83%, Gap=13.95%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6848 | LR: 1.07e-05 | GradNorm: 3.436
  Batch    4/48 | Loss: 2.6743 | LR: 8.95e-06 | GradNorm: 2.195
  Batch    8/48 | Loss: 2.6478 | LR: 7.40e-06 | GradNorm: 1.584
  Batch   12/48 | Loss: 2.6383 | LR: 5.99e-06 | GradNorm: 3.429
  Batch   16/48 | Loss: 2.6527 | LR: 4.72e-06 | GradNorm: 2.173
  Batch   20/48 | Loss: 2.6591 | LR: 3.61e-06 | GradNorm: 3.253
  Batch   24/48 | Loss: 2.6530 | LR: 2.65e-06 | GradNorm: 2.875
  Batch   28/48 | Loss: 2.6861 | LR: 1.84e-06 | GradNorm: 1.493
  Batch   32/48 | Loss: 2.6991 | LR: 1.19e-06 | GradNorm: 3.029
  Batch   36/48 | Loss: 2.6720 | LR: 6.85e-07 | GradNorm: 2.565
  Batch   40/48 | Loss: 2.6256 | LR: 3.37e-07 | GradNorm: 3.157
  Batch   44/48 | Loss: 2.6563 | LR: 1.44e-07 | GradNorm: 2.281
Epoch 10/10: Train=36.15%, Val=21.25%, Gap=14.90%, LR=1.00e-07
Best validation accuracy: 21.78%
