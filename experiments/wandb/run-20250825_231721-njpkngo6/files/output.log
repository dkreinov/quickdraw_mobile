=== W&B Sweep Run: LR=0.000444 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000444381466939134
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000444
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9541 | LR: 9.03e-06 | GradNorm: 1.731
  Batch    4/48 | Loss: 3.9220 | LR: 2.74e-05 | GradNorm: 0.973
  Batch    8/48 | Loss: 3.9315 | LR: 4.57e-05 | GradNorm: 0.932
  Batch   12/48 | Loss: 3.9075 | LR: 6.40e-05 | GradNorm: 0.559
  Batch   16/48 | Loss: 3.9195 | LR: 8.23e-05 | GradNorm: 0.598
  Batch   20/48 | Loss: 3.9123 | LR: 1.01e-04 | GradNorm: 0.579
  Batch   24/48 | Loss: 3.9164 | LR: 1.19e-04 | GradNorm: 0.650
  Batch   28/48 | Loss: 3.9167 | LR: 1.37e-04 | GradNorm: 0.585
  Batch   32/48 | Loss: 3.9024 | LR: 1.56e-04 | GradNorm: 0.500
  Batch   36/48 | Loss: 3.8958 | LR: 1.74e-04 | GradNorm: 0.595
  Batch   40/48 | Loss: 3.8510 | LR: 1.92e-04 | GradNorm: 0.997
  Batch   44/48 | Loss: 3.9105 | LR: 2.11e-04 | GradNorm: 6.864
Epoch 1/10: Train=2.56%, Val=5.29%, Gap=-2.73%, LR=2.24e-04
  Batch    0/48 | Loss: 3.8311 | LR: 2.29e-04 | GradNorm: 5.497
  Batch    4/48 | Loss: 3.8079 | LR: 2.47e-04 | GradNorm: 3.979
  Batch    8/48 | Loss: 3.7842 | LR: 2.66e-04 | GradNorm: 3.687
  Batch   12/48 | Loss: 3.7144 | LR: 2.84e-04 | GradNorm: 2.680
  Batch   16/48 | Loss: 3.7329 | LR: 3.02e-04 | GradNorm: 2.755
  Batch   20/48 | Loss: 3.7340 | LR: 3.21e-04 | GradNorm: 4.030
  Batch   24/48 | Loss: 3.6708 | LR: 3.39e-04 | GradNorm: 3.554
  Batch   28/48 | Loss: 3.6977 | LR: 3.57e-04 | GradNorm: 3.187
  Batch   32/48 | Loss: 3.6121 | LR: 3.76e-04 | GradNorm: 1.197
  Batch   36/48 | Loss: 3.6080 | LR: 3.94e-04 | GradNorm: 1.807
  Batch   40/48 | Loss: 3.6727 | LR: 4.12e-04 | GradNorm: 3.254
  Batch   44/48 | Loss: 3.6672 | LR: 4.31e-04 | GradNorm: 2.202
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.06%, Val=4.89%, Gap=2.17%, LR=4.44e-04
  Batch    0/48 | Loss: 3.5988 | LR: 4.44e-04 | GradNorm: 2.151
  Batch    4/48 | Loss: 3.9280 | LR: 4.44e-04 | GradNorm: 6.575
  Batch    8/48 | Loss: 3.9135 | LR: 4.44e-04 | GradNorm: 7.182
  Batch   12/48 | Loss: 3.7236 | LR: 4.43e-04 | GradNorm: 2.392
  Batch   16/48 | Loss: 3.6143 | LR: 4.42e-04 | GradNorm: 5.356
  Batch   20/48 | Loss: 3.5134 | LR: 4.41e-04 | GradNorm: 1.412
  Batch   24/48 | Loss: 3.5731 | LR: 4.40e-04 | GradNorm: 9.001
  Batch   28/48 | Loss: 3.5334 | LR: 4.38e-04 | GradNorm: 3.786
  Batch   32/48 | Loss: 3.4913 | LR: 4.36e-04 | GradNorm: 2.220
  Batch   36/48 | Loss: 3.4416 | LR: 4.34e-04 | GradNorm: 1.450
  Batch   40/48 | Loss: 3.4016 | LR: 4.32e-04 | GradNorm: 2.831
  Batch   44/48 | Loss: 3.3650 | LR: 4.29e-04 | GradNorm: 2.619
Epoch 3/10: Train=10.22%, Val=6.82%, Gap=3.40%, LR=4.27e-04
  Batch    0/48 | Loss: 3.4630 | LR: 4.27e-04 | GradNorm: 6.350
  Batch    4/48 | Loss: 3.3705 | LR: 4.24e-04 | GradNorm: 4.310
  Batch    8/48 | Loss: 3.4058 | LR: 4.21e-04 | GradNorm: 4.463
  Batch   12/48 | Loss: 3.2918 | LR: 4.17e-04 | GradNorm: 2.571
  Batch   16/48 | Loss: 3.2789 | LR: 4.14e-04 | GradNorm: 2.719
  Batch   20/48 | Loss: 3.2419 | LR: 4.10e-04 | GradNorm: 1.914
  Batch   24/48 | Loss: 3.2521 | LR: 4.06e-04 | GradNorm: 2.332
  Batch   28/48 | Loss: 3.2014 | LR: 4.02e-04 | GradNorm: 2.736
  Batch   32/48 | Loss: 3.2725 | LR: 3.97e-04 | GradNorm: 4.491
  Batch   36/48 | Loss: 3.1936 | LR: 3.93e-04 | GradNorm: 2.705
  Batch   40/48 | Loss: 3.2299 | LR: 3.88e-04 | GradNorm: 2.496
  Batch   44/48 | Loss: 3.1680 | LR: 3.83e-04 | GradNorm: 2.862
Epoch 4/10: Train=16.00%, Val=10.51%, Gap=5.49%, LR=3.79e-04
  Batch    0/48 | Loss: 3.1508 | LR: 3.78e-04 | GradNorm: 1.804
  Batch    4/48 | Loss: 3.1114 | LR: 3.73e-04 | GradNorm: 2.478
  Batch    8/48 | Loss: 3.1034 | LR: 3.67e-04 | GradNorm: 2.230
  Batch   12/48 | Loss: 3.1102 | LR: 3.62e-04 | GradNorm: 3.725
  Batch   16/48 | Loss: 3.1616 | LR: 3.56e-04 | GradNorm: 2.960
  Batch   20/48 | Loss: 3.1371 | LR: 3.50e-04 | GradNorm: 2.945
  Batch   24/48 | Loss: 3.1713 | LR: 3.44e-04 | GradNorm: 4.705
  Batch   28/48 | Loss: 3.0698 | LR: 3.38e-04 | GradNorm: 1.946
  Batch   32/48 | Loss: 3.0313 | LR: 3.32e-04 | GradNorm: 1.131
  Batch   36/48 | Loss: 3.1148 | LR: 3.25e-04 | GradNorm: 2.009
  Batch   40/48 | Loss: 3.0838 | LR: 3.19e-04 | GradNorm: 1.620
  Batch   44/48 | Loss: 3.0486 | LR: 3.12e-04 | GradNorm: 2.711
Epoch 5/10: Train=21.13%, Val=12.46%, Gap=8.67%, LR=3.07e-04
  Batch    0/48 | Loss: 3.0028 | LR: 3.06e-04 | GradNorm: 3.700
  Batch    4/48 | Loss: 2.9808 | LR: 2.99e-04 | GradNorm: 2.094
  Batch    8/48 | Loss: 3.0231 | LR: 2.92e-04 | GradNorm: 3.825
  Batch   12/48 | Loss: 3.0052 | LR: 2.85e-04 | GradNorm: 3.767
  Batch   16/48 | Loss: 2.9421 | LR: 2.78e-04 | GradNorm: 2.946
  Batch   20/48 | Loss: 2.9220 | LR: 2.71e-04 | GradNorm: 2.266
  Batch   24/48 | Loss: 2.9044 | LR: 2.64e-04 | GradNorm: 1.620
  Batch   28/48 | Loss: 2.8942 | LR: 2.57e-04 | GradNorm: 2.481
  Batch   32/48 | Loss: 2.8944 | LR: 2.49e-04 | GradNorm: 3.512
  Batch   36/48 | Loss: 2.9139 | LR: 2.42e-04 | GradNorm: 3.378
  Batch   40/48 | Loss: 2.8978 | LR: 2.35e-04 | GradNorm: 2.353
  Batch   44/48 | Loss: 2.9363 | LR: 2.28e-04 | GradNorm: 2.900
Epoch 6/10: Train=25.38%, Val=17.62%, Gap=7.76%, LR=2.22e-04
  Batch    0/48 | Loss: 2.8478 | LR: 2.20e-04 | GradNorm: 3.282
  Batch    4/48 | Loss: 2.8203 | LR: 2.13e-04 | GradNorm: 2.646
  Batch    8/48 | Loss: 2.8490 | LR: 2.06e-04 | GradNorm: 3.730
  Batch   12/48 | Loss: 2.7642 | LR: 1.99e-04 | GradNorm: 3.162
  Batch   16/48 | Loss: 2.7943 | LR: 1.91e-04 | GradNorm: 2.979
  Batch   20/48 | Loss: 2.8237 | LR: 1.84e-04 | GradNorm: 3.490
  Batch   24/48 | Loss: 2.8801 | LR: 1.77e-04 | GradNorm: 4.965
  Batch   28/48 | Loss: 2.8156 | LR: 1.70e-04 | GradNorm: 3.948
  Batch   32/48 | Loss: 2.7727 | LR: 1.63e-04 | GradNorm: 2.233
  Batch   36/48 | Loss: 2.8072 | LR: 1.56e-04 | GradNorm: 3.066
  Batch   40/48 | Loss: 2.7843 | LR: 1.49e-04 | GradNorm: 2.883
  Batch   44/48 | Loss: 2.7476 | LR: 1.42e-04 | GradNorm: 2.089
Epoch 7/10: Train=30.81%, Val=19.93%, Gap=10.88%, LR=1.37e-04
  Batch    0/48 | Loss: 2.7581 | LR: 1.36e-04 | GradNorm: 3.009
  Batch    4/48 | Loss: 2.7004 | LR: 1.29e-04 | GradNorm: 3.962
  Batch    8/48 | Loss: 2.6968 | LR: 1.22e-04 | GradNorm: 2.602
  Batch   12/48 | Loss: 2.7335 | LR: 1.16e-04 | GradNorm: 2.750
  Batch   16/48 | Loss: 2.7628 | LR: 1.10e-04 | GradNorm: 3.096
  Batch   20/48 | Loss: 2.6818 | LR: 1.03e-04 | GradNorm: 2.425
  Batch   24/48 | Loss: 2.6621 | LR: 9.73e-05 | GradNorm: 3.639
  Batch   28/48 | Loss: 2.6819 | LR: 9.14e-05 | GradNorm: 3.943
  Batch   32/48 | Loss: 2.6699 | LR: 8.56e-05 | GradNorm: 3.144
  Batch   36/48 | Loss: 2.6503 | LR: 7.99e-05 | GradNorm: 3.221
  Batch   40/48 | Loss: 2.5940 | LR: 7.44e-05 | GradNorm: 1.483
  Batch   44/48 | Loss: 2.6504 | LR: 6.91e-05 | GradNorm: 3.332
Epoch 8/10: Train=34.27%, Val=19.36%, Gap=14.91%, LR=6.52e-05
  Batch    0/48 | Loss: 2.6439 | LR: 6.39e-05 | GradNorm: 3.289
  Batch    4/48 | Loss: 2.6150 | LR: 5.89e-05 | GradNorm: 3.120
  Batch    8/48 | Loss: 2.6704 | LR: 5.40e-05 | GradNorm: 4.097
  Batch   12/48 | Loss: 2.5895 | LR: 4.94e-05 | GradNorm: 2.274
  Batch   16/48 | Loss: 2.5661 | LR: 4.49e-05 | GradNorm: 2.972
  Batch   20/48 | Loss: 2.5854 | LR: 4.06e-05 | GradNorm: 2.959
  Batch   24/48 | Loss: 2.5944 | LR: 3.65e-05 | GradNorm: 2.385
  Batch   28/48 | Loss: 2.5948 | LR: 3.26e-05 | GradNorm: 2.068
  Batch   32/48 | Loss: 2.5818 | LR: 2.90e-05 | GradNorm: 3.037
  Batch   36/48 | Loss: 2.5701 | LR: 2.55e-05 | GradNorm: 2.403
  Batch   40/48 | Loss: 2.5616 | LR: 2.22e-05 | GradNorm: 1.866
  Batch   44/48 | Loss: 2.5799 | LR: 1.92e-05 | GradNorm: 2.416
Epoch 9/10: Train=36.87%, Val=21.25%, Gap=15.62%, LR=1.70e-05
  Batch    0/48 | Loss: 2.5661 | LR: 1.63e-05 | GradNorm: 3.885
  Batch    4/48 | Loss: 2.5806 | LR: 1.37e-05 | GradNorm: 2.444
  Batch    8/48 | Loss: 2.5532 | LR: 1.13e-05 | GradNorm: 1.381
  Batch   12/48 | Loss: 2.5418 | LR: 9.14e-06 | GradNorm: 3.687
  Batch   16/48 | Loss: 2.5360 | LR: 7.21e-06 | GradNorm: 1.857
  Batch   20/48 | Loss: 2.5657 | LR: 5.50e-06 | GradNorm: 2.863
  Batch   24/48 | Loss: 2.5752 | LR: 4.02e-06 | GradNorm: 3.516
  Batch   28/48 | Loss: 2.5851 | LR: 2.78e-06 | GradNorm: 2.715
  Batch   32/48 | Loss: 2.5786 | LR: 1.77e-06 | GradNorm: 3.360
  Batch   36/48 | Loss: 2.5412 | LR: 9.99e-07 | GradNorm: 1.735
  Batch   40/48 | Loss: 2.5396 | LR: 4.64e-07 | GradNorm: 1.956
  Batch   44/48 | Loss: 2.5504 | LR: 1.67e-07 | GradNorm: 2.821
Epoch 10/10: Train=38.36%, Val=21.17%, Gap=17.19%, LR=1.00e-07
Best validation accuracy: 21.25%
