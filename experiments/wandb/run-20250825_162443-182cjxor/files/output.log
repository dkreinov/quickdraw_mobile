=== W&B Sweep Run: LR=0.000393 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003930926578164195
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000393
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9621 | LR: 7.98e-06 | GradNorm: 1.604
  Batch    4/48 | Loss: 3.9335 | LR: 2.42e-05 | GradNorm: 1.055
  Batch    8/48 | Loss: 3.9293 | LR: 4.04e-05 | GradNorm: 1.008
  Batch   12/48 | Loss: 3.9112 | LR: 5.66e-05 | GradNorm: 0.683
  Batch   16/48 | Loss: 3.9162 | LR: 7.28e-05 | GradNorm: 0.568
  Batch   20/48 | Loss: 3.9172 | LR: 8.91e-05 | GradNorm: 0.625
  Batch   24/48 | Loss: 3.9101 | LR: 1.05e-04 | GradNorm: 0.608
  Batch   28/48 | Loss: 3.9163 | LR: 1.21e-04 | GradNorm: 0.559
  Batch   32/48 | Loss: 3.9073 | LR: 1.38e-04 | GradNorm: 0.514
  Batch   36/48 | Loss: 3.9008 | LR: 1.54e-04 | GradNorm: 0.518
  Batch   40/48 | Loss: 3.8771 | LR: 1.70e-04 | GradNorm: 0.616
  Batch   44/48 | Loss: 3.8803 | LR: 1.86e-04 | GradNorm: 4.352
Epoch 1/10: Train=2.52%, Val=3.03%, Gap=-0.51%, LR=1.99e-04
  Batch    0/48 | Loss: 3.9051 | LR: 2.03e-04 | GradNorm: 4.560
  Batch    4/48 | Loss: 3.9110 | LR: 2.19e-04 | GradNorm: 4.150
  Batch    8/48 | Loss: 3.8778 | LR: 2.35e-04 | GradNorm: 2.712
  Batch   12/48 | Loss: 3.8461 | LR: 2.51e-04 | GradNorm: 2.328
  Batch   16/48 | Loss: 3.8075 | LR: 2.67e-04 | GradNorm: 1.447
  Batch   20/48 | Loss: 3.7724 | LR: 2.84e-04 | GradNorm: 1.432
  Batch   24/48 | Loss: 3.7231 | LR: 3.00e-04 | GradNorm: 1.942
  Batch   28/48 | Loss: 3.7434 | LR: 3.16e-04 | GradNorm: 3.685
  Batch   32/48 | Loss: 3.6733 | LR: 3.32e-04 | GradNorm: 1.728
  Batch   36/48 | Loss: 3.6417 | LR: 3.49e-04 | GradNorm: 1.926
  Batch   40/48 | Loss: 3.5853 | LR: 3.65e-04 | GradNorm: 1.115
  Batch   44/48 | Loss: 3.5214 | LR: 3.81e-04 | GradNorm: 3.229
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.56%, Val=9.56%, Gap=-3.00%, LR=3.93e-04
  Batch    0/48 | Loss: 3.4869 | LR: 3.93e-04 | GradNorm: 3.323
  Batch    4/48 | Loss: 3.5401 | LR: 3.93e-04 | GradNorm: 6.845
  Batch    8/48 | Loss: 3.4604 | LR: 3.93e-04 | GradNorm: 2.332
  Batch   12/48 | Loss: 3.4752 | LR: 3.92e-04 | GradNorm: 4.043
  Batch   16/48 | Loss: 3.4289 | LR: 3.91e-04 | GradNorm: 3.981
  Batch   20/48 | Loss: 3.3768 | LR: 3.90e-04 | GradNorm: 2.630
  Batch   24/48 | Loss: 3.3793 | LR: 3.89e-04 | GradNorm: 2.966
  Batch   28/48 | Loss: 3.3209 | LR: 3.88e-04 | GradNorm: 3.067
  Batch   32/48 | Loss: 3.3772 | LR: 3.86e-04 | GradNorm: 3.975
  Batch   36/48 | Loss: 3.3845 | LR: 3.84e-04 | GradNorm: 2.941
  Batch   40/48 | Loss: 3.3630 | LR: 3.82e-04 | GradNorm: 3.758
  Batch   44/48 | Loss: 3.3199 | LR: 3.80e-04 | GradNorm: 2.191
Epoch 3/10: Train=13.44%, Val=13.56%, Gap=-0.12%, LR=3.78e-04
  Batch    0/48 | Loss: 3.2836 | LR: 3.78e-04 | GradNorm: 3.237
  Batch    4/48 | Loss: 3.2822 | LR: 3.75e-04 | GradNorm: 2.779
  Batch    8/48 | Loss: 3.2848 | LR: 3.72e-04 | GradNorm: 3.839
  Batch   12/48 | Loss: 3.2448 | LR: 3.69e-04 | GradNorm: 3.353
  Batch   16/48 | Loss: 3.2421 | LR: 3.66e-04 | GradNorm: 4.157
  Batch   20/48 | Loss: 3.2043 | LR: 3.63e-04 | GradNorm: 2.848
  Batch   24/48 | Loss: 3.1876 | LR: 3.59e-04 | GradNorm: 2.460
  Batch   28/48 | Loss: 3.1992 | LR: 3.55e-04 | GradNorm: 4.425
  Batch   32/48 | Loss: 3.2238 | LR: 3.52e-04 | GradNorm: 4.398
  Batch   36/48 | Loss: 3.1934 | LR: 3.47e-04 | GradNorm: 2.685
  Batch   40/48 | Loss: 3.2107 | LR: 3.43e-04 | GradNorm: 2.847
  Batch   44/48 | Loss: 3.1554 | LR: 3.39e-04 | GradNorm: 2.544
Epoch 4/10: Train=18.13%, Val=12.00%, Gap=6.13%, LR=3.36e-04
  Batch    0/48 | Loss: 3.1029 | LR: 3.34e-04 | GradNorm: 2.313
  Batch    4/48 | Loss: 3.0997 | LR: 3.30e-04 | GradNorm: 7.445
  Batch    8/48 | Loss: 3.0936 | LR: 3.25e-04 | GradNorm: 3.371
  Batch   12/48 | Loss: 3.1558 | LR: 3.20e-04 | GradNorm: 3.839
  Batch   16/48 | Loss: 3.1980 | LR: 3.15e-04 | GradNorm: 4.538
  Batch   20/48 | Loss: 3.0982 | LR: 3.10e-04 | GradNorm: 2.149
  Batch   24/48 | Loss: 3.0982 | LR: 3.04e-04 | GradNorm: 2.722
  Batch   28/48 | Loss: 3.0651 | LR: 2.99e-04 | GradNorm: 2.493
  Batch   32/48 | Loss: 3.0383 | LR: 2.93e-04 | GradNorm: 2.613
  Batch   36/48 | Loss: 3.0864 | LR: 2.88e-04 | GradNorm: 1.414
  Batch   40/48 | Loss: 3.0468 | LR: 2.82e-04 | GradNorm: 1.339
  Batch   44/48 | Loss: 3.0581 | LR: 2.76e-04 | GradNorm: 4.143
Epoch 5/10: Train=21.18%, Val=10.74%, Gap=10.44%, LR=2.72e-04
  Batch    0/48 | Loss: 3.0507 | LR: 2.70e-04 | GradNorm: 6.461
  Batch    4/48 | Loss: 2.9778 | LR: 2.64e-04 | GradNorm: 4.072
  Batch    8/48 | Loss: 2.9868 | LR: 2.58e-04 | GradNorm: 4.074
  Batch   12/48 | Loss: 2.9370 | LR: 2.52e-04 | GradNorm: 2.463
  Batch   16/48 | Loss: 2.8998 | LR: 2.46e-04 | GradNorm: 1.281
  Batch   20/48 | Loss: 2.9011 | LR: 2.40e-04 | GradNorm: 2.629
  Batch   24/48 | Loss: 2.9057 | LR: 2.33e-04 | GradNorm: 3.795
  Batch   28/48 | Loss: 2.8587 | LR: 2.27e-04 | GradNorm: 4.373
  Batch   32/48 | Loss: 2.9191 | LR: 2.21e-04 | GradNorm: 8.024
  Batch   36/48 | Loss: 2.9068 | LR: 2.14e-04 | GradNorm: 4.093
  Batch   40/48 | Loss: 2.8849 | LR: 2.08e-04 | GradNorm: 7.029
  Batch   44/48 | Loss: 2.9070 | LR: 2.01e-04 | GradNorm: 3.922
Epoch 6/10: Train=26.45%, Val=17.02%, Gap=9.43%, LR=1.97e-04
  Batch    0/48 | Loss: 2.8403 | LR: 1.95e-04 | GradNorm: 4.282
  Batch    4/48 | Loss: 2.8215 | LR: 1.89e-04 | GradNorm: 5.205
  Batch    8/48 | Loss: 2.8265 | LR: 1.82e-04 | GradNorm: 4.272
  Batch   12/48 | Loss: 2.7386 | LR: 1.76e-04 | GradNorm: 4.594
  Batch   16/48 | Loss: 2.7671 | LR: 1.69e-04 | GradNorm: 3.657
  Batch   20/48 | Loss: 2.7909 | LR: 1.63e-04 | GradNorm: 5.474
  Batch   24/48 | Loss: 2.8123 | LR: 1.57e-04 | GradNorm: 3.141
  Batch   28/48 | Loss: 2.7762 | LR: 1.50e-04 | GradNorm: 2.567
  Batch   32/48 | Loss: 2.8139 | LR: 1.44e-04 | GradNorm: 4.728
  Batch   36/48 | Loss: 2.8253 | LR: 1.38e-04 | GradNorm: 4.762
  Batch   40/48 | Loss: 2.7515 | LR: 1.32e-04 | GradNorm: 3.490
  Batch   44/48 | Loss: 2.7389 | LR: 1.26e-04 | GradNorm: 4.547
Epoch 7/10: Train=31.21%, Val=20.63%, Gap=10.58%, LR=1.21e-04
  Batch    0/48 | Loss: 2.7379 | LR: 1.20e-04 | GradNorm: 3.992
  Batch    4/48 | Loss: 2.7169 | LR: 1.14e-04 | GradNorm: 6.023
  Batch    8/48 | Loss: 2.7103 | LR: 1.08e-04 | GradNorm: 5.736
  Batch   12/48 | Loss: 2.7424 | LR: 1.03e-04 | GradNorm: 2.949
  Batch   16/48 | Loss: 2.7758 | LR: 9.70e-05 | GradNorm: 4.493
  Batch   20/48 | Loss: 2.6728 | LR: 9.15e-05 | GradNorm: 2.700
  Batch   24/48 | Loss: 2.6507 | LR: 8.61e-05 | GradNorm: 2.827
  Batch   28/48 | Loss: 2.6698 | LR: 8.08e-05 | GradNorm: 2.854
  Batch   32/48 | Loss: 2.6747 | LR: 7.57e-05 | GradNorm: 2.741
  Batch   36/48 | Loss: 2.6425 | LR: 7.07e-05 | GradNorm: 2.898
  Batch   40/48 | Loss: 2.5965 | LR: 6.58e-05 | GradNorm: 5.966
  Batch   44/48 | Loss: 2.6538 | LR: 6.11e-05 | GradNorm: 3.908
Epoch 8/10: Train=34.61%, Val=20.74%, Gap=13.87%, LR=5.77e-05
  Batch    0/48 | Loss: 2.6109 | LR: 5.65e-05 | GradNorm: 1.770
  Batch    4/48 | Loss: 2.5906 | LR: 5.21e-05 | GradNorm: 2.403
  Batch    8/48 | Loss: 2.6564 | LR: 4.78e-05 | GradNorm: 2.565
  Batch   12/48 | Loss: 2.5907 | LR: 4.37e-05 | GradNorm: 2.769
  Batch   16/48 | Loss: 2.5454 | LR: 3.97e-05 | GradNorm: 2.248
  Batch   20/48 | Loss: 2.5757 | LR: 3.59e-05 | GradNorm: 2.965
  Batch   24/48 | Loss: 2.5885 | LR: 3.23e-05 | GradNorm: 2.740
  Batch   28/48 | Loss: 2.6094 | LR: 2.89e-05 | GradNorm: 4.635
  Batch   32/48 | Loss: 2.5694 | LR: 2.56e-05 | GradNorm: 4.686
  Batch   36/48 | Loss: 2.5835 | LR: 2.26e-05 | GradNorm: 3.385
  Batch   40/48 | Loss: 2.5447 | LR: 1.97e-05 | GradNorm: 1.970
  Batch   44/48 | Loss: 2.5742 | LR: 1.70e-05 | GradNorm: 4.241
Epoch 9/10: Train=37.38%, Val=23.01%, Gap=14.37%, LR=1.51e-05
  Batch    0/48 | Loss: 2.5741 | LR: 1.44e-05 | GradNorm: 5.185
  Batch    4/48 | Loss: 2.5572 | LR: 1.21e-05 | GradNorm: 2.485
  Batch    8/48 | Loss: 2.5296 | LR: 1.00e-05 | GradNorm: 2.511
  Batch   12/48 | Loss: 2.5486 | LR: 8.10e-06 | GradNorm: 2.572
  Batch   16/48 | Loss: 2.5557 | LR: 6.39e-06 | GradNorm: 2.926
  Batch   20/48 | Loss: 2.5681 | LR: 4.87e-06 | GradNorm: 2.559
  Batch   24/48 | Loss: 2.5722 | LR: 3.57e-06 | GradNorm: 2.766
  Batch   28/48 | Loss: 2.5927 | LR: 2.47e-06 | GradNorm: 2.695
  Batch   32/48 | Loss: 2.5731 | LR: 1.58e-06 | GradNorm: 1.789
  Batch   36/48 | Loss: 2.5373 | LR: 8.95e-07 | GradNorm: 2.683
  Batch   40/48 | Loss: 2.5080 | LR: 4.22e-07 | GradNorm: 1.758
  Batch   44/48 | Loss: 2.5256 | LR: 1.59e-07 | GradNorm: 1.893
Epoch 10/10: Train=38.48%, Val=22.10%, Gap=16.38%, LR=1.00e-07
Best validation accuracy: 23.01%
