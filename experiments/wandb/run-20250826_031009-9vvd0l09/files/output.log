=== W&B Sweep Run: LR=0.000289 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002891909981832574
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000289
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9440 | LR: 5.87e-06 | GradNorm: 1.414
  Batch    4/48 | Loss: 3.9282 | LR: 1.78e-05 | GradNorm: 1.025
  Batch    8/48 | Loss: 3.9231 | LR: 2.97e-05 | GradNorm: 0.927
  Batch   12/48 | Loss: 3.9112 | LR: 4.17e-05 | GradNorm: 0.699
  Batch   16/48 | Loss: 3.9255 | LR: 5.36e-05 | GradNorm: 0.672
  Batch   20/48 | Loss: 3.9153 | LR: 6.55e-05 | GradNorm: 0.639
  Batch   24/48 | Loss: 3.9155 | LR: 7.74e-05 | GradNorm: 0.643
  Batch   28/48 | Loss: 3.9148 | LR: 8.94e-05 | GradNorm: 0.557
  Batch   32/48 | Loss: 3.9053 | LR: 1.01e-04 | GradNorm: 0.502
  Batch   36/48 | Loss: 3.9062 | LR: 1.13e-04 | GradNorm: 0.537
  Batch   40/48 | Loss: 3.8962 | LR: 1.25e-04 | GradNorm: 0.579
  Batch   44/48 | Loss: 3.8667 | LR: 1.37e-04 | GradNorm: 0.769
Epoch 1/10: Train=2.41%, Val=4.99%, Gap=-2.58%, LR=1.46e-04
  Batch    0/48 | Loss: 3.8137 | LR: 1.49e-04 | GradNorm: 0.955
  Batch    4/48 | Loss: 3.8265 | LR: 1.61e-04 | GradNorm: 6.823
  Batch    8/48 | Loss: 3.8172 | LR: 1.73e-04 | GradNorm: 7.933
  Batch   12/48 | Loss: 3.7448 | LR: 1.85e-04 | GradNorm: 6.737
  Batch   16/48 | Loss: 3.7259 | LR: 1.97e-04 | GradNorm: 1.830
  Batch   20/48 | Loss: 3.7204 | LR: 2.09e-04 | GradNorm: 1.520
  Batch   24/48 | Loss: 3.6597 | LR: 2.21e-04 | GradNorm: 2.446
  Batch   28/48 | Loss: 3.6900 | LR: 2.33e-04 | GradNorm: 4.092
  Batch   32/48 | Loss: 3.6510 | LR: 2.44e-04 | GradNorm: 2.786
  Batch   36/48 | Loss: 3.6237 | LR: 2.56e-04 | GradNorm: 1.419
  Batch   40/48 | Loss: 3.8188 | LR: 2.68e-04 | GradNorm: 16.874
  Batch   44/48 | Loss: 3.6084 | LR: 2.80e-04 | GradNorm: 2.534
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.55%, Val=5.39%, Gap=1.16%, LR=2.89e-04
  Batch    0/48 | Loss: 3.6453 | LR: 2.89e-04 | GradNorm: 4.393
  Batch    4/48 | Loss: 3.5860 | LR: 2.89e-04 | GradNorm: 1.940
  Batch    8/48 | Loss: 3.5119 | LR: 2.89e-04 | GradNorm: 2.898
  Batch   12/48 | Loss: 3.6227 | LR: 2.88e-04 | GradNorm: 6.906
  Batch   16/48 | Loss: 3.5180 | LR: 2.88e-04 | GradNorm: 2.953
  Batch   20/48 | Loss: 3.4905 | LR: 2.87e-04 | GradNorm: 5.538
  Batch   24/48 | Loss: 3.4834 | LR: 2.86e-04 | GradNorm: 6.488
  Batch   28/48 | Loss: 3.3875 | LR: 2.85e-04 | GradNorm: 3.491
  Batch   32/48 | Loss: 3.4354 | LR: 2.84e-04 | GradNorm: 4.785
  Batch   36/48 | Loss: 3.3877 | LR: 2.83e-04 | GradNorm: 3.170
  Batch   40/48 | Loss: 3.3458 | LR: 2.81e-04 | GradNorm: 3.885
  Batch   44/48 | Loss: 3.2944 | LR: 2.80e-04 | GradNorm: 1.519
Epoch 3/10: Train=12.37%, Val=10.76%, Gap=1.61%, LR=2.78e-04
  Batch    0/48 | Loss: 3.3794 | LR: 2.78e-04 | GradNorm: 6.007
  Batch    4/48 | Loss: 3.2782 | LR: 2.76e-04 | GradNorm: 2.494
  Batch    8/48 | Loss: 3.2981 | LR: 2.74e-04 | GradNorm: 3.897
  Batch   12/48 | Loss: 3.2344 | LR: 2.72e-04 | GradNorm: 2.940
  Batch   16/48 | Loss: 3.2617 | LR: 2.69e-04 | GradNorm: 3.540
  Batch   20/48 | Loss: 3.2340 | LR: 2.67e-04 | GradNorm: 1.993
  Batch   24/48 | Loss: 3.2254 | LR: 2.64e-04 | GradNorm: 2.433
  Batch   28/48 | Loss: 3.1936 | LR: 2.61e-04 | GradNorm: 2.337
  Batch   32/48 | Loss: 3.2165 | LR: 2.59e-04 | GradNorm: 2.711
  Batch   36/48 | Loss: 3.1734 | LR: 2.56e-04 | GradNorm: 2.189
  Batch   40/48 | Loss: 3.2319 | LR: 2.53e-04 | GradNorm: 4.657
  Batch   44/48 | Loss: 3.1587 | LR: 2.49e-04 | GradNorm: 3.248
Epoch 4/10: Train=17.30%, Val=13.79%, Gap=3.51%, LR=2.47e-04
  Batch    0/48 | Loss: 3.1398 | LR: 2.46e-04 | GradNorm: 3.140
  Batch    4/48 | Loss: 3.1620 | LR: 2.43e-04 | GradNorm: 8.618
  Batch    8/48 | Loss: 3.0981 | LR: 2.39e-04 | GradNorm: 2.824
  Batch   12/48 | Loss: 3.0973 | LR: 2.35e-04 | GradNorm: 2.757
  Batch   16/48 | Loss: 3.2023 | LR: 2.32e-04 | GradNorm: 5.103
  Batch   20/48 | Loss: 3.2047 | LR: 2.28e-04 | GradNorm: 5.712
  Batch   24/48 | Loss: 3.1197 | LR: 2.24e-04 | GradNorm: 4.248
  Batch   28/48 | Loss: 3.0741 | LR: 2.20e-04 | GradNorm: 2.816
  Batch   32/48 | Loss: 3.0772 | LR: 2.16e-04 | GradNorm: 3.627
  Batch   36/48 | Loss: 3.1069 | LR: 2.12e-04 | GradNorm: 1.894
  Batch   40/48 | Loss: 3.0714 | LR: 2.08e-04 | GradNorm: 2.981
  Batch   44/48 | Loss: 3.0200 | LR: 2.03e-04 | GradNorm: 3.020
Epoch 5/10: Train=21.73%, Val=16.59%, Gap=5.14%, LR=2.00e-04
  Batch    0/48 | Loss: 2.9594 | LR: 1.99e-04 | GradNorm: 3.840
  Batch    4/48 | Loss: 2.9128 | LR: 1.94e-04 | GradNorm: 5.149
  Batch    8/48 | Loss: 2.9172 | LR: 1.90e-04 | GradNorm: 4.450
  Batch   12/48 | Loss: 2.9223 | LR: 1.85e-04 | GradNorm: 4.704
  Batch   16/48 | Loss: 2.8904 | LR: 1.81e-04 | GradNorm: 4.140
  Batch   20/48 | Loss: 2.8770 | LR: 1.76e-04 | GradNorm: 3.576
  Batch   24/48 | Loss: 2.8518 | LR: 1.72e-04 | GradNorm: 4.392
  Batch   28/48 | Loss: 2.8537 | LR: 1.67e-04 | GradNorm: 8.284
  Batch   32/48 | Loss: 2.8326 | LR: 1.62e-04 | GradNorm: 6.850
  Batch   36/48 | Loss: 2.8363 | LR: 1.58e-04 | GradNorm: 2.675
  Batch   40/48 | Loss: 2.8347 | LR: 1.53e-04 | GradNorm: 3.727
  Batch   44/48 | Loss: 2.8736 | LR: 1.48e-04 | GradNorm: 4.369
Epoch 6/10: Train=28.40%, Val=18.12%, Gap=10.28%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8189 | LR: 1.43e-04 | GradNorm: 4.980
  Batch    4/48 | Loss: 2.8343 | LR: 1.39e-04 | GradNorm: 8.134
  Batch    8/48 | Loss: 2.8035 | LR: 1.34e-04 | GradNorm: 3.556
  Batch   12/48 | Loss: 2.7429 | LR: 1.29e-04 | GradNorm: 6.824
  Batch   16/48 | Loss: 2.7552 | LR: 1.25e-04 | GradNorm: 3.811
  Batch   20/48 | Loss: 2.7748 | LR: 1.20e-04 | GradNorm: 3.460
  Batch   24/48 | Loss: 2.7816 | LR: 1.15e-04 | GradNorm: 3.191
  Batch   28/48 | Loss: 2.8022 | LR: 1.11e-04 | GradNorm: 4.813
  Batch   32/48 | Loss: 2.7862 | LR: 1.06e-04 | GradNorm: 6.690
  Batch   36/48 | Loss: 2.8274 | LR: 1.02e-04 | GradNorm: 5.368
  Batch   40/48 | Loss: 2.7775 | LR: 9.71e-05 | GradNorm: 5.534
  Batch   44/48 | Loss: 2.7696 | LR: 9.26e-05 | GradNorm: 7.153
Epoch 7/10: Train=31.90%, Val=21.38%, Gap=10.52%, LR=8.93e-05
  Batch    0/48 | Loss: 2.7367 | LR: 8.82e-05 | GradNorm: 2.719
  Batch    4/48 | Loss: 2.6738 | LR: 8.39e-05 | GradNorm: 3.470
  Batch    8/48 | Loss: 2.6726 | LR: 7.97e-05 | GradNorm: 2.486
  Batch   12/48 | Loss: 2.7276 | LR: 7.55e-05 | GradNorm: 2.859
  Batch   16/48 | Loss: 2.7173 | LR: 7.14e-05 | GradNorm: 3.129
  Batch   20/48 | Loss: 2.6460 | LR: 6.73e-05 | GradNorm: 4.120
  Batch   24/48 | Loss: 2.6512 | LR: 6.34e-05 | GradNorm: 4.892
  Batch   28/48 | Loss: 2.6745 | LR: 5.95e-05 | GradNorm: 3.165
  Batch   32/48 | Loss: 2.7031 | LR: 5.57e-05 | GradNorm: 5.311
  Batch   36/48 | Loss: 2.6607 | LR: 5.20e-05 | GradNorm: 3.270
  Batch   40/48 | Loss: 2.6106 | LR: 4.85e-05 | GradNorm: 3.985
  Batch   44/48 | Loss: 2.6654 | LR: 4.50e-05 | GradNorm: 3.611
Epoch 8/10: Train=34.78%, Val=20.39%, Gap=14.39%, LR=4.24e-05
  Batch    0/48 | Loss: 2.6211 | LR: 4.16e-05 | GradNorm: 2.648
  Batch    4/48 | Loss: 2.6314 | LR: 3.83e-05 | GradNorm: 3.738
  Batch    8/48 | Loss: 2.6734 | LR: 3.52e-05 | GradNorm: 4.381
  Batch   12/48 | Loss: 2.6049 | LR: 3.22e-05 | GradNorm: 3.998
  Batch   16/48 | Loss: 2.5568 | LR: 2.93e-05 | GradNorm: 2.850
  Batch   20/48 | Loss: 2.5777 | LR: 2.65e-05 | GradNorm: 3.241
  Batch   24/48 | Loss: 2.6043 | LR: 2.38e-05 | GradNorm: 3.701
  Batch   28/48 | Loss: 2.6294 | LR: 2.13e-05 | GradNorm: 3.922
  Batch   32/48 | Loss: 2.5920 | LR: 1.89e-05 | GradNorm: 4.317
  Batch   36/48 | Loss: 2.5871 | LR: 1.66e-05 | GradNorm: 4.269
  Batch   40/48 | Loss: 2.5654 | LR: 1.45e-05 | GradNorm: 3.692
  Batch   44/48 | Loss: 2.5964 | LR: 1.25e-05 | GradNorm: 1.948
Epoch 9/10: Train=37.35%, Val=21.75%, Gap=15.60%, LR=1.11e-05
  Batch    0/48 | Loss: 2.5802 | LR: 1.07e-05 | GradNorm: 2.407
  Batch    4/48 | Loss: 2.5773 | LR: 8.95e-06 | GradNorm: 2.811
  Batch    8/48 | Loss: 2.5581 | LR: 7.40e-06 | GradNorm: 1.748
  Batch   12/48 | Loss: 2.5646 | LR: 5.99e-06 | GradNorm: 2.965
  Batch   16/48 | Loss: 2.5627 | LR: 4.72e-06 | GradNorm: 1.868
  Batch   20/48 | Loss: 2.5727 | LR: 3.61e-06 | GradNorm: 3.429
  Batch   24/48 | Loss: 2.5804 | LR: 2.65e-06 | GradNorm: 2.281
  Batch   28/48 | Loss: 2.6154 | LR: 1.84e-06 | GradNorm: 2.051
  Batch   32/48 | Loss: 2.5960 | LR: 1.19e-06 | GradNorm: 2.341
  Batch   36/48 | Loss: 2.5552 | LR: 6.85e-07 | GradNorm: 1.919
  Batch   40/48 | Loss: 2.5486 | LR: 3.37e-07 | GradNorm: 1.792
  Batch   44/48 | Loss: 2.5528 | LR: 1.44e-07 | GradNorm: 2.229
Epoch 10/10: Train=38.25%, Val=22.20%, Gap=16.05%, LR=1.00e-07
Best validation accuracy: 22.20%
