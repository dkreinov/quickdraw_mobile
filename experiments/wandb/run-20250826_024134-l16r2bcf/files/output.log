=== W&B Sweep Run: LR=0.000290 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00029018650627122205
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000290
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9616 | LR: 5.89e-06 | GradNorm: 1.655
  Batch    4/48 | Loss: 3.9383 | LR: 1.79e-05 | GradNorm: 1.135
  Batch    8/48 | Loss: 3.9269 | LR: 2.98e-05 | GradNorm: 0.982
  Batch   12/48 | Loss: 3.9151 | LR: 4.18e-05 | GradNorm: 0.752
  Batch   16/48 | Loss: 3.9201 | LR: 5.38e-05 | GradNorm: 0.642
  Batch   20/48 | Loss: 3.9195 | LR: 6.57e-05 | GradNorm: 0.708
  Batch   24/48 | Loss: 3.9102 | LR: 7.77e-05 | GradNorm: 0.595
  Batch   28/48 | Loss: 3.9161 | LR: 8.97e-05 | GradNorm: 0.548
  Batch   32/48 | Loss: 3.9131 | LR: 1.02e-04 | GradNorm: 0.535
  Batch   36/48 | Loss: 3.9143 | LR: 1.14e-04 | GradNorm: 0.538
  Batch   40/48 | Loss: 3.9095 | LR: 1.26e-04 | GradNorm: 0.553
  Batch   44/48 | Loss: 3.9061 | LR: 1.38e-04 | GradNorm: 0.609
Epoch 1/10: Train=2.35%, Val=4.92%, Gap=-2.57%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8898 | LR: 1.50e-04 | GradNorm: 0.717
  Batch    4/48 | Loss: 3.8577 | LR: 1.62e-04 | GradNorm: 1.583
  Batch    8/48 | Loss: 3.8172 | LR: 1.73e-04 | GradNorm: 1.741
  Batch   12/48 | Loss: 3.7631 | LR: 1.85e-04 | GradNorm: 1.146
  Batch   16/48 | Loss: 3.9330 | LR: 1.97e-04 | GradNorm: 3.161
  Batch   20/48 | Loss: 3.8286 | LR: 2.09e-04 | GradNorm: 1.572
  Batch   24/48 | Loss: 3.7914 | LR: 2.21e-04 | GradNorm: 1.731
  Batch   28/48 | Loss: 3.7588 | LR: 2.33e-04 | GradNorm: 1.143
  Batch   32/48 | Loss: 3.7181 | LR: 2.45e-04 | GradNorm: 1.598
  Batch   36/48 | Loss: 3.6668 | LR: 2.57e-04 | GradNorm: 1.840
  Batch   40/48 | Loss: 3.8317 | LR: 2.69e-04 | GradNorm: 10.480
  Batch   44/48 | Loss: 3.6586 | LR: 2.81e-04 | GradNorm: 3.513
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.50%, Val=7.52%, Gap=-2.02%, LR=2.90e-04
  Batch    0/48 | Loss: 3.6214 | LR: 2.90e-04 | GradNorm: 4.338
  Batch    4/48 | Loss: 3.5684 | LR: 2.90e-04 | GradNorm: 2.683
  Batch    8/48 | Loss: 3.5272 | LR: 2.90e-04 | GradNorm: 2.713
  Batch   12/48 | Loss: 3.5063 | LR: 2.89e-04 | GradNorm: 5.531
  Batch   16/48 | Loss: 3.4390 | LR: 2.89e-04 | GradNorm: 0.887
  Batch   20/48 | Loss: 3.4870 | LR: 2.88e-04 | GradNorm: 6.967
  Batch   24/48 | Loss: 3.4662 | LR: 2.87e-04 | GradNorm: 5.358
  Batch   28/48 | Loss: 3.3557 | LR: 2.86e-04 | GradNorm: 1.946
  Batch   32/48 | Loss: 3.4101 | LR: 2.85e-04 | GradNorm: 3.721
  Batch   36/48 | Loss: 3.3768 | LR: 2.84e-04 | GradNorm: 4.060
  Batch   40/48 | Loss: 3.3193 | LR: 2.82e-04 | GradNorm: 3.055
  Batch   44/48 | Loss: 3.3443 | LR: 2.80e-04 | GradNorm: 3.781
Epoch 3/10: Train=12.82%, Val=11.08%, Gap=1.74%, LR=2.79e-04
  Batch    0/48 | Loss: 3.2956 | LR: 2.79e-04 | GradNorm: 2.424
  Batch    4/48 | Loss: 3.3233 | LR: 2.77e-04 | GradNorm: 2.745
  Batch    8/48 | Loss: 3.2496 | LR: 2.75e-04 | GradNorm: 1.860
  Batch   12/48 | Loss: 3.2835 | LR: 2.72e-04 | GradNorm: 3.946
  Batch   16/48 | Loss: 3.2993 | LR: 2.70e-04 | GradNorm: 4.102
  Batch   20/48 | Loss: 3.2307 | LR: 2.68e-04 | GradNorm: 1.786
  Batch   24/48 | Loss: 3.2293 | LR: 2.65e-04 | GradNorm: 5.997
  Batch   28/48 | Loss: 3.1889 | LR: 2.62e-04 | GradNorm: 2.079
  Batch   32/48 | Loss: 3.2216 | LR: 2.59e-04 | GradNorm: 2.898
  Batch   36/48 | Loss: 3.1651 | LR: 2.57e-04 | GradNorm: 3.017
  Batch   40/48 | Loss: 3.1482 | LR: 2.53e-04 | GradNorm: 2.671
  Batch   44/48 | Loss: 3.0920 | LR: 2.50e-04 | GradNorm: 4.093
Epoch 4/10: Train=17.92%, Val=13.83%, Gap=4.09%, LR=2.48e-04
  Batch    0/48 | Loss: 3.0822 | LR: 2.47e-04 | GradNorm: 3.617
  Batch    4/48 | Loss: 3.0572 | LR: 2.43e-04 | GradNorm: 3.971
  Batch    8/48 | Loss: 3.0368 | LR: 2.40e-04 | GradNorm: 3.759
  Batch   12/48 | Loss: 3.0144 | LR: 2.36e-04 | GradNorm: 3.891
  Batch   16/48 | Loss: 3.0568 | LR: 2.32e-04 | GradNorm: 3.348
  Batch   20/48 | Loss: 3.0085 | LR: 2.29e-04 | GradNorm: 3.270
  Batch   24/48 | Loss: 3.0492 | LR: 2.25e-04 | GradNorm: 5.489
  Batch   28/48 | Loss: 2.9961 | LR: 2.21e-04 | GradNorm: 4.644
  Batch   32/48 | Loss: 2.9590 | LR: 2.17e-04 | GradNorm: 4.050
  Batch   36/48 | Loss: 3.0169 | LR: 2.12e-04 | GradNorm: 3.010
  Batch   40/48 | Loss: 3.0001 | LR: 2.08e-04 | GradNorm: 4.484
  Batch   44/48 | Loss: 2.9392 | LR: 2.04e-04 | GradNorm: 3.751
Epoch 5/10: Train=24.50%, Val=15.85%, Gap=8.65%, LR=2.01e-04
  Batch    0/48 | Loss: 2.9226 | LR: 2.00e-04 | GradNorm: 6.282
  Batch    4/48 | Loss: 2.8561 | LR: 1.95e-04 | GradNorm: 3.345
  Batch    8/48 | Loss: 2.8989 | LR: 1.91e-04 | GradNorm: 4.372
  Batch   12/48 | Loss: 2.9050 | LR: 1.86e-04 | GradNorm: 5.626
  Batch   16/48 | Loss: 2.8523 | LR: 1.82e-04 | GradNorm: 3.282
  Batch   20/48 | Loss: 2.8824 | LR: 1.77e-04 | GradNorm: 6.264
  Batch   24/48 | Loss: 2.8621 | LR: 1.72e-04 | GradNorm: 6.796
  Batch   28/48 | Loss: 2.8147 | LR: 1.68e-04 | GradNorm: 3.557
  Batch   32/48 | Loss: 2.8049 | LR: 1.63e-04 | GradNorm: 3.423
  Batch   36/48 | Loss: 2.8590 | LR: 1.58e-04 | GradNorm: 3.747
  Batch   40/48 | Loss: 2.8284 | LR: 1.53e-04 | GradNorm: 2.275
  Batch   44/48 | Loss: 2.8988 | LR: 1.49e-04 | GradNorm: 2.181
Epoch 6/10: Train=28.14%, Val=14.77%, Gap=13.37%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8701 | LR: 1.44e-04 | GradNorm: 8.688
  Batch    4/48 | Loss: 2.8927 | LR: 1.39e-04 | GradNorm: 6.509
  Batch    8/48 | Loss: 2.8131 | LR: 1.34e-04 | GradNorm: 2.731
  Batch   12/48 | Loss: 2.7266 | LR: 1.30e-04 | GradNorm: 3.873
  Batch   16/48 | Loss: 2.7749 | LR: 1.25e-04 | GradNorm: 3.427
  Batch   20/48 | Loss: 2.7874 | LR: 1.20e-04 | GradNorm: 3.395
  Batch   24/48 | Loss: 2.8093 | LR: 1.16e-04 | GradNorm: 3.885
  Batch   28/48 | Loss: 2.8265 | LR: 1.11e-04 | GradNorm: 4.666
  Batch   32/48 | Loss: 2.8112 | LR: 1.06e-04 | GradNorm: 5.168
  Batch   36/48 | Loss: 2.8385 | LR: 1.02e-04 | GradNorm: 7.070
  Batch   40/48 | Loss: 2.8018 | LR: 9.74e-05 | GradNorm: 6.320
  Batch   44/48 | Loss: 2.7984 | LR: 9.29e-05 | GradNorm: 6.324
Epoch 7/10: Train=30.39%, Val=18.14%, Gap=12.25%, LR=8.96e-05
  Batch    0/48 | Loss: 2.7594 | LR: 8.85e-05 | GradNorm: 3.329
  Batch    4/48 | Loss: 2.6951 | LR: 8.42e-05 | GradNorm: 2.952
  Batch    8/48 | Loss: 2.7153 | LR: 7.99e-05 | GradNorm: 2.664
  Batch   12/48 | Loss: 2.7666 | LR: 7.57e-05 | GradNorm: 4.228
  Batch   16/48 | Loss: 2.7488 | LR: 7.16e-05 | GradNorm: 3.300
  Batch   20/48 | Loss: 2.6888 | LR: 6.75e-05 | GradNorm: 6.959
  Batch   24/48 | Loss: 2.6917 | LR: 6.36e-05 | GradNorm: 4.696
  Batch   28/48 | Loss: 2.7208 | LR: 5.97e-05 | GradNorm: 4.716
  Batch   32/48 | Loss: 2.7027 | LR: 5.59e-05 | GradNorm: 3.155
  Batch   36/48 | Loss: 2.7171 | LR: 5.22e-05 | GradNorm: 6.323
  Batch   40/48 | Loss: 2.6483 | LR: 4.86e-05 | GradNorm: 6.146
  Batch   44/48 | Loss: 2.6671 | LR: 4.51e-05 | GradNorm: 3.862
Epoch 8/10: Train=33.21%, Val=19.47%, Gap=13.74%, LR=4.26e-05
  Batch    0/48 | Loss: 2.6528 | LR: 4.17e-05 | GradNorm: 2.787
  Batch    4/48 | Loss: 2.6586 | LR: 3.85e-05 | GradNorm: 5.130
  Batch    8/48 | Loss: 2.7230 | LR: 3.53e-05 | GradNorm: 5.346
  Batch   12/48 | Loss: 2.6552 | LR: 3.23e-05 | GradNorm: 4.513
  Batch   16/48 | Loss: 2.5978 | LR: 2.94e-05 | GradNorm: 1.901
  Batch   20/48 | Loss: 2.6172 | LR: 2.66e-05 | GradNorm: 3.013
  Batch   24/48 | Loss: 2.6424 | LR: 2.39e-05 | GradNorm: 3.200
  Batch   28/48 | Loss: 2.6572 | LR: 2.13e-05 | GradNorm: 3.953
  Batch   32/48 | Loss: 2.6397 | LR: 1.89e-05 | GradNorm: 5.090
  Batch   36/48 | Loss: 2.6266 | LR: 1.67e-05 | GradNorm: 3.082
  Batch   40/48 | Loss: 2.6302 | LR: 1.45e-05 | GradNorm: 4.547
  Batch   44/48 | Loss: 2.6401 | LR: 1.25e-05 | GradNorm: 2.725
Epoch 9/10: Train=35.54%, Val=21.16%, Gap=14.38%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6196 | LR: 1.07e-05 | GradNorm: 3.034
  Batch    4/48 | Loss: 2.6354 | LR: 8.98e-06 | GradNorm: 1.924
  Batch    8/48 | Loss: 2.5974 | LR: 7.42e-06 | GradNorm: 3.047
  Batch   12/48 | Loss: 2.6084 | LR: 6.01e-06 | GradNorm: 2.648
  Batch   16/48 | Loss: 2.6130 | LR: 4.74e-06 | GradNorm: 1.998
  Batch   20/48 | Loss: 2.6247 | LR: 3.62e-06 | GradNorm: 3.175
  Batch   24/48 | Loss: 2.6154 | LR: 2.66e-06 | GradNorm: 2.578
  Batch   28/48 | Loss: 2.6451 | LR: 1.85e-06 | GradNorm: 3.246
  Batch   32/48 | Loss: 2.6500 | LR: 1.19e-06 | GradNorm: 3.509
  Batch   36/48 | Loss: 2.6078 | LR: 6.87e-07 | GradNorm: 2.521
  Batch   40/48 | Loss: 2.6044 | LR: 3.38e-07 | GradNorm: 1.895
  Batch   44/48 | Loss: 2.5859 | LR: 1.44e-07 | GradNorm: 2.745
Epoch 10/10: Train=36.67%, Val=20.90%, Gap=15.77%, LR=1.00e-07
Best validation accuracy: 21.16%
