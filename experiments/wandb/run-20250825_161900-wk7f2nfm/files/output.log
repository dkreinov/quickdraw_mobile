=== W&B Sweep Run: LR=0.002242 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.002241797189315153
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002242
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9566 | LR: 4.55e-05 | GradNorm: 1.741
  Batch    4/48 | Loss: 3.9260 | LR: 1.38e-04 | GradNorm: 0.790
  Batch    8/48 | Loss: 3.9230 | LR: 2.30e-04 | GradNorm: 0.540
  Batch   12/48 | Loss: 3.9111 | LR: 3.23e-04 | GradNorm: 0.419
  Batch   16/48 | Loss: 3.9215 | LR: 4.15e-04 | GradNorm: 0.493
  Batch   20/48 | Loss: 3.9194 | LR: 5.08e-04 | GradNorm: 0.532
  Batch   24/48 | Loss: 3.9067 | LR: 6.00e-04 | GradNorm: 0.543
  Batch   28/48 | Loss: 3.8824 | LR: 6.93e-04 | GradNorm: 0.656
  Batch   32/48 | Loss: 3.8366 | LR: 7.85e-04 | GradNorm: 1.953
  Batch   36/48 | Loss: 3.8509 | LR: 8.78e-04 | GradNorm: 0.579
  Batch   40/48 | Loss: 3.8596 | LR: 9.70e-04 | GradNorm: 0.512
  Batch   44/48 | Loss: 3.8730 | LR: 1.06e-03 | GradNorm: 0.564
Epoch 1/10: Train=2.77%, Val=3.10%, Gap=-0.33%, LR=1.13e-03
  Batch    0/48 | Loss: 3.8540 | LR: 1.16e-03 | GradNorm: 0.538
  Batch    4/48 | Loss: 3.8309 | LR: 1.25e-03 | GradNorm: 0.443
  Batch    8/48 | Loss: 3.8086 | LR: 1.34e-03 | GradNorm: 0.848
  Batch   12/48 | Loss: 3.7766 | LR: 1.43e-03 | GradNorm: 0.689
  Batch   16/48 | Loss: 3.8456 | LR: 1.53e-03 | GradNorm: 1.229
  Batch   20/48 | Loss: 3.8112 | LR: 1.62e-03 | GradNorm: 0.551
  Batch   24/48 | Loss: 3.7488 | LR: 1.71e-03 | GradNorm: 0.548
  Batch   28/48 | Loss: 3.7540 | LR: 1.80e-03 | GradNorm: 0.504
  Batch   32/48 | Loss: 3.7749 | LR: 1.90e-03 | GradNorm: 0.664
  Batch   36/48 | Loss: 3.8424 | LR: 1.99e-03 | GradNorm: 2.505
  Batch   40/48 | Loss: 3.7906 | LR: 2.08e-03 | GradNorm: 1.137
  Batch   44/48 | Loss: 3.7539 | LR: 2.17e-03 | GradNorm: 1.071
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.78%, Val=3.15%, Gap=1.63%, LR=2.24e-03
  Batch    0/48 | Loss: 3.7500 | LR: 2.24e-03 | GradNorm: 0.834
  Batch    4/48 | Loss: 3.7650 | LR: 2.24e-03 | GradNorm: 3.144
  Batch    8/48 | Loss: 3.7666 | LR: 2.24e-03 | GradNorm: 0.887
  Batch   12/48 | Loss: 3.7480 | LR: 2.24e-03 | GradNorm: 0.978
  Batch   16/48 | Loss: 3.6930 | LR: 2.23e-03 | GradNorm: 1.343
  Batch   20/48 | Loss: 3.6762 | LR: 2.23e-03 | GradNorm: 1.121
  Batch   24/48 | Loss: 3.6675 | LR: 2.22e-03 | GradNorm: 0.956
  Batch   28/48 | Loss: 3.6005 | LR: 2.21e-03 | GradNorm: 1.338
  Batch   32/48 | Loss: 3.7202 | LR: 2.20e-03 | GradNorm: 2.307
  Batch   36/48 | Loss: 3.7497 | LR: 2.19e-03 | GradNorm: 0.924
  Batch   40/48 | Loss: 3.6467 | LR: 2.18e-03 | GradNorm: 0.700
  Batch   44/48 | Loss: 3.6182 | LR: 2.17e-03 | GradNorm: 1.186
Epoch 3/10: Train=6.83%, Val=6.85%, Gap=-0.02%, LR=2.16e-03
  Batch    0/48 | Loss: 3.6215 | LR: 2.15e-03 | GradNorm: 1.614
  Batch    4/48 | Loss: 3.6413 | LR: 2.14e-03 | GradNorm: 1.127
  Batch    8/48 | Loss: 3.5900 | LR: 2.12e-03 | GradNorm: 1.369
  Batch   12/48 | Loss: 3.5888 | LR: 2.11e-03 | GradNorm: 1.700
  Batch   16/48 | Loss: 3.5824 | LR: 2.09e-03 | GradNorm: 3.469
  Batch   20/48 | Loss: 3.5189 | LR: 2.07e-03 | GradNorm: 1.264
  Batch   24/48 | Loss: 3.5424 | LR: 2.05e-03 | GradNorm: 2.107
  Batch   28/48 | Loss: 3.5815 | LR: 2.03e-03 | GradNorm: 2.582
  Batch   32/48 | Loss: 3.5064 | LR: 2.00e-03 | GradNorm: 1.401
  Batch   36/48 | Loss: 3.5658 | LR: 1.98e-03 | GradNorm: 2.599
  Batch   40/48 | Loss: 3.4585 | LR: 1.96e-03 | GradNorm: 1.085
  Batch   44/48 | Loss: 3.4839 | LR: 1.93e-03 | GradNorm: 1.190
Epoch 4/10: Train=9.87%, Val=9.20%, Gap=0.67%, LR=1.91e-03
  Batch    0/48 | Loss: 3.4145 | LR: 1.91e-03 | GradNorm: 0.865
  Batch    4/48 | Loss: 3.4452 | LR: 1.88e-03 | GradNorm: 2.473
  Batch    8/48 | Loss: 3.3984 | LR: 1.85e-03 | GradNorm: 1.225
  Batch   12/48 | Loss: 3.5818 | LR: 1.82e-03 | GradNorm: 4.779
  Batch   16/48 | Loss: 3.4309 | LR: 1.80e-03 | GradNorm: 1.017
  Batch   20/48 | Loss: 3.4351 | LR: 1.77e-03 | GradNorm: 1.873
  Batch   24/48 | Loss: 3.3636 | LR: 1.74e-03 | GradNorm: 1.262
  Batch   28/48 | Loss: 3.4908 | LR: 1.71e-03 | GradNorm: 3.099
  Batch   32/48 | Loss: 3.3846 | LR: 1.67e-03 | GradNorm: 1.153
  Batch   36/48 | Loss: 3.4286 | LR: 1.64e-03 | GradNorm: 1.682
  Batch   40/48 | Loss: 3.3535 | LR: 1.61e-03 | GradNorm: 0.889
  Batch   44/48 | Loss: 3.2935 | LR: 1.58e-03 | GradNorm: 1.664
Epoch 5/10: Train=13.13%, Val=10.33%, Gap=2.80%, LR=1.55e-03
  Batch    0/48 | Loss: 3.2209 | LR: 1.54e-03 | GradNorm: 0.767
  Batch    4/48 | Loss: 3.2663 | LR: 1.51e-03 | GradNorm: 2.395
  Batch    8/48 | Loss: 3.1903 | LR: 1.47e-03 | GradNorm: 0.974
  Batch   12/48 | Loss: 3.2222 | LR: 1.44e-03 | GradNorm: 1.814
  Batch   16/48 | Loss: 3.1570 | LR: 1.40e-03 | GradNorm: 0.733
  Batch   20/48 | Loss: 3.1704 | LR: 1.37e-03 | GradNorm: 1.603
  Batch   24/48 | Loss: 3.1632 | LR: 1.33e-03 | GradNorm: 2.333
  Batch   28/48 | Loss: 3.1413 | LR: 1.29e-03 | GradNorm: 2.850
  Batch   32/48 | Loss: 3.1037 | LR: 1.26e-03 | GradNorm: 2.549
  Batch   36/48 | Loss: 3.1631 | LR: 1.22e-03 | GradNorm: 2.352
  Batch   40/48 | Loss: 3.0921 | LR: 1.19e-03 | GradNorm: 2.065
  Batch   44/48 | Loss: 3.1677 | LR: 1.15e-03 | GradNorm: 1.743
Epoch 6/10: Train=19.17%, Val=8.93%, Gap=10.24%, LR=1.12e-03
  Batch    0/48 | Loss: 3.0545 | LR: 1.11e-03 | GradNorm: 1.700
  Batch    4/48 | Loss: 3.0365 | LR: 1.08e-03 | GradNorm: 1.695
  Batch    8/48 | Loss: 3.0494 | LR: 1.04e-03 | GradNorm: 2.069
  Batch   12/48 | Loss: 2.9296 | LR: 1.00e-03 | GradNorm: 1.586
  Batch   16/48 | Loss: 3.0846 | LR: 9.66e-04 | GradNorm: 4.270
  Batch   20/48 | Loss: 3.0337 | LR: 9.29e-04 | GradNorm: 1.951
  Batch   24/48 | Loss: 2.9976 | LR: 8.93e-04 | GradNorm: 1.644
  Batch   28/48 | Loss: 3.0209 | LR: 8.58e-04 | GradNorm: 2.429
  Batch   32/48 | Loss: 2.9703 | LR: 8.22e-04 | GradNorm: 2.621
  Batch   36/48 | Loss: 3.0021 | LR: 7.87e-04 | GradNorm: 1.371
  Batch   40/48 | Loss: 2.9993 | LR: 7.52e-04 | GradNorm: 2.566
  Batch   44/48 | Loss: 2.9335 | LR: 7.18e-04 | GradNorm: 2.073
Epoch 7/10: Train=24.57%, Val=17.34%, Gap=7.23%, LR=6.92e-04
  Batch    0/48 | Loss: 2.9036 | LR: 6.84e-04 | GradNorm: 2.389
  Batch    4/48 | Loss: 2.8456 | LR: 6.50e-04 | GradNorm: 2.067
  Batch    8/48 | Loss: 2.8540 | LR: 6.17e-04 | GradNorm: 2.356
  Batch   12/48 | Loss: 2.8616 | LR: 5.85e-04 | GradNorm: 1.390
  Batch   16/48 | Loss: 2.8575 | LR: 5.53e-04 | GradNorm: 2.424
  Batch   20/48 | Loss: 2.8070 | LR: 5.21e-04 | GradNorm: 2.662
  Batch   24/48 | Loss: 2.7992 | LR: 4.91e-04 | GradNorm: 2.156
  Batch   28/48 | Loss: 2.8279 | LR: 4.61e-04 | GradNorm: 2.127
  Batch   32/48 | Loss: 2.7821 | LR: 4.31e-04 | GradNorm: 1.894
  Batch   36/48 | Loss: 2.7745 | LR: 4.03e-04 | GradNorm: 1.941
  Batch   40/48 | Loss: 2.7488 | LR: 3.75e-04 | GradNorm: 2.367
  Batch   44/48 | Loss: 2.8017 | LR: 3.48e-04 | GradNorm: 2.884
Epoch 8/10: Train=29.80%, Val=18.09%, Gap=11.71%, LR=3.28e-04
  Batch    0/48 | Loss: 2.6913 | LR: 3.22e-04 | GradNorm: 1.427
  Batch    4/48 | Loss: 2.7130 | LR: 2.97e-04 | GradNorm: 1.689
  Batch    8/48 | Loss: 2.7588 | LR: 2.72e-04 | GradNorm: 1.582
  Batch   12/48 | Loss: 2.7026 | LR: 2.49e-04 | GradNorm: 1.235
  Batch   16/48 | Loss: 2.6537 | LR: 2.26e-04 | GradNorm: 1.639
  Batch   20/48 | Loss: 2.6426 | LR: 2.05e-04 | GradNorm: 1.522
  Batch   24/48 | Loss: 2.7071 | LR: 1.84e-04 | GradNorm: 1.217
  Batch   28/48 | Loss: 2.6674 | LR: 1.64e-04 | GradNorm: 1.219
  Batch   32/48 | Loss: 2.6532 | LR: 1.46e-04 | GradNorm: 1.698
  Batch   36/48 | Loss: 2.6706 | LR: 1.28e-04 | GradNorm: 1.880
  Batch   40/48 | Loss: 2.6063 | LR: 1.12e-04 | GradNorm: 1.067
  Batch   44/48 | Loss: 2.6575 | LR: 9.63e-05 | GradNorm: 1.351
Epoch 9/10: Train=33.84%, Val=21.67%, Gap=12.17%, LR=8.54e-05
  Batch    0/48 | Loss: 2.6405 | LR: 8.19e-05 | GradNorm: 1.364
  Batch    4/48 | Loss: 2.6319 | LR: 6.87e-05 | GradNorm: 0.995
  Batch    8/48 | Loss: 2.6111 | LR: 5.67e-05 | GradNorm: 1.399
  Batch   12/48 | Loss: 2.6387 | LR: 4.57e-05 | GradNorm: 1.148
  Batch   16/48 | Loss: 2.6125 | LR: 3.60e-05 | GradNorm: 1.302
  Batch   20/48 | Loss: 2.6159 | LR: 2.73e-05 | GradNorm: 1.256
  Batch   24/48 | Loss: 2.6534 | LR: 1.99e-05 | GradNorm: 1.424
  Batch   28/48 | Loss: 2.6458 | LR: 1.36e-05 | GradNorm: 0.910
  Batch   32/48 | Loss: 2.6373 | LR: 8.53e-06 | GradNorm: 1.016
  Batch   36/48 | Loss: 2.6204 | LR: 4.64e-06 | GradNorm: 1.332
  Batch   40/48 | Loss: 2.5836 | LR: 1.94e-06 | GradNorm: 0.777
  Batch   44/48 | Loss: 2.6135 | LR: 4.38e-07 | GradNorm: 1.006
Epoch 10/10: Train=35.88%, Val=20.84%, Gap=15.04%, LR=1.00e-07
Best validation accuracy: 21.67%
