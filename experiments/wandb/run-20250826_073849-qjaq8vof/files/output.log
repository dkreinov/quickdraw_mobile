=== W&B Sweep Run: LR=0.007708 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.007707918279438094
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.007708
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9566 | LR: 1.57e-04 | GradNorm: 1.906
  Batch    4/48 | Loss: 3.9291 | LR: 4.75e-04 | GradNorm: 0.574
  Batch    8/48 | Loss: 3.9311 | LR: 7.92e-04 | GradNorm: 0.536
  Batch   12/48 | Loss: 3.9211 | LR: 1.11e-03 | GradNorm: 0.486
  Batch   16/48 | Loss: 3.9222 | LR: 1.43e-03 | GradNorm: 0.484
  Batch   20/48 | Loss: 3.9169 | LR: 1.75e-03 | GradNorm: 0.591
  Batch   24/48 | Loss: 4.0553 | LR: 2.06e-03 | GradNorm: 3.115
  Batch   28/48 | Loss: 3.8682 | LR: 2.38e-03 | GradNorm: 0.451
  Batch   32/48 | Loss: 3.8852 | LR: 2.70e-03 | GradNorm: 0.562
  Batch   36/48 | Loss: 3.8768 | LR: 3.02e-03 | GradNorm: 0.618
  Batch   40/48 | Loss: 3.8439 | LR: 3.34e-03 | GradNorm: 0.556
  Batch   44/48 | Loss: 3.8348 | LR: 3.65e-03 | GradNorm: 0.543
Epoch 1/10: Train=3.01%, Val=2.81%, Gap=0.20%, LR=3.89e-03
  Batch    0/48 | Loss: 3.9048 | LR: 3.97e-03 | GradNorm: 1.165
  Batch    4/48 | Loss: 3.7871 | LR: 4.29e-03 | GradNorm: 0.532
  Batch    8/48 | Loss: 4.1792 | LR: 4.61e-03 | GradNorm: 2.128
  Batch   12/48 | Loss: 3.7952 | LR: 4.93e-03 | GradNorm: 0.561
  Batch   16/48 | Loss: 3.8195 | LR: 5.24e-03 | GradNorm: 0.488
  Batch   20/48 | Loss: 3.9153 | LR: 5.56e-03 | GradNorm: 1.583
  Batch   24/48 | Loss: 3.8169 | LR: 5.88e-03 | GradNorm: 0.585
  Batch   28/48 | Loss: 3.8354 | LR: 6.20e-03 | GradNorm: 0.589
  Batch   32/48 | Loss: 3.8319 | LR: 6.52e-03 | GradNorm: 0.487
  Batch   36/48 | Loss: 3.8221 | LR: 6.83e-03 | GradNorm: 0.720
  Batch   40/48 | Loss: 3.8002 | LR: 7.15e-03 | GradNorm: 0.612
  Batch   44/48 | Loss: 3.7891 | LR: 7.47e-03 | GradNorm: 0.570
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.38%, Val=4.25%, Gap=0.13%, LR=7.71e-03
  Batch    0/48 | Loss: 3.7860 | LR: 7.71e-03 | GradNorm: 0.447
  Batch    4/48 | Loss: 3.7998 | LR: 7.70e-03 | GradNorm: 0.423
  Batch    8/48 | Loss: 3.8386 | LR: 7.70e-03 | GradNorm: 0.438
  Batch   12/48 | Loss: 3.8373 | LR: 7.69e-03 | GradNorm: 3.101
  Batch   16/48 | Loss: 3.8303 | LR: 7.67e-03 | GradNorm: 0.409
  Batch   20/48 | Loss: 3.8235 | LR: 7.65e-03 | GradNorm: 0.413
  Batch   24/48 | Loss: 3.8148 | LR: 7.63e-03 | GradNorm: 0.383
  Batch   28/48 | Loss: 3.7764 | LR: 7.60e-03 | GradNorm: 0.330
  Batch   32/48 | Loss: 3.7923 | LR: 7.57e-03 | GradNorm: 0.411
  Batch   36/48 | Loss: 3.7910 | LR: 7.53e-03 | GradNorm: 0.286
  Batch   40/48 | Loss: 3.7575 | LR: 7.49e-03 | GradNorm: 0.271
  Batch   44/48 | Loss: 3.7503 | LR: 7.45e-03 | GradNorm: 0.287
Epoch 3/10: Train=4.33%, Val=4.37%, Gap=-0.04%, LR=7.41e-03
  Batch    0/48 | Loss: 3.7724 | LR: 7.40e-03 | GradNorm: 0.338
  Batch    4/48 | Loss: 3.7490 | LR: 7.35e-03 | GradNorm: 0.386
  Batch    8/48 | Loss: 3.7539 | LR: 7.30e-03 | GradNorm: 0.472
  Batch   12/48 | Loss: 3.7889 | LR: 7.24e-03 | GradNorm: 0.442
  Batch   16/48 | Loss: 3.7746 | LR: 7.18e-03 | GradNorm: 0.410
  Batch   20/48 | Loss: 3.8090 | LR: 7.11e-03 | GradNorm: 0.566
  Batch   24/48 | Loss: 3.8460 | LR: 7.04e-03 | GradNorm: 0.444
  Batch   28/48 | Loss: 3.7949 | LR: 6.97e-03 | GradNorm: 0.281
  Batch   32/48 | Loss: 3.7677 | LR: 6.89e-03 | GradNorm: 0.214
  Batch   36/48 | Loss: 3.7503 | LR: 6.81e-03 | GradNorm: 0.175
  Batch   40/48 | Loss: 3.7562 | LR: 6.73e-03 | GradNorm: 0.311
  Batch   44/48 | Loss: 3.7078 | LR: 6.65e-03 | GradNorm: 0.192
Epoch 4/10: Train=5.28%, Val=4.69%, Gap=0.59%, LR=6.58e-03
  Batch    0/48 | Loss: 3.7336 | LR: 6.56e-03 | GradNorm: 0.530
  Batch    4/48 | Loss: 3.7019 | LR: 6.47e-03 | GradNorm: 0.634
  Batch    8/48 | Loss: 3.8514 | LR: 6.37e-03 | GradNorm: 0.912
  Batch   12/48 | Loss: 3.7449 | LR: 6.27e-03 | GradNorm: 0.417
  Batch   16/48 | Loss: 3.7188 | LR: 6.18e-03 | GradNorm: 0.256
  Batch   20/48 | Loss: 3.6989 | LR: 6.07e-03 | GradNorm: 0.197
  Batch   24/48 | Loss: 3.6915 | LR: 5.97e-03 | GradNorm: 0.359
  Batch   28/48 | Loss: 3.6804 | LR: 5.86e-03 | GradNorm: 0.259
  Batch   32/48 | Loss: 3.6454 | LR: 5.75e-03 | GradNorm: 0.558
  Batch   36/48 | Loss: 3.6399 | LR: 5.64e-03 | GradNorm: 0.248
  Batch   40/48 | Loss: 3.6685 | LR: 5.53e-03 | GradNorm: 0.443
  Batch   44/48 | Loss: 3.6483 | LR: 5.42e-03 | GradNorm: 0.393
Epoch 5/10: Train=7.04%, Val=6.83%, Gap=0.21%, LR=5.33e-03
  Batch    0/48 | Loss: 3.6140 | LR: 5.30e-03 | GradNorm: 0.509
  Batch    4/48 | Loss: 3.6313 | LR: 5.18e-03 | GradNorm: 0.526
  Batch    8/48 | Loss: 3.5808 | LR: 5.06e-03 | GradNorm: 0.221
  Batch   12/48 | Loss: 3.6212 | LR: 4.94e-03 | GradNorm: 0.387
  Batch   16/48 | Loss: 3.6347 | LR: 4.82e-03 | GradNorm: 0.674
  Batch   20/48 | Loss: 3.5677 | LR: 4.70e-03 | GradNorm: 0.198
  Batch   24/48 | Loss: 3.6311 | LR: 4.57e-03 | GradNorm: 1.181
  Batch   28/48 | Loss: 3.5957 | LR: 4.45e-03 | GradNorm: 0.264
  Batch   32/48 | Loss: 3.5756 | LR: 4.33e-03 | GradNorm: 0.210
  Batch   36/48 | Loss: 3.5954 | LR: 4.20e-03 | GradNorm: 0.364
  Batch   40/48 | Loss: 3.5956 | LR: 4.07e-03 | GradNorm: 0.808
  Batch   44/48 | Loss: 3.6202 | LR: 3.95e-03 | GradNorm: 0.597
Epoch 6/10: Train=8.44%, Val=7.93%, Gap=0.51%, LR=3.85e-03
  Batch    0/48 | Loss: 3.5645 | LR: 3.82e-03 | GradNorm: 0.564
  Batch    4/48 | Loss: 3.5340 | LR: 3.70e-03 | GradNorm: 0.213
  Batch    8/48 | Loss: 3.5150 | LR: 3.57e-03 | GradNorm: 0.213
  Batch   12/48 | Loss: 3.4923 | LR: 3.44e-03 | GradNorm: 0.354
  Batch   16/48 | Loss: 3.4836 | LR: 3.32e-03 | GradNorm: 0.556
  Batch   20/48 | Loss: 3.5487 | LR: 3.20e-03 | GradNorm: 0.290
  Batch   24/48 | Loss: 3.5214 | LR: 3.07e-03 | GradNorm: 0.376
  Batch   28/48 | Loss: 3.5009 | LR: 2.95e-03 | GradNorm: 0.335
  Batch   32/48 | Loss: 3.4954 | LR: 2.83e-03 | GradNorm: 0.449
  Batch   36/48 | Loss: 3.4855 | LR: 2.71e-03 | GradNorm: 0.352
  Batch   40/48 | Loss: 3.5077 | LR: 2.59e-03 | GradNorm: 0.577
  Batch   44/48 | Loss: 3.4267 | LR: 2.47e-03 | GradNorm: 0.463
Epoch 7/10: Train=10.43%, Val=8.47%, Gap=1.96%, LR=2.38e-03
  Batch    0/48 | Loss: 3.4886 | LR: 2.35e-03 | GradNorm: 0.926
  Batch    4/48 | Loss: 3.4364 | LR: 2.23e-03 | GradNorm: 0.896
  Batch    8/48 | Loss: 3.4093 | LR: 2.12e-03 | GradNorm: 0.805
  Batch   12/48 | Loss: 3.4668 | LR: 2.01e-03 | GradNorm: 1.247
  Batch   16/48 | Loss: 3.4629 | LR: 1.90e-03 | GradNorm: 1.075
  Batch   20/48 | Loss: 3.3952 | LR: 1.79e-03 | GradNorm: 0.328
  Batch   24/48 | Loss: 3.3771 | LR: 1.69e-03 | GradNorm: 0.311
  Batch   28/48 | Loss: 3.3676 | LR: 1.58e-03 | GradNorm: 0.617
  Batch   32/48 | Loss: 3.4122 | LR: 1.48e-03 | GradNorm: 0.390
  Batch   36/48 | Loss: 3.4112 | LR: 1.38e-03 | GradNorm: 0.612
  Batch   40/48 | Loss: 3.3760 | LR: 1.29e-03 | GradNorm: 0.805
  Batch   44/48 | Loss: 3.4149 | LR: 1.20e-03 | GradNorm: 1.225
Epoch 8/10: Train=12.90%, Val=8.07%, Gap=4.83%, LR=1.13e-03
  Batch    0/48 | Loss: 3.3622 | LR: 1.11e-03 | GradNorm: 0.319
  Batch    4/48 | Loss: 3.3510 | LR: 1.02e-03 | GradNorm: 0.414
  Batch    8/48 | Loss: 3.3755 | LR: 9.36e-04 | GradNorm: 0.394
  Batch   12/48 | Loss: 3.3637 | LR: 8.55e-04 | GradNorm: 0.879
  Batch   16/48 | Loss: 3.3274 | LR: 7.77e-04 | GradNorm: 0.319
  Batch   20/48 | Loss: 3.3096 | LR: 7.03e-04 | GradNorm: 0.397
  Batch   24/48 | Loss: 3.3489 | LR: 6.32e-04 | GradNorm: 0.450
  Batch   28/48 | Loss: 3.3381 | LR: 5.65e-04 | GradNorm: 0.282
  Batch   32/48 | Loss: 3.3098 | LR: 5.01e-04 | GradNorm: 0.687
  Batch   36/48 | Loss: 3.3416 | LR: 4.40e-04 | GradNorm: 0.296
  Batch   40/48 | Loss: 3.2741 | LR: 3.84e-04 | GradNorm: 0.349
  Batch   44/48 | Loss: 3.2645 | LR: 3.31e-04 | GradNorm: 0.330
Epoch 9/10: Train=15.20%, Val=9.04%, Gap=6.16%, LR=2.93e-04
  Batch    0/48 | Loss: 3.3093 | LR: 2.82e-04 | GradNorm: 0.710
  Batch    4/48 | Loss: 3.3206 | LR: 2.36e-04 | GradNorm: 0.604
  Batch    8/48 | Loss: 3.2627 | LR: 1.95e-04 | GradNorm: 0.522
  Batch   12/48 | Loss: 3.3063 | LR: 1.57e-04 | GradNorm: 0.374
  Batch   16/48 | Loss: 3.2922 | LR: 1.23e-04 | GradNorm: 0.268
  Batch   20/48 | Loss: 3.3044 | LR: 9.37e-05 | GradNorm: 0.353
  Batch   24/48 | Loss: 3.2753 | LR: 6.81e-05 | GradNorm: 0.334
  Batch   28/48 | Loss: 3.2892 | LR: 4.66e-05 | GradNorm: 0.299
  Batch   32/48 | Loss: 3.3255 | LR: 2.91e-05 | GradNorm: 0.378
  Batch   36/48 | Loss: 3.3071 | LR: 1.57e-05 | GradNorm: 0.504
  Batch   40/48 | Loss: 3.2813 | LR: 6.42e-06 | GradNorm: 0.365
  Batch   44/48 | Loss: 3.2903 | LR: 1.26e-06 | GradNorm: 0.310
Epoch 10/10: Train=16.09%, Val=8.87%, Gap=7.22%, LR=1.00e-07
Best validation accuracy: 9.04%
