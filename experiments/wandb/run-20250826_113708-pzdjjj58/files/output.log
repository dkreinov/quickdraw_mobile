=== W&B Sweep Run: LR=0.001329 ===
Using device: cuda
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.46s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.45s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0013287775148155935
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.001329
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9520 | LR: 2.70e-05 | GradNorm: 1.391
  Batch    4/48 | Loss: 3.9253 | LR: 8.18e-05 | GradNorm: 0.971
  Batch    8/48 | Loss: 3.9298 | LR: 1.37e-04 | GradNorm: 0.673
  Batch   12/48 | Loss: 3.9088 | LR: 1.91e-04 | GradNorm: 0.445
  Batch   16/48 | Loss: 3.9230 | LR: 2.46e-04 | GradNorm: 0.517
  Batch   20/48 | Loss: 3.9216 | LR: 3.01e-04 | GradNorm: 0.569
  Batch   24/48 | Loss: 3.9126 | LR: 3.56e-04 | GradNorm: 0.567
  Batch   28/48 | Loss: 3.9023 | LR: 4.11e-04 | GradNorm: 0.521
  Batch   32/48 | Loss: 3.8688 | LR: 4.65e-04 | GradNorm: 1.040
  Batch   36/48 | Loss: 3.9170 | LR: 5.20e-04 | GradNorm: 3.548
  Batch   40/48 | Loss: 3.8026 | LR: 5.75e-04 | GradNorm: 0.762
  Batch   44/48 | Loss: 3.8357 | LR: 6.30e-04 | GradNorm: 2.283
Epoch 1/10: Train=3.12%, Val=6.48%, Gap=-3.36%, LR=6.71e-04
  Batch    0/48 | Loss: 3.7925 | LR: 6.85e-04 | GradNorm: 1.986
  Batch    4/48 | Loss: 3.7075 | LR: 7.40e-04 | GradNorm: 0.857
  Batch    8/48 | Loss: 3.8076 | LR: 7.94e-04 | GradNorm: 4.836
  Batch   12/48 | Loss: 3.9322 | LR: 8.49e-04 | GradNorm: 6.170
  Batch   16/48 | Loss: 3.8196 | LR: 9.04e-04 | GradNorm: 4.079
  Batch   20/48 | Loss: 3.8959 | LR: 9.59e-04 | GradNorm: 4.024
  Batch   24/48 | Loss: 3.6430 | LR: 1.01e-03 | GradNorm: 1.543
  Batch   28/48 | Loss: 3.7031 | LR: 1.07e-03 | GradNorm: 2.775
  Batch   32/48 | Loss: 3.5827 | LR: 1.12e-03 | GradNorm: 0.611
  Batch   36/48 | Loss: 4.2059 | LR: 1.18e-03 | GradNorm: 15.194
  Batch   40/48 | Loss: 3.9485 | LR: 1.23e-03 | GradNorm: 4.384
  Batch   44/48 | Loss: 3.6687 | LR: 1.29e-03 | GradNorm: 0.915
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.10%, Val=3.23%, Gap=2.87%, LR=1.33e-03
  Batch    0/48 | Loss: 4.1295 | LR: 1.33e-03 | GradNorm: 12.220
  Batch    4/48 | Loss: 3.7086 | LR: 1.33e-03 | GradNorm: 1.286
  Batch    8/48 | Loss: 3.6579 | LR: 1.33e-03 | GradNorm: 1.597
  Batch   12/48 | Loss: 3.8480 | LR: 1.33e-03 | GradNorm: 3.542
  Batch   16/48 | Loss: 3.7022 | LR: 1.32e-03 | GradNorm: 2.589
  Batch   20/48 | Loss: 3.5998 | LR: 1.32e-03 | GradNorm: 0.749
  Batch   24/48 | Loss: 3.6458 | LR: 1.31e-03 | GradNorm: 1.619
  Batch   28/48 | Loss: 3.5532 | LR: 1.31e-03 | GradNorm: 0.654
  Batch   32/48 | Loss: 3.5541 | LR: 1.30e-03 | GradNorm: 1.536
  Batch   36/48 | Loss: 3.5452 | LR: 1.30e-03 | GradNorm: 1.320
  Batch   40/48 | Loss: 3.4925 | LR: 1.29e-03 | GradNorm: 1.353
  Batch   44/48 | Loss: 3.5392 | LR: 1.28e-03 | GradNorm: 2.676
Epoch 3/10: Train=8.03%, Val=9.38%, Gap=-1.35%, LR=1.28e-03
  Batch    0/48 | Loss: 3.5062 | LR: 1.28e-03 | GradNorm: 1.111
  Batch    4/48 | Loss: 3.4888 | LR: 1.27e-03 | GradNorm: 0.696
  Batch    8/48 | Loss: 3.5092 | LR: 1.26e-03 | GradNorm: 2.051
  Batch   12/48 | Loss: 3.4746 | LR: 1.25e-03 | GradNorm: 1.251
  Batch   16/48 | Loss: 3.4668 | LR: 1.24e-03 | GradNorm: 0.994
  Batch   20/48 | Loss: 3.4493 | LR: 1.23e-03 | GradNorm: 0.810
  Batch   24/48 | Loss: 3.4504 | LR: 1.21e-03 | GradNorm: 1.407
  Batch   28/48 | Loss: 3.3781 | LR: 1.20e-03 | GradNorm: 0.835
  Batch   32/48 | Loss: 3.5689 | LR: 1.19e-03 | GradNorm: 18.764
  Batch   36/48 | Loss: 3.3872 | LR: 1.17e-03 | GradNorm: 0.776
  Batch   40/48 | Loss: 3.5842 | LR: 1.16e-03 | GradNorm: 4.011
  Batch   44/48 | Loss: 3.5410 | LR: 1.15e-03 | GradNorm: 3.799
Epoch 4/10: Train=11.20%, Val=12.47%, Gap=-1.27%, LR=1.13e-03
  Batch    0/48 | Loss: 3.3711 | LR: 1.13e-03 | GradNorm: 1.127
  Batch    4/48 | Loss: 3.3023 | LR: 1.11e-03 | GradNorm: 1.088
  Batch    8/48 | Loss: 3.3217 | LR: 1.10e-03 | GradNorm: 1.645
  Batch   12/48 | Loss: 3.2737 | LR: 1.08e-03 | GradNorm: 1.285
  Batch   16/48 | Loss: 3.2762 | LR: 1.06e-03 | GradNorm: 1.054
  Batch   20/48 | Loss: 3.2331 | LR: 1.05e-03 | GradNorm: 0.934
  Batch   24/48 | Loss: 3.2386 | LR: 1.03e-03 | GradNorm: 0.920
  Batch   28/48 | Loss: 3.2619 | LR: 1.01e-03 | GradNorm: 2.323
  Batch   32/48 | Loss: 3.1947 | LR: 9.92e-04 | GradNorm: 1.568
  Batch   36/48 | Loss: 3.2322 | LR: 9.73e-04 | GradNorm: 1.157
  Batch   40/48 | Loss: 3.3170 | LR: 9.53e-04 | GradNorm: 3.998
  Batch   44/48 | Loss: 3.2514 | LR: 9.34e-04 | GradNorm: 2.086
Epoch 5/10: Train=16.63%, Val=9.34%, Gap=7.29%, LR=9.19e-04
  Batch    0/48 | Loss: 3.1597 | LR: 9.14e-04 | GradNorm: 0.924
  Batch    4/48 | Loss: 3.1472 | LR: 8.93e-04 | GradNorm: 2.253
  Batch    8/48 | Loss: 3.1971 | LR: 8.73e-04 | GradNorm: 2.405
  Batch   12/48 | Loss: 3.1633 | LR: 8.52e-04 | GradNorm: 1.329
  Batch   16/48 | Loss: 3.1188 | LR: 8.31e-04 | GradNorm: 1.278
  Batch   20/48 | Loss: 3.1343 | LR: 8.10e-04 | GradNorm: 2.277
  Batch   24/48 | Loss: 3.1574 | LR: 7.89e-04 | GradNorm: 2.082
  Batch   28/48 | Loss: 3.0822 | LR: 7.67e-04 | GradNorm: 1.927
  Batch   32/48 | Loss: 3.0505 | LR: 7.46e-04 | GradNorm: 1.457
  Batch   36/48 | Loss: 3.0781 | LR: 7.24e-04 | GradNorm: 1.141
  Batch   40/48 | Loss: 3.0817 | LR: 7.02e-04 | GradNorm: 1.969
  Batch   44/48 | Loss: 3.1845 | LR: 6.81e-04 | GradNorm: 3.280
Epoch 6/10: Train=19.83%, Val=11.86%, Gap=7.97%, LR=6.64e-04
  Batch    0/48 | Loss: 3.0534 | LR: 6.59e-04 | GradNorm: 1.691
  Batch    4/48 | Loss: 3.0603 | LR: 6.37e-04 | GradNorm: 2.405
  Batch    8/48 | Loss: 3.0500 | LR: 6.16e-04 | GradNorm: 1.830
  Batch   12/48 | Loss: 2.9927 | LR: 5.94e-04 | GradNorm: 1.908
  Batch   16/48 | Loss: 3.0019 | LR: 5.72e-04 | GradNorm: 1.822
  Batch   20/48 | Loss: 3.0270 | LR: 5.51e-04 | GradNorm: 1.236
  Batch   24/48 | Loss: 3.0175 | LR: 5.30e-04 | GradNorm: 1.347
  Batch   28/48 | Loss: 3.0695 | LR: 5.08e-04 | GradNorm: 2.689
  Batch   32/48 | Loss: 3.0462 | LR: 4.87e-04 | GradNorm: 2.309
  Batch   36/48 | Loss: 3.0425 | LR: 4.66e-04 | GradNorm: 1.903
  Batch   40/48 | Loss: 3.0045 | LR: 4.46e-04 | GradNorm: 1.411
  Batch   44/48 | Loss: 2.9965 | LR: 4.25e-04 | GradNorm: 1.709
Epoch 7/10: Train=23.15%, Val=12.81%, Gap=10.34%, LR=4.10e-04
  Batch    0/48 | Loss: 2.9912 | LR: 4.05e-04 | GradNorm: 1.637
  Batch    4/48 | Loss: 2.9451 | LR: 3.85e-04 | GradNorm: 1.778
  Batch    8/48 | Loss: 2.9967 | LR: 3.66e-04 | GradNorm: 3.232
  Batch   12/48 | Loss: 3.0109 | LR: 3.46e-04 | GradNorm: 1.696
  Batch   16/48 | Loss: 2.9834 | LR: 3.28e-04 | GradNorm: 1.175
  Batch   20/48 | Loss: 2.9074 | LR: 3.09e-04 | GradNorm: 1.613
  Batch   24/48 | Loss: 2.8728 | LR: 2.91e-04 | GradNorm: 0.928
  Batch   28/48 | Loss: 2.9127 | LR: 2.73e-04 | GradNorm: 1.854
  Batch   32/48 | Loss: 2.9125 | LR: 2.56e-04 | GradNorm: 2.336
  Batch   36/48 | Loss: 2.9200 | LR: 2.39e-04 | GradNorm: 1.951
  Batch   40/48 | Loss: 2.8089 | LR: 2.22e-04 | GradNorm: 1.195
  Batch   44/48 | Loss: 2.9159 | LR: 2.06e-04 | GradNorm: 2.101
Epoch 8/10: Train=26.04%, Val=10.66%, Gap=15.38%, LR=1.95e-04
  Batch    0/48 | Loss: 2.8373 | LR: 1.91e-04 | GradNorm: 4.141
  Batch    4/48 | Loss: 2.8580 | LR: 1.76e-04 | GradNorm: 2.514
  Batch    8/48 | Loss: 2.8828 | LR: 1.61e-04 | GradNorm: 1.955
  Batch   12/48 | Loss: 2.8352 | LR: 1.47e-04 | GradNorm: 2.025
  Batch   16/48 | Loss: 2.7982 | LR: 1.34e-04 | GradNorm: 1.696
  Batch   20/48 | Loss: 2.7867 | LR: 1.21e-04 | GradNorm: 1.650
  Batch   24/48 | Loss: 2.8396 | LR: 1.09e-04 | GradNorm: 1.139
  Batch   28/48 | Loss: 2.8232 | LR: 9.74e-05 | GradNorm: 1.974
  Batch   32/48 | Loss: 2.8184 | LR: 8.64e-05 | GradNorm: 1.700
  Batch   36/48 | Loss: 2.7988 | LR: 7.60e-05 | GradNorm: 1.160
  Batch   40/48 | Loss: 2.7817 | LR: 6.62e-05 | GradNorm: 1.591
  Batch   44/48 | Loss: 2.8041 | LR: 5.71e-05 | GradNorm: 1.911
Epoch 9/10: Train=28.96%, Val=14.55%, Gap=14.41%, LR=5.07e-05
  Batch    0/48 | Loss: 2.8281 | LR: 4.86e-05 | GradNorm: 2.547
  Batch    4/48 | Loss: 2.7799 | LR: 4.08e-05 | GradNorm: 1.632
  Batch    8/48 | Loss: 2.7600 | LR: 3.36e-05 | GradNorm: 0.774
  Batch   12/48 | Loss: 2.7885 | LR: 2.71e-05 | GradNorm: 1.835
  Batch   16/48 | Loss: 2.7842 | LR: 2.14e-05 | GradNorm: 0.890
  Batch   20/48 | Loss: 2.7732 | LR: 1.62e-05 | GradNorm: 0.808
  Batch   24/48 | Loss: 2.7775 | LR: 1.18e-05 | GradNorm: 0.952
  Batch   28/48 | Loss: 2.8279 | LR: 8.11e-06 | GradNorm: 0.880
  Batch   32/48 | Loss: 2.8383 | LR: 5.10e-06 | GradNorm: 0.997
  Batch   36/48 | Loss: 2.7983 | LR: 2.79e-06 | GradNorm: 0.894
  Batch   40/48 | Loss: 2.7682 | LR: 1.19e-06 | GradNorm: 1.247
  Batch   44/48 | Loss: 2.7755 | LR: 3.00e-07 | GradNorm: 0.944
Epoch 10/10: Train=30.71%, Val=14.41%, Gap=16.30%, LR=1.00e-07
Best validation accuracy: 14.55%
