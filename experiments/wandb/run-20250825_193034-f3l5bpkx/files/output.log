=== W&B Sweep Run: LR=0.000729 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007288657398007739
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000729
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9500 | LR: 1.48e-05 | GradNorm: 1.563
  Batch    4/48 | Loss: 3.9233 | LR: 4.49e-05 | GradNorm: 0.865
  Batch    8/48 | Loss: 3.9295 | LR: 7.49e-05 | GradNorm: 0.893
  Batch   12/48 | Loss: 3.9086 | LR: 1.05e-04 | GradNorm: 0.522
  Batch   16/48 | Loss: 3.9214 | LR: 1.35e-04 | GradNorm: 0.548
  Batch   20/48 | Loss: 3.9143 | LR: 1.65e-04 | GradNorm: 0.577
  Batch   24/48 | Loss: 3.9142 | LR: 1.95e-04 | GradNorm: 0.606
  Batch   28/48 | Loss: 3.9117 | LR: 2.25e-04 | GradNorm: 0.537
  Batch   32/48 | Loss: 3.8858 | LR: 2.55e-04 | GradNorm: 0.486
  Batch   36/48 | Loss: 3.8432 | LR: 2.85e-04 | GradNorm: 0.611
  Batch   40/48 | Loss: 3.8203 | LR: 3.15e-04 | GradNorm: 3.424
  Batch   44/48 | Loss: 3.7877 | LR: 3.46e-04 | GradNorm: 4.162
Epoch 1/10: Train=3.11%, Val=5.72%, Gap=-2.61%, LR=3.68e-04
  Batch    0/48 | Loss: 3.7391 | LR: 3.76e-04 | GradNorm: 5.158
  Batch    4/48 | Loss: 3.6917 | LR: 4.06e-04 | GradNorm: 1.107
  Batch    8/48 | Loss: 3.7401 | LR: 4.36e-04 | GradNorm: 9.558
  Batch   12/48 | Loss: 3.6556 | LR: 4.66e-04 | GradNorm: 3.037
  Batch   16/48 | Loss: 3.8356 | LR: 4.96e-04 | GradNorm: 5.495
  Batch   20/48 | Loss: 3.9584 | LR: 5.26e-04 | GradNorm: 3.966
  Batch   24/48 | Loss: 3.8445 | LR: 5.56e-04 | GradNorm: 1.623
  Batch   28/48 | Loss: 3.8237 | LR: 5.86e-04 | GradNorm: 1.215
  Batch   32/48 | Loss: 3.7617 | LR: 6.16e-04 | GradNorm: 0.799
  Batch   36/48 | Loss: 3.7115 | LR: 6.46e-04 | GradNorm: 1.100
  Batch   40/48 | Loss: 4.0230 | LR: 6.76e-04 | GradNorm: 10.033
  Batch   44/48 | Loss: 3.7664 | LR: 7.06e-04 | GradNorm: 4.201
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.78%, Val=7.38%, Gap=-1.60%, LR=7.29e-04
  Batch    0/48 | Loss: 3.5783 | LR: 7.29e-04 | GradNorm: 1.230
  Batch    4/48 | Loss: 4.0984 | LR: 7.29e-04 | GradNorm: 4.173
  Batch    8/48 | Loss: 3.9575 | LR: 7.28e-04 | GradNorm: 4.820
  Batch   12/48 | Loss: 3.7432 | LR: 7.27e-04 | GradNorm: 1.035
  Batch   16/48 | Loss: 3.7866 | LR: 7.25e-04 | GradNorm: 3.887
  Batch   20/48 | Loss: 3.6769 | LR: 7.24e-04 | GradNorm: 2.244
  Batch   24/48 | Loss: 3.7067 | LR: 7.21e-04 | GradNorm: 2.686
  Batch   28/48 | Loss: 3.6175 | LR: 7.19e-04 | GradNorm: 1.507
  Batch   32/48 | Loss: 3.6018 | LR: 7.16e-04 | GradNorm: 1.845
  Batch   36/48 | Loss: 3.5585 | LR: 7.12e-04 | GradNorm: 0.543
  Batch   40/48 | Loss: 3.5180 | LR: 7.09e-04 | GradNorm: 0.903
  Batch   44/48 | Loss: 3.5307 | LR: 7.04e-04 | GradNorm: 1.730
Epoch 3/10: Train=8.07%, Val=9.67%, Gap=-1.60%, LR=7.01e-04
  Batch    0/48 | Loss: 3.4733 | LR: 7.00e-04 | GradNorm: 1.030
  Batch    4/48 | Loss: 4.3349 | LR: 6.95e-04 | GradNorm: 1.751
  Batch    8/48 | Loss: 3.9758 | LR: 6.90e-04 | GradNorm: 1.016
  Batch   12/48 | Loss: 3.8555 | LR: 6.84e-04 | GradNorm: 0.877
  Batch   16/48 | Loss: 3.8102 | LR: 6.79e-04 | GradNorm: 1.054
  Batch   20/48 | Loss: 3.7850 | LR: 6.72e-04 | GradNorm: 1.265
  Batch   24/48 | Loss: 3.7613 | LR: 6.66e-04 | GradNorm: 0.581
  Batch   28/48 | Loss: 3.7334 | LR: 6.59e-04 | GradNorm: 0.804
  Batch   32/48 | Loss: 3.7370 | LR: 6.52e-04 | GradNorm: 1.335
  Batch   36/48 | Loss: 3.6653 | LR: 6.44e-04 | GradNorm: 1.324
  Batch   40/48 | Loss: 3.6802 | LR: 6.36e-04 | GradNorm: 1.404
  Batch   44/48 | Loss: 3.6611 | LR: 6.28e-04 | GradNorm: 4.890
Epoch 4/10: Train=5.69%, Val=9.91%, Gap=-4.22%, LR=6.22e-04
  Batch    0/48 | Loss: 3.5757 | LR: 6.20e-04 | GradNorm: 1.726
  Batch    4/48 | Loss: 3.4971 | LR: 6.11e-04 | GradNorm: 2.484
  Batch    8/48 | Loss: 3.5334 | LR: 6.02e-04 | GradNorm: 7.150
  Batch   12/48 | Loss: 3.4456 | LR: 5.93e-04 | GradNorm: 2.421
  Batch   16/48 | Loss: 3.4649 | LR: 5.84e-04 | GradNorm: 3.539
  Batch   20/48 | Loss: 3.3988 | LR: 5.74e-04 | GradNorm: 1.795
  Batch   24/48 | Loss: 3.4506 | LR: 5.64e-04 | GradNorm: 4.842
  Batch   28/48 | Loss: 3.3447 | LR: 5.54e-04 | GradNorm: 1.801
  Batch   32/48 | Loss: 3.3613 | LR: 5.44e-04 | GradNorm: 3.734
  Batch   36/48 | Loss: 3.3579 | LR: 5.34e-04 | GradNorm: 0.580
  Batch   40/48 | Loss: 3.3753 | LR: 5.23e-04 | GradNorm: 3.995
  Batch   44/48 | Loss: 3.3402 | LR: 5.12e-04 | GradNorm: 3.221
Epoch 5/10: Train=13.90%, Val=11.14%, Gap=2.76%, LR=5.04e-04
  Batch    0/48 | Loss: 3.2713 | LR: 5.01e-04 | GradNorm: 0.994
  Batch    4/48 | Loss: 3.2434 | LR: 4.90e-04 | GradNorm: 2.365
  Batch    8/48 | Loss: 3.2332 | LR: 4.79e-04 | GradNorm: 1.029
  Batch   12/48 | Loss: 3.3061 | LR: 4.67e-04 | GradNorm: 3.047
  Batch   16/48 | Loss: 3.2222 | LR: 4.56e-04 | GradNorm: 1.531
  Batch   20/48 | Loss: 3.2386 | LR: 4.44e-04 | GradNorm: 3.236
  Batch   24/48 | Loss: 3.2601 | LR: 4.33e-04 | GradNorm: 4.523
  Batch   28/48 | Loss: 3.1874 | LR: 4.21e-04 | GradNorm: 1.531
  Batch   32/48 | Loss: 3.1929 | LR: 4.09e-04 | GradNorm: 1.522
  Batch   36/48 | Loss: 3.2659 | LR: 3.97e-04 | GradNorm: 5.734
  Batch   40/48 | Loss: 3.1741 | LR: 3.85e-04 | GradNorm: 2.063
  Batch   44/48 | Loss: 3.2779 | LR: 3.73e-04 | GradNorm: 3.645
Epoch 6/10: Train=16.89%, Val=9.38%, Gap=7.51%, LR=3.64e-04
  Batch    0/48 | Loss: 3.2165 | LR: 3.62e-04 | GradNorm: 5.355
  Batch    4/48 | Loss: 3.1958 | LR: 3.50e-04 | GradNorm: 3.765
  Batch    8/48 | Loss: 3.1620 | LR: 3.38e-04 | GradNorm: 3.246
  Batch   12/48 | Loss: 3.1141 | LR: 3.26e-04 | GradNorm: 2.149
  Batch   16/48 | Loss: 3.1158 | LR: 3.14e-04 | GradNorm: 2.278
  Batch   20/48 | Loss: 3.1372 | LR: 3.02e-04 | GradNorm: 2.009
  Batch   24/48 | Loss: 3.1627 | LR: 2.90e-04 | GradNorm: 2.761
  Batch   28/48 | Loss: 3.1232 | LR: 2.79e-04 | GradNorm: 1.730
  Batch   32/48 | Loss: 3.1397 | LR: 2.67e-04 | GradNorm: 2.176
  Batch   36/48 | Loss: 3.1416 | LR: 2.56e-04 | GradNorm: 1.900
  Batch   40/48 | Loss: 3.1117 | LR: 2.45e-04 | GradNorm: 1.691
  Batch   44/48 | Loss: 3.0809 | LR: 2.33e-04 | GradNorm: 3.310
Epoch 7/10: Train=20.50%, Val=12.32%, Gap=8.18%, LR=2.25e-04
  Batch    0/48 | Loss: 3.1184 | LR: 2.22e-04 | GradNorm: 4.940
  Batch    4/48 | Loss: 3.0562 | LR: 2.11e-04 | GradNorm: 4.080
  Batch    8/48 | Loss: 3.0716 | LR: 2.01e-04 | GradNorm: 2.330
  Batch   12/48 | Loss: 3.1204 | LR: 1.90e-04 | GradNorm: 3.431
  Batch   16/48 | Loss: 3.1153 | LR: 1.80e-04 | GradNorm: 3.050
  Batch   20/48 | Loss: 3.0161 | LR: 1.70e-04 | GradNorm: 3.084
  Batch   24/48 | Loss: 3.0144 | LR: 1.60e-04 | GradNorm: 2.605
  Batch   28/48 | Loss: 3.0658 | LR: 1.50e-04 | GradNorm: 3.280
  Batch   32/48 | Loss: 3.0349 | LR: 1.40e-04 | GradNorm: 0.871
  Batch   36/48 | Loss: 3.0369 | LR: 1.31e-04 | GradNorm: 1.709
  Batch   40/48 | Loss: 2.9578 | LR: 1.22e-04 | GradNorm: 3.041
  Batch   44/48 | Loss: 3.0335 | LR: 1.13e-04 | GradNorm: 1.809
Epoch 8/10: Train=23.03%, Val=13.31%, Gap=9.72%, LR=1.07e-04
  Batch    0/48 | Loss: 2.9756 | LR: 1.05e-04 | GradNorm: 1.694
  Batch    4/48 | Loss: 2.9619 | LR: 9.65e-05 | GradNorm: 1.371
  Batch    8/48 | Loss: 3.0406 | LR: 8.86e-05 | GradNorm: 3.535
  Batch   12/48 | Loss: 2.9647 | LR: 8.09e-05 | GradNorm: 1.477
  Batch   16/48 | Loss: 2.9174 | LR: 7.36e-05 | GradNorm: 1.967
  Batch   20/48 | Loss: 2.9120 | LR: 6.66e-05 | GradNorm: 1.535
  Batch   24/48 | Loss: 2.9570 | LR: 5.99e-05 | GradNorm: 1.227
  Batch   28/48 | Loss: 2.9607 | LR: 5.35e-05 | GradNorm: 1.725
  Batch   32/48 | Loss: 2.9494 | LR: 4.74e-05 | GradNorm: 2.327
  Batch   36/48 | Loss: 2.9508 | LR: 4.17e-05 | GradNorm: 2.263
  Batch   40/48 | Loss: 2.9141 | LR: 3.64e-05 | GradNorm: 1.536
  Batch   44/48 | Loss: 2.9296 | LR: 3.14e-05 | GradNorm: 1.147
Epoch 9/10: Train=25.73%, Val=13.06%, Gap=12.67%, LR=2.78e-05
  Batch    0/48 | Loss: 2.9389 | LR: 2.67e-05 | GradNorm: 1.836
  Batch    4/48 | Loss: 2.9314 | LR: 2.24e-05 | GradNorm: 1.626
  Batch    8/48 | Loss: 2.9061 | LR: 1.85e-05 | GradNorm: 1.218
  Batch   12/48 | Loss: 2.9335 | LR: 1.49e-05 | GradNorm: 1.532
  Batch   16/48 | Loss: 2.8930 | LR: 1.18e-05 | GradNorm: 0.997
  Batch   20/48 | Loss: 2.9124 | LR: 8.95e-06 | GradNorm: 1.308
  Batch   24/48 | Loss: 2.9205 | LR: 6.53e-06 | GradNorm: 1.037
  Batch   28/48 | Loss: 2.9302 | LR: 4.49e-06 | GradNorm: 0.889
  Batch   32/48 | Loss: 2.9505 | LR: 2.84e-06 | GradNorm: 1.197
  Batch   36/48 | Loss: 2.9190 | LR: 1.57e-06 | GradNorm: 0.864
  Batch   40/48 | Loss: 2.9036 | LR: 6.97e-07 | GradNorm: 1.143
  Batch   44/48 | Loss: 2.9273 | LR: 2.10e-07 | GradNorm: 1.431
Epoch 10/10: Train=27.19%, Val=13.62%, Gap=13.57%, LR=1.00e-07
Best validation accuracy: 13.62%
