=== W&B Sweep Run: LR=0.000729 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000728621122280659
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000729
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9489 | LR: 1.48e-05 | GradNorm: 1.516
  Batch    4/48 | Loss: 3.9217 | LR: 4.49e-05 | GradNorm: 1.085
  Batch    8/48 | Loss: 3.9211 | LR: 7.49e-05 | GradNorm: 0.750
  Batch   12/48 | Loss: 3.9146 | LR: 1.05e-04 | GradNorm: 0.594
  Batch   16/48 | Loss: 3.9215 | LR: 1.35e-04 | GradNorm: 0.581
  Batch   20/48 | Loss: 3.9193 | LR: 1.65e-04 | GradNorm: 0.602
  Batch   24/48 | Loss: 3.9082 | LR: 1.95e-04 | GradNorm: 0.542
  Batch   28/48 | Loss: 3.9131 | LR: 2.25e-04 | GradNorm: 0.548
  Batch   32/48 | Loss: 3.8945 | LR: 2.55e-04 | GradNorm: 0.553
  Batch   36/48 | Loss: 3.8573 | LR: 2.85e-04 | GradNorm: 1.036
  Batch   40/48 | Loss: 3.8147 | LR: 3.15e-04 | GradNorm: 3.073
  Batch   44/48 | Loss: 3.8634 | LR: 3.45e-04 | GradNorm: 3.918
Epoch 1/10: Train=2.79%, Val=4.68%, Gap=-1.89%, LR=3.68e-04
  Batch    0/48 | Loss: 3.8271 | LR: 3.75e-04 | GradNorm: 1.992
  Batch    4/48 | Loss: 3.7630 | LR: 4.06e-04 | GradNorm: 1.019
  Batch    8/48 | Loss: 3.7997 | LR: 4.36e-04 | GradNorm: 2.419
  Batch   12/48 | Loss: 3.7039 | LR: 4.66e-04 | GradNorm: 1.475
  Batch   16/48 | Loss: 3.7549 | LR: 4.96e-04 | GradNorm: 2.348
  Batch   20/48 | Loss: 3.6986 | LR: 5.26e-04 | GradNorm: 2.004
  Batch   24/48 | Loss: 3.7185 | LR: 5.56e-04 | GradNorm: 1.916
  Batch   28/48 | Loss: 3.7434 | LR: 5.86e-04 | GradNorm: 2.461
  Batch   32/48 | Loss: 3.6564 | LR: 6.16e-04 | GradNorm: 2.946
  Batch   36/48 | Loss: 3.6393 | LR: 6.46e-04 | GradNorm: 2.650
  Batch   40/48 | Loss: 3.6029 | LR: 6.76e-04 | GradNorm: 1.448
  Batch   44/48 | Loss: 3.5725 | LR: 7.06e-04 | GradNorm: 1.022
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.76%, Val=10.52%, Gap=-3.76%, LR=7.29e-04
  Batch    0/48 | Loss: 3.5354 | LR: 7.29e-04 | GradNorm: 1.290
  Batch    4/48 | Loss: 3.5054 | LR: 7.28e-04 | GradNorm: 0.566
  Batch    8/48 | Loss: 3.4565 | LR: 7.28e-04 | GradNorm: 1.445
  Batch   12/48 | Loss: 3.5158 | LR: 7.27e-04 | GradNorm: 2.503
  Batch   16/48 | Loss: 3.6535 | LR: 7.25e-04 | GradNorm: 27.649
  Batch   20/48 | Loss: 3.3997 | LR: 7.23e-04 | GradNorm: 2.209
  Batch   24/48 | Loss: 3.3889 | LR: 7.21e-04 | GradNorm: 1.627
  Batch   28/48 | Loss: 3.3184 | LR: 7.18e-04 | GradNorm: 4.783
  Batch   32/48 | Loss: 3.3389 | LR: 7.15e-04 | GradNorm: 3.163
  Batch   36/48 | Loss: 3.3212 | LR: 7.12e-04 | GradNorm: 1.665
  Batch   40/48 | Loss: 3.4354 | LR: 7.08e-04 | GradNorm: 1.805
  Batch   44/48 | Loss: 3.3470 | LR: 7.04e-04 | GradNorm: 2.718
Epoch 3/10: Train=12.26%, Val=7.81%, Gap=4.45%, LR=7.01e-04
  Batch    0/48 | Loss: 3.3524 | LR: 7.00e-04 | GradNorm: 1.901
  Batch    4/48 | Loss: 3.4535 | LR: 6.95e-04 | GradNorm: 4.299
  Batch    8/48 | Loss: 3.2957 | LR: 6.90e-04 | GradNorm: 1.040
  Batch   12/48 | Loss: 3.2870 | LR: 6.84e-04 | GradNorm: 2.515
  Batch   16/48 | Loss: 3.3875 | LR: 6.78e-04 | GradNorm: 5.917
  Batch   20/48 | Loss: 3.2163 | LR: 6.72e-04 | GradNorm: 2.213
  Batch   24/48 | Loss: 3.2421 | LR: 6.66e-04 | GradNorm: 2.011
  Batch   28/48 | Loss: 3.2036 | LR: 6.59e-04 | GradNorm: 3.519
  Batch   32/48 | Loss: 3.2175 | LR: 6.52e-04 | GradNorm: 2.957
  Batch   36/48 | Loss: 3.1582 | LR: 6.44e-04 | GradNorm: 1.070
  Batch   40/48 | Loss: 3.2018 | LR: 6.36e-04 | GradNorm: 1.986
  Batch   44/48 | Loss: 3.1218 | LR: 6.28e-04 | GradNorm: 1.385
Epoch 4/10: Train=16.19%, Val=11.35%, Gap=4.84%, LR=6.22e-04
  Batch    0/48 | Loss: 3.1556 | LR: 6.20e-04 | GradNorm: 2.540
  Batch    4/48 | Loss: 3.0817 | LR: 6.11e-04 | GradNorm: 1.980
  Batch    8/48 | Loss: 3.1058 | LR: 6.02e-04 | GradNorm: 2.976
  Batch   12/48 | Loss: 3.1198 | LR: 5.93e-04 | GradNorm: 3.079
  Batch   16/48 | Loss: 3.1174 | LR: 5.84e-04 | GradNorm: 2.604
  Batch   20/48 | Loss: 3.1212 | LR: 5.74e-04 | GradNorm: 4.987
  Batch   24/48 | Loss: 3.1231 | LR: 5.64e-04 | GradNorm: 2.438
  Batch   28/48 | Loss: 3.0232 | LR: 5.54e-04 | GradNorm: 1.632
  Batch   32/48 | Loss: 2.9974 | LR: 5.44e-04 | GradNorm: 2.438
  Batch   36/48 | Loss: 3.1170 | LR: 5.33e-04 | GradNorm: 4.430
  Batch   40/48 | Loss: 3.1308 | LR: 5.23e-04 | GradNorm: 5.438
  Batch   44/48 | Loss: 3.0078 | LR: 5.12e-04 | GradNorm: 2.295
Epoch 5/10: Train=21.48%, Val=13.93%, Gap=7.55%, LR=5.04e-04
  Batch    0/48 | Loss: 2.9604 | LR: 5.01e-04 | GradNorm: 2.651
  Batch    4/48 | Loss: 2.9023 | LR: 4.90e-04 | GradNorm: 1.610
  Batch    8/48 | Loss: 2.9509 | LR: 4.79e-04 | GradNorm: 3.573
  Batch   12/48 | Loss: 2.9413 | LR: 4.67e-04 | GradNorm: 1.962
  Batch   16/48 | Loss: 2.8572 | LR: 4.56e-04 | GradNorm: 1.395
  Batch   20/48 | Loss: 2.9848 | LR: 4.44e-04 | GradNorm: 4.755
  Batch   24/48 | Loss: 2.8971 | LR: 4.32e-04 | GradNorm: 3.840
  Batch   28/48 | Loss: 2.8629 | LR: 4.21e-04 | GradNorm: 4.409
  Batch   32/48 | Loss: 2.8449 | LR: 4.09e-04 | GradNorm: 2.167
  Batch   36/48 | Loss: 2.9054 | LR: 3.97e-04 | GradNorm: 4.780
  Batch   40/48 | Loss: 2.8513 | LR: 3.85e-04 | GradNorm: 2.649
  Batch   44/48 | Loss: 2.9072 | LR: 3.73e-04 | GradNorm: 2.909
Epoch 6/10: Train=26.62%, Val=16.20%, Gap=10.42%, LR=3.64e-04
  Batch    0/48 | Loss: 2.8222 | LR: 3.61e-04 | GradNorm: 2.053
  Batch    4/48 | Loss: 2.8187 | LR: 3.49e-04 | GradNorm: 2.964
  Batch    8/48 | Loss: 2.8469 | LR: 3.38e-04 | GradNorm: 4.494
  Batch   12/48 | Loss: 2.7049 | LR: 3.26e-04 | GradNorm: 1.638
  Batch   16/48 | Loss: 2.7295 | LR: 3.14e-04 | GradNorm: 2.130
  Batch   20/48 | Loss: 2.7614 | LR: 3.02e-04 | GradNorm: 2.180
  Batch   24/48 | Loss: 2.7849 | LR: 2.90e-04 | GradNorm: 2.288
  Batch   28/48 | Loss: 2.7707 | LR: 2.79e-04 | GradNorm: 2.546
  Batch   32/48 | Loss: 2.7846 | LR: 2.67e-04 | GradNorm: 4.244
  Batch   36/48 | Loss: 2.7975 | LR: 2.56e-04 | GradNorm: 3.658
  Batch   40/48 | Loss: 2.7289 | LR: 2.44e-04 | GradNorm: 1.951
  Batch   44/48 | Loss: 2.7001 | LR: 2.33e-04 | GradNorm: 2.141
Epoch 7/10: Train=31.32%, Val=19.38%, Gap=11.94%, LR=2.25e-04
  Batch    0/48 | Loss: 2.7009 | LR: 2.22e-04 | GradNorm: 3.274
  Batch    4/48 | Loss: 2.6310 | LR: 2.11e-04 | GradNorm: 1.724
  Batch    8/48 | Loss: 2.6262 | LR: 2.01e-04 | GradNorm: 2.869
  Batch   12/48 | Loss: 2.6858 | LR: 1.90e-04 | GradNorm: 2.719
  Batch   16/48 | Loss: 2.6998 | LR: 1.80e-04 | GradNorm: 4.066
  Batch   20/48 | Loss: 2.6075 | LR: 1.69e-04 | GradNorm: 2.980
  Batch   24/48 | Loss: 2.6044 | LR: 1.60e-04 | GradNorm: 2.738
  Batch   28/48 | Loss: 2.6644 | LR: 1.50e-04 | GradNorm: 3.100
  Batch   32/48 | Loss: 2.6174 | LR: 1.40e-04 | GradNorm: 2.872
  Batch   36/48 | Loss: 2.6114 | LR: 1.31e-04 | GradNorm: 4.499
  Batch   40/48 | Loss: 2.5429 | LR: 1.22e-04 | GradNorm: 4.971
  Batch   44/48 | Loss: 2.6109 | LR: 1.13e-04 | GradNorm: 2.338
Epoch 8/10: Train=35.26%, Val=21.86%, Gap=13.40%, LR=1.07e-04
  Batch    0/48 | Loss: 2.5783 | LR: 1.05e-04 | GradNorm: 3.905
  Batch    4/48 | Loss: 2.5670 | LR: 9.65e-05 | GradNorm: 3.722
  Batch    8/48 | Loss: 2.6152 | LR: 8.85e-05 | GradNorm: 3.551
  Batch   12/48 | Loss: 2.5615 | LR: 8.09e-05 | GradNorm: 3.078
  Batch   16/48 | Loss: 2.5261 | LR: 7.36e-05 | GradNorm: 1.776
  Batch   20/48 | Loss: 2.5159 | LR: 6.65e-05 | GradNorm: 1.482
  Batch   24/48 | Loss: 2.5483 | LR: 5.98e-05 | GradNorm: 3.408
  Batch   28/48 | Loss: 2.5636 | LR: 5.35e-05 | GradNorm: 4.071
  Batch   32/48 | Loss: 2.5087 | LR: 4.74e-05 | GradNorm: 1.563
  Batch   36/48 | Loss: 2.5227 | LR: 4.17e-05 | GradNorm: 2.869
  Batch   40/48 | Loss: 2.5179 | LR: 3.64e-05 | GradNorm: 2.630
  Batch   44/48 | Loss: 2.5511 | LR: 3.14e-05 | GradNorm: 2.155
Epoch 9/10: Train=38.28%, Val=22.65%, Gap=15.63%, LR=2.78e-05
  Batch    0/48 | Loss: 2.5175 | LR: 2.67e-05 | GradNorm: 3.029
  Batch    4/48 | Loss: 2.5113 | LR: 2.24e-05 | GradNorm: 3.059
  Batch    8/48 | Loss: 2.4709 | LR: 1.85e-05 | GradNorm: 1.533
  Batch   12/48 | Loss: 2.5058 | LR: 1.49e-05 | GradNorm: 2.232
  Batch   16/48 | Loss: 2.5020 | LR: 1.18e-05 | GradNorm: 1.854
  Batch   20/48 | Loss: 2.5390 | LR: 8.95e-06 | GradNorm: 2.825
  Batch   24/48 | Loss: 2.5476 | LR: 6.53e-06 | GradNorm: 2.979
  Batch   28/48 | Loss: 2.5279 | LR: 4.49e-06 | GradNorm: 1.878
  Batch   32/48 | Loss: 2.5633 | LR: 2.84e-06 | GradNorm: 3.181
  Batch   36/48 | Loss: 2.4856 | LR: 1.57e-06 | GradNorm: 2.558
  Batch   40/48 | Loss: 2.4865 | LR: 6.97e-07 | GradNorm: 1.658
  Batch   44/48 | Loss: 2.5172 | LR: 2.10e-07 | GradNorm: 1.852
Epoch 10/10: Train=39.10%, Val=23.10%, Gap=16.00%, LR=1.00e-07
Best validation accuracy: 23.10%
