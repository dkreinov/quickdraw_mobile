=== W&B Sweep Run: LR=0.000393 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003928320754627718
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000393
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9443 | LR: 7.98e-06 | GradNorm: 1.315
  Batch    4/48 | Loss: 3.9210 | LR: 2.42e-05 | GradNorm: 0.945
  Batch    8/48 | Loss: 3.9204 | LR: 4.04e-05 | GradNorm: 0.878
  Batch   12/48 | Loss: 3.9162 | LR: 5.66e-05 | GradNorm: 0.680
  Batch   16/48 | Loss: 3.9205 | LR: 7.28e-05 | GradNorm: 0.626
  Batch   20/48 | Loss: 3.9120 | LR: 8.90e-05 | GradNorm: 0.617
  Batch   24/48 | Loss: 3.9130 | LR: 1.05e-04 | GradNorm: 0.635
  Batch   28/48 | Loss: 3.9134 | LR: 1.21e-04 | GradNorm: 0.553
  Batch   32/48 | Loss: 3.9081 | LR: 1.38e-04 | GradNorm: 0.552
  Batch   36/48 | Loss: 3.8969 | LR: 1.54e-04 | GradNorm: 0.594
  Batch   40/48 | Loss: 3.8572 | LR: 1.70e-04 | GradNorm: 0.708
  Batch   44/48 | Loss: 3.9076 | LR: 1.86e-04 | GradNorm: 5.466
Epoch 1/10: Train=2.61%, Val=3.35%, Gap=-0.74%, LR=1.98e-04
  Batch    0/48 | Loss: 3.9166 | LR: 2.02e-04 | GradNorm: 5.339
  Batch    4/48 | Loss: 3.8023 | LR: 2.19e-04 | GradNorm: 2.663
  Batch    8/48 | Loss: 3.8372 | LR: 2.35e-04 | GradNorm: 3.573
  Batch   12/48 | Loss: 3.7561 | LR: 2.51e-04 | GradNorm: 3.321
  Batch   16/48 | Loss: 3.7280 | LR: 2.67e-04 | GradNorm: 0.823
  Batch   20/48 | Loss: 3.7707 | LR: 2.83e-04 | GradNorm: 2.727
  Batch   24/48 | Loss: 3.7202 | LR: 3.00e-04 | GradNorm: 2.515
  Batch   28/48 | Loss: 3.6710 | LR: 3.16e-04 | GradNorm: 0.597
  Batch   32/48 | Loss: 3.6590 | LR: 3.32e-04 | GradNorm: 2.461
  Batch   36/48 | Loss: 3.7308 | LR: 3.48e-04 | GradNorm: 6.008
  Batch   40/48 | Loss: 3.6197 | LR: 3.64e-04 | GradNorm: 1.224
  Batch   44/48 | Loss: 3.6255 | LR: 3.81e-04 | GradNorm: 6.071
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.29%, Val=3.87%, Gap=2.42%, LR=3.93e-04
  Batch    0/48 | Loss: 3.8610 | LR: 3.93e-04 | GradNorm: 8.014
  Batch    4/48 | Loss: 3.5697 | LR: 3.93e-04 | GradNorm: 1.225
  Batch    8/48 | Loss: 3.6384 | LR: 3.92e-04 | GradNorm: 8.524
  Batch   12/48 | Loss: 3.5821 | LR: 3.92e-04 | GradNorm: 3.341
  Batch   16/48 | Loss: 4.0077 | LR: 3.91e-04 | GradNorm: 2.556
  Batch   20/48 | Loss: 3.8018 | LR: 3.90e-04 | GradNorm: 1.482
  Batch   24/48 | Loss: 3.7120 | LR: 3.89e-04 | GradNorm: 0.816
  Batch   28/48 | Loss: 3.6409 | LR: 3.87e-04 | GradNorm: 1.002
  Batch   32/48 | Loss: 3.5688 | LR: 3.86e-04 | GradNorm: 0.768
  Batch   36/48 | Loss: 3.5718 | LR: 3.84e-04 | GradNorm: 7.165
  Batch   40/48 | Loss: 3.7516 | LR: 3.82e-04 | GradNorm: 11.250
  Batch   44/48 | Loss: 3.5750 | LR: 3.80e-04 | GradNorm: 3.362
Epoch 3/10: Train=7.93%, Val=5.66%, Gap=2.27%, LR=3.78e-04
  Batch    0/48 | Loss: 3.5083 | LR: 3.77e-04 | GradNorm: 4.176
  Batch    4/48 | Loss: 3.4630 | LR: 3.75e-04 | GradNorm: 1.931
  Batch    8/48 | Loss: 3.4437 | LR: 3.72e-04 | GradNorm: 2.175
  Batch   12/48 | Loss: 3.4072 | LR: 3.69e-04 | GradNorm: 5.096
  Batch   16/48 | Loss: 3.4577 | LR: 3.66e-04 | GradNorm: 7.525
  Batch   20/48 | Loss: 3.3914 | LR: 3.62e-04 | GradNorm: 3.236
  Batch   24/48 | Loss: 3.3430 | LR: 3.59e-04 | GradNorm: 2.416
  Batch   28/48 | Loss: 3.3681 | LR: 3.55e-04 | GradNorm: 5.718
  Batch   32/48 | Loss: 3.3848 | LR: 3.51e-04 | GradNorm: 4.601
  Batch   36/48 | Loss: 3.3322 | LR: 3.47e-04 | GradNorm: 3.145
  Batch   40/48 | Loss: 3.3152 | LR: 3.43e-04 | GradNorm: 2.384
  Batch   44/48 | Loss: 3.2729 | LR: 3.39e-04 | GradNorm: 1.990
Epoch 4/10: Train=14.05%, Val=6.41%, Gap=7.64%, LR=3.35e-04
  Batch    0/48 | Loss: 3.3027 | LR: 3.34e-04 | GradNorm: 3.591
  Batch    4/48 | Loss: 3.2461 | LR: 3.30e-04 | GradNorm: 2.139
  Batch    8/48 | Loss: 3.2259 | LR: 3.25e-04 | GradNorm: 2.506
  Batch   12/48 | Loss: 3.2335 | LR: 3.20e-04 | GradNorm: 3.626
  Batch   16/48 | Loss: 3.2422 | LR: 3.15e-04 | GradNorm: 3.469
  Batch   20/48 | Loss: 3.1801 | LR: 3.10e-04 | GradNorm: 2.108
  Batch   24/48 | Loss: 3.1806 | LR: 3.04e-04 | GradNorm: 2.408
  Batch   28/48 | Loss: 3.1627 | LR: 2.99e-04 | GradNorm: 2.397
  Batch   32/48 | Loss: 3.1621 | LR: 2.93e-04 | GradNorm: 3.775
  Batch   36/48 | Loss: 3.2052 | LR: 2.88e-04 | GradNorm: 2.603
  Batch   40/48 | Loss: 3.1786 | LR: 2.82e-04 | GradNorm: 2.933
  Batch   44/48 | Loss: 3.1232 | LR: 2.76e-04 | GradNorm: 2.295
Epoch 5/10: Train=19.03%, Val=11.25%, Gap=7.78%, LR=2.72e-04
  Batch    0/48 | Loss: 3.1079 | LR: 2.70e-04 | GradNorm: 2.901
  Batch    4/48 | Loss: 3.0260 | LR: 2.64e-04 | GradNorm: 1.875
  Batch    8/48 | Loss: 3.0396 | LR: 2.58e-04 | GradNorm: 1.339
  Batch   12/48 | Loss: 3.0479 | LR: 2.52e-04 | GradNorm: 2.032
  Batch   16/48 | Loss: 3.0472 | LR: 2.46e-04 | GradNorm: 5.172
  Batch   20/48 | Loss: 3.0385 | LR: 2.39e-04 | GradNorm: 4.151
  Batch   24/48 | Loss: 3.0127 | LR: 2.33e-04 | GradNorm: 4.111
  Batch   28/48 | Loss: 2.9513 | LR: 2.27e-04 | GradNorm: 2.822
  Batch   32/48 | Loss: 3.0122 | LR: 2.21e-04 | GradNorm: 5.565
  Batch   36/48 | Loss: 3.0066 | LR: 2.14e-04 | GradNorm: 3.895
  Batch   40/48 | Loss: 2.9526 | LR: 2.08e-04 | GradNorm: 3.255
  Batch   44/48 | Loss: 3.0246 | LR: 2.01e-04 | GradNorm: 3.426
Epoch 6/10: Train=23.31%, Val=14.29%, Gap=9.02%, LR=1.96e-04
  Batch    0/48 | Loss: 2.9401 | LR: 1.95e-04 | GradNorm: 1.601
  Batch    4/48 | Loss: 2.9873 | LR: 1.88e-04 | GradNorm: 6.635
  Batch    8/48 | Loss: 2.9380 | LR: 1.82e-04 | GradNorm: 3.750
  Batch   12/48 | Loss: 2.8400 | LR: 1.76e-04 | GradNorm: 2.366
  Batch   16/48 | Loss: 2.8805 | LR: 1.69e-04 | GradNorm: 3.432
  Batch   20/48 | Loss: 2.8903 | LR: 1.63e-04 | GradNorm: 2.603
  Batch   24/48 | Loss: 2.9167 | LR: 1.57e-04 | GradNorm: 3.735
  Batch   28/48 | Loss: 2.9026 | LR: 1.50e-04 | GradNorm: 4.108
  Batch   32/48 | Loss: 2.9104 | LR: 1.44e-04 | GradNorm: 3.997
  Batch   36/48 | Loss: 2.9363 | LR: 1.38e-04 | GradNorm: 3.649
  Batch   40/48 | Loss: 2.8905 | LR: 1.32e-04 | GradNorm: 2.904
  Batch   44/48 | Loss: 2.8782 | LR: 1.26e-04 | GradNorm: 2.942
Epoch 7/10: Train=27.61%, Val=13.79%, Gap=13.82%, LR=1.21e-04
  Batch    0/48 | Loss: 2.8691 | LR: 1.20e-04 | GradNorm: 3.269
  Batch    4/48 | Loss: 2.8442 | LR: 1.14e-04 | GradNorm: 3.903
  Batch    8/48 | Loss: 2.8467 | LR: 1.08e-04 | GradNorm: 4.581
  Batch   12/48 | Loss: 2.8797 | LR: 1.02e-04 | GradNorm: 2.663
  Batch   16/48 | Loss: 2.8768 | LR: 9.69e-05 | GradNorm: 5.027
  Batch   20/48 | Loss: 2.7826 | LR: 9.14e-05 | GradNorm: 2.518
  Batch   24/48 | Loss: 2.7838 | LR: 8.60e-05 | GradNorm: 5.319
  Batch   28/48 | Loss: 2.8544 | LR: 8.08e-05 | GradNorm: 6.279
  Batch   32/48 | Loss: 2.8292 | LR: 7.57e-05 | GradNorm: 4.330
  Batch   36/48 | Loss: 2.8119 | LR: 7.07e-05 | GradNorm: 2.241
  Batch   40/48 | Loss: 2.7370 | LR: 6.58e-05 | GradNorm: 3.748
  Batch   44/48 | Loss: 2.7956 | LR: 6.11e-05 | GradNorm: 2.237
Epoch 8/10: Train=29.84%, Val=13.52%, Gap=16.32%, LR=5.76e-05
  Batch    0/48 | Loss: 2.7524 | LR: 5.65e-05 | GradNorm: 2.059
  Batch    4/48 | Loss: 2.7630 | LR: 5.21e-05 | GradNorm: 1.353
  Batch    8/48 | Loss: 2.8106 | LR: 4.78e-05 | GradNorm: 2.468
  Batch   12/48 | Loss: 2.7471 | LR: 4.37e-05 | GradNorm: 2.464
  Batch   16/48 | Loss: 2.6971 | LR: 3.97e-05 | GradNorm: 1.805
  Batch   20/48 | Loss: 2.6909 | LR: 3.59e-05 | GradNorm: 2.256
  Batch   24/48 | Loss: 2.7237 | LR: 3.23e-05 | GradNorm: 2.269
  Batch   28/48 | Loss: 2.7604 | LR: 2.89e-05 | GradNorm: 2.732
  Batch   32/48 | Loss: 2.7347 | LR: 2.56e-05 | GradNorm: 3.762
  Batch   36/48 | Loss: 2.7416 | LR: 2.25e-05 | GradNorm: 3.854
  Batch   40/48 | Loss: 2.7194 | LR: 1.96e-05 | GradNorm: 1.916
  Batch   44/48 | Loss: 2.7415 | LR: 1.69e-05 | GradNorm: 1.102
Epoch 9/10: Train=32.49%, Val=14.88%, Gap=17.61%, LR=1.50e-05
  Batch    0/48 | Loss: 2.7266 | LR: 1.44e-05 | GradNorm: 1.286
  Batch    4/48 | Loss: 2.7250 | LR: 1.21e-05 | GradNorm: 1.693
  Batch    8/48 | Loss: 2.6858 | LR: 1.00e-05 | GradNorm: 1.455
  Batch   12/48 | Loss: 2.6943 | LR: 8.10e-06 | GradNorm: 1.444
  Batch   16/48 | Loss: 2.6955 | LR: 6.38e-06 | GradNorm: 1.290
  Batch   20/48 | Loss: 2.7185 | LR: 4.87e-06 | GradNorm: 1.886
  Batch   24/48 | Loss: 2.7186 | LR: 3.57e-06 | GradNorm: 2.285
  Batch   28/48 | Loss: 2.7295 | LR: 2.47e-06 | GradNorm: 1.931
  Batch   32/48 | Loss: 2.7473 | LR: 1.58e-06 | GradNorm: 2.400
  Batch   36/48 | Loss: 2.6935 | LR: 8.95e-07 | GradNorm: 1.259
  Batch   40/48 | Loss: 2.6621 | LR: 4.22e-07 | GradNorm: 1.466
  Batch   44/48 | Loss: 2.6950 | LR: 1.59e-07 | GradNorm: 1.514
Epoch 10/10: Train=33.69%, Val=15.65%, Gap=18.04%, LR=1.00e-07
Best validation accuracy: 15.65%
