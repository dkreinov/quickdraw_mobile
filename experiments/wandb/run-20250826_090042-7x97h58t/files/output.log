=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002905394697926871
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9375 | LR: 5.90e-06 | GradNorm: 1.266
  Batch    4/48 | Loss: 3.9215 | LR: 1.79e-05 | GradNorm: 0.955
  Batch    8/48 | Loss: 3.9228 | LR: 2.99e-05 | GradNorm: 0.909
  Batch   12/48 | Loss: 3.9127 | LR: 4.19e-05 | GradNorm: 0.580
  Batch   16/48 | Loss: 3.9173 | LR: 5.38e-05 | GradNorm: 0.645
  Batch   20/48 | Loss: 3.9189 | LR: 6.58e-05 | GradNorm: 0.728
  Batch   24/48 | Loss: 3.9174 | LR: 7.78e-05 | GradNorm: 0.733
  Batch   28/48 | Loss: 3.9178 | LR: 8.98e-05 | GradNorm: 0.625
  Batch   32/48 | Loss: 3.9076 | LR: 1.02e-04 | GradNorm: 0.545
  Batch   36/48 | Loss: 3.9043 | LR: 1.14e-04 | GradNorm: 0.570
  Batch   40/48 | Loss: 3.8839 | LR: 1.26e-04 | GradNorm: 0.589
  Batch   44/48 | Loss: 3.8515 | LR: 1.38e-04 | GradNorm: 0.849
Epoch 1/10: Train=2.65%, Val=4.07%, Gap=-1.42%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8182 | LR: 1.50e-04 | GradNorm: 3.626
  Batch    4/48 | Loss: 3.9143 | LR: 1.62e-04 | GradNorm: 7.693
  Batch    8/48 | Loss: 3.8872 | LR: 1.74e-04 | GradNorm: 6.451
  Batch   12/48 | Loss: 3.7135 | LR: 1.86e-04 | GradNorm: 0.744
  Batch   16/48 | Loss: 3.7299 | LR: 1.98e-04 | GradNorm: 1.120
  Batch   20/48 | Loss: 3.7617 | LR: 2.10e-04 | GradNorm: 7.131
  Batch   24/48 | Loss: 3.7215 | LR: 2.22e-04 | GradNorm: 8.557
  Batch   28/48 | Loss: 3.8327 | LR: 2.34e-04 | GradNorm: 6.257
  Batch   32/48 | Loss: 3.6653 | LR: 2.46e-04 | GradNorm: 0.972
  Batch   36/48 | Loss: 3.6495 | LR: 2.58e-04 | GradNorm: 2.774
  Batch   40/48 | Loss: 3.6644 | LR: 2.70e-04 | GradNorm: 3.274
  Batch   44/48 | Loss: 3.6114 | LR: 2.82e-04 | GradNorm: 3.189
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.58%, Val=6.35%, Gap=0.23%, LR=2.91e-04
  Batch    0/48 | Loss: 3.5566 | LR: 2.91e-04 | GradNorm: 5.658
  Batch    4/48 | Loss: 3.5410 | LR: 2.90e-04 | GradNorm: 3.891
  Batch    8/48 | Loss: 3.4969 | LR: 2.90e-04 | GradNorm: 3.871
  Batch   12/48 | Loss: 3.4762 | LR: 2.90e-04 | GradNorm: 2.203
  Batch   16/48 | Loss: 3.4707 | LR: 2.89e-04 | GradNorm: 3.946
  Batch   20/48 | Loss: 3.4595 | LR: 2.88e-04 | GradNorm: 6.281
  Batch   24/48 | Loss: 3.4063 | LR: 2.88e-04 | GradNorm: 4.501
  Batch   28/48 | Loss: 3.3569 | LR: 2.86e-04 | GradNorm: 2.127
  Batch   32/48 | Loss: 3.4028 | LR: 2.85e-04 | GradNorm: 2.894
  Batch   36/48 | Loss: 3.3658 | LR: 2.84e-04 | GradNorm: 3.712
  Batch   40/48 | Loss: 3.3060 | LR: 2.82e-04 | GradNorm: 1.139
  Batch   44/48 | Loss: 3.3578 | LR: 2.81e-04 | GradNorm: 4.247
Epoch 3/10: Train=13.08%, Val=10.65%, Gap=2.43%, LR=2.79e-04
  Batch    0/48 | Loss: 3.3084 | LR: 2.79e-04 | GradNorm: 3.912
  Batch    4/48 | Loss: 3.2810 | LR: 2.77e-04 | GradNorm: 2.948
  Batch    8/48 | Loss: 3.2735 | LR: 2.75e-04 | GradNorm: 3.465
  Batch   12/48 | Loss: 3.2296 | LR: 2.73e-04 | GradNorm: 4.594
  Batch   16/48 | Loss: 3.2297 | LR: 2.70e-04 | GradNorm: 3.680
  Batch   20/48 | Loss: 3.2111 | LR: 2.68e-04 | GradNorm: 3.447
  Batch   24/48 | Loss: 3.2208 | LR: 2.65e-04 | GradNorm: 3.300
  Batch   28/48 | Loss: 3.2316 | LR: 2.63e-04 | GradNorm: 5.586
  Batch   32/48 | Loss: 3.2346 | LR: 2.60e-04 | GradNorm: 4.026
  Batch   36/48 | Loss: 3.1723 | LR: 2.57e-04 | GradNorm: 2.156
  Batch   40/48 | Loss: 3.1626 | LR: 2.54e-04 | GradNorm: 2.979
  Batch   44/48 | Loss: 3.1963 | LR: 2.50e-04 | GradNorm: 6.754
Epoch 4/10: Train=17.82%, Val=11.77%, Gap=6.05%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1480 | LR: 2.47e-04 | GradNorm: 4.988
  Batch    4/48 | Loss: 3.1006 | LR: 2.44e-04 | GradNorm: 3.079
  Batch    8/48 | Loss: 3.0791 | LR: 2.40e-04 | GradNorm: 3.020
  Batch   12/48 | Loss: 3.0963 | LR: 2.37e-04 | GradNorm: 4.208
  Batch   16/48 | Loss: 3.1323 | LR: 2.33e-04 | GradNorm: 2.586
  Batch   20/48 | Loss: 3.0995 | LR: 2.29e-04 | GradNorm: 3.955
  Batch   24/48 | Loss: 3.0892 | LR: 2.25e-04 | GradNorm: 3.337
  Batch   28/48 | Loss: 3.0441 | LR: 2.21e-04 | GradNorm: 2.414
  Batch   32/48 | Loss: 3.0401 | LR: 2.17e-04 | GradNorm: 4.964
  Batch   36/48 | Loss: 3.0978 | LR: 2.13e-04 | GradNorm: 3.248
  Batch   40/48 | Loss: 3.0799 | LR: 2.08e-04 | GradNorm: 3.950
  Batch   44/48 | Loss: 3.0231 | LR: 2.04e-04 | GradNorm: 4.683
Epoch 5/10: Train=22.30%, Val=14.98%, Gap=7.32%, LR=2.01e-04
  Batch    0/48 | Loss: 2.9557 | LR: 2.00e-04 | GradNorm: 3.457
  Batch    4/48 | Loss: 2.9770 | LR: 1.95e-04 | GradNorm: 8.614
  Batch    8/48 | Loss: 2.9707 | LR: 1.91e-04 | GradNorm: 5.816
  Batch   12/48 | Loss: 2.9338 | LR: 1.86e-04 | GradNorm: 4.006
  Batch   16/48 | Loss: 2.8667 | LR: 1.82e-04 | GradNorm: 2.497
  Batch   20/48 | Loss: 2.9264 | LR: 1.77e-04 | GradNorm: 5.811
  Batch   24/48 | Loss: 2.8648 | LR: 1.72e-04 | GradNorm: 4.597
  Batch   28/48 | Loss: 2.8184 | LR: 1.68e-04 | GradNorm: 2.998
  Batch   32/48 | Loss: 2.8194 | LR: 1.63e-04 | GradNorm: 3.769
  Batch   36/48 | Loss: 2.8596 | LR: 1.58e-04 | GradNorm: 6.239
  Batch   40/48 | Loss: 2.8338 | LR: 1.54e-04 | GradNorm: 3.555
  Batch   44/48 | Loss: 2.8754 | LR: 1.49e-04 | GradNorm: 4.674
Epoch 6/10: Train=28.61%, Val=19.01%, Gap=9.60%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8153 | LR: 1.44e-04 | GradNorm: 5.039
  Batch    4/48 | Loss: 2.8045 | LR: 1.39e-04 | GradNorm: 4.792
  Batch    8/48 | Loss: 2.7815 | LR: 1.35e-04 | GradNorm: 5.493
  Batch   12/48 | Loss: 2.7083 | LR: 1.30e-04 | GradNorm: 5.427
  Batch   16/48 | Loss: 2.7535 | LR: 1.25e-04 | GradNorm: 6.301
  Batch   20/48 | Loss: 2.7966 | LR: 1.20e-04 | GradNorm: 8.126
  Batch   24/48 | Loss: 2.7871 | LR: 1.16e-04 | GradNorm: 6.675
  Batch   28/48 | Loss: 2.7827 | LR: 1.11e-04 | GradNorm: 6.842
  Batch   32/48 | Loss: 2.7861 | LR: 1.07e-04 | GradNorm: 6.394
  Batch   36/48 | Loss: 2.7896 | LR: 1.02e-04 | GradNorm: 7.208
  Batch   40/48 | Loss: 2.7259 | LR: 9.75e-05 | GradNorm: 3.824
  Batch   44/48 | Loss: 2.7141 | LR: 9.31e-05 | GradNorm: 3.973
Epoch 7/10: Train=32.81%, Val=19.02%, Gap=13.79%, LR=8.97e-05
  Batch    0/48 | Loss: 2.7175 | LR: 8.87e-05 | GradNorm: 5.426
  Batch    4/48 | Loss: 2.6871 | LR: 8.43e-05 | GradNorm: 6.982
  Batch    8/48 | Loss: 2.6789 | LR: 8.00e-05 | GradNorm: 5.501
  Batch   12/48 | Loss: 2.7042 | LR: 7.58e-05 | GradNorm: 4.723
  Batch   16/48 | Loss: 2.7388 | LR: 7.17e-05 | GradNorm: 6.282
  Batch   20/48 | Loss: 2.6411 | LR: 6.76e-05 | GradNorm: 6.785
  Batch   24/48 | Loss: 2.6515 | LR: 6.37e-05 | GradNorm: 7.035
  Batch   28/48 | Loss: 2.6656 | LR: 5.98e-05 | GradNorm: 4.155
  Batch   32/48 | Loss: 2.6582 | LR: 5.60e-05 | GradNorm: 2.520
  Batch   36/48 | Loss: 2.6409 | LR: 5.23e-05 | GradNorm: 4.787
  Batch   40/48 | Loss: 2.5967 | LR: 4.87e-05 | GradNorm: 5.829
  Batch   44/48 | Loss: 2.6482 | LR: 4.52e-05 | GradNorm: 6.569
Epoch 8/10: Train=35.64%, Val=22.54%, Gap=13.10%, LR=4.26e-05
  Batch    0/48 | Loss: 2.6266 | LR: 4.18e-05 | GradNorm: 5.659
  Batch    4/48 | Loss: 2.6125 | LR: 3.85e-05 | GradNorm: 4.725
  Batch    8/48 | Loss: 2.6697 | LR: 3.54e-05 | GradNorm: 7.342
  Batch   12/48 | Loss: 2.6079 | LR: 3.23e-05 | GradNorm: 4.931
  Batch   16/48 | Loss: 2.5537 | LR: 2.94e-05 | GradNorm: 2.726
  Batch   20/48 | Loss: 2.5631 | LR: 2.66e-05 | GradNorm: 5.334
  Batch   24/48 | Loss: 2.5845 | LR: 2.39e-05 | GradNorm: 5.124
  Batch   28/48 | Loss: 2.6112 | LR: 2.14e-05 | GradNorm: 5.978
  Batch   32/48 | Loss: 2.5871 | LR: 1.90e-05 | GradNorm: 3.272
  Batch   36/48 | Loss: 2.5744 | LR: 1.67e-05 | GradNorm: 5.633
  Batch   40/48 | Loss: 2.5668 | LR: 1.46e-05 | GradNorm: 5.355
  Batch   44/48 | Loss: 2.5916 | LR: 1.26e-05 | GradNorm: 2.567
Epoch 9/10: Train=37.66%, Val=21.68%, Gap=15.98%, LR=1.12e-05
  Batch    0/48 | Loss: 2.5790 | LR: 1.07e-05 | GradNorm: 3.079
  Batch    4/48 | Loss: 2.5749 | LR: 8.99e-06 | GradNorm: 2.467
  Batch    8/48 | Loss: 2.5449 | LR: 7.43e-06 | GradNorm: 2.967
  Batch   12/48 | Loss: 2.5473 | LR: 6.01e-06 | GradNorm: 2.850
  Batch   16/48 | Loss: 2.5516 | LR: 4.75e-06 | GradNorm: 2.291
  Batch   20/48 | Loss: 2.5575 | LR: 3.63e-06 | GradNorm: 4.771
  Batch   24/48 | Loss: 2.5776 | LR: 2.66e-06 | GradNorm: 3.705
  Batch   28/48 | Loss: 2.6072 | LR: 1.85e-06 | GradNorm: 5.485
  Batch   32/48 | Loss: 2.6049 | LR: 1.19e-06 | GradNorm: 3.912
  Batch   36/48 | Loss: 2.5540 | LR: 6.88e-07 | GradNorm: 2.968
  Batch   40/48 | Loss: 2.5448 | LR: 3.38e-07 | GradNorm: 2.298
  Batch   44/48 | Loss: 2.5623 | LR: 1.44e-07 | GradNorm: 3.460
Epoch 10/10: Train=38.83%, Val=22.12%, Gap=16.71%, LR=1.00e-07
Best validation accuracy: 22.54%
