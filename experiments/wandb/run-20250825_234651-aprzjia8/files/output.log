=== W&B Sweep Run: LR=0.002241 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.002241051476717017
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002241
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9552 | LR: 4.55e-05 | GradNorm: 1.761
  Batch    4/48 | Loss: 3.9300 | LR: 1.38e-04 | GradNorm: 0.845
  Batch    8/48 | Loss: 3.9235 | LR: 2.30e-04 | GradNorm: 0.539
  Batch   12/48 | Loss: 3.9182 | LR: 3.23e-04 | GradNorm: 0.512
  Batch   16/48 | Loss: 3.9206 | LR: 4.15e-04 | GradNorm: 0.485
  Batch   20/48 | Loss: 3.9166 | LR: 5.08e-04 | GradNorm: 0.549
  Batch   24/48 | Loss: 3.8879 | LR: 6.00e-04 | GradNorm: 0.568
  Batch   28/48 | Loss: 3.8706 | LR: 6.93e-04 | GradNorm: 1.961
  Batch   32/48 | Loss: 3.8651 | LR: 7.85e-04 | GradNorm: 1.814
  Batch   36/48 | Loss: 3.8660 | LR: 8.78e-04 | GradNorm: 1.429
  Batch   40/48 | Loss: 3.8077 | LR: 9.70e-04 | GradNorm: 0.496
  Batch   44/48 | Loss: 3.8109 | LR: 1.06e-03 | GradNorm: 0.904
Epoch 1/10: Train=3.10%, Val=4.29%, Gap=-1.19%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7858 | LR: 1.15e-03 | GradNorm: 0.555
  Batch    4/48 | Loss: 3.7980 | LR: 1.25e-03 | GradNorm: 1.566
  Batch    8/48 | Loss: 3.7623 | LR: 1.34e-03 | GradNorm: 1.420
  Batch   12/48 | Loss: 3.8926 | LR: 1.43e-03 | GradNorm: 2.359
  Batch   16/48 | Loss: 3.7847 | LR: 1.52e-03 | GradNorm: 0.993
  Batch   20/48 | Loss: 3.7643 | LR: 1.62e-03 | GradNorm: 0.864
  Batch   24/48 | Loss: 3.7246 | LR: 1.71e-03 | GradNorm: 1.522
  Batch   28/48 | Loss: 3.8368 | LR: 1.80e-03 | GradNorm: 3.629
  Batch   32/48 | Loss: 3.6569 | LR: 1.89e-03 | GradNorm: 1.789
  Batch   36/48 | Loss: 3.8923 | LR: 1.99e-03 | GradNorm: 0.863
  Batch   40/48 | Loss: 3.8493 | LR: 2.08e-03 | GradNorm: 0.742
  Batch   44/48 | Loss: 3.8323 | LR: 2.17e-03 | GradNorm: 0.786
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.05%, Val=3.62%, Gap=1.43%, LR=2.24e-03
  Batch    0/48 | Loss: 3.7882 | LR: 2.24e-03 | GradNorm: 0.611
  Batch    4/48 | Loss: 3.7872 | LR: 2.24e-03 | GradNorm: 0.539
  Batch    8/48 | Loss: 3.7397 | LR: 2.24e-03 | GradNorm: 0.571
  Batch   12/48 | Loss: 3.6919 | LR: 2.23e-03 | GradNorm: 0.569
  Batch   16/48 | Loss: 3.7084 | LR: 2.23e-03 | GradNorm: 1.679
  Batch   20/48 | Loss: 3.7965 | LR: 2.22e-03 | GradNorm: 3.629
  Batch   24/48 | Loss: 3.8333 | LR: 2.22e-03 | GradNorm: 0.957
  Batch   28/48 | Loss: 3.8001 | LR: 2.21e-03 | GradNorm: 1.080
  Batch   32/48 | Loss: 3.7799 | LR: 2.20e-03 | GradNorm: 1.131
  Batch   36/48 | Loss: 3.8921 | LR: 2.19e-03 | GradNorm: 2.180
  Batch   40/48 | Loss: 3.8496 | LR: 2.18e-03 | GradNorm: 2.433
  Batch   44/48 | Loss: 3.7077 | LR: 2.17e-03 | GradNorm: 0.576
Epoch 3/10: Train=5.37%, Val=4.24%, Gap=1.13%, LR=2.16e-03
  Batch    0/48 | Loss: 3.8322 | LR: 2.15e-03 | GradNorm: 2.473
  Batch    4/48 | Loss: 3.7828 | LR: 2.14e-03 | GradNorm: 2.342
  Batch    8/48 | Loss: 3.7837 | LR: 2.12e-03 | GradNorm: 0.862
  Batch   12/48 | Loss: 3.6699 | LR: 2.10e-03 | GradNorm: 0.591
  Batch   16/48 | Loss: 3.8212 | LR: 2.09e-03 | GradNorm: 2.167
  Batch   20/48 | Loss: 4.0710 | LR: 2.07e-03 | GradNorm: 1.397
  Batch   24/48 | Loss: 3.8605 | LR: 2.05e-03 | GradNorm: 0.621
  Batch   28/48 | Loss: 3.8564 | LR: 2.03e-03 | GradNorm: 0.732
  Batch   32/48 | Loss: 3.8091 | LR: 2.00e-03 | GradNorm: 0.565
  Batch   36/48 | Loss: 3.7871 | LR: 1.98e-03 | GradNorm: 0.850
  Batch   40/48 | Loss: 3.7969 | LR: 1.96e-03 | GradNorm: 0.765
  Batch   44/48 | Loss: 3.7732 | LR: 1.93e-03 | GradNorm: 0.571
Epoch 4/10: Train=5.10%, Val=4.34%, Gap=0.76%, LR=1.91e-03
  Batch    0/48 | Loss: 3.7542 | LR: 1.91e-03 | GradNorm: 0.522
  Batch    4/48 | Loss: 3.7024 | LR: 1.88e-03 | GradNorm: 0.453
  Batch    8/48 | Loss: 3.7888 | LR: 1.85e-03 | GradNorm: 1.797
  Batch   12/48 | Loss: 3.7454 | LR: 1.82e-03 | GradNorm: 0.741
  Batch   16/48 | Loss: 3.7342 | LR: 1.80e-03 | GradNorm: 0.750
  Batch   20/48 | Loss: 3.7211 | LR: 1.77e-03 | GradNorm: 0.422
  Batch   24/48 | Loss: 3.7095 | LR: 1.74e-03 | GradNorm: 0.832
  Batch   28/48 | Loss: 3.8334 | LR: 1.70e-03 | GradNorm: 1.248
  Batch   32/48 | Loss: 3.7311 | LR: 1.67e-03 | GradNorm: 1.015
  Batch   36/48 | Loss: 3.7433 | LR: 1.64e-03 | GradNorm: 0.382
  Batch   40/48 | Loss: 3.7535 | LR: 1.61e-03 | GradNorm: 0.668
  Batch   44/48 | Loss: 3.7354 | LR: 1.57e-03 | GradNorm: 0.717
Epoch 5/10: Train=5.33%, Val=4.04%, Gap=1.29%, LR=1.55e-03
  Batch    0/48 | Loss: 3.7159 | LR: 1.54e-03 | GradNorm: 0.534
  Batch    4/48 | Loss: 3.7065 | LR: 1.51e-03 | GradNorm: 0.650
  Batch    8/48 | Loss: 3.6849 | LR: 1.47e-03 | GradNorm: 0.503
  Batch   12/48 | Loss: 3.7446 | LR: 1.44e-03 | GradNorm: 0.685
  Batch   16/48 | Loss: 3.6532 | LR: 1.40e-03 | GradNorm: 0.518
  Batch   20/48 | Loss: 3.6747 | LR: 1.37e-03 | GradNorm: 0.839
  Batch   24/48 | Loss: 3.6691 | LR: 1.33e-03 | GradNorm: 0.467
  Batch   28/48 | Loss: 3.6665 | LR: 1.29e-03 | GradNorm: 0.910
  Batch   32/48 | Loss: 3.6473 | LR: 1.26e-03 | GradNorm: 1.095
  Batch   36/48 | Loss: 3.6882 | LR: 1.22e-03 | GradNorm: 1.048
  Batch   40/48 | Loss: 3.6631 | LR: 1.18e-03 | GradNorm: 0.554
  Batch   44/48 | Loss: 3.6867 | LR: 1.15e-03 | GradNorm: 0.541
Epoch 6/10: Train=6.71%, Val=6.51%, Gap=0.20%, LR=1.12e-03
  Batch    0/48 | Loss: 3.6296 | LR: 1.11e-03 | GradNorm: 0.625
  Batch    4/48 | Loss: 3.6939 | LR: 1.07e-03 | GradNorm: 1.598
  Batch    8/48 | Loss: 3.6412 | LR: 1.04e-03 | GradNorm: 0.939
  Batch   12/48 | Loss: 3.6595 | LR: 1.00e-03 | GradNorm: 0.889
  Batch   16/48 | Loss: 3.6174 | LR: 9.65e-04 | GradNorm: 1.929
  Batch   20/48 | Loss: 3.6515 | LR: 9.29e-04 | GradNorm: 0.517
  Batch   24/48 | Loss: 3.6266 | LR: 8.93e-04 | GradNorm: 1.170
  Batch   28/48 | Loss: 3.5850 | LR: 8.57e-04 | GradNorm: 0.457
  Batch   32/48 | Loss: 3.6008 | LR: 8.22e-04 | GradNorm: 0.694
  Batch   36/48 | Loss: 3.6406 | LR: 7.87e-04 | GradNorm: 1.168
  Batch   40/48 | Loss: 3.6001 | LR: 7.52e-04 | GradNorm: 0.923
  Batch   44/48 | Loss: 3.5532 | LR: 7.17e-04 | GradNorm: 1.576
Epoch 7/10: Train=7.98%, Val=7.43%, Gap=0.55%, LR=6.92e-04
  Batch    0/48 | Loss: 3.5623 | LR: 6.83e-04 | GradNorm: 0.507
  Batch    4/48 | Loss: 3.5216 | LR: 6.50e-04 | GradNorm: 0.728
  Batch    8/48 | Loss: 3.5391 | LR: 6.17e-04 | GradNorm: 1.602
  Batch   12/48 | Loss: 3.5215 | LR: 5.84e-04 | GradNorm: 0.614
  Batch   16/48 | Loss: 3.5220 | LR: 5.52e-04 | GradNorm: 1.632
  Batch   20/48 | Loss: 3.4920 | LR: 5.21e-04 | GradNorm: 1.269
  Batch   24/48 | Loss: 3.4725 | LR: 4.90e-04 | GradNorm: 1.392
  Batch   28/48 | Loss: 3.4496 | LR: 4.60e-04 | GradNorm: 0.939
  Batch   32/48 | Loss: 3.4329 | LR: 4.31e-04 | GradNorm: 1.043
  Batch   36/48 | Loss: 3.5075 | LR: 4.03e-04 | GradNorm: 3.171
  Batch   40/48 | Loss: 3.3910 | LR: 3.75e-04 | GradNorm: 1.477
  Batch   44/48 | Loss: 3.4751 | LR: 3.48e-04 | GradNorm: 2.486
Epoch 8/10: Train=11.05%, Val=9.95%, Gap=1.10%, LR=3.28e-04
  Batch    0/48 | Loss: 3.3852 | LR: 3.22e-04 | GradNorm: 0.725
  Batch    4/48 | Loss: 3.4070 | LR: 2.97e-04 | GradNorm: 1.293
  Batch    8/48 | Loss: 3.4485 | LR: 2.72e-04 | GradNorm: 1.788
  Batch   12/48 | Loss: 3.3734 | LR: 2.49e-04 | GradNorm: 0.860
  Batch   16/48 | Loss: 3.3539 | LR: 2.26e-04 | GradNorm: 0.902
  Batch   20/48 | Loss: 3.3534 | LR: 2.04e-04 | GradNorm: 1.257
  Batch   24/48 | Loss: 3.3719 | LR: 1.84e-04 | GradNorm: 1.535
  Batch   28/48 | Loss: 3.3642 | LR: 1.64e-04 | GradNorm: 2.016
  Batch   32/48 | Loss: 3.3689 | LR: 1.46e-04 | GradNorm: 2.045
  Batch   36/48 | Loss: 3.3486 | LR: 1.28e-04 | GradNorm: 1.593
  Batch   40/48 | Loss: 3.2993 | LR: 1.12e-04 | GradNorm: 0.833
  Batch   44/48 | Loss: 3.3265 | LR: 9.62e-05 | GradNorm: 1.643
Epoch 9/10: Train=14.10%, Val=13.81%, Gap=0.29%, LR=8.54e-05
  Batch    0/48 | Loss: 3.3354 | LR: 8.19e-05 | GradNorm: 1.774
  Batch    4/48 | Loss: 3.3249 | LR: 6.87e-05 | GradNorm: 0.905
  Batch    8/48 | Loss: 3.2829 | LR: 5.67e-05 | GradNorm: 0.852
  Batch   12/48 | Loss: 3.2882 | LR: 4.57e-05 | GradNorm: 0.893
  Batch   16/48 | Loss: 3.2960 | LR: 3.59e-05 | GradNorm: 0.688
  Batch   20/48 | Loss: 3.3223 | LR: 2.73e-05 | GradNorm: 0.888
  Batch   24/48 | Loss: 3.2773 | LR: 1.99e-05 | GradNorm: 1.403
  Batch   28/48 | Loss: 3.3000 | LR: 1.36e-05 | GradNorm: 1.154
  Batch   32/48 | Loss: 3.3407 | LR: 8.53e-06 | GradNorm: 1.083
  Batch   36/48 | Loss: 3.2982 | LR: 4.63e-06 | GradNorm: 1.300
  Batch   40/48 | Loss: 3.2751 | LR: 1.94e-06 | GradNorm: 0.907
  Batch   44/48 | Loss: 3.3147 | LR: 4.37e-07 | GradNorm: 0.742
Epoch 10/10: Train=16.02%, Val=14.30%, Gap=1.72%, LR=1.00e-07
Best validation accuracy: 14.30%
