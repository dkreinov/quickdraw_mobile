=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002689542860596008
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9591 | LR: 5.46e-06 | GradNorm: 1.506
  Batch    4/48 | Loss: 3.9346 | LR: 1.66e-05 | GradNorm: 1.054
  Batch    8/48 | Loss: 3.9268 | LR: 2.77e-05 | GradNorm: 0.853
  Batch   12/48 | Loss: 3.9161 | LR: 3.87e-05 | GradNorm: 0.707
  Batch   16/48 | Loss: 3.9218 | LR: 4.98e-05 | GradNorm: 0.647
  Batch   20/48 | Loss: 3.9140 | LR: 6.09e-05 | GradNorm: 0.594
  Batch   24/48 | Loss: 3.9138 | LR: 7.20e-05 | GradNorm: 0.643
  Batch   28/48 | Loss: 3.9206 | LR: 8.31e-05 | GradNorm: 0.585
  Batch   32/48 | Loss: 3.9099 | LR: 9.42e-05 | GradNorm: 0.478
  Batch   36/48 | Loss: 3.9148 | LR: 1.05e-04 | GradNorm: 0.531
  Batch   40/48 | Loss: 3.9121 | LR: 1.16e-04 | GradNorm: 0.558
  Batch   44/48 | Loss: 3.9060 | LR: 1.28e-04 | GradNorm: 0.556
Epoch 1/10: Train=2.23%, Val=4.27%, Gap=-2.04%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8982 | LR: 1.39e-04 | GradNorm: 0.603
  Batch    4/48 | Loss: 3.8553 | LR: 1.50e-04 | GradNorm: 0.534
  Batch    8/48 | Loss: 3.8021 | LR: 1.61e-04 | GradNorm: 1.364
  Batch   12/48 | Loss: 3.9325 | LR: 1.72e-04 | GradNorm: 5.945
  Batch   16/48 | Loss: 4.0164 | LR: 1.83e-04 | GradNorm: 5.719
  Batch   20/48 | Loss: 3.9492 | LR: 1.94e-04 | GradNorm: 2.759
  Batch   24/48 | Loss: 3.8811 | LR: 2.05e-04 | GradNorm: 3.292
  Batch   28/48 | Loss: 3.8124 | LR: 2.16e-04 | GradNorm: 1.483
  Batch   32/48 | Loss: 3.7674 | LR: 2.27e-04 | GradNorm: 1.763
  Batch   36/48 | Loss: 3.7327 | LR: 2.38e-04 | GradNorm: 1.650
  Batch   40/48 | Loss: 3.7271 | LR: 2.50e-04 | GradNorm: 2.420
  Batch   44/48 | Loss: 3.6683 | LR: 2.61e-04 | GradNorm: 2.603
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.00%, Val=6.80%, Gap=-1.80%, LR=2.69e-04
  Batch    0/48 | Loss: 3.5997 | LR: 2.69e-04 | GradNorm: 0.687
  Batch    4/48 | Loss: 3.5499 | LR: 2.69e-04 | GradNorm: 1.281
  Batch    8/48 | Loss: 3.5293 | LR: 2.69e-04 | GradNorm: 5.136
  Batch   12/48 | Loss: 3.4906 | LR: 2.68e-04 | GradNorm: 1.240
  Batch   16/48 | Loss: 3.6276 | LR: 2.68e-04 | GradNorm: 16.730
  Batch   20/48 | Loss: 3.4530 | LR: 2.67e-04 | GradNorm: 4.594
  Batch   24/48 | Loss: 3.4317 | LR: 2.66e-04 | GradNorm: 4.235
  Batch   28/48 | Loss: 3.3741 | LR: 2.65e-04 | GradNorm: 3.275
  Batch   32/48 | Loss: 3.5106 | LR: 2.64e-04 | GradNorm: 15.097
  Batch   36/48 | Loss: 3.4233 | LR: 2.63e-04 | GradNorm: 3.932
  Batch   40/48 | Loss: 3.5025 | LR: 2.61e-04 | GradNorm: 7.626
  Batch   44/48 | Loss: 3.4241 | LR: 2.60e-04 | GradNorm: 4.175
Epoch 3/10: Train=11.74%, Val=10.95%, Gap=0.79%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3793 | LR: 2.58e-04 | GradNorm: 4.109
  Batch    4/48 | Loss: 3.3623 | LR: 2.57e-04 | GradNorm: 3.990
  Batch    8/48 | Loss: 3.3338 | LR: 2.55e-04 | GradNorm: 2.734
  Batch   12/48 | Loss: 3.3015 | LR: 2.53e-04 | GradNorm: 2.912
  Batch   16/48 | Loss: 3.2903 | LR: 2.50e-04 | GradNorm: 1.614
  Batch   20/48 | Loss: 3.2752 | LR: 2.48e-04 | GradNorm: 3.212
  Batch   24/48 | Loss: 3.2497 | LR: 2.46e-04 | GradNorm: 2.260
  Batch   28/48 | Loss: 3.2238 | LR: 2.43e-04 | GradNorm: 2.341
  Batch   32/48 | Loss: 3.2725 | LR: 2.41e-04 | GradNorm: 4.619
  Batch   36/48 | Loss: 3.2222 | LR: 2.38e-04 | GradNorm: 3.156
  Batch   40/48 | Loss: 3.2441 | LR: 2.35e-04 | GradNorm: 3.232
  Batch   44/48 | Loss: 3.1918 | LR: 2.32e-04 | GradNorm: 2.851
Epoch 4/10: Train=16.70%, Val=12.87%, Gap=3.83%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1637 | LR: 2.29e-04 | GradNorm: 1.826
  Batch    4/48 | Loss: 3.1351 | LR: 2.26e-04 | GradNorm: 4.399
  Batch    8/48 | Loss: 3.1024 | LR: 2.22e-04 | GradNorm: 2.272
  Batch   12/48 | Loss: 3.1212 | LR: 2.19e-04 | GradNorm: 4.331
  Batch   16/48 | Loss: 3.1673 | LR: 2.15e-04 | GradNorm: 3.015
  Batch   20/48 | Loss: 3.1951 | LR: 2.12e-04 | GradNorm: 6.844
  Batch   24/48 | Loss: 3.1704 | LR: 2.08e-04 | GradNorm: 3.496
  Batch   28/48 | Loss: 3.1159 | LR: 2.05e-04 | GradNorm: 3.046
  Batch   32/48 | Loss: 3.0518 | LR: 2.01e-04 | GradNorm: 2.734
  Batch   36/48 | Loss: 3.1133 | LR: 1.97e-04 | GradNorm: 1.353
  Batch   40/48 | Loss: 3.0911 | LR: 1.93e-04 | GradNorm: 2.766
  Batch   44/48 | Loss: 3.0449 | LR: 1.89e-04 | GradNorm: 3.605
Epoch 5/10: Train=21.15%, Val=13.37%, Gap=7.78%, LR=1.86e-04
  Batch    0/48 | Loss: 2.9871 | LR: 1.85e-04 | GradNorm: 2.975
  Batch    4/48 | Loss: 2.9412 | LR: 1.81e-04 | GradNorm: 3.074
  Batch    8/48 | Loss: 2.9796 | LR: 1.77e-04 | GradNorm: 4.837
  Batch   12/48 | Loss: 2.9789 | LR: 1.72e-04 | GradNorm: 3.780
  Batch   16/48 | Loss: 2.9338 | LR: 1.68e-04 | GradNorm: 2.403
  Batch   20/48 | Loss: 2.9459 | LR: 1.64e-04 | GradNorm: 4.105
  Batch   24/48 | Loss: 2.9113 | LR: 1.60e-04 | GradNorm: 3.713
  Batch   28/48 | Loss: 2.8704 | LR: 1.55e-04 | GradNorm: 2.841
  Batch   32/48 | Loss: 2.9300 | LR: 1.51e-04 | GradNorm: 8.134
  Batch   36/48 | Loss: 2.9244 | LR: 1.47e-04 | GradNorm: 4.570
  Batch   40/48 | Loss: 2.8972 | LR: 1.42e-04 | GradNorm: 3.281
  Batch   44/48 | Loss: 2.9627 | LR: 1.38e-04 | GradNorm: 2.228
Epoch 6/10: Train=26.59%, Val=14.79%, Gap=11.80%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8929 | LR: 1.33e-04 | GradNorm: 5.227
  Batch    4/48 | Loss: 2.8683 | LR: 1.29e-04 | GradNorm: 3.733
  Batch    8/48 | Loss: 2.8639 | LR: 1.25e-04 | GradNorm: 3.783
  Batch   12/48 | Loss: 2.7920 | LR: 1.20e-04 | GradNorm: 3.003
  Batch   16/48 | Loss: 2.8080 | LR: 1.16e-04 | GradNorm: 1.937
  Batch   20/48 | Loss: 2.8677 | LR: 1.12e-04 | GradNorm: 5.860
  Batch   24/48 | Loss: 2.8638 | LR: 1.07e-04 | GradNorm: 4.468
  Batch   28/48 | Loss: 2.8501 | LR: 1.03e-04 | GradNorm: 3.544
  Batch   32/48 | Loss: 2.8662 | LR: 9.87e-05 | GradNorm: 4.872
  Batch   36/48 | Loss: 2.8411 | LR: 9.45e-05 | GradNorm: 4.450
  Batch   40/48 | Loss: 2.8150 | LR: 9.03e-05 | GradNorm: 4.526
  Batch   44/48 | Loss: 2.8423 | LR: 8.61e-05 | GradNorm: 5.622
Epoch 7/10: Train=29.48%, Val=17.49%, Gap=11.99%, LR=8.31e-05
  Batch    0/48 | Loss: 2.8104 | LR: 8.21e-05 | GradNorm: 4.603
  Batch    4/48 | Loss: 2.7764 | LR: 7.80e-05 | GradNorm: 4.849
  Batch    8/48 | Loss: 2.8263 | LR: 7.41e-05 | GradNorm: 6.143
  Batch   12/48 | Loss: 2.8453 | LR: 7.02e-05 | GradNorm: 6.611
  Batch   16/48 | Loss: 2.8310 | LR: 6.64e-05 | GradNorm: 3.472
  Batch   20/48 | Loss: 2.7534 | LR: 6.26e-05 | GradNorm: 3.847
  Batch   24/48 | Loss: 2.7434 | LR: 5.89e-05 | GradNorm: 3.564
  Batch   28/48 | Loss: 2.7607 | LR: 5.53e-05 | GradNorm: 2.770
  Batch   32/48 | Loss: 2.7550 | LR: 5.18e-05 | GradNorm: 3.756
  Batch   36/48 | Loss: 2.7614 | LR: 4.84e-05 | GradNorm: 4.397
  Batch   40/48 | Loss: 2.6907 | LR: 4.51e-05 | GradNorm: 3.391
  Batch   44/48 | Loss: 2.7348 | LR: 4.18e-05 | GradNorm: 3.489
Epoch 8/10: Train=31.85%, Val=17.80%, Gap=14.05%, LR=3.95e-05
  Batch    0/48 | Loss: 2.7206 | LR: 3.87e-05 | GradNorm: 4.520
  Batch    4/48 | Loss: 2.6984 | LR: 3.57e-05 | GradNorm: 3.169
  Batch    8/48 | Loss: 2.7691 | LR: 3.27e-05 | GradNorm: 3.834
  Batch   12/48 | Loss: 2.6947 | LR: 2.99e-05 | GradNorm: 3.206
  Batch   16/48 | Loss: 2.6492 | LR: 2.72e-05 | GradNorm: 2.123
  Batch   20/48 | Loss: 2.6665 | LR: 2.46e-05 | GradNorm: 2.559
  Batch   24/48 | Loss: 2.6891 | LR: 2.21e-05 | GradNorm: 2.802
  Batch   28/48 | Loss: 2.7069 | LR: 1.98e-05 | GradNorm: 3.406
  Batch   32/48 | Loss: 2.6899 | LR: 1.76e-05 | GradNorm: 4.332
  Batch   36/48 | Loss: 2.6780 | LR: 1.55e-05 | GradNorm: 3.826
  Batch   40/48 | Loss: 2.6693 | LR: 1.35e-05 | GradNorm: 4.731
  Batch   44/48 | Loss: 2.6743 | LR: 1.16e-05 | GradNorm: 2.024
Epoch 9/10: Train=34.29%, Val=18.52%, Gap=15.77%, LR=1.03e-05
  Batch    0/48 | Loss: 2.6573 | LR: 9.92e-06 | GradNorm: 2.364
  Batch    4/48 | Loss: 2.6833 | LR: 8.33e-06 | GradNorm: 2.171
  Batch    8/48 | Loss: 2.6544 | LR: 6.88e-06 | GradNorm: 2.462
  Batch   12/48 | Loss: 2.6581 | LR: 5.57e-06 | GradNorm: 3.517
  Batch   16/48 | Loss: 2.6536 | LR: 4.40e-06 | GradNorm: 2.385
  Batch   20/48 | Loss: 2.6849 | LR: 3.37e-06 | GradNorm: 3.371
  Batch   24/48 | Loss: 2.6542 | LR: 2.47e-06 | GradNorm: 2.882
  Batch   28/48 | Loss: 2.7070 | LR: 1.72e-06 | GradNorm: 2.404
  Batch   32/48 | Loss: 2.7028 | LR: 1.11e-06 | GradNorm: 2.647
  Batch   36/48 | Loss: 2.6580 | LR: 6.44e-07 | GradNorm: 2.141
  Batch   40/48 | Loss: 2.6247 | LR: 3.20e-07 | GradNorm: 2.033
  Batch   44/48 | Loss: 2.6423 | LR: 1.40e-07 | GradNorm: 2.564
Epoch 10/10: Train=35.58%, Val=18.83%, Gap=16.75%, LR=1.00e-07
Best validation accuracy: 18.83%
