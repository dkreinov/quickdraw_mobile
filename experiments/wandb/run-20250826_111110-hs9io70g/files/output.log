=== W&B Sweep Run: LR=0.000175 ===
Using device: cuda
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.47s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00017455186733245486
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000175
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9417 | LR: 3.55e-06 | GradNorm: 1.391
  Batch    4/48 | Loss: 3.9252 | LR: 1.07e-05 | GradNorm: 0.983
  Batch    8/48 | Loss: 3.9238 | LR: 1.79e-05 | GradNorm: 0.952
  Batch   12/48 | Loss: 3.9164 | LR: 2.51e-05 | GradNorm: 0.838
  Batch   16/48 | Loss: 3.9199 | LR: 3.23e-05 | GradNorm: 0.703
  Batch   20/48 | Loss: 3.9155 | LR: 3.95e-05 | GradNorm: 0.726
  Batch   24/48 | Loss: 3.9113 | LR: 4.67e-05 | GradNorm: 0.694
  Batch   28/48 | Loss: 3.9164 | LR: 5.39e-05 | GradNorm: 0.643
  Batch   32/48 | Loss: 3.9120 | LR: 6.11e-05 | GradNorm: 0.605
  Batch   36/48 | Loss: 3.9111 | LR: 6.83e-05 | GradNorm: 0.586
  Batch   40/48 | Loss: 3.9069 | LR: 7.55e-05 | GradNorm: 0.615
  Batch   44/48 | Loss: 3.9038 | LR: 8.27e-05 | GradNorm: 0.670
Epoch 1/10: Train=2.26%, Val=3.23%, Gap=-0.97%, LR=8.81e-05
  Batch    0/48 | Loss: 3.8935 | LR: 8.99e-05 | GradNorm: 0.741
  Batch    4/48 | Loss: 3.8607 | LR: 9.71e-05 | GradNorm: 1.217
  Batch    8/48 | Loss: 3.8228 | LR: 1.04e-04 | GradNorm: 2.471
  Batch   12/48 | Loss: 3.8947 | LR: 1.12e-04 | GradNorm: 11.017
  Batch   16/48 | Loss: 3.9491 | LR: 1.19e-04 | GradNorm: 8.667
  Batch   20/48 | Loss: 3.9835 | LR: 1.26e-04 | GradNorm: 3.753
  Batch   24/48 | Loss: 3.9622 | LR: 1.33e-04 | GradNorm: 4.359
  Batch   28/48 | Loss: 3.8168 | LR: 1.40e-04 | GradNorm: 3.389
  Batch   32/48 | Loss: 3.7920 | LR: 1.48e-04 | GradNorm: 2.660
  Batch   36/48 | Loss: 3.7789 | LR: 1.55e-04 | GradNorm: 3.195
  Batch   40/48 | Loss: 3.8427 | LR: 1.62e-04 | GradNorm: 5.206
  Batch   44/48 | Loss: 3.7560 | LR: 1.69e-04 | GradNorm: 4.496
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.65%, Val=5.33%, Gap=-0.68%, LR=1.75e-04
  Batch    0/48 | Loss: 3.6938 | LR: 1.75e-04 | GradNorm: 2.074
  Batch    4/48 | Loss: 3.6815 | LR: 1.74e-04 | GradNorm: 3.652
  Batch    8/48 | Loss: 3.6321 | LR: 1.74e-04 | GradNorm: 3.114
  Batch   12/48 | Loss: 3.6847 | LR: 1.74e-04 | GradNorm: 4.370
  Batch   16/48 | Loss: 3.6509 | LR: 1.74e-04 | GradNorm: 3.238
  Batch   20/48 | Loss: 3.6081 | LR: 1.73e-04 | GradNorm: 3.698
  Batch   24/48 | Loss: 3.5795 | LR: 1.73e-04 | GradNorm: 4.885
  Batch   28/48 | Loss: 3.5060 | LR: 1.72e-04 | GradNorm: 2.693
  Batch   32/48 | Loss: 3.5444 | LR: 1.71e-04 | GradNorm: 4.803
  Batch   36/48 | Loss: 3.5635 | LR: 1.71e-04 | GradNorm: 4.913
  Batch   40/48 | Loss: 3.4892 | LR: 1.70e-04 | GradNorm: 3.445
  Batch   44/48 | Loss: 3.4373 | LR: 1.69e-04 | GradNorm: 2.304
Epoch 3/10: Train=9.63%, Val=11.92%, Gap=-2.29%, LR=1.68e-04
  Batch    0/48 | Loss: 3.4285 | LR: 1.68e-04 | GradNorm: 4.474
  Batch    4/48 | Loss: 3.4331 | LR: 1.66e-04 | GradNorm: 5.493
  Batch    8/48 | Loss: 3.4509 | LR: 1.65e-04 | GradNorm: 8.922
  Batch   12/48 | Loss: 3.3612 | LR: 1.64e-04 | GradNorm: 3.632
  Batch   16/48 | Loss: 3.3741 | LR: 1.63e-04 | GradNorm: 4.243
  Batch   20/48 | Loss: 3.3595 | LR: 1.61e-04 | GradNorm: 6.083
  Batch   24/48 | Loss: 3.3340 | LR: 1.59e-04 | GradNorm: 4.763
  Batch   28/48 | Loss: 3.2871 | LR: 1.58e-04 | GradNorm: 2.148
  Batch   32/48 | Loss: 3.2953 | LR: 1.56e-04 | GradNorm: 1.495
  Batch   36/48 | Loss: 3.2933 | LR: 1.54e-04 | GradNorm: 3.230
  Batch   40/48 | Loss: 3.3116 | LR: 1.52e-04 | GradNorm: 4.854
  Batch   44/48 | Loss: 3.2425 | LR: 1.50e-04 | GradNorm: 1.898
Epoch 4/10: Train=15.21%, Val=13.29%, Gap=1.92%, LR=1.49e-04
  Batch    0/48 | Loss: 3.2589 | LR: 1.48e-04 | GradNorm: 5.491
  Batch    4/48 | Loss: 3.2424 | LR: 1.46e-04 | GradNorm: 6.551
  Batch    8/48 | Loss: 3.1946 | LR: 1.44e-04 | GradNorm: 2.913
  Batch   12/48 | Loss: 3.1963 | LR: 1.42e-04 | GradNorm: 5.188
  Batch   16/48 | Loss: 3.2676 | LR: 1.40e-04 | GradNorm: 5.641
  Batch   20/48 | Loss: 3.1962 | LR: 1.38e-04 | GradNorm: 2.720
  Batch   24/48 | Loss: 3.2048 | LR: 1.35e-04 | GradNorm: 4.488
  Batch   28/48 | Loss: 3.1748 | LR: 1.33e-04 | GradNorm: 2.973
  Batch   32/48 | Loss: 3.1723 | LR: 1.30e-04 | GradNorm: 4.800
  Batch   36/48 | Loss: 3.2129 | LR: 1.28e-04 | GradNorm: 3.103
  Batch   40/48 | Loss: 3.1749 | LR: 1.25e-04 | GradNorm: 2.978
  Batch   44/48 | Loss: 3.1617 | LR: 1.23e-04 | GradNorm: 4.662
Epoch 5/10: Train=19.40%, Val=15.21%, Gap=4.19%, LR=1.21e-04
  Batch    0/48 | Loss: 3.1006 | LR: 1.20e-04 | GradNorm: 3.883
  Batch    4/48 | Loss: 3.0925 | LR: 1.17e-04 | GradNorm: 6.231
  Batch    8/48 | Loss: 3.0893 | LR: 1.15e-04 | GradNorm: 5.130
  Batch   12/48 | Loss: 3.0674 | LR: 1.12e-04 | GradNorm: 3.205
  Batch   16/48 | Loss: 3.0538 | LR: 1.09e-04 | GradNorm: 3.780
  Batch   20/48 | Loss: 3.0620 | LR: 1.06e-04 | GradNorm: 4.917
  Batch   24/48 | Loss: 3.0553 | LR: 1.04e-04 | GradNorm: 8.034
  Batch   28/48 | Loss: 2.9902 | LR: 1.01e-04 | GradNorm: 2.604
  Batch   32/48 | Loss: 3.0101 | LR: 9.80e-05 | GradNorm: 5.355
  Batch   36/48 | Loss: 3.0526 | LR: 9.52e-05 | GradNorm: 7.068
  Batch   40/48 | Loss: 3.0173 | LR: 9.23e-05 | GradNorm: 4.457
  Batch   44/48 | Loss: 3.0858 | LR: 8.95e-05 | GradNorm: 6.360
Epoch 6/10: Train=23.45%, Val=16.18%, Gap=7.27%, LR=8.73e-05
  Batch    0/48 | Loss: 2.9962 | LR: 8.66e-05 | GradNorm: 5.327
  Batch    4/48 | Loss: 3.0071 | LR: 8.38e-05 | GradNorm: 7.994
  Batch    8/48 | Loss: 2.9838 | LR: 8.09e-05 | GradNorm: 5.418
  Batch   12/48 | Loss: 2.9143 | LR: 7.81e-05 | GradNorm: 4.604
  Batch   16/48 | Loss: 2.9428 | LR: 7.52e-05 | GradNorm: 8.890
  Batch   20/48 | Loss: 3.0158 | LR: 7.24e-05 | GradNorm: 10.014
  Batch   24/48 | Loss: 2.9828 | LR: 6.96e-05 | GradNorm: 4.526
  Batch   28/48 | Loss: 2.9742 | LR: 6.68e-05 | GradNorm: 5.410
  Batch   32/48 | Loss: 2.9809 | LR: 6.41e-05 | GradNorm: 4.483
  Batch   36/48 | Loss: 2.9871 | LR: 6.13e-05 | GradNorm: 4.954
  Batch   40/48 | Loss: 2.9465 | LR: 5.86e-05 | GradNorm: 4.346
  Batch   44/48 | Loss: 2.9521 | LR: 5.59e-05 | GradNorm: 5.555
Epoch 7/10: Train=26.78%, Val=16.48%, Gap=10.30%, LR=5.39e-05
  Batch    0/48 | Loss: 2.9181 | LR: 5.33e-05 | GradNorm: 5.279
  Batch    4/48 | Loss: 2.8797 | LR: 5.07e-05 | GradNorm: 6.401
  Batch    8/48 | Loss: 2.9014 | LR: 4.81e-05 | GradNorm: 5.549
  Batch   12/48 | Loss: 2.9613 | LR: 4.56e-05 | GradNorm: 5.838
  Batch   16/48 | Loss: 2.9562 | LR: 4.31e-05 | GradNorm: 4.756
  Batch   20/48 | Loss: 2.8681 | LR: 4.07e-05 | GradNorm: 5.339
  Batch   24/48 | Loss: 2.8720 | LR: 3.83e-05 | GradNorm: 3.949
  Batch   28/48 | Loss: 2.8980 | LR: 3.59e-05 | GradNorm: 3.324
  Batch   32/48 | Loss: 2.8954 | LR: 3.37e-05 | GradNorm: 6.096
  Batch   36/48 | Loss: 2.8781 | LR: 3.14e-05 | GradNorm: 3.806
  Batch   40/48 | Loss: 2.8274 | LR: 2.93e-05 | GradNorm: 8.307
  Batch   44/48 | Loss: 2.8728 | LR: 2.72e-05 | GradNorm: 2.801
Epoch 8/10: Train=29.06%, Val=18.56%, Gap=10.50%, LR=2.56e-05
  Batch    0/48 | Loss: 2.8380 | LR: 2.51e-05 | GradNorm: 5.328
  Batch    4/48 | Loss: 2.8391 | LR: 2.32e-05 | GradNorm: 6.025
  Batch    8/48 | Loss: 2.8921 | LR: 2.13e-05 | GradNorm: 3.137
  Batch   12/48 | Loss: 2.8439 | LR: 1.94e-05 | GradNorm: 3.748
  Batch   16/48 | Loss: 2.7832 | LR: 1.77e-05 | GradNorm: 4.118
  Batch   20/48 | Loss: 2.7964 | LR: 1.60e-05 | GradNorm: 2.738
  Batch   24/48 | Loss: 2.8356 | LR: 1.44e-05 | GradNorm: 3.241
  Batch   28/48 | Loss: 2.8340 | LR: 1.29e-05 | GradNorm: 3.943
  Batch   32/48 | Loss: 2.8149 | LR: 1.14e-05 | GradNorm: 4.516
  Batch   36/48 | Loss: 2.8116 | LR: 1.01e-05 | GradNorm: 6.107
  Batch   40/48 | Loss: 2.8096 | LR: 8.78e-06 | GradNorm: 6.397
  Batch   44/48 | Loss: 2.8205 | LR: 7.58e-06 | GradNorm: 3.900
Epoch 9/10: Train=31.04%, Val=18.40%, Gap=12.64%, LR=6.74e-06
  Batch    0/48 | Loss: 2.8251 | LR: 6.47e-06 | GradNorm: 3.576
  Batch    4/48 | Loss: 2.8233 | LR: 5.44e-06 | GradNorm: 4.893
  Batch    8/48 | Loss: 2.7956 | LR: 4.50e-06 | GradNorm: 1.611
  Batch   12/48 | Loss: 2.8047 | LR: 3.65e-06 | GradNorm: 3.642
  Batch   16/48 | Loss: 2.8016 | LR: 2.89e-06 | GradNorm: 2.674
  Batch   20/48 | Loss: 2.8107 | LR: 2.22e-06 | GradNorm: 3.941
  Batch   24/48 | Loss: 2.7819 | LR: 1.64e-06 | GradNorm: 2.851
  Batch   28/48 | Loss: 2.8214 | LR: 1.15e-06 | GradNorm: 2.806
  Batch   32/48 | Loss: 2.8335 | LR: 7.56e-07 | GradNorm: 2.892
  Batch   36/48 | Loss: 2.7979 | LR: 4.53e-07 | GradNorm: 1.867
  Batch   40/48 | Loss: 2.7949 | LR: 2.43e-07 | GradNorm: 3.259
  Batch   44/48 | Loss: 2.7921 | LR: 1.26e-07 | GradNorm: 2.900
Epoch 10/10: Train=31.91%, Val=19.01%, Gap=12.90%, LR=1.00e-07
Best validation accuracy: 19.01%
