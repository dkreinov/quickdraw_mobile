=== W&B Sweep Run: LR=0.000730 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000730017607929716
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000730
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9374 | LR: 1.48e-05 | GradNorm: 1.607
  Batch    4/48 | Loss: 3.9263 | LR: 4.49e-05 | GradNorm: 1.013
  Batch    8/48 | Loss: 3.9294 | LR: 7.51e-05 | GradNorm: 0.768
  Batch   12/48 | Loss: 3.9171 | LR: 1.05e-04 | GradNorm: 0.589
  Batch   16/48 | Loss: 3.9178 | LR: 1.35e-04 | GradNorm: 0.493
  Batch   20/48 | Loss: 3.9194 | LR: 1.65e-04 | GradNorm: 0.574
  Batch   24/48 | Loss: 3.9130 | LR: 1.96e-04 | GradNorm: 0.542
  Batch   28/48 | Loss: 3.9137 | LR: 2.26e-04 | GradNorm: 0.495
  Batch   32/48 | Loss: 3.9030 | LR: 2.56e-04 | GradNorm: 0.470
  Batch   36/48 | Loss: 3.8790 | LR: 2.86e-04 | GradNorm: 0.514
  Batch   40/48 | Loss: 3.8678 | LR: 3.16e-04 | GradNorm: 3.133
  Batch   44/48 | Loss: 3.8178 | LR: 3.46e-04 | GradNorm: 2.032
Epoch 1/10: Train=2.73%, Val=7.01%, Gap=-4.28%, LR=3.69e-04
  Batch    0/48 | Loss: 3.8427 | LR: 3.76e-04 | GradNorm: 1.340
  Batch    4/48 | Loss: 3.8337 | LR: 4.06e-04 | GradNorm: 0.938
  Batch    8/48 | Loss: 3.8200 | LR: 4.36e-04 | GradNorm: 1.015
  Batch   12/48 | Loss: 3.7497 | LR: 4.67e-04 | GradNorm: 0.762
  Batch   16/48 | Loss: 3.7463 | LR: 4.97e-04 | GradNorm: 0.494
  Batch   20/48 | Loss: 3.7360 | LR: 5.27e-04 | GradNorm: 2.157
  Batch   24/48 | Loss: 3.6685 | LR: 5.57e-04 | GradNorm: 5.564
  Batch   28/48 | Loss: 3.7280 | LR: 5.87e-04 | GradNorm: 4.835
  Batch   32/48 | Loss: 4.0305 | LR: 6.17e-04 | GradNorm: 3.711
  Batch   36/48 | Loss: 3.7148 | LR: 6.47e-04 | GradNorm: 3.790
  Batch   40/48 | Loss: 3.5999 | LR: 6.77e-04 | GradNorm: 1.524
  Batch   44/48 | Loss: 3.5970 | LR: 7.07e-04 | GradNorm: 2.078
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.17%, Val=5.94%, Gap=0.23%, LR=7.30e-04
  Batch    0/48 | Loss: 4.0368 | LR: 7.30e-04 | GradNorm: 11.957
  Batch    4/48 | Loss: 3.6176 | LR: 7.30e-04 | GradNorm: 2.174
  Batch    8/48 | Loss: 3.5481 | LR: 7.29e-04 | GradNorm: 2.002
  Batch   12/48 | Loss: 3.5650 | LR: 7.28e-04 | GradNorm: 3.230
  Batch   16/48 | Loss: 3.4954 | LR: 7.26e-04 | GradNorm: 2.362
  Batch   20/48 | Loss: 3.4947 | LR: 7.25e-04 | GradNorm: 4.422
  Batch   24/48 | Loss: 3.4510 | LR: 7.22e-04 | GradNorm: 2.368
  Batch   28/48 | Loss: 3.4691 | LR: 7.20e-04 | GradNorm: 6.626
  Batch   32/48 | Loss: 3.4843 | LR: 7.17e-04 | GradNorm: 3.252
  Batch   36/48 | Loss: 3.3731 | LR: 7.13e-04 | GradNorm: 1.471
  Batch   40/48 | Loss: 3.5799 | LR: 7.10e-04 | GradNorm: 21.747
  Batch   44/48 | Loss: 3.3959 | LR: 7.06e-04 | GradNorm: 1.805
Epoch 3/10: Train=11.43%, Val=13.57%, Gap=-2.14%, LR=7.02e-04
  Batch    0/48 | Loss: 3.3066 | LR: 7.01e-04 | GradNorm: 1.378
  Batch    4/48 | Loss: 3.2873 | LR: 6.96e-04 | GradNorm: 0.899
  Batch    8/48 | Loss: 3.2807 | LR: 6.91e-04 | GradNorm: 1.952
  Batch   12/48 | Loss: 3.2732 | LR: 6.86e-04 | GradNorm: 2.555
  Batch   16/48 | Loss: 3.2833 | LR: 6.80e-04 | GradNorm: 2.657
  Batch   20/48 | Loss: 3.2256 | LR: 6.73e-04 | GradNorm: 2.328
  Batch   24/48 | Loss: 3.3299 | LR: 6.67e-04 | GradNorm: 4.941
  Batch   28/48 | Loss: 3.1568 | LR: 6.60e-04 | GradNorm: 1.271
  Batch   32/48 | Loss: 3.1885 | LR: 6.53e-04 | GradNorm: 0.999
  Batch   36/48 | Loss: 3.1806 | LR: 6.45e-04 | GradNorm: 2.871
  Batch   40/48 | Loss: 3.2656 | LR: 6.37e-04 | GradNorm: 3.081
  Batch   44/48 | Loss: 3.1844 | LR: 6.29e-04 | GradNorm: 3.120
Epoch 4/10: Train=16.67%, Val=13.98%, Gap=2.69%, LR=6.23e-04
  Batch    0/48 | Loss: 3.1366 | LR: 6.21e-04 | GradNorm: 2.568
  Batch    4/48 | Loss: 3.1930 | LR: 6.12e-04 | GradNorm: 5.453
  Batch    8/48 | Loss: 3.1357 | LR: 6.03e-04 | GradNorm: 1.860
  Batch   12/48 | Loss: 3.0902 | LR: 5.94e-04 | GradNorm: 1.367
  Batch   16/48 | Loss: 3.1150 | LR: 5.85e-04 | GradNorm: 1.693
  Batch   20/48 | Loss: 3.0776 | LR: 5.75e-04 | GradNorm: 2.878
  Batch   24/48 | Loss: 3.1124 | LR: 5.65e-04 | GradNorm: 2.077
  Batch   28/48 | Loss: 3.0926 | LR: 5.55e-04 | GradNorm: 2.964
  Batch   32/48 | Loss: 3.0412 | LR: 5.45e-04 | GradNorm: 1.924
  Batch   36/48 | Loss: 3.1079 | LR: 5.34e-04 | GradNorm: 2.072
  Batch   40/48 | Loss: 3.0588 | LR: 5.24e-04 | GradNorm: 1.370
  Batch   44/48 | Loss: 3.0239 | LR: 5.13e-04 | GradNorm: 1.775
Epoch 5/10: Train=21.69%, Val=12.57%, Gap=9.12%, LR=5.05e-04
  Batch    0/48 | Loss: 2.9466 | LR: 5.02e-04 | GradNorm: 2.123
  Batch    4/48 | Loss: 3.0342 | LR: 4.91e-04 | GradNorm: 3.738
  Batch    8/48 | Loss: 3.0050 | LR: 4.80e-04 | GradNorm: 3.908
  Batch   12/48 | Loss: 2.9782 | LR: 4.68e-04 | GradNorm: 2.537
  Batch   16/48 | Loss: 2.9020 | LR: 4.57e-04 | GradNorm: 2.120
  Batch   20/48 | Loss: 2.9404 | LR: 4.45e-04 | GradNorm: 2.785
  Batch   24/48 | Loss: 2.9396 | LR: 4.33e-04 | GradNorm: 2.562
  Batch   28/48 | Loss: 2.8764 | LR: 4.22e-04 | GradNorm: 3.510
  Batch   32/48 | Loss: 2.8546 | LR: 4.10e-04 | GradNorm: 3.008
  Batch   36/48 | Loss: 2.8906 | LR: 3.98e-04 | GradNorm: 3.079
  Batch   40/48 | Loss: 2.8899 | LR: 3.86e-04 | GradNorm: 3.499
  Batch   44/48 | Loss: 2.9436 | LR: 3.74e-04 | GradNorm: 3.759
Epoch 6/10: Train=26.03%, Val=15.86%, Gap=10.17%, LR=3.65e-04
  Batch    0/48 | Loss: 2.8484 | LR: 3.62e-04 | GradNorm: 2.111
  Batch    4/48 | Loss: 2.8096 | LR: 3.50e-04 | GradNorm: 2.967
  Batch    8/48 | Loss: 2.7999 | LR: 3.38e-04 | GradNorm: 1.972
  Batch   12/48 | Loss: 2.6995 | LR: 3.26e-04 | GradNorm: 2.246
  Batch   16/48 | Loss: 2.7282 | LR: 3.14e-04 | GradNorm: 2.254
  Batch   20/48 | Loss: 2.7547 | LR: 3.03e-04 | GradNorm: 3.416
  Batch   24/48 | Loss: 2.7954 | LR: 2.91e-04 | GradNorm: 2.572
  Batch   28/48 | Loss: 2.7812 | LR: 2.79e-04 | GradNorm: 3.495
  Batch   32/48 | Loss: 2.7505 | LR: 2.68e-04 | GradNorm: 3.080
  Batch   36/48 | Loss: 2.7405 | LR: 2.56e-04 | GradNorm: 2.092
  Batch   40/48 | Loss: 2.7415 | LR: 2.45e-04 | GradNorm: 3.869
  Batch   44/48 | Loss: 2.7099 | LR: 2.34e-04 | GradNorm: 2.596
Epoch 7/10: Train=31.64%, Val=19.14%, Gap=12.50%, LR=2.25e-04
  Batch    0/48 | Loss: 2.7046 | LR: 2.23e-04 | GradNorm: 3.404
  Batch    4/48 | Loss: 2.6496 | LR: 2.12e-04 | GradNorm: 1.987
  Batch    8/48 | Loss: 2.6613 | LR: 2.01e-04 | GradNorm: 3.291
  Batch   12/48 | Loss: 2.7156 | LR: 1.90e-04 | GradNorm: 5.634
  Batch   16/48 | Loss: 2.7068 | LR: 1.80e-04 | GradNorm: 4.280
  Batch   20/48 | Loss: 2.6110 | LR: 1.70e-04 | GradNorm: 2.004
  Batch   24/48 | Loss: 2.6350 | LR: 1.60e-04 | GradNorm: 4.106
  Batch   28/48 | Loss: 2.6769 | LR: 1.50e-04 | GradNorm: 6.619
  Batch   32/48 | Loss: 2.6527 | LR: 1.41e-04 | GradNorm: 3.569
  Batch   36/48 | Loss: 2.6284 | LR: 1.31e-04 | GradNorm: 2.966
  Batch   40/48 | Loss: 2.5715 | LR: 1.22e-04 | GradNorm: 4.621
  Batch   44/48 | Loss: 2.6293 | LR: 1.13e-04 | GradNorm: 1.509
Epoch 8/10: Train=34.72%, Val=20.47%, Gap=14.25%, LR=1.07e-04
  Batch    0/48 | Loss: 2.5863 | LR: 1.05e-04 | GradNorm: 2.568
  Batch    4/48 | Loss: 2.5816 | LR: 9.67e-05 | GradNorm: 3.226
  Batch    8/48 | Loss: 2.6407 | LR: 8.87e-05 | GradNorm: 2.967
  Batch   12/48 | Loss: 2.5526 | LR: 8.11e-05 | GradNorm: 1.949
  Batch   16/48 | Loss: 2.5140 | LR: 7.37e-05 | GradNorm: 2.275
  Batch   20/48 | Loss: 2.5449 | LR: 6.67e-05 | GradNorm: 3.318
  Batch   24/48 | Loss: 2.5926 | LR: 6.00e-05 | GradNorm: 4.008
  Batch   28/48 | Loss: 2.5932 | LR: 5.36e-05 | GradNorm: 3.082
  Batch   32/48 | Loss: 2.5730 | LR: 4.75e-05 | GradNorm: 4.137
  Batch   36/48 | Loss: 2.5539 | LR: 4.18e-05 | GradNorm: 2.701
  Batch   40/48 | Loss: 2.5394 | LR: 3.64e-05 | GradNorm: 2.367
  Batch   44/48 | Loss: 2.5644 | LR: 3.14e-05 | GradNorm: 1.935
Epoch 9/10: Train=37.53%, Val=21.78%, Gap=15.75%, LR=2.79e-05
  Batch    0/48 | Loss: 2.5671 | LR: 2.67e-05 | GradNorm: 3.198
  Batch    4/48 | Loss: 2.5302 | LR: 2.25e-05 | GradNorm: 2.335
  Batch    8/48 | Loss: 2.5091 | LR: 1.85e-05 | GradNorm: 1.838
  Batch   12/48 | Loss: 2.5166 | LR: 1.50e-05 | GradNorm: 2.179
  Batch   16/48 | Loss: 2.5313 | LR: 1.18e-05 | GradNorm: 1.759
  Batch   20/48 | Loss: 2.5547 | LR: 8.97e-06 | GradNorm: 1.885
  Batch   24/48 | Loss: 2.5418 | LR: 6.54e-06 | GradNorm: 1.490
  Batch   28/48 | Loss: 2.5505 | LR: 4.50e-06 | GradNorm: 1.246
  Batch   32/48 | Loss: 2.5528 | LR: 2.84e-06 | GradNorm: 1.310
  Batch   36/48 | Loss: 2.5024 | LR: 1.58e-06 | GradNorm: 1.265
  Batch   40/48 | Loss: 2.5019 | LR: 6.98e-07 | GradNorm: 1.237
  Batch   44/48 | Loss: 2.5174 | LR: 2.10e-07 | GradNorm: 1.349
Epoch 10/10: Train=38.92%, Val=22.03%, Gap=16.89%, LR=1.00e-07
Best validation accuracy: 22.03%
