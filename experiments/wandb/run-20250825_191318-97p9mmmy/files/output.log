=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004471130172332608
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9596 | LR: 9.08e-06 | GradNorm: 1.469
  Batch    4/48 | Loss: 3.9246 | LR: 2.75e-05 | GradNorm: 0.895
  Batch    8/48 | Loss: 3.9182 | LR: 4.60e-05 | GradNorm: 0.732
  Batch   12/48 | Loss: 3.9102 | LR: 6.44e-05 | GradNorm: 0.619
  Batch   16/48 | Loss: 3.9189 | LR: 8.29e-05 | GradNorm: 0.637
  Batch   20/48 | Loss: 3.9171 | LR: 1.01e-04 | GradNorm: 0.649
  Batch   24/48 | Loss: 3.9109 | LR: 1.20e-04 | GradNorm: 0.598
  Batch   28/48 | Loss: 3.9117 | LR: 1.38e-04 | GradNorm: 0.531
  Batch   32/48 | Loss: 3.9036 | LR: 1.57e-04 | GradNorm: 0.534
  Batch   36/48 | Loss: 3.8931 | LR: 1.75e-04 | GradNorm: 0.592
  Batch   40/48 | Loss: 3.8430 | LR: 1.94e-04 | GradNorm: 0.716
  Batch   44/48 | Loss: 3.9369 | LR: 2.12e-04 | GradNorm: 4.897
Epoch 1/10: Train=2.70%, Val=2.85%, Gap=-0.15%, LR=2.26e-04
  Batch    0/48 | Loss: 3.9110 | LR: 2.30e-04 | GradNorm: 4.013
  Batch    4/48 | Loss: 3.8010 | LR: 2.49e-04 | GradNorm: 2.042
  Batch    8/48 | Loss: 3.8239 | LR: 2.67e-04 | GradNorm: 3.418
  Batch   12/48 | Loss: 3.8709 | LR: 2.86e-04 | GradNorm: 3.330
  Batch   16/48 | Loss: 3.7664 | LR: 3.04e-04 | GradNorm: 1.667
  Batch   20/48 | Loss: 3.7288 | LR: 3.23e-04 | GradNorm: 1.728
  Batch   24/48 | Loss: 3.7147 | LR: 3.41e-04 | GradNorm: 4.332
  Batch   28/48 | Loss: 3.6531 | LR: 3.60e-04 | GradNorm: 1.370
  Batch   32/48 | Loss: 3.6886 | LR: 3.78e-04 | GradNorm: 4.144
  Batch   36/48 | Loss: 3.6493 | LR: 3.96e-04 | GradNorm: 2.932
  Batch   40/48 | Loss: 3.8931 | LR: 4.15e-04 | GradNorm: 5.209
  Batch   44/48 | Loss: 3.7280 | LR: 4.33e-04 | GradNorm: 2.100
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.85%, Val=4.83%, Gap=1.02%, LR=4.47e-04
  Batch    0/48 | Loss: 3.6891 | LR: 4.47e-04 | GradNorm: 1.770
  Batch    4/48 | Loss: 3.6020 | LR: 4.47e-04 | GradNorm: 1.213
  Batch    8/48 | Loss: 3.6029 | LR: 4.47e-04 | GradNorm: 2.529
  Batch   12/48 | Loss: 3.6174 | LR: 4.46e-04 | GradNorm: 3.952
  Batch   16/48 | Loss: 3.6045 | LR: 4.45e-04 | GradNorm: 1.546
  Batch   20/48 | Loss: 3.6196 | LR: 4.44e-04 | GradNorm: 2.858
  Batch   24/48 | Loss: 3.5398 | LR: 4.42e-04 | GradNorm: 2.981
  Batch   28/48 | Loss: 3.4482 | LR: 4.41e-04 | GradNorm: 1.241
  Batch   32/48 | Loss: 3.5243 | LR: 4.39e-04 | GradNorm: 6.718
  Batch   36/48 | Loss: 3.4880 | LR: 4.37e-04 | GradNorm: 1.228
  Batch   40/48 | Loss: 3.4005 | LR: 4.35e-04 | GradNorm: 1.920
  Batch   44/48 | Loss: 3.3702 | LR: 4.32e-04 | GradNorm: 1.020
Epoch 3/10: Train=10.71%, Val=10.55%, Gap=0.16%, LR=4.30e-04
  Batch    0/48 | Loss: 3.3411 | LR: 4.29e-04 | GradNorm: 2.080
  Batch    4/48 | Loss: 3.4655 | LR: 4.26e-04 | GradNorm: 18.413
  Batch    8/48 | Loss: 3.3107 | LR: 4.23e-04 | GradNorm: 1.724
  Batch   12/48 | Loss: 3.2900 | LR: 4.20e-04 | GradNorm: 2.660
  Batch   16/48 | Loss: 3.2297 | LR: 4.16e-04 | GradNorm: 1.003
  Batch   20/48 | Loss: 3.3704 | LR: 4.12e-04 | GradNorm: 5.535
  Batch   24/48 | Loss: 3.2560 | LR: 4.08e-04 | GradNorm: 1.564
  Batch   28/48 | Loss: 3.2770 | LR: 4.04e-04 | GradNorm: 4.525
  Batch   32/48 | Loss: 3.2586 | LR: 4.00e-04 | GradNorm: 1.180
  Batch   36/48 | Loss: 3.2893 | LR: 3.95e-04 | GradNorm: 4.102
  Batch   40/48 | Loss: 3.2117 | LR: 3.90e-04 | GradNorm: 0.962
  Batch   44/48 | Loss: 3.1852 | LR: 3.85e-04 | GradNorm: 1.622
Epoch 4/10: Train=16.06%, Val=11.27%, Gap=4.79%, LR=3.82e-04
  Batch    0/48 | Loss: 3.2148 | LR: 3.80e-04 | GradNorm: 3.969
  Batch    4/48 | Loss: 3.1790 | LR: 3.75e-04 | GradNorm: 3.593
  Batch    8/48 | Loss: 3.1413 | LR: 3.70e-04 | GradNorm: 1.466
  Batch   12/48 | Loss: 3.1218 | LR: 3.64e-04 | GradNorm: 1.900
  Batch   16/48 | Loss: 3.1638 | LR: 3.58e-04 | GradNorm: 1.702
  Batch   20/48 | Loss: 3.1262 | LR: 3.52e-04 | GradNorm: 2.499
  Batch   24/48 | Loss: 3.1713 | LR: 3.46e-04 | GradNorm: 2.613
  Batch   28/48 | Loss: 3.1166 | LR: 3.40e-04 | GradNorm: 1.621
  Batch   32/48 | Loss: 3.1144 | LR: 3.34e-04 | GradNorm: 2.950
  Batch   36/48 | Loss: 3.1346 | LR: 3.27e-04 | GradNorm: 1.632
  Batch   40/48 | Loss: 3.1459 | LR: 3.21e-04 | GradNorm: 1.960
  Batch   44/48 | Loss: 3.1160 | LR: 3.14e-04 | GradNorm: 2.609
Epoch 5/10: Train=19.90%, Val=11.62%, Gap=8.28%, LR=3.09e-04
  Batch    0/48 | Loss: 3.0783 | LR: 3.07e-04 | GradNorm: 3.289
  Batch    4/48 | Loss: 3.0895 | LR: 3.01e-04 | GradNorm: 5.050
  Batch    8/48 | Loss: 3.0710 | LR: 2.94e-04 | GradNorm: 3.432
  Batch   12/48 | Loss: 3.0373 | LR: 2.87e-04 | GradNorm: 2.241
  Batch   16/48 | Loss: 3.0461 | LR: 2.80e-04 | GradNorm: 3.866
  Batch   20/48 | Loss: 3.0606 | LR: 2.73e-04 | GradNorm: 4.698
  Batch   24/48 | Loss: 3.0202 | LR: 2.65e-04 | GradNorm: 2.870
  Batch   28/48 | Loss: 2.9699 | LR: 2.58e-04 | GradNorm: 1.827
  Batch   32/48 | Loss: 2.9572 | LR: 2.51e-04 | GradNorm: 1.557
  Batch   36/48 | Loss: 3.0624 | LR: 2.44e-04 | GradNorm: 3.954
  Batch   40/48 | Loss: 3.0126 | LR: 2.36e-04 | GradNorm: 3.002
  Batch   44/48 | Loss: 3.0760 | LR: 2.29e-04 | GradNorm: 4.300
Epoch 6/10: Train=22.67%, Val=13.84%, Gap=8.83%, LR=2.24e-04
  Batch    0/48 | Loss: 2.9516 | LR: 2.22e-04 | GradNorm: 2.062
  Batch    4/48 | Loss: 2.9565 | LR: 2.14e-04 | GradNorm: 3.448
  Batch    8/48 | Loss: 2.9180 | LR: 2.07e-04 | GradNorm: 1.533
  Batch   12/48 | Loss: 2.8974 | LR: 2.00e-04 | GradNorm: 3.514
  Batch   16/48 | Loss: 2.9088 | LR: 1.93e-04 | GradNorm: 3.500
  Batch   20/48 | Loss: 3.0249 | LR: 1.85e-04 | GradNorm: 9.420
  Batch   24/48 | Loss: 2.9477 | LR: 1.78e-04 | GradNorm: 2.392
  Batch   28/48 | Loss: 2.9366 | LR: 1.71e-04 | GradNorm: 3.400
  Batch   32/48 | Loss: 2.9469 | LR: 1.64e-04 | GradNorm: 1.924
  Batch   36/48 | Loss: 2.9309 | LR: 1.57e-04 | GradNorm: 3.151
  Batch   40/48 | Loss: 2.9166 | LR: 1.50e-04 | GradNorm: 2.880
  Batch   44/48 | Loss: 2.9156 | LR: 1.43e-04 | GradNorm: 4.152
Epoch 7/10: Train=26.78%, Val=16.72%, Gap=10.06%, LR=1.38e-04
  Batch    0/48 | Loss: 2.8691 | LR: 1.36e-04 | GradNorm: 2.181
  Batch    4/48 | Loss: 2.7898 | LR: 1.30e-04 | GradNorm: 2.706
  Batch    8/48 | Loss: 2.8252 | LR: 1.23e-04 | GradNorm: 3.278
  Batch   12/48 | Loss: 2.8518 | LR: 1.17e-04 | GradNorm: 1.459
  Batch   16/48 | Loss: 2.8721 | LR: 1.10e-04 | GradNorm: 4.395
  Batch   20/48 | Loss: 2.7811 | LR: 1.04e-04 | GradNorm: 2.460
  Batch   24/48 | Loss: 2.7799 | LR: 9.79e-05 | GradNorm: 3.547
  Batch   28/48 | Loss: 2.8051 | LR: 9.19e-05 | GradNorm: 2.794
  Batch   32/48 | Loss: 2.7847 | LR: 8.61e-05 | GradNorm: 2.544
  Batch   36/48 | Loss: 2.7659 | LR: 8.04e-05 | GradNorm: 2.176
  Batch   40/48 | Loss: 2.7141 | LR: 7.49e-05 | GradNorm: 2.477
  Batch   44/48 | Loss: 2.7649 | LR: 6.95e-05 | GradNorm: 1.561
Epoch 8/10: Train=31.38%, Val=16.51%, Gap=14.87%, LR=6.56e-05
  Batch    0/48 | Loss: 2.7502 | LR: 6.43e-05 | GradNorm: 4.444
  Batch    4/48 | Loss: 2.7468 | LR: 5.92e-05 | GradNorm: 5.718
  Batch    8/48 | Loss: 2.7954 | LR: 5.44e-05 | GradNorm: 3.134
  Batch   12/48 | Loss: 2.7003 | LR: 4.97e-05 | GradNorm: 2.052
  Batch   16/48 | Loss: 2.6575 | LR: 4.52e-05 | GradNorm: 2.949
  Batch   20/48 | Loss: 2.6920 | LR: 4.09e-05 | GradNorm: 1.877
  Batch   24/48 | Loss: 2.7101 | LR: 3.68e-05 | GradNorm: 1.861
  Batch   28/48 | Loss: 2.7152 | LR: 3.28e-05 | GradNorm: 1.411
  Batch   32/48 | Loss: 2.6811 | LR: 2.91e-05 | GradNorm: 1.286
  Batch   36/48 | Loss: 2.7055 | LR: 2.56e-05 | GradNorm: 2.122
  Batch   40/48 | Loss: 2.6730 | LR: 2.23e-05 | GradNorm: 2.874
  Batch   44/48 | Loss: 2.7057 | LR: 1.93e-05 | GradNorm: 2.335
Epoch 9/10: Train=34.06%, Val=17.13%, Gap=16.93%, LR=1.71e-05
  Batch    0/48 | Loss: 2.7003 | LR: 1.64e-05 | GradNorm: 2.778
  Batch    4/48 | Loss: 2.7014 | LR: 1.38e-05 | GradNorm: 1.923
  Batch    8/48 | Loss: 2.6636 | LR: 1.14e-05 | GradNorm: 1.538
  Batch   12/48 | Loss: 2.6649 | LR: 9.20e-06 | GradNorm: 2.214
  Batch   16/48 | Loss: 2.6729 | LR: 7.25e-06 | GradNorm: 2.020
  Batch   20/48 | Loss: 2.6809 | LR: 5.53e-06 | GradNorm: 1.457
  Batch   24/48 | Loss: 2.7095 | LR: 4.05e-06 | GradNorm: 1.910
  Batch   28/48 | Loss: 2.7084 | LR: 2.79e-06 | GradNorm: 1.715
  Batch   32/48 | Loss: 2.7209 | LR: 1.78e-06 | GradNorm: 1.509
  Batch   36/48 | Loss: 2.6669 | LR: 1.00e-06 | GradNorm: 1.140
  Batch   40/48 | Loss: 2.6439 | LR: 4.66e-07 | GradNorm: 1.171
  Batch   44/48 | Loss: 2.6683 | LR: 1.67e-07 | GradNorm: 2.298
Epoch 10/10: Train=34.72%, Val=17.27%, Gap=17.45%, LR=1.00e-07
Best validation accuracy: 17.27%
