=== W&B Sweep Run: LR=0.002241 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.002241360081674373
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002241
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9583 | LR: 4.55e-05 | GradNorm: 1.746
  Batch    4/48 | Loss: 3.9298 | LR: 1.38e-04 | GradNorm: 0.775
  Batch    8/48 | Loss: 3.9230 | LR: 2.30e-04 | GradNorm: 0.554
  Batch   12/48 | Loss: 3.9118 | LR: 3.23e-04 | GradNorm: 0.454
  Batch   16/48 | Loss: 3.9208 | LR: 4.15e-04 | GradNorm: 0.487
  Batch   20/48 | Loss: 3.9183 | LR: 5.08e-04 | GradNorm: 0.553
  Batch   24/48 | Loss: 3.8914 | LR: 6.00e-04 | GradNorm: 0.522
  Batch   28/48 | Loss: 3.8871 | LR: 6.93e-04 | GradNorm: 1.583
  Batch   32/48 | Loss: 3.7924 | LR: 7.85e-04 | GradNorm: 0.719
  Batch   36/48 | Loss: 3.9668 | LR: 8.78e-04 | GradNorm: 1.731
  Batch   40/48 | Loss: 3.8327 | LR: 9.70e-04 | GradNorm: 0.819
  Batch   44/48 | Loss: 3.8040 | LR: 1.06e-03 | GradNorm: 1.049
Epoch 1/10: Train=3.19%, Val=5.89%, Gap=-2.70%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7229 | LR: 1.16e-03 | GradNorm: 1.473
  Batch    4/48 | Loss: 4.0405 | LR: 1.25e-03 | GradNorm: 12.205
  Batch    8/48 | Loss: 3.7261 | LR: 1.34e-03 | GradNorm: 1.928
  Batch   12/48 | Loss: 3.6610 | LR: 1.43e-03 | GradNorm: 2.329
  Batch   16/48 | Loss: 3.6224 | LR: 1.52e-03 | GradNorm: 0.695
  Batch   20/48 | Loss: 3.6269 | LR: 1.62e-03 | GradNorm: 0.831
  Batch   24/48 | Loss: 3.9001 | LR: 1.71e-03 | GradNorm: 6.462
  Batch   28/48 | Loss: 3.6842 | LR: 1.80e-03 | GradNorm: 0.767
  Batch   32/48 | Loss: 4.5573 | LR: 1.89e-03 | GradNorm: 2.401
  Batch   36/48 | Loss: 3.9115 | LR: 1.99e-03 | GradNorm: 0.822
  Batch   40/48 | Loss: 3.8711 | LR: 2.08e-03 | GradNorm: 0.776
  Batch   44/48 | Loss: 3.8136 | LR: 2.17e-03 | GradNorm: 0.560
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.52%, Val=3.67%, Gap=1.85%, LR=2.24e-03
  Batch    0/48 | Loss: 3.8395 | LR: 2.24e-03 | GradNorm: 0.957
  Batch    4/48 | Loss: 3.8178 | LR: 2.24e-03 | GradNorm: 0.833
  Batch    8/48 | Loss: 3.7868 | LR: 2.24e-03 | GradNorm: 0.773
  Batch   12/48 | Loss: 3.7859 | LR: 2.24e-03 | GradNorm: 0.769
  Batch   16/48 | Loss: 3.7664 | LR: 2.23e-03 | GradNorm: 0.583
  Batch   20/48 | Loss: 3.7949 | LR: 2.22e-03 | GradNorm: 0.904
  Batch   24/48 | Loss: 3.8292 | LR: 2.22e-03 | GradNorm: 1.504
  Batch   28/48 | Loss: 3.7868 | LR: 2.21e-03 | GradNorm: 0.863
  Batch   32/48 | Loss: 3.7756 | LR: 2.20e-03 | GradNorm: 0.483
  Batch   36/48 | Loss: 3.7798 | LR: 2.19e-03 | GradNorm: 0.498
  Batch   40/48 | Loss: 3.7634 | LR: 2.18e-03 | GradNorm: 0.591
  Batch   44/48 | Loss: 3.7085 | LR: 2.17e-03 | GradNorm: 0.574
Epoch 3/10: Train=4.60%, Val=5.01%, Gap=-0.41%, LR=2.16e-03
  Batch    0/48 | Loss: 3.7195 | LR: 2.15e-03 | GradNorm: 0.522
  Batch    4/48 | Loss: 3.6901 | LR: 2.14e-03 | GradNorm: 0.992
  Batch    8/48 | Loss: 3.6916 | LR: 2.12e-03 | GradNorm: 0.744
  Batch   12/48 | Loss: 3.7794 | LR: 2.10e-03 | GradNorm: 2.706
  Batch   16/48 | Loss: 3.7067 | LR: 2.09e-03 | GradNorm: 1.001
  Batch   20/48 | Loss: 3.6397 | LR: 2.07e-03 | GradNorm: 0.774
  Batch   24/48 | Loss: 3.6103 | LR: 2.05e-03 | GradNorm: 0.573
  Batch   28/48 | Loss: 3.5674 | LR: 2.03e-03 | GradNorm: 0.514
  Batch   32/48 | Loss: 3.7942 | LR: 2.00e-03 | GradNorm: 2.881
  Batch   36/48 | Loss: 3.5937 | LR: 1.98e-03 | GradNorm: 1.183
  Batch   40/48 | Loss: 3.6084 | LR: 1.96e-03 | GradNorm: 0.887
  Batch   44/48 | Loss: 3.5999 | LR: 1.93e-03 | GradNorm: 3.059
Epoch 4/10: Train=7.05%, Val=6.63%, Gap=0.42%, LR=1.91e-03
  Batch    0/48 | Loss: 3.5941 | LR: 1.91e-03 | GradNorm: 1.437
  Batch    4/48 | Loss: 3.5213 | LR: 1.88e-03 | GradNorm: 1.461
  Batch    8/48 | Loss: 3.5305 | LR: 1.85e-03 | GradNorm: 1.167
  Batch   12/48 | Loss: 3.5095 | LR: 1.82e-03 | GradNorm: 0.734
  Batch   16/48 | Loss: 3.5246 | LR: 1.80e-03 | GradNorm: 1.243
  Batch   20/48 | Loss: 3.5625 | LR: 1.77e-03 | GradNorm: 2.157
  Batch   24/48 | Loss: 3.5273 | LR: 1.74e-03 | GradNorm: 2.822
  Batch   28/48 | Loss: 3.4842 | LR: 1.70e-03 | GradNorm: 1.288
  Batch   32/48 | Loss: 3.5487 | LR: 1.67e-03 | GradNorm: 1.291
  Batch   36/48 | Loss: 3.5547 | LR: 1.64e-03 | GradNorm: 1.738
  Batch   40/48 | Loss: 3.5200 | LR: 1.61e-03 | GradNorm: 1.286
  Batch   44/48 | Loss: 3.4735 | LR: 1.57e-03 | GradNorm: 1.875
Epoch 5/10: Train=10.28%, Val=11.76%, Gap=-1.48%, LR=1.55e-03
  Batch    0/48 | Loss: 3.4379 | LR: 1.54e-03 | GradNorm: 1.580
  Batch    4/48 | Loss: 3.4454 | LR: 1.51e-03 | GradNorm: 2.651
  Batch    8/48 | Loss: 3.3793 | LR: 1.47e-03 | GradNorm: 0.688
  Batch   12/48 | Loss: 3.3957 | LR: 1.44e-03 | GradNorm: 1.532
  Batch   16/48 | Loss: 3.3130 | LR: 1.40e-03 | GradNorm: 1.171
  Batch   20/48 | Loss: 3.3180 | LR: 1.37e-03 | GradNorm: 1.462
  Batch   24/48 | Loss: 3.3315 | LR: 1.33e-03 | GradNorm: 3.197
  Batch   28/48 | Loss: 3.6761 | LR: 1.29e-03 | GradNorm: 11.620
  Batch   32/48 | Loss: 3.5959 | LR: 1.26e-03 | GradNorm: 5.817
  Batch   36/48 | Loss: 3.5089 | LR: 1.22e-03 | GradNorm: 6.157
  Batch   40/48 | Loss: 3.3525 | LR: 1.18e-03 | GradNorm: 1.329
  Batch   44/48 | Loss: 3.4200 | LR: 1.15e-03 | GradNorm: 3.029
Epoch 6/10: Train=13.44%, Val=13.42%, Gap=0.02%, LR=1.12e-03
  Batch    0/48 | Loss: 3.3198 | LR: 1.11e-03 | GradNorm: 2.863
  Batch    4/48 | Loss: 3.3215 | LR: 1.07e-03 | GradNorm: 2.245
  Batch    8/48 | Loss: 3.2664 | LR: 1.04e-03 | GradNorm: 1.544
  Batch   12/48 | Loss: 3.2474 | LR: 1.00e-03 | GradNorm: 5.272
  Batch   16/48 | Loss: 3.2153 | LR: 9.65e-04 | GradNorm: 3.934
  Batch   20/48 | Loss: 3.2587 | LR: 9.29e-04 | GradNorm: 4.439
  Batch   24/48 | Loss: 3.2723 | LR: 8.93e-04 | GradNorm: 3.538
  Batch   28/48 | Loss: 3.1346 | LR: 8.57e-04 | GradNorm: 1.174
  Batch   32/48 | Loss: 3.1777 | LR: 8.22e-04 | GradNorm: 2.585
  Batch   36/48 | Loss: 3.1807 | LR: 7.87e-04 | GradNorm: 2.404
  Batch   40/48 | Loss: 3.2360 | LR: 7.52e-04 | GradNorm: 3.824
  Batch   44/48 | Loss: 3.1687 | LR: 7.17e-04 | GradNorm: 5.712
Epoch 7/10: Train=18.73%, Val=18.18%, Gap=0.55%, LR=6.92e-04
  Batch    0/48 | Loss: 3.1952 | LR: 6.83e-04 | GradNorm: 3.107
  Batch    4/48 | Loss: 3.1547 | LR: 6.50e-04 | GradNorm: 7.130
  Batch    8/48 | Loss: 3.0749 | LR: 6.17e-04 | GradNorm: 2.405
  Batch   12/48 | Loss: 3.1729 | LR: 5.84e-04 | GradNorm: 4.584
  Batch   16/48 | Loss: 3.1532 | LR: 5.52e-04 | GradNorm: 6.261
  Batch   20/48 | Loss: 3.0593 | LR: 5.21e-04 | GradNorm: 3.174
  Batch   24/48 | Loss: 3.0489 | LR: 4.91e-04 | GradNorm: 2.732
  Batch   28/48 | Loss: 3.0636 | LR: 4.61e-04 | GradNorm: 2.629
  Batch   32/48 | Loss: 3.0117 | LR: 4.31e-04 | GradNorm: 1.776
  Batch   36/48 | Loss: 3.0384 | LR: 4.03e-04 | GradNorm: 1.709
  Batch   40/48 | Loss: 2.9360 | LR: 3.75e-04 | GradNorm: 1.900
  Batch   44/48 | Loss: 3.0308 | LR: 3.48e-04 | GradNorm: 3.824
Epoch 8/10: Train=23.06%, Val=23.00%, Gap=0.06%, LR=3.28e-04
  Batch    0/48 | Loss: 2.9544 | LR: 3.22e-04 | GradNorm: 2.481
  Batch    4/48 | Loss: 2.9463 | LR: 2.97e-04 | GradNorm: 2.094
  Batch    8/48 | Loss: 3.0465 | LR: 2.72e-04 | GradNorm: 4.735
  Batch   12/48 | Loss: 2.9756 | LR: 2.49e-04 | GradNorm: 3.214
  Batch   16/48 | Loss: 2.9204 | LR: 2.26e-04 | GradNorm: 1.549
  Batch   20/48 | Loss: 2.9071 | LR: 2.05e-04 | GradNorm: 3.135
  Batch   24/48 | Loss: 2.9345 | LR: 1.84e-04 | GradNorm: 1.847
  Batch   28/48 | Loss: 2.9345 | LR: 1.64e-04 | GradNorm: 1.757
  Batch   32/48 | Loss: 2.9091 | LR: 1.46e-04 | GradNorm: 3.678
  Batch   36/48 | Loss: 2.9137 | LR: 1.28e-04 | GradNorm: 4.022
  Batch   40/48 | Loss: 2.8915 | LR: 1.12e-04 | GradNorm: 1.831
  Batch   44/48 | Loss: 2.9044 | LR: 9.62e-05 | GradNorm: 0.893
Epoch 9/10: Train=27.06%, Val=23.74%, Gap=3.32%, LR=8.54e-05
  Batch    0/48 | Loss: 2.8717 | LR: 8.19e-05 | GradNorm: 1.536
  Batch    4/48 | Loss: 2.8974 | LR: 6.87e-05 | GradNorm: 1.449
  Batch    8/48 | Loss: 2.8711 | LR: 5.67e-05 | GradNorm: 2.320
  Batch   12/48 | Loss: 2.8814 | LR: 4.57e-05 | GradNorm: 4.103
  Batch   16/48 | Loss: 2.8782 | LR: 3.59e-05 | GradNorm: 1.078
  Batch   20/48 | Loss: 2.8721 | LR: 2.73e-05 | GradNorm: 1.400
  Batch   24/48 | Loss: 2.8838 | LR: 1.99e-05 | GradNorm: 2.162
  Batch   28/48 | Loss: 2.8896 | LR: 1.36e-05 | GradNorm: 1.254
  Batch   32/48 | Loss: 2.9196 | LR: 8.53e-06 | GradNorm: 1.982
  Batch   36/48 | Loss: 2.8748 | LR: 4.63e-06 | GradNorm: 1.810
  Batch   40/48 | Loss: 2.8643 | LR: 1.94e-06 | GradNorm: 1.920
  Batch   44/48 | Loss: 2.8828 | LR: 4.38e-07 | GradNorm: 1.147
Epoch 10/10: Train=28.30%, Val=24.09%, Gap=4.21%, LR=1.00e-07
Best validation accuracy: 24.09%
