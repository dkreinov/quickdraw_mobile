=== W&B Sweep Run: LR=0.000352 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00035151585019039427
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000352
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9487 | LR: 7.14e-06 | GradNorm: 1.426
  Batch    4/48 | Loss: 3.9254 | LR: 2.16e-05 | GradNorm: 1.086
  Batch    8/48 | Loss: 3.9275 | LR: 3.61e-05 | GradNorm: 0.999
  Batch   12/48 | Loss: 3.9121 | LR: 5.06e-05 | GradNorm: 0.651
  Batch   16/48 | Loss: 3.9157 | LR: 6.51e-05 | GradNorm: 0.589
  Batch   20/48 | Loss: 3.9111 | LR: 7.96e-05 | GradNorm: 0.596
  Batch   24/48 | Loss: 3.9155 | LR: 9.41e-05 | GradNorm: 0.676
  Batch   28/48 | Loss: 3.9153 | LR: 1.09e-04 | GradNorm: 0.565
  Batch   32/48 | Loss: 3.9073 | LR: 1.23e-04 | GradNorm: 0.527
  Batch   36/48 | Loss: 3.9033 | LR: 1.38e-04 | GradNorm: 0.537
  Batch   40/48 | Loss: 3.8831 | LR: 1.52e-04 | GradNorm: 0.558
  Batch   44/48 | Loss: 3.8433 | LR: 1.67e-04 | GradNorm: 1.015
Epoch 1/10: Train=2.49%, Val=4.25%, Gap=-1.76%, LR=1.78e-04
  Batch    0/48 | Loss: 3.8072 | LR: 1.81e-04 | GradNorm: 2.147
  Batch    4/48 | Loss: 3.7716 | LR: 1.96e-04 | GradNorm: 3.402
  Batch    8/48 | Loss: 3.8827 | LR: 2.10e-04 | GradNorm: 6.892
  Batch   12/48 | Loss: 3.7296 | LR: 2.25e-04 | GradNorm: 1.532
  Batch   16/48 | Loss: 3.8124 | LR: 2.39e-04 | GradNorm: 4.222
  Batch   20/48 | Loss: 3.7637 | LR: 2.54e-04 | GradNorm: 0.898
  Batch   24/48 | Loss: 3.7233 | LR: 2.68e-04 | GradNorm: 0.736
  Batch   28/48 | Loss: 3.7575 | LR: 2.83e-04 | GradNorm: 2.934
  Batch   32/48 | Loss: 3.7610 | LR: 2.97e-04 | GradNorm: 5.160
  Batch   36/48 | Loss: 3.7214 | LR: 3.12e-04 | GradNorm: 1.703
  Batch   40/48 | Loss: 3.7122 | LR: 3.26e-04 | GradNorm: 1.941
  Batch   44/48 | Loss: 3.6275 | LR: 3.41e-04 | GradNorm: 1.578
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.22%, Val=5.17%, Gap=0.05%, LR=3.52e-04
  Batch    0/48 | Loss: 3.8314 | LR: 3.52e-04 | GradNorm: 6.915
  Batch    4/48 | Loss: 3.7206 | LR: 3.51e-04 | GradNorm: 1.992
  Batch    8/48 | Loss: 3.6510 | LR: 3.51e-04 | GradNorm: 3.919
  Batch   12/48 | Loss: 3.7235 | LR: 3.51e-04 | GradNorm: 6.182
  Batch   16/48 | Loss: 3.7343 | LR: 3.50e-04 | GradNorm: 3.133
  Batch   20/48 | Loss: 3.5609 | LR: 3.49e-04 | GradNorm: 1.972
  Batch   24/48 | Loss: 3.6008 | LR: 3.48e-04 | GradNorm: 5.428
  Batch   28/48 | Loss: 3.5614 | LR: 3.47e-04 | GradNorm: 4.079
  Batch   32/48 | Loss: 3.5031 | LR: 3.45e-04 | GradNorm: 1.130
  Batch   36/48 | Loss: 3.4709 | LR: 3.44e-04 | GradNorm: 0.807
  Batch   40/48 | Loss: 3.4531 | LR: 3.42e-04 | GradNorm: 2.025
  Batch   44/48 | Loss: 3.4225 | LR: 3.40e-04 | GradNorm: 3.719
Epoch 3/10: Train=9.78%, Val=6.91%, Gap=2.87%, LR=3.38e-04
  Batch    0/48 | Loss: 3.4361 | LR: 3.38e-04 | GradNorm: 5.551
  Batch    4/48 | Loss: 3.4256 | LR: 3.35e-04 | GradNorm: 5.677
  Batch    8/48 | Loss: 3.3411 | LR: 3.33e-04 | GradNorm: 3.448
  Batch   12/48 | Loss: 3.2856 | LR: 3.30e-04 | GradNorm: 3.092
  Batch   16/48 | Loss: 3.2892 | LR: 3.27e-04 | GradNorm: 2.155
  Batch   20/48 | Loss: 3.2813 | LR: 3.24e-04 | GradNorm: 2.928
  Batch   24/48 | Loss: 3.2548 | LR: 3.21e-04 | GradNorm: 1.960
  Batch   28/48 | Loss: 3.2225 | LR: 3.18e-04 | GradNorm: 2.812
  Batch   32/48 | Loss: 3.2521 | LR: 3.14e-04 | GradNorm: 4.051
  Batch   36/48 | Loss: 3.2277 | LR: 3.11e-04 | GradNorm: 2.305
  Batch   40/48 | Loss: 3.2322 | LR: 3.07e-04 | GradNorm: 3.400
  Batch   44/48 | Loss: 3.2381 | LR: 3.03e-04 | GradNorm: 5.247
Epoch 4/10: Train=16.23%, Val=16.53%, Gap=-0.30%, LR=3.00e-04
  Batch    0/48 | Loss: 3.2171 | LR: 2.99e-04 | GradNorm: 3.422
  Batch    4/48 | Loss: 3.1875 | LR: 2.95e-04 | GradNorm: 3.368
  Batch    8/48 | Loss: 3.2183 | LR: 2.91e-04 | GradNorm: 5.487
  Batch   12/48 | Loss: 3.1792 | LR: 2.86e-04 | GradNorm: 3.383
  Batch   16/48 | Loss: 3.2513 | LR: 2.82e-04 | GradNorm: 4.254
  Batch   20/48 | Loss: 3.1506 | LR: 2.77e-04 | GradNorm: 1.410
  Batch   24/48 | Loss: 3.1922 | LR: 2.72e-04 | GradNorm: 3.006
  Batch   28/48 | Loss: 3.1500 | LR: 2.67e-04 | GradNorm: 1.728
  Batch   32/48 | Loss: 3.1266 | LR: 2.62e-04 | GradNorm: 3.553
  Batch   36/48 | Loss: 3.1651 | LR: 2.57e-04 | GradNorm: 2.720
  Batch   40/48 | Loss: 3.1550 | LR: 2.52e-04 | GradNorm: 1.966
  Batch   44/48 | Loss: 3.1089 | LR: 2.47e-04 | GradNorm: 2.662
Epoch 5/10: Train=18.94%, Val=11.81%, Gap=7.13%, LR=2.43e-04
  Batch    0/48 | Loss: 3.0582 | LR: 2.42e-04 | GradNorm: 4.965
  Batch    4/48 | Loss: 3.0180 | LR: 2.36e-04 | GradNorm: 4.701
  Batch    8/48 | Loss: 3.0312 | LR: 2.31e-04 | GradNorm: 3.092
  Batch   12/48 | Loss: 3.0615 | LR: 2.25e-04 | GradNorm: 4.828
  Batch   16/48 | Loss: 2.9880 | LR: 2.20e-04 | GradNorm: 2.382
  Batch   20/48 | Loss: 2.9976 | LR: 2.14e-04 | GradNorm: 3.543
  Batch   24/48 | Loss: 2.9926 | LR: 2.09e-04 | GradNorm: 3.459
  Batch   28/48 | Loss: 2.9535 | LR: 2.03e-04 | GradNorm: 5.009
  Batch   32/48 | Loss: 2.9978 | LR: 1.97e-04 | GradNorm: 10.340
  Batch   36/48 | Loss: 2.9969 | LR: 1.92e-04 | GradNorm: 4.101
  Batch   40/48 | Loss: 3.0387 | LR: 1.86e-04 | GradNorm: 10.450
  Batch   44/48 | Loss: 3.0208 | LR: 1.80e-04 | GradNorm: 4.324
Epoch 6/10: Train=23.98%, Val=14.43%, Gap=9.55%, LR=1.76e-04
  Batch    0/48 | Loss: 3.0304 | LR: 1.74e-04 | GradNorm: 9.085
  Batch    4/48 | Loss: 2.9754 | LR: 1.69e-04 | GradNorm: 5.538
  Batch    8/48 | Loss: 2.9744 | LR: 1.63e-04 | GradNorm: 4.969
  Batch   12/48 | Loss: 2.8845 | LR: 1.57e-04 | GradNorm: 2.443
  Batch   16/48 | Loss: 2.9214 | LR: 1.51e-04 | GradNorm: 6.179
  Batch   20/48 | Loss: 2.9413 | LR: 1.46e-04 | GradNorm: 4.371
  Batch   24/48 | Loss: 2.9573 | LR: 1.40e-04 | GradNorm: 5.934
  Batch   28/48 | Loss: 2.9357 | LR: 1.35e-04 | GradNorm: 2.890
  Batch   32/48 | Loss: 2.9134 | LR: 1.29e-04 | GradNorm: 2.953
  Batch   36/48 | Loss: 2.9179 | LR: 1.23e-04 | GradNorm: 2.344
  Batch   40/48 | Loss: 2.9127 | LR: 1.18e-04 | GradNorm: 3.240
  Batch   44/48 | Loss: 2.8876 | LR: 1.13e-04 | GradNorm: 4.109
Epoch 7/10: Train=26.65%, Val=17.04%, Gap=9.61%, LR=1.09e-04
  Batch    0/48 | Loss: 2.8707 | LR: 1.07e-04 | GradNorm: 4.134
  Batch    4/48 | Loss: 2.8207 | LR: 1.02e-04 | GradNorm: 2.338
  Batch    8/48 | Loss: 2.8453 | LR: 9.68e-05 | GradNorm: 5.080
  Batch   12/48 | Loss: 2.8854 | LR: 9.17e-05 | GradNorm: 4.793
  Batch   16/48 | Loss: 2.8928 | LR: 8.67e-05 | GradNorm: 3.430
  Batch   20/48 | Loss: 2.8376 | LR: 8.18e-05 | GradNorm: 5.782
  Batch   24/48 | Loss: 2.8165 | LR: 7.70e-05 | GradNorm: 5.720
  Batch   28/48 | Loss: 2.8420 | LR: 7.23e-05 | GradNorm: 2.118
  Batch   32/48 | Loss: 2.8306 | LR: 6.77e-05 | GradNorm: 3.648
  Batch   36/48 | Loss: 2.8342 | LR: 6.32e-05 | GradNorm: 4.064
  Batch   40/48 | Loss: 2.7597 | LR: 5.89e-05 | GradNorm: 2.902
  Batch   44/48 | Loss: 2.8293 | LR: 5.47e-05 | GradNorm: 3.816
Epoch 8/10: Train=29.51%, Val=16.70%, Gap=12.81%, LR=5.16e-05
  Batch    0/48 | Loss: 2.7689 | LR: 5.06e-05 | GradNorm: 2.586
  Batch    4/48 | Loss: 2.7725 | LR: 4.66e-05 | GradNorm: 2.446
  Batch    8/48 | Loss: 2.8377 | LR: 4.28e-05 | GradNorm: 2.728
  Batch   12/48 | Loss: 2.7746 | LR: 3.91e-05 | GradNorm: 2.655
  Batch   16/48 | Loss: 2.7186 | LR: 3.55e-05 | GradNorm: 2.153
  Batch   20/48 | Loss: 2.7414 | LR: 3.22e-05 | GradNorm: 2.328
  Batch   24/48 | Loss: 2.7639 | LR: 2.89e-05 | GradNorm: 1.925
  Batch   28/48 | Loss: 2.7699 | LR: 2.58e-05 | GradNorm: 2.463
  Batch   32/48 | Loss: 2.7574 | LR: 2.29e-05 | GradNorm: 1.939
  Batch   36/48 | Loss: 2.7487 | LR: 2.02e-05 | GradNorm: 1.882
  Batch   40/48 | Loss: 2.7445 | LR: 1.76e-05 | GradNorm: 2.328
  Batch   44/48 | Loss: 2.7699 | LR: 1.52e-05 | GradNorm: 3.024
Epoch 9/10: Train=31.39%, Val=17.99%, Gap=13.40%, LR=1.35e-05
  Batch    0/48 | Loss: 2.7659 | LR: 1.29e-05 | GradNorm: 2.661
  Batch    4/48 | Loss: 2.7528 | LR: 1.09e-05 | GradNorm: 2.400
  Batch    8/48 | Loss: 2.7331 | LR: 8.97e-06 | GradNorm: 1.706
  Batch   12/48 | Loss: 2.7359 | LR: 7.25e-06 | GradNorm: 2.299
  Batch   16/48 | Loss: 2.7566 | LR: 5.72e-06 | GradNorm: 1.769
  Batch   20/48 | Loss: 2.7459 | LR: 4.37e-06 | GradNorm: 2.720
  Batch   24/48 | Loss: 2.7425 | LR: 3.20e-06 | GradNorm: 2.835
  Batch   28/48 | Loss: 2.7576 | LR: 2.22e-06 | GradNorm: 1.447
  Batch   32/48 | Loss: 2.7933 | LR: 1.42e-06 | GradNorm: 1.828
  Batch   36/48 | Loss: 2.7413 | LR: 8.11e-07 | GradNorm: 1.707
  Batch   40/48 | Loss: 2.7130 | LR: 3.88e-07 | GradNorm: 2.242
  Batch   44/48 | Loss: 2.7440 | LR: 1.53e-07 | GradNorm: 1.912
Epoch 10/10: Train=32.44%, Val=17.96%, Gap=14.48%, LR=1.00e-07
Best validation accuracy: 17.99%
