=== W&B Sweep Run: LR=0.000268 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00026796921536682806
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000268
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9497 | LR: 5.44e-06 | GradNorm: 1.526
  Batch    4/48 | Loss: 3.9256 | LR: 1.65e-05 | GradNorm: 1.035
  Batch    8/48 | Loss: 3.9197 | LR: 2.76e-05 | GradNorm: 0.843
  Batch   12/48 | Loss: 3.9103 | LR: 3.86e-05 | GradNorm: 0.748
  Batch   16/48 | Loss: 3.9184 | LR: 4.97e-05 | GradNorm: 0.716
  Batch   20/48 | Loss: 3.9116 | LR: 6.07e-05 | GradNorm: 0.653
  Batch   24/48 | Loss: 3.9113 | LR: 7.18e-05 | GradNorm: 0.726
  Batch   28/48 | Loss: 3.9124 | LR: 8.28e-05 | GradNorm: 0.566
  Batch   32/48 | Loss: 3.9014 | LR: 9.39e-05 | GradNorm: 0.506
  Batch   36/48 | Loss: 3.8990 | LR: 1.05e-04 | GradNorm: 0.552
  Batch   40/48 | Loss: 3.8843 | LR: 1.16e-04 | GradNorm: 0.694
  Batch   44/48 | Loss: 3.8521 | LR: 1.27e-04 | GradNorm: 2.714
Epoch 1/10: Train=2.56%, Val=4.32%, Gap=-1.76%, LR=1.35e-04
  Batch    0/48 | Loss: 3.7882 | LR: 1.38e-04 | GradNorm: 1.087
  Batch    4/48 | Loss: 3.7975 | LR: 1.49e-04 | GradNorm: 6.211
  Batch    8/48 | Loss: 3.7762 | LR: 1.60e-04 | GradNorm: 7.182
  Batch   12/48 | Loss: 3.8925 | LR: 1.71e-04 | GradNorm: 10.237
  Batch   16/48 | Loss: 3.8034 | LR: 1.82e-04 | GradNorm: 5.899
  Batch   20/48 | Loss: 3.7513 | LR: 1.93e-04 | GradNorm: 1.252
  Batch   24/48 | Loss: 3.8055 | LR: 2.04e-04 | GradNorm: 11.133
  Batch   28/48 | Loss: 3.8942 | LR: 2.15e-04 | GradNorm: 7.966
  Batch   32/48 | Loss: 3.6997 | LR: 2.27e-04 | GradNorm: 1.254
  Batch   36/48 | Loss: 3.6794 | LR: 2.38e-04 | GradNorm: 1.396
  Batch   40/48 | Loss: 3.7261 | LR: 2.49e-04 | GradNorm: 7.085
  Batch   44/48 | Loss: 3.6915 | LR: 2.60e-04 | GradNorm: 6.169
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.31%, Val=7.68%, Gap=-2.37%, LR=2.68e-04
  Batch    0/48 | Loss: 3.6167 | LR: 2.68e-04 | GradNorm: 1.766
  Batch    4/48 | Loss: 3.7157 | LR: 2.68e-04 | GradNorm: 6.205
  Batch    8/48 | Loss: 3.7413 | LR: 2.68e-04 | GradNorm: 7.013
  Batch   12/48 | Loss: 3.6254 | LR: 2.67e-04 | GradNorm: 2.627
  Batch   16/48 | Loss: 3.5518 | LR: 2.67e-04 | GradNorm: 1.417
  Batch   20/48 | Loss: 3.5153 | LR: 2.66e-04 | GradNorm: 2.149
  Batch   24/48 | Loss: 3.4775 | LR: 2.65e-04 | GradNorm: 2.394
  Batch   28/48 | Loss: 3.4550 | LR: 2.64e-04 | GradNorm: 5.507
  Batch   32/48 | Loss: 3.4725 | LR: 2.63e-04 | GradNorm: 3.073
  Batch   36/48 | Loss: 3.4191 | LR: 2.62e-04 | GradNorm: 1.635
  Batch   40/48 | Loss: 3.3951 | LR: 2.61e-04 | GradNorm: 3.044
  Batch   44/48 | Loss: 3.3792 | LR: 2.59e-04 | GradNorm: 5.088
Epoch 3/10: Train=11.18%, Val=10.57%, Gap=0.61%, LR=2.58e-04
  Batch    0/48 | Loss: 3.3552 | LR: 2.57e-04 | GradNorm: 4.714
  Batch    4/48 | Loss: 3.4066 | LR: 2.56e-04 | GradNorm: 7.332
  Batch    8/48 | Loss: 3.3389 | LR: 2.54e-04 | GradNorm: 3.970
  Batch   12/48 | Loss: 3.2844 | LR: 2.52e-04 | GradNorm: 3.452
  Batch   16/48 | Loss: 3.3459 | LR: 2.49e-04 | GradNorm: 6.438
  Batch   20/48 | Loss: 3.3093 | LR: 2.47e-04 | GradNorm: 4.144
  Batch   24/48 | Loss: 3.3238 | LR: 2.45e-04 | GradNorm: 4.004
  Batch   28/48 | Loss: 3.2811 | LR: 2.42e-04 | GradNorm: 5.412
  Batch   32/48 | Loss: 3.2898 | LR: 2.40e-04 | GradNorm: 4.939
  Batch   36/48 | Loss: 3.2392 | LR: 2.37e-04 | GradNorm: 2.508
  Batch   40/48 | Loss: 3.2720 | LR: 2.34e-04 | GradNorm: 5.467
  Batch   44/48 | Loss: 3.1836 | LR: 2.31e-04 | GradNorm: 1.207
Epoch 4/10: Train=16.12%, Val=11.89%, Gap=4.23%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2014 | LR: 2.28e-04 | GradNorm: 3.909
  Batch    4/48 | Loss: 3.1542 | LR: 2.25e-04 | GradNorm: 3.963
  Batch    8/48 | Loss: 3.1453 | LR: 2.22e-04 | GradNorm: 3.112
  Batch   12/48 | Loss: 3.1476 | LR: 2.18e-04 | GradNorm: 4.588
  Batch   16/48 | Loss: 3.2342 | LR: 2.15e-04 | GradNorm: 5.168
  Batch   20/48 | Loss: 3.1584 | LR: 2.11e-04 | GradNorm: 3.749
  Batch   24/48 | Loss: 3.1500 | LR: 2.08e-04 | GradNorm: 1.231
  Batch   28/48 | Loss: 3.1313 | LR: 2.04e-04 | GradNorm: 3.109
  Batch   32/48 | Loss: 3.1334 | LR: 2.00e-04 | GradNorm: 4.365
  Batch   36/48 | Loss: 3.1853 | LR: 1.96e-04 | GradNorm: 3.446
  Batch   40/48 | Loss: 3.1246 | LR: 1.92e-04 | GradNorm: 1.477
  Batch   44/48 | Loss: 3.1188 | LR: 1.88e-04 | GradNorm: 3.513
Epoch 5/10: Train=19.66%, Val=13.01%, Gap=6.65%, LR=1.85e-04
  Batch    0/48 | Loss: 3.0944 | LR: 1.84e-04 | GradNorm: 3.422
  Batch    4/48 | Loss: 3.0556 | LR: 1.80e-04 | GradNorm: 4.200
  Batch    8/48 | Loss: 3.0438 | LR: 1.76e-04 | GradNorm: 3.988
  Batch   12/48 | Loss: 3.0596 | LR: 1.72e-04 | GradNorm: 3.788
  Batch   16/48 | Loss: 3.0017 | LR: 1.68e-04 | GradNorm: 2.529
  Batch   20/48 | Loss: 3.0226 | LR: 1.63e-04 | GradNorm: 3.610
  Batch   24/48 | Loss: 3.0081 | LR: 1.59e-04 | GradNorm: 3.328
  Batch   28/48 | Loss: 2.9684 | LR: 1.55e-04 | GradNorm: 4.908
  Batch   32/48 | Loss: 2.9529 | LR: 1.50e-04 | GradNorm: 2.547
  Batch   36/48 | Loss: 2.9926 | LR: 1.46e-04 | GradNorm: 3.739
  Batch   40/48 | Loss: 2.9653 | LR: 1.42e-04 | GradNorm: 4.253
  Batch   44/48 | Loss: 3.0318 | LR: 1.37e-04 | GradNorm: 4.879
Epoch 6/10: Train=23.44%, Val=14.95%, Gap=8.49%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9379 | LR: 1.33e-04 | GradNorm: 3.432
  Batch    4/48 | Loss: 2.9733 | LR: 1.29e-04 | GradNorm: 8.752
  Batch    8/48 | Loss: 2.9111 | LR: 1.24e-04 | GradNorm: 2.429
  Batch   12/48 | Loss: 2.8407 | LR: 1.20e-04 | GradNorm: 2.527
  Batch   16/48 | Loss: 2.8659 | LR: 1.15e-04 | GradNorm: 3.734
  Batch   20/48 | Loss: 2.8702 | LR: 1.11e-04 | GradNorm: 2.410
  Batch   24/48 | Loss: 2.9063 | LR: 1.07e-04 | GradNorm: 4.717
  Batch   28/48 | Loss: 2.8977 | LR: 1.03e-04 | GradNorm: 3.512
  Batch   32/48 | Loss: 2.9141 | LR: 9.83e-05 | GradNorm: 6.734
  Batch   36/48 | Loss: 2.8887 | LR: 9.41e-05 | GradNorm: 4.886
  Batch   40/48 | Loss: 2.8528 | LR: 8.99e-05 | GradNorm: 4.206
  Batch   44/48 | Loss: 2.8486 | LR: 8.58e-05 | GradNorm: 3.593
Epoch 7/10: Train=28.79%, Val=19.23%, Gap=9.56%, LR=8.28e-05
  Batch    0/48 | Loss: 2.8888 | LR: 8.18e-05 | GradNorm: 9.568
  Batch    4/48 | Loss: 2.8055 | LR: 7.78e-05 | GradNorm: 4.792
  Batch    8/48 | Loss: 2.8087 | LR: 7.38e-05 | GradNorm: 5.883
  Batch   12/48 | Loss: 2.8384 | LR: 6.99e-05 | GradNorm: 3.670
  Batch   16/48 | Loss: 2.8551 | LR: 6.61e-05 | GradNorm: 6.976
  Batch   20/48 | Loss: 2.7770 | LR: 6.24e-05 | GradNorm: 6.804
  Batch   24/48 | Loss: 2.7721 | LR: 5.87e-05 | GradNorm: 6.718
  Batch   28/48 | Loss: 2.8109 | LR: 5.51e-05 | GradNorm: 7.973
  Batch   32/48 | Loss: 2.7898 | LR: 5.16e-05 | GradNorm: 3.702
  Batch   36/48 | Loss: 2.7763 | LR: 4.82e-05 | GradNorm: 3.973
  Batch   40/48 | Loss: 2.7188 | LR: 4.49e-05 | GradNorm: 4.340
  Batch   44/48 | Loss: 2.7686 | LR: 4.17e-05 | GradNorm: 4.363
Epoch 8/10: Train=31.59%, Val=20.08%, Gap=11.51%, LR=3.93e-05
  Batch    0/48 | Loss: 2.7360 | LR: 3.86e-05 | GradNorm: 5.359
  Batch    4/48 | Loss: 2.7445 | LR: 3.55e-05 | GradNorm: 5.396
  Batch    8/48 | Loss: 2.8170 | LR: 3.26e-05 | GradNorm: 7.221
  Batch   12/48 | Loss: 2.7329 | LR: 2.98e-05 | GradNorm: 5.102
  Batch   16/48 | Loss: 2.6697 | LR: 2.71e-05 | GradNorm: 3.225
  Batch   20/48 | Loss: 2.7041 | LR: 2.45e-05 | GradNorm: 3.955
  Batch   24/48 | Loss: 2.7148 | LR: 2.21e-05 | GradNorm: 1.904
  Batch   28/48 | Loss: 2.7193 | LR: 1.97e-05 | GradNorm: 1.868
  Batch   32/48 | Loss: 2.7103 | LR: 1.75e-05 | GradNorm: 2.799
  Batch   36/48 | Loss: 2.7171 | LR: 1.54e-05 | GradNorm: 4.139
  Batch   40/48 | Loss: 2.6754 | LR: 1.34e-05 | GradNorm: 2.412
  Batch   44/48 | Loss: 2.7120 | LR: 1.16e-05 | GradNorm: 3.141
Epoch 9/10: Train=33.86%, Val=20.88%, Gap=12.98%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7000 | LR: 9.88e-06 | GradNorm: 3.424
  Batch    4/48 | Loss: 2.7072 | LR: 8.30e-06 | GradNorm: 2.231
  Batch    8/48 | Loss: 2.6722 | LR: 6.86e-06 | GradNorm: 2.323
  Batch   12/48 | Loss: 2.6825 | LR: 5.55e-06 | GradNorm: 1.952
  Batch   16/48 | Loss: 2.6854 | LR: 4.38e-06 | GradNorm: 2.329
  Batch   20/48 | Loss: 2.7082 | LR: 3.35e-06 | GradNorm: 3.002
  Batch   24/48 | Loss: 2.6925 | LR: 2.46e-06 | GradNorm: 3.396
  Batch   28/48 | Loss: 2.7234 | LR: 1.71e-06 | GradNorm: 3.151
  Batch   32/48 | Loss: 2.7195 | LR: 1.11e-06 | GradNorm: 2.302
  Batch   36/48 | Loss: 2.6942 | LR: 6.42e-07 | GradNorm: 1.857
  Batch   40/48 | Loss: 2.6710 | LR: 3.20e-07 | GradNorm: 2.119
  Batch   44/48 | Loss: 2.6732 | LR: 1.40e-07 | GradNorm: 2.778
Epoch 10/10: Train=34.91%, Val=20.98%, Gap=13.93%, LR=1.00e-07
Best validation accuracy: 20.98%
