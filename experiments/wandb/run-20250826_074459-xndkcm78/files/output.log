=== W&B Sweep Run: LR=0.003272 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0032715928689605635
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.003272
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9527 | LR: 6.65e-05 | GradNorm: 1.628
  Batch    4/48 | Loss: 3.9288 | LR: 2.01e-04 | GradNorm: 0.756
  Batch    8/48 | Loss: 3.9238 | LR: 3.36e-04 | GradNorm: 0.516
  Batch   12/48 | Loss: 3.9139 | LR: 4.71e-04 | GradNorm: 0.439
  Batch   16/48 | Loss: 3.9224 | LR: 6.06e-04 | GradNorm: 0.473
  Batch   20/48 | Loss: 3.9172 | LR: 7.41e-04 | GradNorm: 0.494
  Batch   24/48 | Loss: 3.9122 | LR: 8.76e-04 | GradNorm: 0.529
  Batch   28/48 | Loss: 3.8797 | LR: 1.01e-03 | GradNorm: 0.650
  Batch   32/48 | Loss: 3.8399 | LR: 1.15e-03 | GradNorm: 0.599
  Batch   36/48 | Loss: 3.8102 | LR: 1.28e-03 | GradNorm: 0.665
  Batch   40/48 | Loss: 3.8914 | LR: 1.42e-03 | GradNorm: 1.379
  Batch   44/48 | Loss: 3.8280 | LR: 1.55e-03 | GradNorm: 0.989
Epoch 1/10: Train=2.96%, Val=4.21%, Gap=-1.25%, LR=1.65e-03
  Batch    0/48 | Loss: 3.7910 | LR: 1.69e-03 | GradNorm: 0.683
  Batch    4/48 | Loss: 3.9144 | LR: 1.82e-03 | GradNorm: 2.515
  Batch    8/48 | Loss: 3.8177 | LR: 1.96e-03 | GradNorm: 0.563
  Batch   12/48 | Loss: 3.7763 | LR: 2.09e-03 | GradNorm: 0.521
  Batch   16/48 | Loss: 3.8210 | LR: 2.23e-03 | GradNorm: 1.091
  Batch   20/48 | Loss: 3.8183 | LR: 2.36e-03 | GradNorm: 0.704
  Batch   24/48 | Loss: 3.7841 | LR: 2.50e-03 | GradNorm: 0.951
  Batch   28/48 | Loss: 3.8117 | LR: 2.63e-03 | GradNorm: 1.199
  Batch   32/48 | Loss: 3.8636 | LR: 2.77e-03 | GradNorm: 1.124
  Batch   36/48 | Loss: 3.7584 | LR: 2.90e-03 | GradNorm: 0.548
  Batch   40/48 | Loss: 3.7918 | LR: 3.04e-03 | GradNorm: 0.649
  Batch   44/48 | Loss: 3.7484 | LR: 3.17e-03 | GradNorm: 0.822
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.76%, Val=4.30%, Gap=0.46%, LR=3.27e-03
  Batch    0/48 | Loss: 3.8550 | LR: 3.27e-03 | GradNorm: 1.221
  Batch    4/48 | Loss: 4.1085 | LR: 3.27e-03 | GradNorm: 2.218
  Batch    8/48 | Loss: 3.8658 | LR: 3.27e-03 | GradNorm: 0.600
  Batch   12/48 | Loss: 3.8250 | LR: 3.26e-03 | GradNorm: 0.522
  Batch   16/48 | Loss: 3.8114 | LR: 3.26e-03 | GradNorm: 0.622
  Batch   20/48 | Loss: 3.7956 | LR: 3.25e-03 | GradNorm: 0.487
  Batch   24/48 | Loss: 3.8011 | LR: 3.24e-03 | GradNorm: 0.498
  Batch   28/48 | Loss: 3.7791 | LR: 3.23e-03 | GradNorm: 0.713
  Batch   32/48 | Loss: 3.7797 | LR: 3.21e-03 | GradNorm: 0.473
  Batch   36/48 | Loss: 3.7703 | LR: 3.20e-03 | GradNorm: 0.403
  Batch   40/48 | Loss: 3.7718 | LR: 3.18e-03 | GradNorm: 0.773
  Batch   44/48 | Loss: 3.7480 | LR: 3.16e-03 | GradNorm: 0.547
Epoch 3/10: Train=4.25%, Val=3.68%, Gap=0.57%, LR=3.15e-03
  Batch    0/48 | Loss: 3.7820 | LR: 3.14e-03 | GradNorm: 0.931
  Batch    4/48 | Loss: 3.7460 | LR: 3.12e-03 | GradNorm: 0.756
  Batch    8/48 | Loss: 3.7593 | LR: 3.10e-03 | GradNorm: 0.524
  Batch   12/48 | Loss: 3.7396 | LR: 3.07e-03 | GradNorm: 0.624
  Batch   16/48 | Loss: 3.7107 | LR: 3.05e-03 | GradNorm: 0.935
  Batch   20/48 | Loss: 3.7618 | LR: 3.02e-03 | GradNorm: 0.998
  Batch   24/48 | Loss: 3.6947 | LR: 2.99e-03 | GradNorm: 0.563
  Batch   28/48 | Loss: 3.6454 | LR: 2.96e-03 | GradNorm: 0.842
  Batch   32/48 | Loss: 3.9158 | LR: 2.93e-03 | GradNorm: 3.805
  Batch   36/48 | Loss: 3.7015 | LR: 2.89e-03 | GradNorm: 0.871
  Batch   40/48 | Loss: 3.7143 | LR: 2.86e-03 | GradNorm: 0.440
  Batch   44/48 | Loss: 3.6875 | LR: 2.82e-03 | GradNorm: 0.451
Epoch 4/10: Train=6.11%, Val=6.05%, Gap=0.06%, LR=2.79e-03
  Batch    0/48 | Loss: 3.6579 | LR: 2.78e-03 | GradNorm: 0.459
  Batch    4/48 | Loss: 3.7049 | LR: 2.74e-03 | GradNorm: 1.019
  Batch    8/48 | Loss: 3.6102 | LR: 2.70e-03 | GradNorm: 0.594
  Batch   12/48 | Loss: 3.8111 | LR: 2.66e-03 | GradNorm: 4.147
  Batch   16/48 | Loss: 3.6530 | LR: 2.62e-03 | GradNorm: 0.775
  Batch   20/48 | Loss: 3.6509 | LR: 2.58e-03 | GradNorm: 1.480
  Batch   24/48 | Loss: 3.5907 | LR: 2.53e-03 | GradNorm: 0.817
  Batch   28/48 | Loss: 3.5531 | LR: 2.49e-03 | GradNorm: 0.982
  Batch   32/48 | Loss: 3.7280 | LR: 2.44e-03 | GradNorm: 1.660
  Batch   36/48 | Loss: 3.5927 | LR: 2.40e-03 | GradNorm: 0.535
  Batch   40/48 | Loss: 3.6165 | LR: 2.35e-03 | GradNorm: 1.536
  Batch   44/48 | Loss: 3.5262 | LR: 2.30e-03 | GradNorm: 0.976
Epoch 5/10: Train=8.53%, Val=7.45%, Gap=1.08%, LR=2.26e-03
  Batch    0/48 | Loss: 3.4856 | LR: 2.25e-03 | GradNorm: 0.538
  Batch    4/48 | Loss: 3.4169 | LR: 2.20e-03 | GradNorm: 0.492
  Batch    8/48 | Loss: 3.4315 | LR: 2.15e-03 | GradNorm: 0.535
  Batch   12/48 | Loss: 3.4625 | LR: 2.10e-03 | GradNorm: 0.848
  Batch   16/48 | Loss: 3.5073 | LR: 2.05e-03 | GradNorm: 2.153
  Batch   20/48 | Loss: 3.4819 | LR: 1.99e-03 | GradNorm: 1.786
  Batch   24/48 | Loss: 3.4442 | LR: 1.94e-03 | GradNorm: 1.104
  Batch   28/48 | Loss: 3.3953 | LR: 1.89e-03 | GradNorm: 0.566
  Batch   32/48 | Loss: 3.3921 | LR: 1.84e-03 | GradNorm: 0.508
  Batch   36/48 | Loss: 3.4196 | LR: 1.78e-03 | GradNorm: 0.536
  Batch   40/48 | Loss: 3.3656 | LR: 1.73e-03 | GradNorm: 0.503
  Batch   44/48 | Loss: 3.4347 | LR: 1.68e-03 | GradNorm: 0.936
Epoch 6/10: Train=12.08%, Val=10.11%, Gap=1.97%, LR=1.64e-03
  Batch    0/48 | Loss: 3.3304 | LR: 1.62e-03 | GradNorm: 0.988
  Batch    4/48 | Loss: 3.4086 | LR: 1.57e-03 | GradNorm: 2.351
  Batch    8/48 | Loss: 3.3482 | LR: 1.52e-03 | GradNorm: 1.099
  Batch   12/48 | Loss: 3.3685 | LR: 1.46e-03 | GradNorm: 1.521
  Batch   16/48 | Loss: 3.3210 | LR: 1.41e-03 | GradNorm: 2.257
  Batch   20/48 | Loss: 3.4167 | LR: 1.36e-03 | GradNorm: 1.337
  Batch   24/48 | Loss: 3.3255 | LR: 1.30e-03 | GradNorm: 1.148
  Batch   28/48 | Loss: 3.3736 | LR: 1.25e-03 | GradNorm: 1.085
  Batch   32/48 | Loss: 3.3230 | LR: 1.20e-03 | GradNorm: 0.498
  Batch   36/48 | Loss: 3.3427 | LR: 1.15e-03 | GradNorm: 1.832
  Batch   40/48 | Loss: 3.3351 | LR: 1.10e-03 | GradNorm: 2.594
  Batch   44/48 | Loss: 3.2631 | LR: 1.05e-03 | GradNorm: 1.463
Epoch 7/10: Train=14.91%, Val=11.58%, Gap=3.33%, LR=1.01e-03
  Batch    0/48 | Loss: 3.2977 | LR: 9.98e-04 | GradNorm: 1.824
  Batch    4/48 | Loss: 3.2474 | LR: 9.49e-04 | GradNorm: 2.001
  Batch    8/48 | Loss: 3.2904 | LR: 9.00e-04 | GradNorm: 1.532
  Batch   12/48 | Loss: 3.2580 | LR: 8.53e-04 | GradNorm: 0.785
  Batch   16/48 | Loss: 3.2720 | LR: 8.06e-04 | GradNorm: 1.622
  Batch   20/48 | Loss: 3.1876 | LR: 7.61e-04 | GradNorm: 0.836
  Batch   24/48 | Loss: 3.2058 | LR: 7.16e-04 | GradNorm: 1.753
  Batch   28/48 | Loss: 3.2517 | LR: 6.72e-04 | GradNorm: 2.435
  Batch   32/48 | Loss: 3.2119 | LR: 6.29e-04 | GradNorm: 1.764
  Batch   36/48 | Loss: 3.2177 | LR: 5.88e-04 | GradNorm: 1.016
  Batch   40/48 | Loss: 3.1674 | LR: 5.47e-04 | GradNorm: 1.315
  Batch   44/48 | Loss: 3.1828 | LR: 5.08e-04 | GradNorm: 0.980
Epoch 8/10: Train=17.73%, Val=9.74%, Gap=7.99%, LR=4.79e-04
  Batch    0/48 | Loss: 3.1420 | LR: 4.70e-04 | GradNorm: 0.949
  Batch    4/48 | Loss: 3.1240 | LR: 4.33e-04 | GradNorm: 1.316
  Batch    8/48 | Loss: 3.1976 | LR: 3.97e-04 | GradNorm: 1.883
  Batch   12/48 | Loss: 3.1577 | LR: 3.63e-04 | GradNorm: 0.627
  Batch   16/48 | Loss: 3.1071 | LR: 3.30e-04 | GradNorm: 0.962
  Batch   20/48 | Loss: 3.1216 | LR: 2.98e-04 | GradNorm: 2.047
  Batch   24/48 | Loss: 3.1729 | LR: 2.68e-04 | GradNorm: 1.965
  Batch   28/48 | Loss: 3.1162 | LR: 2.40e-04 | GradNorm: 1.236
  Batch   32/48 | Loss: 3.0940 | LR: 2.13e-04 | GradNorm: 1.170
  Batch   36/48 | Loss: 3.1105 | LR: 1.87e-04 | GradNorm: 0.655
  Batch   40/48 | Loss: 3.0659 | LR: 1.63e-04 | GradNorm: 0.778
  Batch   44/48 | Loss: 3.1037 | LR: 1.40e-04 | GradNorm: 1.054
Epoch 9/10: Train=20.37%, Val=8.64%, Gap=11.73%, LR=1.25e-04
  Batch    0/48 | Loss: 3.0905 | LR: 1.20e-04 | GradNorm: 1.488
  Batch    4/48 | Loss: 3.1012 | LR: 1.00e-04 | GradNorm: 1.439
  Batch    8/48 | Loss: 3.0525 | LR: 8.27e-05 | GradNorm: 0.907
  Batch   12/48 | Loss: 3.0402 | LR: 6.67e-05 | GradNorm: 1.108
  Batch   16/48 | Loss: 3.0605 | LR: 5.24e-05 | GradNorm: 1.159
  Batch   20/48 | Loss: 3.0417 | LR: 3.98e-05 | GradNorm: 1.127
  Batch   24/48 | Loss: 3.0609 | LR: 2.90e-05 | GradNorm: 0.786
  Batch   28/48 | Loss: 3.0872 | LR: 1.98e-05 | GradNorm: 0.597
  Batch   32/48 | Loss: 3.1078 | LR: 1.24e-05 | GradNorm: 0.837
  Batch   36/48 | Loss: 3.1050 | LR: 6.72e-06 | GradNorm: 1.340
  Batch   40/48 | Loss: 3.0530 | LR: 2.78e-06 | GradNorm: 1.265
  Batch   44/48 | Loss: 3.0835 | LR: 5.93e-07 | GradNorm: 0.775
Epoch 10/10: Train=22.13%, Val=9.44%, Gap=12.69%, LR=1.00e-07
Best validation accuracy: 11.58%
