=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002690695056518151
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9386 | LR: 5.47e-06 | GradNorm: 1.589
  Batch    4/48 | Loss: 3.9314 | LR: 1.66e-05 | GradNorm: 1.159
  Batch    8/48 | Loss: 3.9236 | LR: 2.77e-05 | GradNorm: 1.016
  Batch   12/48 | Loss: 3.9165 | LR: 3.88e-05 | GradNorm: 0.899
  Batch   16/48 | Loss: 3.9204 | LR: 4.99e-05 | GradNorm: 0.785
  Batch   20/48 | Loss: 3.9158 | LR: 6.10e-05 | GradNorm: 0.758
  Batch   24/48 | Loss: 3.9126 | LR: 7.21e-05 | GradNorm: 0.705
  Batch   28/48 | Loss: 3.9197 | LR: 8.32e-05 | GradNorm: 0.709
  Batch   32/48 | Loss: 3.9052 | LR: 9.43e-05 | GradNorm: 0.574
  Batch   36/48 | Loss: 3.9036 | LR: 1.05e-04 | GradNorm: 0.567
  Batch   40/48 | Loss: 3.8939 | LR: 1.16e-04 | GradNorm: 0.612
  Batch   44/48 | Loss: 3.8622 | LR: 1.28e-04 | GradNorm: 0.904
Epoch 1/10: Train=2.48%, Val=3.97%, Gap=-1.49%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8200 | LR: 1.39e-04 | GradNorm: 2.461
  Batch    4/48 | Loss: 3.8031 | LR: 1.50e-04 | GradNorm: 4.589
  Batch    8/48 | Loss: 3.7591 | LR: 1.61e-04 | GradNorm: 3.104
  Batch   12/48 | Loss: 3.7341 | LR: 1.72e-04 | GradNorm: 5.298
  Batch   16/48 | Loss: 3.7468 | LR: 1.83e-04 | GradNorm: 3.978
  Batch   20/48 | Loss: 3.7289 | LR: 1.94e-04 | GradNorm: 3.831
  Batch   24/48 | Loss: 3.6523 | LR: 2.05e-04 | GradNorm: 3.242
  Batch   28/48 | Loss: 3.6844 | LR: 2.16e-04 | GradNorm: 6.037
  Batch   32/48 | Loss: 3.6666 | LR: 2.27e-04 | GradNorm: 4.379
  Batch   36/48 | Loss: 3.6158 | LR: 2.39e-04 | GradNorm: 2.551
  Batch   40/48 | Loss: 3.6312 | LR: 2.50e-04 | GradNorm: 5.819
  Batch   44/48 | Loss: 3.6850 | LR: 2.61e-04 | GradNorm: 17.492
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.13%, Val=7.77%, Gap=-0.64%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6125 | LR: 2.69e-04 | GradNorm: 4.776
  Batch    4/48 | Loss: 3.5597 | LR: 2.69e-04 | GradNorm: 1.292
  Batch    8/48 | Loss: 3.5942 | LR: 2.69e-04 | GradNorm: 10.273
  Batch   12/48 | Loss: 3.5304 | LR: 2.68e-04 | GradNorm: 2.097
  Batch   16/48 | Loss: 3.5617 | LR: 2.68e-04 | GradNorm: 6.402
  Batch   20/48 | Loss: 3.4908 | LR: 2.67e-04 | GradNorm: 1.475
  Batch   24/48 | Loss: 3.5551 | LR: 2.66e-04 | GradNorm: 4.903
  Batch   28/48 | Loss: 3.4860 | LR: 2.65e-04 | GradNorm: 3.080
  Batch   32/48 | Loss: 3.4794 | LR: 2.64e-04 | GradNorm: 4.497
  Batch   36/48 | Loss: 3.4626 | LR: 2.63e-04 | GradNorm: 3.717
  Batch   40/48 | Loss: 3.4150 | LR: 2.62e-04 | GradNorm: 2.689
  Batch   44/48 | Loss: 3.3963 | LR: 2.60e-04 | GradNorm: 3.384
Epoch 3/10: Train=10.99%, Val=9.39%, Gap=1.60%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3749 | LR: 2.58e-04 | GradNorm: 2.861
  Batch    4/48 | Loss: 3.3509 | LR: 2.57e-04 | GradNorm: 3.604
  Batch    8/48 | Loss: 3.3291 | LR: 2.55e-04 | GradNorm: 2.987
  Batch   12/48 | Loss: 3.2667 | LR: 2.53e-04 | GradNorm: 2.454
  Batch   16/48 | Loss: 3.2983 | LR: 2.50e-04 | GradNorm: 5.622
  Batch   20/48 | Loss: 3.2714 | LR: 2.48e-04 | GradNorm: 3.506
  Batch   24/48 | Loss: 3.2928 | LR: 2.46e-04 | GradNorm: 6.380
  Batch   28/48 | Loss: 3.2120 | LR: 2.43e-04 | GradNorm: 2.758
  Batch   32/48 | Loss: 3.2484 | LR: 2.41e-04 | GradNorm: 4.628
  Batch   36/48 | Loss: 3.1908 | LR: 2.38e-04 | GradNorm: 2.531
  Batch   40/48 | Loss: 3.2235 | LR: 2.35e-04 | GradNorm: 3.782
  Batch   44/48 | Loss: 3.2166 | LR: 2.32e-04 | GradNorm: 6.081
Epoch 4/10: Train=17.05%, Val=11.93%, Gap=5.12%, LR=2.30e-04
  Batch    0/48 | Loss: 3.2284 | LR: 2.29e-04 | GradNorm: 7.347
  Batch    4/48 | Loss: 3.2258 | LR: 2.26e-04 | GradNorm: 9.380
  Batch    8/48 | Loss: 3.1381 | LR: 2.22e-04 | GradNorm: 4.188
  Batch   12/48 | Loss: 3.0700 | LR: 2.19e-04 | GradNorm: 2.667
  Batch   16/48 | Loss: 3.1280 | LR: 2.16e-04 | GradNorm: 2.637
  Batch   20/48 | Loss: 3.0958 | LR: 2.12e-04 | GradNorm: 4.960
  Batch   24/48 | Loss: 3.0876 | LR: 2.08e-04 | GradNorm: 4.275
  Batch   28/48 | Loss: 3.0436 | LR: 2.05e-04 | GradNorm: 5.021
  Batch   32/48 | Loss: 3.0323 | LR: 2.01e-04 | GradNorm: 7.391
  Batch   36/48 | Loss: 3.0572 | LR: 1.97e-04 | GradNorm: 3.277
  Batch   40/48 | Loss: 3.0681 | LR: 1.93e-04 | GradNorm: 4.370
  Batch   44/48 | Loss: 3.0349 | LR: 1.89e-04 | GradNorm: 6.151
Epoch 5/10: Train=22.67%, Val=16.79%, Gap=5.88%, LR=1.86e-04
  Batch    0/48 | Loss: 2.9428 | LR: 1.85e-04 | GradNorm: 5.538
  Batch    4/48 | Loss: 2.9635 | LR: 1.81e-04 | GradNorm: 6.028
  Batch    8/48 | Loss: 2.9296 | LR: 1.77e-04 | GradNorm: 5.143
  Batch   12/48 | Loss: 2.9094 | LR: 1.73e-04 | GradNorm: 3.099
  Batch   16/48 | Loss: 2.9716 | LR: 1.68e-04 | GradNorm: 10.592
  Batch   20/48 | Loss: 2.8826 | LR: 1.64e-04 | GradNorm: 4.168
  Batch   24/48 | Loss: 2.8469 | LR: 1.60e-04 | GradNorm: 3.681
  Batch   28/48 | Loss: 2.8430 | LR: 1.55e-04 | GradNorm: 4.647
  Batch   32/48 | Loss: 2.8617 | LR: 1.51e-04 | GradNorm: 8.320
  Batch   36/48 | Loss: 2.8795 | LR: 1.47e-04 | GradNorm: 5.568
  Batch   40/48 | Loss: 2.8822 | LR: 1.42e-04 | GradNorm: 6.835
  Batch   44/48 | Loss: 2.9140 | LR: 1.38e-04 | GradNorm: 5.298
Epoch 6/10: Train=28.46%, Val=19.35%, Gap=9.11%, LR=1.35e-04
  Batch    0/48 | Loss: 2.8160 | LR: 1.33e-04 | GradNorm: 5.998
  Batch    4/48 | Loss: 2.8249 | LR: 1.29e-04 | GradNorm: 5.447
  Batch    8/48 | Loss: 2.7802 | LR: 1.25e-04 | GradNorm: 3.729
  Batch   12/48 | Loss: 2.7237 | LR: 1.20e-04 | GradNorm: 6.872
  Batch   16/48 | Loss: 2.7358 | LR: 1.16e-04 | GradNorm: 4.501
  Batch   20/48 | Loss: 2.7615 | LR: 1.12e-04 | GradNorm: 5.078
  Batch   24/48 | Loss: 2.8026 | LR: 1.07e-04 | GradNorm: 7.655
  Batch   28/48 | Loss: 2.7591 | LR: 1.03e-04 | GradNorm: 3.475
  Batch   32/48 | Loss: 2.7657 | LR: 9.87e-05 | GradNorm: 6.426
  Batch   36/48 | Loss: 2.7817 | LR: 9.45e-05 | GradNorm: 7.088
  Batch   40/48 | Loss: 2.7051 | LR: 9.03e-05 | GradNorm: 5.665
  Batch   44/48 | Loss: 2.7195 | LR: 8.62e-05 | GradNorm: 7.614
Epoch 7/10: Train=33.16%, Val=24.43%, Gap=8.73%, LR=8.31e-05
  Batch    0/48 | Loss: 2.7137 | LR: 8.21e-05 | GradNorm: 5.158
  Batch    4/48 | Loss: 2.6442 | LR: 7.81e-05 | GradNorm: 5.041
  Batch    8/48 | Loss: 2.6798 | LR: 7.41e-05 | GradNorm: 7.250
  Batch   12/48 | Loss: 2.6865 | LR: 7.02e-05 | GradNorm: 6.050
  Batch   16/48 | Loss: 2.7153 | LR: 6.64e-05 | GradNorm: 5.305
  Batch   20/48 | Loss: 2.6415 | LR: 6.26e-05 | GradNorm: 5.298
  Batch   24/48 | Loss: 2.6498 | LR: 5.90e-05 | GradNorm: 8.070
  Batch   28/48 | Loss: 2.6861 | LR: 5.54e-05 | GradNorm: 8.297
  Batch   32/48 | Loss: 2.6533 | LR: 5.18e-05 | GradNorm: 6.733
  Batch   36/48 | Loss: 2.6444 | LR: 4.84e-05 | GradNorm: 4.691
  Batch   40/48 | Loss: 2.5831 | LR: 4.51e-05 | GradNorm: 3.686
  Batch   44/48 | Loss: 2.6754 | LR: 4.19e-05 | GradNorm: 8.634
Epoch 8/10: Train=36.28%, Val=24.52%, Gap=11.76%, LR=3.95e-05
  Batch    0/48 | Loss: 2.6267 | LR: 3.87e-05 | GradNorm: 6.797
  Batch    4/48 | Loss: 2.6293 | LR: 3.57e-05 | GradNorm: 7.092
  Batch    8/48 | Loss: 2.6663 | LR: 3.28e-05 | GradNorm: 7.532
  Batch   12/48 | Loss: 2.6308 | LR: 2.99e-05 | GradNorm: 7.055
  Batch   16/48 | Loss: 2.5528 | LR: 2.72e-05 | GradNorm: 5.561
  Batch   20/48 | Loss: 2.5775 | LR: 2.46e-05 | GradNorm: 5.114
  Batch   24/48 | Loss: 2.5973 | LR: 2.22e-05 | GradNorm: 4.946
  Batch   28/48 | Loss: 2.6081 | LR: 1.98e-05 | GradNorm: 3.453
  Batch   32/48 | Loss: 2.5878 | LR: 1.76e-05 | GradNorm: 2.849
  Batch   36/48 | Loss: 2.5779 | LR: 1.55e-05 | GradNorm: 4.359
  Batch   40/48 | Loss: 2.5737 | LR: 1.35e-05 | GradNorm: 5.789
  Batch   44/48 | Loss: 2.5733 | LR: 1.16e-05 | GradNorm: 4.526
Epoch 9/10: Train=38.27%, Val=25.57%, Gap=12.70%, LR=1.03e-05
  Batch    0/48 | Loss: 2.5727 | LR: 9.92e-06 | GradNorm: 4.254
  Batch    4/48 | Loss: 2.5854 | LR: 8.34e-06 | GradNorm: 4.460
  Batch    8/48 | Loss: 2.5646 | LR: 6.89e-06 | GradNorm: 2.997
  Batch   12/48 | Loss: 2.5708 | LR: 5.58e-06 | GradNorm: 3.847
  Batch   16/48 | Loss: 2.5675 | LR: 4.40e-06 | GradNorm: 3.355
  Batch   20/48 | Loss: 2.5794 | LR: 3.37e-06 | GradNorm: 3.571
  Batch   24/48 | Loss: 2.5776 | LR: 2.47e-06 | GradNorm: 6.051
  Batch   28/48 | Loss: 2.6024 | LR: 1.72e-06 | GradNorm: 3.351
  Batch   32/48 | Loss: 2.5950 | LR: 1.11e-06 | GradNorm: 4.470
  Batch   36/48 | Loss: 2.5588 | LR: 6.44e-07 | GradNorm: 3.079
  Batch   40/48 | Loss: 2.5438 | LR: 3.20e-07 | GradNorm: 3.477
  Batch   44/48 | Loss: 2.5471 | LR: 1.41e-07 | GradNorm: 3.553
Epoch 10/10: Train=39.35%, Val=25.52%, Gap=13.83%, LR=1.00e-07
Best validation accuracy: 25.57%
