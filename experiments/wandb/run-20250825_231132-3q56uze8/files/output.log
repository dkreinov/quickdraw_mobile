=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004466480816970287
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9415 | LR: 9.07e-06 | GradNorm: 1.388
  Batch    4/48 | Loss: 3.9304 | LR: 2.75e-05 | GradNorm: 1.115
  Batch    8/48 | Loss: 3.9182 | LR: 4.59e-05 | GradNorm: 0.754
  Batch   12/48 | Loss: 3.9142 | LR: 6.43e-05 | GradNorm: 0.646
  Batch   16/48 | Loss: 3.9199 | LR: 8.28e-05 | GradNorm: 0.543
  Batch   20/48 | Loss: 3.9168 | LR: 1.01e-04 | GradNorm: 0.584
  Batch   24/48 | Loss: 3.9140 | LR: 1.20e-04 | GradNorm: 0.581
  Batch   28/48 | Loss: 3.9174 | LR: 1.38e-04 | GradNorm: 0.525
  Batch   32/48 | Loss: 3.9084 | LR: 1.56e-04 | GradNorm: 0.463
  Batch   36/48 | Loss: 3.9101 | LR: 1.75e-04 | GradNorm: 0.495
  Batch   40/48 | Loss: 3.8952 | LR: 1.93e-04 | GradNorm: 0.539
  Batch   44/48 | Loss: 3.8528 | LR: 2.12e-04 | GradNorm: 0.626
Epoch 1/10: Train=2.69%, Val=4.89%, Gap=-2.20%, LR=2.26e-04
  Batch    0/48 | Loss: 3.7870 | LR: 2.30e-04 | GradNorm: 0.862
  Batch    4/48 | Loss: 3.7887 | LR: 2.49e-04 | GradNorm: 4.323
  Batch    8/48 | Loss: 3.7887 | LR: 2.67e-04 | GradNorm: 3.478
  Batch   12/48 | Loss: 3.7171 | LR: 2.85e-04 | GradNorm: 1.872
  Batch   16/48 | Loss: 3.7632 | LR: 3.04e-04 | GradNorm: 4.284
  Batch   20/48 | Loss: 3.7758 | LR: 3.22e-04 | GradNorm: 4.888
  Batch   24/48 | Loss: 3.6899 | LR: 3.41e-04 | GradNorm: 4.062
  Batch   28/48 | Loss: 3.6778 | LR: 3.59e-04 | GradNorm: 2.365
  Batch   32/48 | Loss: 3.6440 | LR: 3.78e-04 | GradNorm: 2.673
  Batch   36/48 | Loss: 3.7037 | LR: 3.96e-04 | GradNorm: 4.616
  Batch   40/48 | Loss: 3.6043 | LR: 4.14e-04 | GradNorm: 1.623
  Batch   44/48 | Loss: 3.5283 | LR: 4.33e-04 | GradNorm: 2.233
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.19%, Val=9.22%, Gap=-2.03%, LR=4.47e-04
  Batch    0/48 | Loss: 3.4917 | LR: 4.47e-04 | GradNorm: 2.147
  Batch    4/48 | Loss: 3.4895 | LR: 4.46e-04 | GradNorm: 2.004
  Batch    8/48 | Loss: 3.4260 | LR: 4.46e-04 | GradNorm: 2.076
  Batch   12/48 | Loss: 3.4360 | LR: 4.45e-04 | GradNorm: 2.676
  Batch   16/48 | Loss: 3.5621 | LR: 4.44e-04 | GradNorm: 4.688
  Batch   20/48 | Loss: 3.5002 | LR: 4.43e-04 | GradNorm: 5.010
  Batch   24/48 | Loss: 3.4170 | LR: 4.42e-04 | GradNorm: 2.204
  Batch   28/48 | Loss: 3.3794 | LR: 4.40e-04 | GradNorm: 2.559
  Batch   32/48 | Loss: 3.4440 | LR: 4.39e-04 | GradNorm: 5.220
  Batch   36/48 | Loss: 3.3448 | LR: 4.36e-04 | GradNorm: 1.207
  Batch   40/48 | Loss: 3.3654 | LR: 4.34e-04 | GradNorm: 7.950
  Batch   44/48 | Loss: 3.3558 | LR: 4.32e-04 | GradNorm: 3.878
Epoch 3/10: Train=13.01%, Val=8.29%, Gap=4.72%, LR=4.30e-04
  Batch    0/48 | Loss: 3.3140 | LR: 4.29e-04 | GradNorm: 3.494
  Batch    4/48 | Loss: 3.2355 | LR: 4.26e-04 | GradNorm: 1.328
  Batch    8/48 | Loss: 3.3759 | LR: 4.23e-04 | GradNorm: 4.501
  Batch   12/48 | Loss: 3.1996 | LR: 4.19e-04 | GradNorm: 1.759
  Batch   16/48 | Loss: 3.2681 | LR: 4.16e-04 | GradNorm: 4.236
  Batch   20/48 | Loss: 3.2031 | LR: 4.12e-04 | GradNorm: 2.456
  Batch   24/48 | Loss: 3.2287 | LR: 4.08e-04 | GradNorm: 3.184
  Batch   28/48 | Loss: 3.2096 | LR: 4.04e-04 | GradNorm: 3.150
  Batch   32/48 | Loss: 3.1795 | LR: 3.99e-04 | GradNorm: 1.708
  Batch   36/48 | Loss: 3.1309 | LR: 3.95e-04 | GradNorm: 1.559
  Batch   40/48 | Loss: 3.1610 | LR: 3.90e-04 | GradNorm: 2.376
  Batch   44/48 | Loss: 3.1277 | LR: 3.85e-04 | GradNorm: 2.912
Epoch 4/10: Train=17.29%, Val=12.54%, Gap=4.75%, LR=3.81e-04
  Batch    0/48 | Loss: 3.0522 | LR: 3.80e-04 | GradNorm: 1.238
  Batch    4/48 | Loss: 3.0392 | LR: 3.75e-04 | GradNorm: 2.722
  Batch    8/48 | Loss: 3.0395 | LR: 3.69e-04 | GradNorm: 2.412
  Batch   12/48 | Loss: 3.0405 | LR: 3.64e-04 | GradNorm: 2.651
  Batch   16/48 | Loss: 3.0762 | LR: 3.58e-04 | GradNorm: 2.679
  Batch   20/48 | Loss: 3.0189 | LR: 3.52e-04 | GradNorm: 3.868
  Batch   24/48 | Loss: 3.0185 | LR: 3.46e-04 | GradNorm: 2.297
  Batch   28/48 | Loss: 2.9478 | LR: 3.40e-04 | GradNorm: 2.316
  Batch   32/48 | Loss: 2.9539 | LR: 3.33e-04 | GradNorm: 4.470
  Batch   36/48 | Loss: 3.0033 | LR: 3.27e-04 | GradNorm: 2.455
  Batch   40/48 | Loss: 2.9931 | LR: 3.20e-04 | GradNorm: 4.636
  Batch   44/48 | Loss: 2.9453 | LR: 3.14e-04 | GradNorm: 4.673
Epoch 5/10: Train=24.22%, Val=13.88%, Gap=10.34%, LR=3.09e-04
  Batch    0/48 | Loss: 2.9059 | LR: 3.07e-04 | GradNorm: 3.789
  Batch    4/48 | Loss: 2.9542 | LR: 3.00e-04 | GradNorm: 10.290
  Batch    8/48 | Loss: 2.9089 | LR: 2.93e-04 | GradNorm: 5.844
  Batch   12/48 | Loss: 2.8451 | LR: 2.86e-04 | GradNorm: 2.166
  Batch   16/48 | Loss: 2.8133 | LR: 2.79e-04 | GradNorm: 2.176
  Batch   20/48 | Loss: 2.8080 | LR: 2.72e-04 | GradNorm: 2.362
  Batch   24/48 | Loss: 2.8717 | LR: 2.65e-04 | GradNorm: 5.893
  Batch   28/48 | Loss: 2.7667 | LR: 2.58e-04 | GradNorm: 3.820
  Batch   32/48 | Loss: 2.7598 | LR: 2.51e-04 | GradNorm: 2.571
  Batch   36/48 | Loss: 2.8314 | LR: 2.43e-04 | GradNorm: 4.389
  Batch   40/48 | Loss: 2.7800 | LR: 2.36e-04 | GradNorm: 3.503
  Batch   44/48 | Loss: 2.8553 | LR: 2.29e-04 | GradNorm: 5.954
Epoch 6/10: Train=29.03%, Val=18.92%, Gap=10.11%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7490 | LR: 2.22e-04 | GradNorm: 2.529
  Batch    4/48 | Loss: 2.7737 | LR: 2.14e-04 | GradNorm: 3.192
  Batch    8/48 | Loss: 2.7303 | LR: 2.07e-04 | GradNorm: 3.716
  Batch   12/48 | Loss: 2.6684 | LR: 2.00e-04 | GradNorm: 4.644
  Batch   16/48 | Loss: 2.7740 | LR: 1.92e-04 | GradNorm: 8.092
  Batch   20/48 | Loss: 2.7718 | LR: 1.85e-04 | GradNorm: 5.277
  Batch   24/48 | Loss: 2.7465 | LR: 1.78e-04 | GradNorm: 5.630
  Batch   28/48 | Loss: 2.7464 | LR: 1.71e-04 | GradNorm: 3.538
  Batch   32/48 | Loss: 2.6894 | LR: 1.64e-04 | GradNorm: 3.263
  Batch   36/48 | Loss: 2.7249 | LR: 1.57e-04 | GradNorm: 3.189
  Batch   40/48 | Loss: 2.7019 | LR: 1.50e-04 | GradNorm: 2.893
  Batch   44/48 | Loss: 2.6735 | LR: 1.43e-04 | GradNorm: 3.443
Epoch 7/10: Train=33.09%, Val=19.56%, Gap=13.53%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6810 | LR: 1.36e-04 | GradNorm: 1.808
  Batch    4/48 | Loss: 2.6171 | LR: 1.30e-04 | GradNorm: 3.107
  Batch    8/48 | Loss: 2.6268 | LR: 1.23e-04 | GradNorm: 2.428
  Batch   12/48 | Loss: 2.6711 | LR: 1.17e-04 | GradNorm: 3.495
  Batch   16/48 | Loss: 2.7189 | LR: 1.10e-04 | GradNorm: 4.358
  Batch   20/48 | Loss: 2.5906 | LR: 1.04e-04 | GradNorm: 3.289
  Batch   24/48 | Loss: 2.5751 | LR: 9.78e-05 | GradNorm: 3.494
  Batch   28/48 | Loss: 2.6158 | LR: 9.18e-05 | GradNorm: 2.357
  Batch   32/48 | Loss: 2.6294 | LR: 8.60e-05 | GradNorm: 3.032
  Batch   36/48 | Loss: 2.5975 | LR: 8.03e-05 | GradNorm: 3.791
  Batch   40/48 | Loss: 2.5786 | LR: 7.48e-05 | GradNorm: 4.826
  Batch   44/48 | Loss: 2.6015 | LR: 6.94e-05 | GradNorm: 3.409
Epoch 8/10: Train=36.27%, Val=22.72%, Gap=13.55%, LR=6.55e-05
  Batch    0/48 | Loss: 2.5488 | LR: 6.42e-05 | GradNorm: 2.048
  Batch    4/48 | Loss: 2.5631 | LR: 5.92e-05 | GradNorm: 2.981
  Batch    8/48 | Loss: 2.6190 | LR: 5.43e-05 | GradNorm: 2.381
  Batch   12/48 | Loss: 2.5458 | LR: 4.96e-05 | GradNorm: 2.750
  Batch   16/48 | Loss: 2.5089 | LR: 4.51e-05 | GradNorm: 3.170
  Batch   20/48 | Loss: 2.5084 | LR: 4.08e-05 | GradNorm: 2.824
  Batch   24/48 | Loss: 2.5504 | LR: 3.67e-05 | GradNorm: 1.899
  Batch   28/48 | Loss: 2.5533 | LR: 3.28e-05 | GradNorm: 1.956
  Batch   32/48 | Loss: 2.5305 | LR: 2.91e-05 | GradNorm: 2.868
  Batch   36/48 | Loss: 2.5110 | LR: 2.56e-05 | GradNorm: 2.482
  Batch   40/48 | Loss: 2.5217 | LR: 2.23e-05 | GradNorm: 1.924
  Batch   44/48 | Loss: 2.5502 | LR: 1.93e-05 | GradNorm: 2.016
Epoch 9/10: Train=38.59%, Val=22.61%, Gap=15.98%, LR=1.71e-05
  Batch    0/48 | Loss: 2.5204 | LR: 1.64e-05 | GradNorm: 2.975
  Batch    4/48 | Loss: 2.5340 | LR: 1.38e-05 | GradNorm: 1.950
  Batch    8/48 | Loss: 2.4709 | LR: 1.14e-05 | GradNorm: 2.267
  Batch   12/48 | Loss: 2.5015 | LR: 9.19e-06 | GradNorm: 2.138
  Batch   16/48 | Loss: 2.5072 | LR: 7.24e-06 | GradNorm: 1.630
  Batch   20/48 | Loss: 2.5349 | LR: 5.53e-06 | GradNorm: 3.908
  Batch   24/48 | Loss: 2.5407 | LR: 4.04e-06 | GradNorm: 2.697
  Batch   28/48 | Loss: 2.5495 | LR: 2.79e-06 | GradNorm: 1.917
  Batch   32/48 | Loss: 2.5330 | LR: 1.78e-06 | GradNorm: 2.671
  Batch   36/48 | Loss: 2.4989 | LR: 1.00e-06 | GradNorm: 1.396
  Batch   40/48 | Loss: 2.4649 | LR: 4.66e-07 | GradNorm: 2.593
  Batch   44/48 | Loss: 2.4914 | LR: 1.67e-07 | GradNorm: 2.465
Epoch 10/10: Train=39.90%, Val=22.39%, Gap=17.51%, LR=1.00e-07
Best validation accuracy: 22.72%
