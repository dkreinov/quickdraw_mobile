=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002909198524146729
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9604 | LR: 5.91e-06 | GradNorm: 1.697
  Batch    4/48 | Loss: 3.9288 | LR: 1.79e-05 | GradNorm: 0.978
  Batch    8/48 | Loss: 3.9270 | LR: 2.99e-05 | GradNorm: 1.122
  Batch   12/48 | Loss: 3.9158 | LR: 4.19e-05 | GradNorm: 0.702
  Batch   16/48 | Loss: 3.9224 | LR: 5.39e-05 | GradNorm: 0.660
  Batch   20/48 | Loss: 3.9166 | LR: 6.59e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9186 | LR: 7.79e-05 | GradNorm: 0.675
  Batch   28/48 | Loss: 3.9125 | LR: 8.99e-05 | GradNorm: 0.513
  Batch   32/48 | Loss: 3.9120 | LR: 1.02e-04 | GradNorm: 0.538
  Batch   36/48 | Loss: 3.9112 | LR: 1.14e-04 | GradNorm: 0.522
  Batch   40/48 | Loss: 3.9030 | LR: 1.26e-04 | GradNorm: 0.522
  Batch   44/48 | Loss: 3.8896 | LR: 1.38e-04 | GradNorm: 0.579
Epoch 1/10: Train=2.40%, Val=4.24%, Gap=-1.84%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8595 | LR: 1.50e-04 | GradNorm: 1.027
  Batch    4/48 | Loss: 3.8046 | LR: 1.62e-04 | GradNorm: 0.642
  Batch    8/48 | Loss: 3.8465 | LR: 1.74e-04 | GradNorm: 6.025
  Batch   12/48 | Loss: 3.9394 | LR: 1.86e-04 | GradNorm: 5.629
  Batch   16/48 | Loss: 3.9328 | LR: 1.98e-04 | GradNorm: 3.320
  Batch   20/48 | Loss: 3.7523 | LR: 2.10e-04 | GradNorm: 1.130
  Batch   24/48 | Loss: 3.7878 | LR: 2.22e-04 | GradNorm: 4.313
  Batch   28/48 | Loss: 3.7471 | LR: 2.34e-04 | GradNorm: 3.923
  Batch   32/48 | Loss: 3.6990 | LR: 2.46e-04 | GradNorm: 1.717
  Batch   36/48 | Loss: 3.6874 | LR: 2.58e-04 | GradNorm: 2.911
  Batch   40/48 | Loss: 3.6711 | LR: 2.70e-04 | GradNorm: 5.659
  Batch   44/48 | Loss: 3.8044 | LR: 2.82e-04 | GradNorm: 8.017
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.62%, Val=5.57%, Gap=0.05%, LR=2.91e-04
  Batch    0/48 | Loss: 3.6432 | LR: 2.91e-04 | GradNorm: 3.782
  Batch    4/48 | Loss: 3.5993 | LR: 2.91e-04 | GradNorm: 1.724
  Batch    8/48 | Loss: 3.6576 | LR: 2.91e-04 | GradNorm: 5.443
  Batch   12/48 | Loss: 3.6006 | LR: 2.90e-04 | GradNorm: 2.204
  Batch   16/48 | Loss: 3.7240 | LR: 2.90e-04 | GradNorm: 3.139
  Batch   20/48 | Loss: 3.5831 | LR: 2.89e-04 | GradNorm: 1.858
  Batch   24/48 | Loss: 3.5149 | LR: 2.88e-04 | GradNorm: 0.925
  Batch   28/48 | Loss: 3.4818 | LR: 2.87e-04 | GradNorm: 6.526
  Batch   32/48 | Loss: 3.4505 | LR: 2.86e-04 | GradNorm: 2.311
  Batch   36/48 | Loss: 3.4555 | LR: 2.84e-04 | GradNorm: 3.334
  Batch   40/48 | Loss: 3.4093 | LR: 2.83e-04 | GradNorm: 3.219
  Batch   44/48 | Loss: 3.4217 | LR: 2.81e-04 | GradNorm: 3.745
Epoch 3/10: Train=10.62%, Val=13.41%, Gap=-2.79%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3650 | LR: 2.79e-04 | GradNorm: 2.282
  Batch    4/48 | Loss: 3.3660 | LR: 2.77e-04 | GradNorm: 3.265
  Batch    8/48 | Loss: 3.3791 | LR: 2.75e-04 | GradNorm: 4.729
  Batch   12/48 | Loss: 3.2896 | LR: 2.73e-04 | GradNorm: 2.716
  Batch   16/48 | Loss: 3.3017 | LR: 2.71e-04 | GradNorm: 2.799
  Batch   20/48 | Loss: 3.3423 | LR: 2.68e-04 | GradNorm: 5.336
  Batch   24/48 | Loss: 3.3338 | LR: 2.66e-04 | GradNorm: 3.843
  Batch   28/48 | Loss: 3.2544 | LR: 2.63e-04 | GradNorm: 3.064
  Batch   32/48 | Loss: 3.2722 | LR: 2.60e-04 | GradNorm: 2.213
  Batch   36/48 | Loss: 3.2375 | LR: 2.57e-04 | GradNorm: 1.730
  Batch   40/48 | Loss: 3.2676 | LR: 2.54e-04 | GradNorm: 2.310
  Batch   44/48 | Loss: 3.2509 | LR: 2.51e-04 | GradNorm: 3.202
Epoch 4/10: Train=16.09%, Val=13.51%, Gap=2.58%, LR=2.48e-04
  Batch    0/48 | Loss: 3.2016 | LR: 2.47e-04 | GradNorm: 1.696
  Batch    4/48 | Loss: 3.1421 | LR: 2.44e-04 | GradNorm: 1.628
  Batch    8/48 | Loss: 3.1825 | LR: 2.40e-04 | GradNorm: 5.119
  Batch   12/48 | Loss: 3.1473 | LR: 2.37e-04 | GradNorm: 3.113
  Batch   16/48 | Loss: 3.2440 | LR: 2.33e-04 | GradNorm: 4.798
  Batch   20/48 | Loss: 3.1559 | LR: 2.29e-04 | GradNorm: 2.422
  Batch   24/48 | Loss: 3.1825 | LR: 2.25e-04 | GradNorm: 3.151
  Batch   28/48 | Loss: 3.1451 | LR: 2.21e-04 | GradNorm: 3.430
  Batch   32/48 | Loss: 3.1166 | LR: 2.17e-04 | GradNorm: 2.816
  Batch   36/48 | Loss: 3.1679 | LR: 2.13e-04 | GradNorm: 3.380
  Batch   40/48 | Loss: 3.1475 | LR: 2.09e-04 | GradNorm: 2.546
  Batch   44/48 | Loss: 3.0934 | LR: 2.04e-04 | GradNorm: 2.779
Epoch 5/10: Train=19.79%, Val=13.48%, Gap=6.31%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0562 | LR: 2.00e-04 | GradNorm: 2.007
  Batch    4/48 | Loss: 3.0123 | LR: 1.96e-04 | GradNorm: 3.013
  Batch    8/48 | Loss: 3.0224 | LR: 1.91e-04 | GradNorm: 2.900
  Batch   12/48 | Loss: 3.0226 | LR: 1.87e-04 | GradNorm: 5.356
  Batch   16/48 | Loss: 3.0174 | LR: 1.82e-04 | GradNorm: 4.785
  Batch   20/48 | Loss: 2.9871 | LR: 1.77e-04 | GradNorm: 2.649
  Batch   24/48 | Loss: 2.9860 | LR: 1.73e-04 | GradNorm: 4.488
  Batch   28/48 | Loss: 2.9437 | LR: 1.68e-04 | GradNorm: 4.649
  Batch   32/48 | Loss: 2.9290 | LR: 1.63e-04 | GradNorm: 5.461
  Batch   36/48 | Loss: 2.9785 | LR: 1.59e-04 | GradNorm: 4.627
  Batch   40/48 | Loss: 2.9299 | LR: 1.54e-04 | GradNorm: 4.310
  Batch   44/48 | Loss: 2.9997 | LR: 1.49e-04 | GradNorm: 3.014
Epoch 6/10: Train=24.90%, Val=14.70%, Gap=10.20%, LR=1.46e-04
  Batch    0/48 | Loss: 2.9435 | LR: 1.44e-04 | GradNorm: 7.254
  Batch    4/48 | Loss: 2.9351 | LR: 1.40e-04 | GradNorm: 5.697
  Batch    8/48 | Loss: 2.9169 | LR: 1.35e-04 | GradNorm: 4.396
  Batch   12/48 | Loss: 2.8683 | LR: 1.30e-04 | GradNorm: 5.541
  Batch   16/48 | Loss: 2.8610 | LR: 1.25e-04 | GradNorm: 2.093
  Batch   20/48 | Loss: 2.9098 | LR: 1.21e-04 | GradNorm: 5.739
  Batch   24/48 | Loss: 2.9120 | LR: 1.16e-04 | GradNorm: 5.157
  Batch   28/48 | Loss: 2.8797 | LR: 1.11e-04 | GradNorm: 2.788
  Batch   32/48 | Loss: 2.8929 | LR: 1.07e-04 | GradNorm: 4.480
  Batch   36/48 | Loss: 2.9014 | LR: 1.02e-04 | GradNorm: 5.329
  Batch   40/48 | Loss: 2.8611 | LR: 9.76e-05 | GradNorm: 3.903
  Batch   44/48 | Loss: 2.8400 | LR: 9.32e-05 | GradNorm: 3.991
Epoch 7/10: Train=28.70%, Val=15.17%, Gap=13.53%, LR=8.99e-05
  Batch    0/48 | Loss: 2.8460 | LR: 8.88e-05 | GradNorm: 3.587
  Batch    4/48 | Loss: 2.7739 | LR: 8.44e-05 | GradNorm: 4.430
  Batch    8/48 | Loss: 2.7823 | LR: 8.01e-05 | GradNorm: 2.951
  Batch   12/48 | Loss: 2.8346 | LR: 7.59e-05 | GradNorm: 4.246
  Batch   16/48 | Loss: 2.8390 | LR: 7.18e-05 | GradNorm: 7.217
  Batch   20/48 | Loss: 2.7590 | LR: 6.77e-05 | GradNorm: 6.949
  Batch   24/48 | Loss: 2.7571 | LR: 6.37e-05 | GradNorm: 4.645
  Batch   28/48 | Loss: 2.7735 | LR: 5.98e-05 | GradNorm: 1.494
  Batch   32/48 | Loss: 2.7721 | LR: 5.60e-05 | GradNorm: 3.376
  Batch   36/48 | Loss: 2.7509 | LR: 5.23e-05 | GradNorm: 3.053
  Batch   40/48 | Loss: 2.6997 | LR: 4.87e-05 | GradNorm: 3.368
  Batch   44/48 | Loss: 2.7552 | LR: 4.52e-05 | GradNorm: 3.056
Epoch 8/10: Train=32.22%, Val=16.18%, Gap=16.04%, LR=4.27e-05
  Batch    0/48 | Loss: 2.7138 | LR: 4.19e-05 | GradNorm: 2.251
  Batch    4/48 | Loss: 2.7107 | LR: 3.86e-05 | GradNorm: 3.270
  Batch    8/48 | Loss: 2.7619 | LR: 3.54e-05 | GradNorm: 2.272
  Batch   12/48 | Loss: 2.7056 | LR: 3.24e-05 | GradNorm: 1.599
  Batch   16/48 | Loss: 2.6601 | LR: 2.94e-05 | GradNorm: 2.035
  Batch   20/48 | Loss: 2.6522 | LR: 2.66e-05 | GradNorm: 2.508
  Batch   24/48 | Loss: 2.6894 | LR: 2.39e-05 | GradNorm: 2.940
  Batch   28/48 | Loss: 2.7093 | LR: 2.14e-05 | GradNorm: 2.793
  Batch   32/48 | Loss: 2.6990 | LR: 1.90e-05 | GradNorm: 4.076
  Batch   36/48 | Loss: 2.6850 | LR: 1.67e-05 | GradNorm: 2.606
  Batch   40/48 | Loss: 2.6657 | LR: 1.46e-05 | GradNorm: 2.226
  Batch   44/48 | Loss: 2.6859 | LR: 1.26e-05 | GradNorm: 1.757
Epoch 9/10: Train=34.59%, Val=17.52%, Gap=17.07%, LR=1.12e-05
  Batch    0/48 | Loss: 2.6699 | LR: 1.07e-05 | GradNorm: 3.401
  Batch    4/48 | Loss: 2.7008 | LR: 9.01e-06 | GradNorm: 2.440
  Batch    8/48 | Loss: 2.6607 | LR: 7.44e-06 | GradNorm: 1.674
  Batch   12/48 | Loss: 2.6698 | LR: 6.02e-06 | GradNorm: 3.797
  Batch   16/48 | Loss: 2.6656 | LR: 4.75e-06 | GradNorm: 1.734
  Batch   20/48 | Loss: 2.6579 | LR: 3.63e-06 | GradNorm: 4.447
  Batch   24/48 | Loss: 2.6745 | LR: 2.67e-06 | GradNorm: 3.058
  Batch   28/48 | Loss: 2.6901 | LR: 1.85e-06 | GradNorm: 2.253
  Batch   32/48 | Loss: 2.6961 | LR: 1.19e-06 | GradNorm: 2.732
  Batch   36/48 | Loss: 2.6481 | LR: 6.88e-07 | GradNorm: 1.935
  Batch   40/48 | Loss: 2.6453 | LR: 3.38e-07 | GradNorm: 2.532
  Batch   44/48 | Loss: 2.6543 | LR: 1.44e-07 | GradNorm: 1.793
Epoch 10/10: Train=35.79%, Val=17.69%, Gap=18.10%, LR=1.00e-07
Best validation accuracy: 17.69%
