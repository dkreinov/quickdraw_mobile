=== W&B Sweep Run: LR=0.000290 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00028966894720377665
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000290
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9642 | LR: 5.88e-06 | GradNorm: 1.851
  Batch    4/48 | Loss: 3.9282 | LR: 1.78e-05 | GradNorm: 1.043
  Batch    8/48 | Loss: 3.9212 | LR: 2.98e-05 | GradNorm: 0.938
  Batch   12/48 | Loss: 3.9189 | LR: 4.17e-05 | GradNorm: 0.790
  Batch   16/48 | Loss: 3.9206 | LR: 5.37e-05 | GradNorm: 0.620
  Batch   20/48 | Loss: 3.9193 | LR: 6.56e-05 | GradNorm: 0.706
  Batch   24/48 | Loss: 3.9158 | LR: 7.76e-05 | GradNorm: 0.679
  Batch   28/48 | Loss: 3.9181 | LR: 8.95e-05 | GradNorm: 0.632
  Batch   32/48 | Loss: 3.9088 | LR: 1.01e-04 | GradNorm: 0.498
  Batch   36/48 | Loss: 3.9085 | LR: 1.13e-04 | GradNorm: 0.537
  Batch   40/48 | Loss: 3.9011 | LR: 1.25e-04 | GradNorm: 0.569
  Batch   44/48 | Loss: 3.8804 | LR: 1.37e-04 | GradNorm: 0.627
Epoch 1/10: Train=2.45%, Val=4.81%, Gap=-2.36%, LR=1.46e-04
  Batch    0/48 | Loss: 3.8762 | LR: 1.49e-04 | GradNorm: 2.178
  Batch    4/48 | Loss: 3.8504 | LR: 1.61e-04 | GradNorm: 3.671
  Batch    8/48 | Loss: 3.8934 | LR: 1.73e-04 | GradNorm: 3.910
  Batch   12/48 | Loss: 3.7578 | LR: 1.85e-04 | GradNorm: 0.770
  Batch   16/48 | Loss: 3.8112 | LR: 1.97e-04 | GradNorm: 3.213
  Batch   20/48 | Loss: 3.7625 | LR: 2.09e-04 | GradNorm: 4.208
  Batch   24/48 | Loss: 3.6716 | LR: 2.21e-04 | GradNorm: 1.681
  Batch   28/48 | Loss: 3.6665 | LR: 2.33e-04 | GradNorm: 1.806
  Batch   32/48 | Loss: 3.7262 | LR: 2.45e-04 | GradNorm: 7.560
  Batch   36/48 | Loss: 3.6225 | LR: 2.57e-04 | GradNorm: 3.331
  Batch   40/48 | Loss: 3.6126 | LR: 2.69e-04 | GradNorm: 0.887
  Batch   44/48 | Loss: 3.7020 | LR: 2.81e-04 | GradNorm: 10.381
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.10%, Val=6.80%, Gap=-0.70%, LR=2.90e-04
  Batch    0/48 | Loss: 3.5747 | LR: 2.90e-04 | GradNorm: 2.041
  Batch    4/48 | Loss: 3.5904 | LR: 2.90e-04 | GradNorm: 2.906
  Batch    8/48 | Loss: 3.5523 | LR: 2.89e-04 | GradNorm: 3.814
  Batch   12/48 | Loss: 3.6167 | LR: 2.89e-04 | GradNorm: 5.776
  Batch   16/48 | Loss: 3.6661 | LR: 2.88e-04 | GradNorm: 7.745
  Batch   20/48 | Loss: 3.5505 | LR: 2.88e-04 | GradNorm: 2.414
  Batch   24/48 | Loss: 3.6021 | LR: 2.87e-04 | GradNorm: 13.723
  Batch   28/48 | Loss: 3.4581 | LR: 2.86e-04 | GradNorm: 1.263
  Batch   32/48 | Loss: 3.4587 | LR: 2.84e-04 | GradNorm: 1.038
  Batch   36/48 | Loss: 3.5650 | LR: 2.83e-04 | GradNorm: 5.561
  Batch   40/48 | Loss: 3.4305 | LR: 2.82e-04 | GradNorm: 3.023
  Batch   44/48 | Loss: 3.3985 | LR: 2.80e-04 | GradNorm: 2.415
Epoch 3/10: Train=10.06%, Val=8.92%, Gap=1.14%, LR=2.79e-04
  Batch    0/48 | Loss: 3.3950 | LR: 2.78e-04 | GradNorm: 3.894
  Batch    4/48 | Loss: 3.3602 | LR: 2.76e-04 | GradNorm: 2.479
  Batch    8/48 | Loss: 3.3358 | LR: 2.74e-04 | GradNorm: 1.659
  Batch   12/48 | Loss: 3.2594 | LR: 2.72e-04 | GradNorm: 1.888
  Batch   16/48 | Loss: 3.2659 | LR: 2.70e-04 | GradNorm: 1.899
  Batch   20/48 | Loss: 3.3032 | LR: 2.67e-04 | GradNorm: 6.686
  Batch   24/48 | Loss: 3.2713 | LR: 2.65e-04 | GradNorm: 3.497
  Batch   28/48 | Loss: 3.2460 | LR: 2.62e-04 | GradNorm: 5.949
  Batch   32/48 | Loss: 3.2623 | LR: 2.59e-04 | GradNorm: 3.986
  Batch   36/48 | Loss: 3.2336 | LR: 2.56e-04 | GradNorm: 3.998
  Batch   40/48 | Loss: 3.2336 | LR: 2.53e-04 | GradNorm: 3.708
  Batch   44/48 | Loss: 3.2005 | LR: 2.50e-04 | GradNorm: 3.804
Epoch 4/10: Train=16.46%, Val=14.66%, Gap=1.80%, LR=2.47e-04
  Batch    0/48 | Loss: 3.1383 | LR: 2.46e-04 | GradNorm: 2.184
  Batch    4/48 | Loss: 3.1065 | LR: 2.43e-04 | GradNorm: 1.798
  Batch    8/48 | Loss: 3.1524 | LR: 2.39e-04 | GradNorm: 3.876
  Batch   12/48 | Loss: 3.1400 | LR: 2.36e-04 | GradNorm: 6.933
  Batch   16/48 | Loss: 3.2057 | LR: 2.32e-04 | GradNorm: 5.105
  Batch   20/48 | Loss: 3.1197 | LR: 2.28e-04 | GradNorm: 2.474
  Batch   24/48 | Loss: 3.1466 | LR: 2.24e-04 | GradNorm: 3.016
  Batch   28/48 | Loss: 3.1168 | LR: 2.20e-04 | GradNorm: 3.701
  Batch   32/48 | Loss: 3.0584 | LR: 2.16e-04 | GradNorm: 2.381
  Batch   36/48 | Loss: 3.1572 | LR: 2.12e-04 | GradNorm: 3.958
  Batch   40/48 | Loss: 3.1281 | LR: 2.08e-04 | GradNorm: 3.258
  Batch   44/48 | Loss: 3.0747 | LR: 2.04e-04 | GradNorm: 2.071
Epoch 5/10: Train=20.80%, Val=13.80%, Gap=7.00%, LR=2.00e-04
  Batch    0/48 | Loss: 3.0350 | LR: 1.99e-04 | GradNorm: 2.956
  Batch    4/48 | Loss: 3.0439 | LR: 1.95e-04 | GradNorm: 5.667
  Batch    8/48 | Loss: 3.0038 | LR: 1.90e-04 | GradNorm: 2.859
  Batch   12/48 | Loss: 3.1046 | LR: 1.86e-04 | GradNorm: 10.372
  Batch   16/48 | Loss: 3.0423 | LR: 1.81e-04 | GradNorm: 4.806
  Batch   20/48 | Loss: 3.0057 | LR: 1.77e-04 | GradNorm: 3.424
  Batch   24/48 | Loss: 2.9881 | LR: 1.72e-04 | GradNorm: 3.187
  Batch   28/48 | Loss: 2.9398 | LR: 1.67e-04 | GradNorm: 4.461
  Batch   32/48 | Loss: 2.9730 | LR: 1.63e-04 | GradNorm: 9.781
  Batch   36/48 | Loss: 2.9749 | LR: 1.58e-04 | GradNorm: 4.834
  Batch   40/48 | Loss: 2.9625 | LR: 1.53e-04 | GradNorm: 7.912
  Batch   44/48 | Loss: 3.0173 | LR: 1.48e-04 | GradNorm: 7.171
Epoch 6/10: Train=24.09%, Val=15.23%, Gap=8.86%, LR=1.45e-04
  Batch    0/48 | Loss: 2.9489 | LR: 1.44e-04 | GradNorm: 7.020
  Batch    4/48 | Loss: 2.9090 | LR: 1.39e-04 | GradNorm: 3.762
  Batch    8/48 | Loss: 2.8860 | LR: 1.34e-04 | GradNorm: 3.533
  Batch   12/48 | Loss: 2.8046 | LR: 1.30e-04 | GradNorm: 2.603
  Batch   16/48 | Loss: 2.8201 | LR: 1.25e-04 | GradNorm: 2.781
  Batch   20/48 | Loss: 2.8505 | LR: 1.20e-04 | GradNorm: 4.307
  Batch   24/48 | Loss: 2.8723 | LR: 1.15e-04 | GradNorm: 5.417
  Batch   28/48 | Loss: 2.8532 | LR: 1.11e-04 | GradNorm: 3.051
  Batch   32/48 | Loss: 2.8451 | LR: 1.06e-04 | GradNorm: 5.834
  Batch   36/48 | Loss: 2.9086 | LR: 1.02e-04 | GradNorm: 8.641
  Batch   40/48 | Loss: 2.8298 | LR: 9.72e-05 | GradNorm: 5.132
  Batch   44/48 | Loss: 2.7933 | LR: 9.28e-05 | GradNorm: 4.797
Epoch 7/10: Train=30.12%, Val=17.06%, Gap=13.06%, LR=8.95e-05
  Batch    0/48 | Loss: 2.8194 | LR: 8.84e-05 | GradNorm: 6.388
  Batch    4/48 | Loss: 2.7462 | LR: 8.41e-05 | GradNorm: 4.823
  Batch    8/48 | Loss: 2.7447 | LR: 7.98e-05 | GradNorm: 2.964
  Batch   12/48 | Loss: 2.7880 | LR: 7.56e-05 | GradNorm: 4.288
  Batch   16/48 | Loss: 2.8044 | LR: 7.15e-05 | GradNorm: 5.818
  Batch   20/48 | Loss: 2.7221 | LR: 6.74e-05 | GradNorm: 6.828
  Batch   24/48 | Loss: 2.7242 | LR: 6.35e-05 | GradNorm: 7.752
  Batch   28/48 | Loss: 2.8157 | LR: 5.96e-05 | GradNorm: 12.853
  Batch   32/48 | Loss: 2.7555 | LR: 5.58e-05 | GradNorm: 5.307
  Batch   36/48 | Loss: 2.7272 | LR: 5.21e-05 | GradNorm: 3.959
  Batch   40/48 | Loss: 2.6905 | LR: 4.85e-05 | GradNorm: 6.660
  Batch   44/48 | Loss: 2.7260 | LR: 4.50e-05 | GradNorm: 5.642
Epoch 8/10: Train=33.33%, Val=17.62%, Gap=15.71%, LR=4.25e-05
  Batch    0/48 | Loss: 2.6915 | LR: 4.17e-05 | GradNorm: 4.379
  Batch    4/48 | Loss: 2.6845 | LR: 3.84e-05 | GradNorm: 2.940
  Batch    8/48 | Loss: 2.7454 | LR: 3.53e-05 | GradNorm: 4.913
  Batch   12/48 | Loss: 2.6804 | LR: 3.22e-05 | GradNorm: 4.016
  Batch   16/48 | Loss: 2.6242 | LR: 2.93e-05 | GradNorm: 3.671
  Batch   20/48 | Loss: 2.6399 | LR: 2.65e-05 | GradNorm: 2.814
  Batch   24/48 | Loss: 2.6812 | LR: 2.38e-05 | GradNorm: 6.098
  Batch   28/48 | Loss: 2.6939 | LR: 2.13e-05 | GradNorm: 3.950
  Batch   32/48 | Loss: 2.6593 | LR: 1.89e-05 | GradNorm: 3.265
  Batch   36/48 | Loss: 2.6536 | LR: 1.66e-05 | GradNorm: 2.418
  Batch   40/48 | Loss: 2.6193 | LR: 1.45e-05 | GradNorm: 4.166
  Batch   44/48 | Loss: 2.6550 | LR: 1.25e-05 | GradNorm: 2.880
Epoch 9/10: Train=35.70%, Val=17.83%, Gap=17.87%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6410 | LR: 1.07e-05 | GradNorm: 2.265
  Batch    4/48 | Loss: 2.6649 | LR: 8.97e-06 | GradNorm: 4.092
  Batch    8/48 | Loss: 2.6194 | LR: 7.41e-06 | GradNorm: 2.491
  Batch   12/48 | Loss: 2.6166 | LR: 6.00e-06 | GradNorm: 1.826
  Batch   16/48 | Loss: 2.6369 | LR: 4.73e-06 | GradNorm: 2.494
  Batch   20/48 | Loss: 2.6503 | LR: 3.62e-06 | GradNorm: 3.320
  Batch   24/48 | Loss: 2.6470 | LR: 2.66e-06 | GradNorm: 4.557
  Batch   28/48 | Loss: 2.6858 | LR: 1.85e-06 | GradNorm: 1.798
  Batch   32/48 | Loss: 2.6770 | LR: 1.19e-06 | GradNorm: 3.763
  Batch   36/48 | Loss: 2.6341 | LR: 6.86e-07 | GradNorm: 2.647
  Batch   40/48 | Loss: 2.6118 | LR: 3.37e-07 | GradNorm: 2.173
  Batch   44/48 | Loss: 2.6447 | LR: 1.44e-07 | GradNorm: 2.402
Epoch 10/10: Train=36.69%, Val=18.03%, Gap=18.66%, LR=1.00e-07
Best validation accuracy: 18.03%
