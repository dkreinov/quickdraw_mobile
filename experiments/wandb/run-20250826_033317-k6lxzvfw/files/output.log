=== W&B Sweep Run: LR=0.002240 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.002240322799495912
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.002240
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9372 | LR: 4.55e-05 | GradNorm: 1.337
  Batch    4/48 | Loss: 3.9297 | LR: 1.38e-04 | GradNorm: 0.798
  Batch    8/48 | Loss: 3.9248 | LR: 2.30e-04 | GradNorm: 0.550
  Batch   12/48 | Loss: 3.9162 | LR: 3.23e-04 | GradNorm: 0.463
  Batch   16/48 | Loss: 3.9235 | LR: 4.15e-04 | GradNorm: 0.493
  Batch   20/48 | Loss: 3.9165 | LR: 5.08e-04 | GradNorm: 0.497
  Batch   24/48 | Loss: 3.9078 | LR: 6.00e-04 | GradNorm: 0.520
  Batch   28/48 | Loss: 3.8888 | LR: 6.92e-04 | GradNorm: 0.558
  Batch   32/48 | Loss: 3.8509 | LR: 7.85e-04 | GradNorm: 1.239
  Batch   36/48 | Loss: 3.8692 | LR: 8.77e-04 | GradNorm: 0.692
  Batch   40/48 | Loss: 3.8212 | LR: 9.70e-04 | GradNorm: 0.530
  Batch   44/48 | Loss: 3.8551 | LR: 1.06e-03 | GradNorm: 1.421
Epoch 1/10: Train=2.98%, Val=5.89%, Gap=-2.91%, LR=1.13e-03
  Batch    0/48 | Loss: 3.7587 | LR: 1.15e-03 | GradNorm: 0.629
  Batch    4/48 | Loss: 3.6736 | LR: 1.25e-03 | GradNorm: 0.512
  Batch    8/48 | Loss: 4.0401 | LR: 1.34e-03 | GradNorm: 1.160
  Batch   12/48 | Loss: 3.8191 | LR: 1.43e-03 | GradNorm: 0.602
  Batch   16/48 | Loss: 3.8402 | LR: 1.52e-03 | GradNorm: 0.584
  Batch   20/48 | Loss: 3.8249 | LR: 1.62e-03 | GradNorm: 0.859
  Batch   24/48 | Loss: 3.7874 | LR: 1.71e-03 | GradNorm: 0.557
  Batch   28/48 | Loss: 3.8018 | LR: 1.80e-03 | GradNorm: 0.558
  Batch   32/48 | Loss: 3.7934 | LR: 1.89e-03 | GradNorm: 0.483
  Batch   36/48 | Loss: 3.7595 | LR: 1.99e-03 | GradNorm: 0.668
  Batch   40/48 | Loss: 3.8371 | LR: 2.08e-03 | GradNorm: 0.859
  Batch   44/48 | Loss: 3.9894 | LR: 2.17e-03 | GradNorm: 2.587
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=4.53%, Val=3.00%, Gap=1.53%, LR=2.24e-03
  Batch    0/48 | Loss: 3.7943 | LR: 2.24e-03 | GradNorm: 0.540
  Batch    4/48 | Loss: 3.7903 | LR: 2.24e-03 | GradNorm: 0.424
  Batch    8/48 | Loss: 3.7818 | LR: 2.24e-03 | GradNorm: 0.628
  Batch   12/48 | Loss: 3.7619 | LR: 2.23e-03 | GradNorm: 0.495
  Batch   16/48 | Loss: 3.7386 | LR: 2.23e-03 | GradNorm: 0.469
  Batch   20/48 | Loss: 3.7659 | LR: 2.22e-03 | GradNorm: 0.619
  Batch   24/48 | Loss: 3.7452 | LR: 2.22e-03 | GradNorm: 0.675
  Batch   28/48 | Loss: 3.7289 | LR: 2.21e-03 | GradNorm: 0.525
  Batch   32/48 | Loss: 3.7323 | LR: 2.20e-03 | GradNorm: 0.662
  Batch   36/48 | Loss: 3.9063 | LR: 2.19e-03 | GradNorm: 3.513
  Batch   40/48 | Loss: 3.7696 | LR: 2.18e-03 | GradNorm: 1.316
  Batch   44/48 | Loss: 3.7193 | LR: 2.17e-03 | GradNorm: 0.630
Epoch 3/10: Train=5.46%, Val=4.97%, Gap=0.49%, LR=2.16e-03
  Batch    0/48 | Loss: 3.7038 | LR: 2.15e-03 | GradNorm: 0.880
  Batch    4/48 | Loss: 3.6588 | LR: 2.14e-03 | GradNorm: 1.628
  Batch    8/48 | Loss: 3.6411 | LR: 2.12e-03 | GradNorm: 1.352
  Batch   12/48 | Loss: 3.7370 | LR: 2.10e-03 | GradNorm: 3.175
  Batch   16/48 | Loss: 3.6044 | LR: 2.09e-03 | GradNorm: 0.887
  Batch   20/48 | Loss: 3.6909 | LR: 2.07e-03 | GradNorm: 1.337
  Batch   24/48 | Loss: 3.6064 | LR: 2.05e-03 | GradNorm: 1.582
  Batch   28/48 | Loss: 3.5343 | LR: 2.03e-03 | GradNorm: 0.742
  Batch   32/48 | Loss: 3.5943 | LR: 2.00e-03 | GradNorm: 1.714
  Batch   36/48 | Loss: 3.4893 | LR: 1.98e-03 | GradNorm: 0.485
  Batch   40/48 | Loss: 3.8411 | LR: 1.96e-03 | GradNorm: 3.035
  Batch   44/48 | Loss: 3.5609 | LR: 1.93e-03 | GradNorm: 0.743
Epoch 4/10: Train=8.49%, Val=3.56%, Gap=4.93%, LR=1.91e-03
  Batch    0/48 | Loss: 3.7591 | LR: 1.91e-03 | GradNorm: 3.897
  Batch    4/48 | Loss: 3.5432 | LR: 1.88e-03 | GradNorm: 1.761
  Batch    8/48 | Loss: 3.4923 | LR: 1.85e-03 | GradNorm: 0.495
  Batch   12/48 | Loss: 3.4590 | LR: 1.82e-03 | GradNorm: 0.685
  Batch   16/48 | Loss: 3.5085 | LR: 1.79e-03 | GradNorm: 0.994
  Batch   20/48 | Loss: 3.4327 | LR: 1.77e-03 | GradNorm: 0.759
  Batch   24/48 | Loss: 3.4343 | LR: 1.73e-03 | GradNorm: 1.719
  Batch   28/48 | Loss: 3.3876 | LR: 1.70e-03 | GradNorm: 0.756
  Batch   32/48 | Loss: 3.3136 | LR: 1.67e-03 | GradNorm: 0.682
  Batch   36/48 | Loss: 3.3909 | LR: 1.64e-03 | GradNorm: 1.880
  Batch   40/48 | Loss: 3.3818 | LR: 1.61e-03 | GradNorm: 2.006
  Batch   44/48 | Loss: 3.2812 | LR: 1.57e-03 | GradNorm: 1.674
Epoch 5/10: Train=13.01%, Val=5.78%, Gap=7.23%, LR=1.55e-03
  Batch    0/48 | Loss: 3.2457 | LR: 1.54e-03 | GradNorm: 1.702
  Batch    4/48 | Loss: 3.4335 | LR: 1.51e-03 | GradNorm: 3.176
  Batch    8/48 | Loss: 3.3070 | LR: 1.47e-03 | GradNorm: 2.031
  Batch   12/48 | Loss: 3.1969 | LR: 1.44e-03 | GradNorm: 1.084
  Batch   16/48 | Loss: 3.2626 | LR: 1.40e-03 | GradNorm: 1.875
  Batch   20/48 | Loss: 3.2423 | LR: 1.37e-03 | GradNorm: 2.533
  Batch   24/48 | Loss: 3.2949 | LR: 1.33e-03 | GradNorm: 3.937
  Batch   28/48 | Loss: 3.1689 | LR: 1.29e-03 | GradNorm: 1.615
  Batch   32/48 | Loss: 3.1276 | LR: 1.26e-03 | GradNorm: 1.635
  Batch   36/48 | Loss: 3.2171 | LR: 1.22e-03 | GradNorm: 2.587
  Batch   40/48 | Loss: 3.1302 | LR: 1.18e-03 | GradNorm: 2.003
  Batch   44/48 | Loss: 3.1891 | LR: 1.15e-03 | GradNorm: 1.145
Epoch 6/10: Train=17.44%, Val=8.35%, Gap=9.09%, LR=1.12e-03
  Batch    0/48 | Loss: 3.2534 | LR: 1.11e-03 | GradNorm: 2.716
  Batch    4/48 | Loss: 3.1865 | LR: 1.07e-03 | GradNorm: 2.343
  Batch    8/48 | Loss: 3.1010 | LR: 1.04e-03 | GradNorm: 1.931
  Batch   12/48 | Loss: 3.0494 | LR: 1.00e-03 | GradNorm: 1.308
  Batch   16/48 | Loss: 3.0555 | LR: 9.65e-04 | GradNorm: 1.346
  Batch   20/48 | Loss: 3.0601 | LR: 9.29e-04 | GradNorm: 1.467
  Batch   24/48 | Loss: 3.0862 | LR: 8.93e-04 | GradNorm: 1.107
  Batch   28/48 | Loss: 3.1139 | LR: 8.57e-04 | GradNorm: 2.483
  Batch   32/48 | Loss: 3.0986 | LR: 8.21e-04 | GradNorm: 2.548
  Batch   36/48 | Loss: 3.0726 | LR: 7.86e-04 | GradNorm: 1.810
  Batch   40/48 | Loss: 3.0339 | LR: 7.51e-04 | GradNorm: 1.611
  Batch   44/48 | Loss: 2.9883 | LR: 7.17e-04 | GradNorm: 1.489
Epoch 7/10: Train=22.12%, Val=9.33%, Gap=12.79%, LR=6.92e-04
  Batch    0/48 | Loss: 2.9794 | LR: 6.83e-04 | GradNorm: 1.597
  Batch    4/48 | Loss: 2.9183 | LR: 6.50e-04 | GradNorm: 1.401
  Batch    8/48 | Loss: 2.9370 | LR: 6.17e-04 | GradNorm: 1.049
  Batch   12/48 | Loss: 2.9764 | LR: 5.84e-04 | GradNorm: 2.014
  Batch   16/48 | Loss: 2.9641 | LR: 5.52e-04 | GradNorm: 1.704
  Batch   20/48 | Loss: 2.8815 | LR: 5.21e-04 | GradNorm: 1.838
  Batch   24/48 | Loss: 2.9090 | LR: 4.90e-04 | GradNorm: 2.095
  Batch   28/48 | Loss: 2.9199 | LR: 4.60e-04 | GradNorm: 2.002
  Batch   32/48 | Loss: 2.9138 | LR: 4.31e-04 | GradNorm: 1.569
  Batch   36/48 | Loss: 2.8828 | LR: 4.03e-04 | GradNorm: 1.505
  Batch   40/48 | Loss: 2.8326 | LR: 3.75e-04 | GradNorm: 1.592
  Batch   44/48 | Loss: 2.8803 | LR: 3.48e-04 | GradNorm: 1.668
Epoch 8/10: Train=27.00%, Val=11.86%, Gap=15.14%, LR=3.28e-04
  Batch    0/48 | Loss: 2.8327 | LR: 3.22e-04 | GradNorm: 2.192
  Batch    4/48 | Loss: 2.8496 | LR: 2.96e-04 | GradNorm: 4.001
  Batch    8/48 | Loss: 2.8783 | LR: 2.72e-04 | GradNorm: 3.341
  Batch   12/48 | Loss: 2.8116 | LR: 2.49e-04 | GradNorm: 2.474
  Batch   16/48 | Loss: 2.8020 | LR: 2.26e-04 | GradNorm: 1.326
  Batch   20/48 | Loss: 2.7716 | LR: 2.04e-04 | GradNorm: 1.940
  Batch   24/48 | Loss: 2.8387 | LR: 1.84e-04 | GradNorm: 1.513
  Batch   28/48 | Loss: 2.8037 | LR: 1.64e-04 | GradNorm: 1.494
  Batch   32/48 | Loss: 2.7776 | LR: 1.46e-04 | GradNorm: 1.578
  Batch   36/48 | Loss: 2.8064 | LR: 1.28e-04 | GradNorm: 1.947
  Batch   40/48 | Loss: 2.7042 | LR: 1.12e-04 | GradNorm: 1.105
  Batch   44/48 | Loss: 2.8155 | LR: 9.62e-05 | GradNorm: 1.532
Epoch 9/10: Train=30.14%, Val=11.53%, Gap=18.61%, LR=8.54e-05
  Batch    0/48 | Loss: 2.7689 | LR: 8.19e-05 | GradNorm: 0.796
  Batch    4/48 | Loss: 2.7761 | LR: 6.87e-05 | GradNorm: 1.437
  Batch    8/48 | Loss: 2.7284 | LR: 5.66e-05 | GradNorm: 1.472
  Batch   12/48 | Loss: 2.7299 | LR: 4.57e-05 | GradNorm: 2.140
  Batch   16/48 | Loss: 2.7353 | LR: 3.59e-05 | GradNorm: 1.435
  Batch   20/48 | Loss: 2.7380 | LR: 2.73e-05 | GradNorm: 0.648
  Batch   24/48 | Loss: 2.7841 | LR: 1.99e-05 | GradNorm: 1.224
  Batch   28/48 | Loss: 2.7535 | LR: 1.36e-05 | GradNorm: 1.020
  Batch   32/48 | Loss: 2.7691 | LR: 8.52e-06 | GradNorm: 1.316
  Batch   36/48 | Loss: 2.7453 | LR: 4.63e-06 | GradNorm: 0.956
  Batch   40/48 | Loss: 2.7391 | LR: 1.94e-06 | GradNorm: 0.867
  Batch   44/48 | Loss: 2.7395 | LR: 4.37e-07 | GradNorm: 0.924
Epoch 10/10: Train=31.98%, Val=11.60%, Gap=20.38%, LR=1.00e-07
Best validation accuracy: 11.86%
