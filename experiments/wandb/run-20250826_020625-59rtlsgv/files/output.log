=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002690362250746576
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9520 | LR: 5.46e-06 | GradNorm: 1.484
  Batch    4/48 | Loss: 3.9257 | LR: 1.66e-05 | GradNorm: 0.990
  Batch    8/48 | Loss: 3.9251 | LR: 2.77e-05 | GradNorm: 0.985
  Batch   12/48 | Loss: 3.9108 | LR: 3.88e-05 | GradNorm: 0.805
  Batch   16/48 | Loss: 3.9164 | LR: 4.99e-05 | GradNorm: 0.665
  Batch   20/48 | Loss: 3.9129 | LR: 6.10e-05 | GradNorm: 0.755
  Batch   24/48 | Loss: 3.9128 | LR: 7.21e-05 | GradNorm: 0.691
  Batch   28/48 | Loss: 3.9087 | LR: 8.31e-05 | GradNorm: 0.597
  Batch   32/48 | Loss: 3.9023 | LR: 9.42e-05 | GradNorm: 0.567
  Batch   36/48 | Loss: 3.9008 | LR: 1.05e-04 | GradNorm: 0.628
  Batch   40/48 | Loss: 3.8739 | LR: 1.16e-04 | GradNorm: 0.722
  Batch   44/48 | Loss: 3.8790 | LR: 1.28e-04 | GradNorm: 5.754
Epoch 1/10: Train=2.64%, Val=1.98%, Gap=0.66%, LR=1.36e-04
  Batch    0/48 | Loss: 3.9468 | LR: 1.39e-04 | GradNorm: 6.439
  Batch    4/48 | Loss: 3.8377 | LR: 1.50e-04 | GradNorm: 5.886
  Batch    8/48 | Loss: 3.7974 | LR: 1.61e-04 | GradNorm: 3.582
  Batch   12/48 | Loss: 3.7439 | LR: 1.72e-04 | GradNorm: 1.910
  Batch   16/48 | Loss: 3.7682 | LR: 1.83e-04 | GradNorm: 1.947
  Batch   20/48 | Loss: 3.8042 | LR: 1.94e-04 | GradNorm: 2.473
  Batch   24/48 | Loss: 3.7289 | LR: 2.05e-04 | GradNorm: 0.897
  Batch   28/48 | Loss: 3.8014 | LR: 2.16e-04 | GradNorm: 4.374
  Batch   32/48 | Loss: 3.7518 | LR: 2.27e-04 | GradNorm: 3.399
  Batch   36/48 | Loss: 3.7385 | LR: 2.39e-04 | GradNorm: 3.115
  Batch   40/48 | Loss: 3.7579 | LR: 2.50e-04 | GradNorm: 5.797
  Batch   44/48 | Loss: 3.6917 | LR: 2.61e-04 | GradNorm: 2.757
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.26%, Val=9.24%, Gap=-3.98%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6402 | LR: 2.69e-04 | GradNorm: 1.342
  Batch    4/48 | Loss: 3.6391 | LR: 2.69e-04 | GradNorm: 4.507
  Batch    8/48 | Loss: 3.6190 | LR: 2.69e-04 | GradNorm: 4.191
  Batch   12/48 | Loss: 3.5998 | LR: 2.68e-04 | GradNorm: 2.863
  Batch   16/48 | Loss: 3.5787 | LR: 2.68e-04 | GradNorm: 2.753
  Batch   20/48 | Loss: 3.4626 | LR: 2.67e-04 | GradNorm: 1.260
  Batch   24/48 | Loss: 3.5098 | LR: 2.66e-04 | GradNorm: 4.630
  Batch   28/48 | Loss: 3.4265 | LR: 2.65e-04 | GradNorm: 4.176
  Batch   32/48 | Loss: 3.4200 | LR: 2.64e-04 | GradNorm: 2.793
  Batch   36/48 | Loss: 3.4334 | LR: 2.63e-04 | GradNorm: 3.652
  Batch   40/48 | Loss: 3.4125 | LR: 2.62e-04 | GradNorm: 5.355
  Batch   44/48 | Loss: 3.3580 | LR: 2.60e-04 | GradNorm: 1.824
Epoch 3/10: Train=11.61%, Val=9.81%, Gap=1.80%, LR=2.59e-04
  Batch    0/48 | Loss: 3.3086 | LR: 2.58e-04 | GradNorm: 2.278
  Batch    4/48 | Loss: 3.3374 | LR: 2.57e-04 | GradNorm: 5.831
  Batch    8/48 | Loss: 3.3226 | LR: 2.55e-04 | GradNorm: 5.282
  Batch   12/48 | Loss: 3.2566 | LR: 2.53e-04 | GradNorm: 2.900
  Batch   16/48 | Loss: 3.2758 | LR: 2.50e-04 | GradNorm: 4.136
  Batch   20/48 | Loss: 3.3755 | LR: 2.48e-04 | GradNorm: 6.588
  Batch   24/48 | Loss: 3.3785 | LR: 2.46e-04 | GradNorm: 6.486
  Batch   28/48 | Loss: 3.2950 | LR: 2.43e-04 | GradNorm: 5.505
  Batch   32/48 | Loss: 3.3540 | LR: 2.41e-04 | GradNorm: 3.885
  Batch   36/48 | Loss: 3.2652 | LR: 2.38e-04 | GradNorm: 4.239
  Batch   40/48 | Loss: 3.3215 | LR: 2.35e-04 | GradNorm: 5.846
  Batch   44/48 | Loss: 3.2400 | LR: 2.32e-04 | GradNorm: 2.700
Epoch 4/10: Train=15.92%, Val=11.84%, Gap=4.08%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1944 | LR: 2.29e-04 | GradNorm: 3.528
  Batch    4/48 | Loss: 3.2170 | LR: 2.26e-04 | GradNorm: 8.372
  Batch    8/48 | Loss: 3.3274 | LR: 2.22e-04 | GradNorm: 9.457
  Batch   12/48 | Loss: 3.2999 | LR: 2.19e-04 | GradNorm: 6.657
  Batch   16/48 | Loss: 3.2607 | LR: 2.16e-04 | GradNorm: 6.564
  Batch   20/48 | Loss: 3.1714 | LR: 2.12e-04 | GradNorm: 2.485
  Batch   24/48 | Loss: 3.2363 | LR: 2.08e-04 | GradNorm: 7.769
  Batch   28/48 | Loss: 3.2647 | LR: 2.05e-04 | GradNorm: 5.256
  Batch   32/48 | Loss: 3.1656 | LR: 2.01e-04 | GradNorm: 5.410
  Batch   36/48 | Loss: 3.2415 | LR: 1.97e-04 | GradNorm: 6.985
  Batch   40/48 | Loss: 3.1788 | LR: 1.93e-04 | GradNorm: 1.919
  Batch   44/48 | Loss: 3.1352 | LR: 1.89e-04 | GradNorm: 3.316
Epoch 5/10: Train=18.96%, Val=15.48%, Gap=3.48%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0904 | LR: 1.85e-04 | GradNorm: 3.908
  Batch    4/48 | Loss: 3.0493 | LR: 1.81e-04 | GradNorm: 3.255
  Batch    8/48 | Loss: 3.1367 | LR: 1.77e-04 | GradNorm: 7.061
  Batch   12/48 | Loss: 3.1195 | LR: 1.73e-04 | GradNorm: 5.863
  Batch   16/48 | Loss: 3.0332 | LR: 1.68e-04 | GradNorm: 3.329
  Batch   20/48 | Loss: 3.0536 | LR: 1.64e-04 | GradNorm: 3.316
  Batch   24/48 | Loss: 3.0278 | LR: 1.60e-04 | GradNorm: 3.006
  Batch   28/48 | Loss: 2.9792 | LR: 1.55e-04 | GradNorm: 1.857
  Batch   32/48 | Loss: 2.9657 | LR: 1.51e-04 | GradNorm: 2.747
  Batch   36/48 | Loss: 3.0101 | LR: 1.47e-04 | GradNorm: 3.215
  Batch   40/48 | Loss: 2.9990 | LR: 1.42e-04 | GradNorm: 3.440
  Batch   44/48 | Loss: 3.0297 | LR: 1.38e-04 | GradNorm: 2.857
Epoch 6/10: Train=23.02%, Val=14.34%, Gap=8.68%, LR=1.35e-04
  Batch    0/48 | Loss: 2.9693 | LR: 1.33e-04 | GradNorm: 4.224
  Batch    4/48 | Loss: 2.9580 | LR: 1.29e-04 | GradNorm: 4.045
  Batch    8/48 | Loss: 2.9166 | LR: 1.25e-04 | GradNorm: 2.112
  Batch   12/48 | Loss: 2.9014 | LR: 1.20e-04 | GradNorm: 5.484
  Batch   16/48 | Loss: 2.8972 | LR: 1.16e-04 | GradNorm: 5.012
  Batch   20/48 | Loss: 2.9799 | LR: 1.12e-04 | GradNorm: 4.225
  Batch   24/48 | Loss: 2.9697 | LR: 1.07e-04 | GradNorm: 6.727
  Batch   28/48 | Loss: 2.9471 | LR: 1.03e-04 | GradNorm: 3.546
  Batch   32/48 | Loss: 2.9461 | LR: 9.87e-05 | GradNorm: 5.693
  Batch   36/48 | Loss: 2.9374 | LR: 9.45e-05 | GradNorm: 2.891
  Batch   40/48 | Loss: 2.8949 | LR: 9.03e-05 | GradNorm: 3.292
  Batch   44/48 | Loss: 2.8972 | LR: 8.62e-05 | GradNorm: 4.609
Epoch 7/10: Train=27.44%, Val=16.20%, Gap=11.24%, LR=8.31e-05
  Batch    0/48 | Loss: 2.8936 | LR: 8.21e-05 | GradNorm: 4.783
  Batch    4/48 | Loss: 2.8333 | LR: 7.81e-05 | GradNorm: 3.438
  Batch    8/48 | Loss: 2.8629 | LR: 7.41e-05 | GradNorm: 4.216
  Batch   12/48 | Loss: 2.8969 | LR: 7.02e-05 | GradNorm: 3.790
  Batch   16/48 | Loss: 2.8856 | LR: 6.64e-05 | GradNorm: 3.324
  Batch   20/48 | Loss: 2.8094 | LR: 6.26e-05 | GradNorm: 5.734
  Batch   24/48 | Loss: 2.8167 | LR: 5.89e-05 | GradNorm: 3.878
  Batch   28/48 | Loss: 2.8406 | LR: 5.54e-05 | GradNorm: 3.843
  Batch   32/48 | Loss: 2.8241 | LR: 5.18e-05 | GradNorm: 3.401
  Batch   36/48 | Loss: 2.8099 | LR: 4.84e-05 | GradNorm: 3.510
  Batch   40/48 | Loss: 2.7560 | LR: 4.51e-05 | GradNorm: 3.541
  Batch   44/48 | Loss: 2.8320 | LR: 4.18e-05 | GradNorm: 2.630
Epoch 8/10: Train=30.56%, Val=17.26%, Gap=13.30%, LR=3.95e-05
  Batch    0/48 | Loss: 2.7774 | LR: 3.87e-05 | GradNorm: 3.035
  Batch    4/48 | Loss: 2.7646 | LR: 3.57e-05 | GradNorm: 1.692
  Batch    8/48 | Loss: 2.8204 | LR: 3.27e-05 | GradNorm: 3.712
  Batch   12/48 | Loss: 2.7739 | LR: 2.99e-05 | GradNorm: 2.807
  Batch   16/48 | Loss: 2.7241 | LR: 2.72e-05 | GradNorm: 3.955
  Batch   20/48 | Loss: 2.7315 | LR: 2.46e-05 | GradNorm: 3.534
  Batch   24/48 | Loss: 2.7736 | LR: 2.22e-05 | GradNorm: 3.607
  Batch   28/48 | Loss: 2.7785 | LR: 1.98e-05 | GradNorm: 4.704
  Batch   32/48 | Loss: 2.7570 | LR: 1.76e-05 | GradNorm: 3.758
  Batch   36/48 | Loss: 2.7540 | LR: 1.55e-05 | GradNorm: 1.630
  Batch   40/48 | Loss: 2.7269 | LR: 1.35e-05 | GradNorm: 3.006
  Batch   44/48 | Loss: 2.7540 | LR: 1.16e-05 | GradNorm: 4.976
Epoch 9/10: Train=32.49%, Val=17.67%, Gap=14.82%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7521 | LR: 9.92e-06 | GradNorm: 6.109
  Batch    4/48 | Loss: 2.7443 | LR: 8.34e-06 | GradNorm: 2.979
  Batch    8/48 | Loss: 2.7254 | LR: 6.89e-06 | GradNorm: 1.786
  Batch   12/48 | Loss: 2.7290 | LR: 5.58e-06 | GradNorm: 3.944
  Batch   16/48 | Loss: 2.7428 | LR: 4.40e-06 | GradNorm: 2.085
  Batch   20/48 | Loss: 2.7334 | LR: 3.37e-06 | GradNorm: 2.554
  Batch   24/48 | Loss: 2.7279 | LR: 2.47e-06 | GradNorm: 2.905
  Batch   28/48 | Loss: 2.7560 | LR: 1.72e-06 | GradNorm: 1.797
  Batch   32/48 | Loss: 2.7716 | LR: 1.11e-06 | GradNorm: 2.211
  Batch   36/48 | Loss: 2.7374 | LR: 6.44e-07 | GradNorm: 1.597
  Batch   40/48 | Loss: 2.7071 | LR: 3.20e-07 | GradNorm: 2.047
  Batch   44/48 | Loss: 2.7235 | LR: 1.40e-07 | GradNorm: 2.535
Epoch 10/10: Train=33.59%, Val=17.57%, Gap=16.02%, LR=1.00e-07
Best validation accuracy: 17.67%
