=== W&B Sweep Run: LR=0.000180 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00018020919169807985
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000180
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9317 | LR: 3.66e-06 | GradNorm: 1.373
  Batch    4/48 | Loss: 3.9340 | LR: 1.11e-05 | GradNorm: 1.380
  Batch    8/48 | Loss: 3.9216 | LR: 1.85e-05 | GradNorm: 1.006
  Batch   12/48 | Loss: 3.9122 | LR: 2.60e-05 | GradNorm: 0.753
  Batch   16/48 | Loss: 3.9182 | LR: 3.34e-05 | GradNorm: 0.793
  Batch   20/48 | Loss: 3.9180 | LR: 4.08e-05 | GradNorm: 0.783
  Batch   24/48 | Loss: 3.9134 | LR: 4.83e-05 | GradNorm: 0.755
  Batch   28/48 | Loss: 3.9159 | LR: 5.57e-05 | GradNorm: 0.706
  Batch   32/48 | Loss: 3.9101 | LR: 6.31e-05 | GradNorm: 0.652
  Batch   36/48 | Loss: 3.9037 | LR: 7.06e-05 | GradNorm: 0.612
  Batch   40/48 | Loss: 3.8979 | LR: 7.80e-05 | GradNorm: 0.652
  Batch   44/48 | Loss: 3.8875 | LR: 8.54e-05 | GradNorm: 0.913
Epoch 1/10: Train=2.51%, Val=5.30%, Gap=-2.79%, LR=9.10e-05
  Batch    0/48 | Loss: 3.8424 | LR: 9.29e-05 | GradNorm: 1.381
  Batch    4/48 | Loss: 3.8219 | LR: 1.00e-04 | GradNorm: 3.354
  Batch    8/48 | Loss: 3.8060 | LR: 1.08e-04 | GradNorm: 3.886
  Batch   12/48 | Loss: 3.7835 | LR: 1.15e-04 | GradNorm: 9.494
  Batch   16/48 | Loss: 3.7822 | LR: 1.23e-04 | GradNorm: 4.464
  Batch   20/48 | Loss: 3.8756 | LR: 1.30e-04 | GradNorm: 11.827
  Batch   24/48 | Loss: 3.7785 | LR: 1.37e-04 | GradNorm: 6.348
  Batch   28/48 | Loss: 3.7480 | LR: 1.45e-04 | GradNorm: 3.050
  Batch   32/48 | Loss: 3.7456 | LR: 1.52e-04 | GradNorm: 0.770
  Batch   36/48 | Loss: 3.7410 | LR: 1.60e-04 | GradNorm: 2.835
  Batch   40/48 | Loss: 3.7466 | LR: 1.67e-04 | GradNorm: 3.166
  Batch   44/48 | Loss: 3.7544 | LR: 1.75e-04 | GradNorm: 9.524
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.16%, Val=5.32%, Gap=-0.16%, LR=1.80e-04
  Batch    0/48 | Loss: 3.6877 | LR: 1.80e-04 | GradNorm: 5.480
  Batch    4/48 | Loss: 3.6729 | LR: 1.80e-04 | GradNorm: 3.274
  Batch    8/48 | Loss: 3.6242 | LR: 1.80e-04 | GradNorm: 3.274
  Batch   12/48 | Loss: 3.6096 | LR: 1.80e-04 | GradNorm: 1.631
  Batch   16/48 | Loss: 3.6072 | LR: 1.79e-04 | GradNorm: 2.484
  Batch   20/48 | Loss: 3.5863 | LR: 1.79e-04 | GradNorm: 7.528
  Batch   24/48 | Loss: 3.5984 | LR: 1.78e-04 | GradNorm: 5.669
  Batch   28/48 | Loss: 3.5248 | LR: 1.78e-04 | GradNorm: 2.330
  Batch   32/48 | Loss: 3.6127 | LR: 1.77e-04 | GradNorm: 8.626
  Batch   36/48 | Loss: 3.5562 | LR: 1.76e-04 | GradNorm: 4.799
  Batch   40/48 | Loss: 3.4873 | LR: 1.75e-04 | GradNorm: 3.765
  Batch   44/48 | Loss: 3.4689 | LR: 1.74e-04 | GradNorm: 3.235
Epoch 3/10: Train=9.43%, Val=9.20%, Gap=0.23%, LR=1.73e-04
  Batch    0/48 | Loss: 3.4244 | LR: 1.73e-04 | GradNorm: 2.150
  Batch    4/48 | Loss: 3.4487 | LR: 1.72e-04 | GradNorm: 6.558
  Batch    8/48 | Loss: 3.4240 | LR: 1.71e-04 | GradNorm: 7.581
  Batch   12/48 | Loss: 3.3622 | LR: 1.69e-04 | GradNorm: 5.355
  Batch   16/48 | Loss: 3.4009 | LR: 1.68e-04 | GradNorm: 5.337
  Batch   20/48 | Loss: 3.3634 | LR: 1.66e-04 | GradNorm: 4.337
  Batch   24/48 | Loss: 3.3503 | LR: 1.65e-04 | GradNorm: 5.453
  Batch   28/48 | Loss: 3.3015 | LR: 1.63e-04 | GradNorm: 3.918
  Batch   32/48 | Loss: 3.3595 | LR: 1.61e-04 | GradNorm: 6.885
  Batch   36/48 | Loss: 3.3144 | LR: 1.59e-04 | GradNorm: 7.172
  Batch   40/48 | Loss: 3.2913 | LR: 1.57e-04 | GradNorm: 2.789
  Batch   44/48 | Loss: 3.2815 | LR: 1.55e-04 | GradNorm: 8.975
Epoch 4/10: Train=15.05%, Val=10.13%, Gap=4.92%, LR=1.54e-04
  Batch    0/48 | Loss: 3.2996 | LR: 1.53e-04 | GradNorm: 6.742
  Batch    4/48 | Loss: 3.2369 | LR: 1.51e-04 | GradNorm: 3.409
  Batch    8/48 | Loss: 3.2054 | LR: 1.49e-04 | GradNorm: 4.923
  Batch   12/48 | Loss: 3.1841 | LR: 1.47e-04 | GradNorm: 4.461
  Batch   16/48 | Loss: 3.2564 | LR: 1.44e-04 | GradNorm: 3.561
  Batch   20/48 | Loss: 3.2215 | LR: 1.42e-04 | GradNorm: 6.052
  Batch   24/48 | Loss: 3.2130 | LR: 1.40e-04 | GradNorm: 5.450
  Batch   28/48 | Loss: 3.1898 | LR: 1.37e-04 | GradNorm: 5.922
  Batch   32/48 | Loss: 3.1708 | LR: 1.35e-04 | GradNorm: 4.640
  Batch   36/48 | Loss: 3.2139 | LR: 1.32e-04 | GradNorm: 4.137
  Batch   40/48 | Loss: 3.1832 | LR: 1.29e-04 | GradNorm: 4.733
  Batch   44/48 | Loss: 3.1428 | LR: 1.27e-04 | GradNorm: 3.192
Epoch 5/10: Train=19.29%, Val=16.71%, Gap=2.58%, LR=1.25e-04
  Batch    0/48 | Loss: 3.1044 | LR: 1.24e-04 | GradNorm: 3.552
  Batch    4/48 | Loss: 3.0633 | LR: 1.21e-04 | GradNorm: 4.234
  Batch    8/48 | Loss: 3.0779 | LR: 1.18e-04 | GradNorm: 3.902
  Batch   12/48 | Loss: 3.0627 | LR: 1.16e-04 | GradNorm: 1.618
  Batch   16/48 | Loss: 3.0426 | LR: 1.13e-04 | GradNorm: 3.531
  Batch   20/48 | Loss: 3.0442 | LR: 1.10e-04 | GradNorm: 4.606
  Batch   24/48 | Loss: 3.0527 | LR: 1.07e-04 | GradNorm: 7.869
  Batch   28/48 | Loss: 2.9802 | LR: 1.04e-04 | GradNorm: 4.327
  Batch   32/48 | Loss: 3.0285 | LR: 1.01e-04 | GradNorm: 13.319
  Batch   36/48 | Loss: 3.0286 | LR: 9.82e-05 | GradNorm: 7.150
  Batch   40/48 | Loss: 3.0225 | LR: 9.53e-05 | GradNorm: 10.340
  Batch   44/48 | Loss: 3.0558 | LR: 9.24e-05 | GradNorm: 5.410
Epoch 6/10: Train=24.09%, Val=16.41%, Gap=7.68%, LR=9.02e-05
  Batch    0/48 | Loss: 2.9932 | LR: 8.94e-05 | GradNorm: 3.291
  Batch    4/48 | Loss: 3.0265 | LR: 8.65e-05 | GradNorm: 12.135
  Batch    8/48 | Loss: 2.9873 | LR: 8.35e-05 | GradNorm: 8.207
  Batch   12/48 | Loss: 2.8918 | LR: 8.06e-05 | GradNorm: 3.909
  Batch   16/48 | Loss: 2.9147 | LR: 7.77e-05 | GradNorm: 5.621
  Batch   20/48 | Loss: 2.9613 | LR: 7.48e-05 | GradNorm: 6.214
  Batch   24/48 | Loss: 2.9480 | LR: 7.19e-05 | GradNorm: 4.895
  Batch   28/48 | Loss: 2.9475 | LR: 6.90e-05 | GradNorm: 4.386
  Batch   32/48 | Loss: 2.9525 | LR: 6.61e-05 | GradNorm: 5.152
  Batch   36/48 | Loss: 2.9993 | LR: 6.33e-05 | GradNorm: 13.294
  Batch   40/48 | Loss: 2.9058 | LR: 6.05e-05 | GradNorm: 3.240
  Batch   44/48 | Loss: 2.9223 | LR: 5.77e-05 | GradNorm: 6.583
Epoch 7/10: Train=27.55%, Val=19.24%, Gap=8.31%, LR=5.57e-05
  Batch    0/48 | Loss: 2.9032 | LR: 5.50e-05 | GradNorm: 6.004
  Batch    4/48 | Loss: 2.8630 | LR: 5.23e-05 | GradNorm: 5.972
  Batch    8/48 | Loss: 2.8745 | LR: 4.97e-05 | GradNorm: 5.089
  Batch   12/48 | Loss: 2.8962 | LR: 4.71e-05 | GradNorm: 4.959
  Batch   16/48 | Loss: 2.9066 | LR: 4.45e-05 | GradNorm: 6.518
  Batch   20/48 | Loss: 2.8176 | LR: 4.20e-05 | GradNorm: 6.717
  Batch   24/48 | Loss: 2.8443 | LR: 3.95e-05 | GradNorm: 6.689
  Batch   28/48 | Loss: 2.8740 | LR: 3.71e-05 | GradNorm: 8.522
  Batch   32/48 | Loss: 2.8554 | LR: 3.48e-05 | GradNorm: 4.141
  Batch   36/48 | Loss: 2.8422 | LR: 3.25e-05 | GradNorm: 4.145
  Batch   40/48 | Loss: 2.7848 | LR: 3.02e-05 | GradNorm: 5.986
  Batch   44/48 | Loss: 2.8339 | LR: 2.81e-05 | GradNorm: 5.956
Epoch 8/10: Train=30.45%, Val=19.85%, Gap=10.60%, LR=2.65e-05
  Batch    0/48 | Loss: 2.8008 | LR: 2.60e-05 | GradNorm: 4.695
  Batch    4/48 | Loss: 2.7938 | LR: 2.39e-05 | GradNorm: 2.961
  Batch    8/48 | Loss: 2.8649 | LR: 2.20e-05 | GradNorm: 4.379
  Batch   12/48 | Loss: 2.8121 | LR: 2.01e-05 | GradNorm: 3.444
  Batch   16/48 | Loss: 2.7606 | LR: 1.83e-05 | GradNorm: 3.116
  Batch   20/48 | Loss: 2.7706 | LR: 1.65e-05 | GradNorm: 3.730
  Batch   24/48 | Loss: 2.7931 | LR: 1.49e-05 | GradNorm: 4.172
  Batch   28/48 | Loss: 2.8074 | LR: 1.33e-05 | GradNorm: 4.156
  Batch   32/48 | Loss: 2.7870 | LR: 1.18e-05 | GradNorm: 3.336
  Batch   36/48 | Loss: 2.7842 | LR: 1.04e-05 | GradNorm: 3.463
  Batch   40/48 | Loss: 2.7686 | LR: 9.06e-06 | GradNorm: 3.623
  Batch   44/48 | Loss: 2.7673 | LR: 7.83e-06 | GradNorm: 4.237
Epoch 9/10: Train=32.39%, Val=20.44%, Gap=11.95%, LR=6.95e-06
  Batch    0/48 | Loss: 2.7857 | LR: 6.68e-06 | GradNorm: 4.923
  Batch    4/48 | Loss: 2.7803 | LR: 5.62e-06 | GradNorm: 2.389
  Batch    8/48 | Loss: 2.7801 | LR: 4.65e-06 | GradNorm: 3.701
  Batch   12/48 | Loss: 2.7612 | LR: 3.77e-06 | GradNorm: 3.797
  Batch   16/48 | Loss: 2.7516 | LR: 2.98e-06 | GradNorm: 4.825
  Batch   20/48 | Loss: 2.7691 | LR: 2.29e-06 | GradNorm: 4.024
  Batch   24/48 | Loss: 2.7525 | LR: 1.69e-06 | GradNorm: 4.885
  Batch   28/48 | Loss: 2.7985 | LR: 1.19e-06 | GradNorm: 3.116
  Batch   32/48 | Loss: 2.7997 | LR: 7.77e-07 | GradNorm: 3.356
  Batch   36/48 | Loss: 2.7765 | LR: 4.64e-07 | GradNorm: 3.318
  Batch   40/48 | Loss: 2.7438 | LR: 2.48e-07 | GradNorm: 3.143
  Batch   44/48 | Loss: 2.7667 | LR: 1.27e-07 | GradNorm: 4.545
Epoch 10/10: Train=33.34%, Val=20.35%, Gap=12.99%, LR=1.00e-07
Best validation accuracy: 20.44%
