=== W&B Sweep Run: LR=0.000728 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007282434195167043
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000728
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9581 | LR: 1.48e-05 | GradNorm: 1.574
  Batch    4/48 | Loss: 3.9199 | LR: 4.48e-05 | GradNorm: 0.927
  Batch    8/48 | Loss: 3.9240 | LR: 7.49e-05 | GradNorm: 0.740
  Batch   12/48 | Loss: 3.9117 | LR: 1.05e-04 | GradNorm: 0.550
  Batch   16/48 | Loss: 3.9241 | LR: 1.35e-04 | GradNorm: 0.609
  Batch   20/48 | Loss: 3.9125 | LR: 1.65e-04 | GradNorm: 0.539
  Batch   24/48 | Loss: 3.9121 | LR: 1.95e-04 | GradNorm: 0.592
  Batch   28/48 | Loss: 3.9147 | LR: 2.25e-04 | GradNorm: 0.564
  Batch   32/48 | Loss: 3.8942 | LR: 2.55e-04 | GradNorm: 0.529
  Batch   36/48 | Loss: 3.8517 | LR: 2.85e-04 | GradNorm: 0.635
  Batch   40/48 | Loss: 3.8212 | LR: 3.15e-04 | GradNorm: 2.982
  Batch   44/48 | Loss: 3.8378 | LR: 3.45e-04 | GradNorm: 5.464
Epoch 1/10: Train=2.95%, Val=7.03%, Gap=-4.08%, LR=3.68e-04
  Batch    0/48 | Loss: 3.8312 | LR: 3.75e-04 | GradNorm: 4.341
  Batch    4/48 | Loss: 3.8048 | LR: 4.05e-04 | GradNorm: 1.765
  Batch    8/48 | Loss: 3.8006 | LR: 4.35e-04 | GradNorm: 1.876
  Batch   12/48 | Loss: 3.7320 | LR: 4.65e-04 | GradNorm: 1.088
  Batch   16/48 | Loss: 3.7332 | LR: 4.95e-04 | GradNorm: 1.423
  Batch   20/48 | Loss: 3.6815 | LR: 5.25e-04 | GradNorm: 0.992
  Batch   24/48 | Loss: 4.0354 | LR: 5.56e-04 | GradNorm: 1.917
  Batch   28/48 | Loss: 3.8885 | LR: 5.86e-04 | GradNorm: 0.968
  Batch   32/48 | Loss: 3.8525 | LR: 6.16e-04 | GradNorm: 1.493
  Batch   36/48 | Loss: 3.8099 | LR: 6.46e-04 | GradNorm: 1.450
  Batch   40/48 | Loss: 3.7377 | LR: 6.76e-04 | GradNorm: 1.796
  Batch   44/48 | Loss: 3.6806 | LR: 7.06e-04 | GradNorm: 3.892
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.59%, Val=7.54%, Gap=-1.95%, LR=7.28e-04
  Batch    0/48 | Loss: 3.6104 | LR: 7.28e-04 | GradNorm: 2.258
  Batch    4/48 | Loss: 3.6011 | LR: 7.28e-04 | GradNorm: 3.800
  Batch    8/48 | Loss: 3.6731 | LR: 7.27e-04 | GradNorm: 4.772
  Batch   12/48 | Loss: 3.6055 | LR: 7.26e-04 | GradNorm: 3.721
  Batch   16/48 | Loss: 3.5629 | LR: 7.25e-04 | GradNorm: 2.343
  Batch   20/48 | Loss: 3.4930 | LR: 7.23e-04 | GradNorm: 1.972
  Batch   24/48 | Loss: 3.4944 | LR: 7.21e-04 | GradNorm: 5.550
  Batch   28/48 | Loss: 3.4288 | LR: 7.18e-04 | GradNorm: 1.888
  Batch   32/48 | Loss: 3.4577 | LR: 7.15e-04 | GradNorm: 2.920
  Batch   36/48 | Loss: 3.4260 | LR: 7.12e-04 | GradNorm: 2.380
  Batch   40/48 | Loss: 3.4600 | LR: 7.08e-04 | GradNorm: 3.952
  Batch   44/48 | Loss: 3.3812 | LR: 7.04e-04 | GradNorm: 2.306
Epoch 3/10: Train=10.98%, Val=10.35%, Gap=0.63%, LR=7.01e-04
  Batch    0/48 | Loss: 3.4217 | LR: 6.99e-04 | GradNorm: 2.634
  Batch    4/48 | Loss: 3.4036 | LR: 6.95e-04 | GradNorm: 3.642
  Batch    8/48 | Loss: 3.3096 | LR: 6.89e-04 | GradNorm: 1.359
  Batch   12/48 | Loss: 3.2858 | LR: 6.84e-04 | GradNorm: 2.809
  Batch   16/48 | Loss: 3.2623 | LR: 6.78e-04 | GradNorm: 4.523
  Batch   20/48 | Loss: 3.2441 | LR: 6.72e-04 | GradNorm: 3.218
  Batch   24/48 | Loss: 3.2629 | LR: 6.65e-04 | GradNorm: 2.785
  Batch   28/48 | Loss: 3.2689 | LR: 6.58e-04 | GradNorm: 2.847
  Batch   32/48 | Loss: 3.2606 | LR: 6.51e-04 | GradNorm: 2.846
  Batch   36/48 | Loss: 3.2160 | LR: 6.44e-04 | GradNorm: 1.784
  Batch   40/48 | Loss: 3.1914 | LR: 6.36e-04 | GradNorm: 1.202
  Batch   44/48 | Loss: 3.2418 | LR: 6.28e-04 | GradNorm: 2.316
Epoch 4/10: Train=16.24%, Val=7.73%, Gap=8.51%, LR=6.22e-04
  Batch    0/48 | Loss: 3.1971 | LR: 6.19e-04 | GradNorm: 4.168
  Batch    4/48 | Loss: 3.1853 | LR: 6.11e-04 | GradNorm: 4.156
  Batch    8/48 | Loss: 3.1659 | LR: 6.02e-04 | GradNorm: 1.870
  Batch   12/48 | Loss: 3.1031 | LR: 5.93e-04 | GradNorm: 2.004
  Batch   16/48 | Loss: 3.2035 | LR: 5.83e-04 | GradNorm: 3.545
  Batch   20/48 | Loss: 3.1088 | LR: 5.74e-04 | GradNorm: 1.270
  Batch   24/48 | Loss: 3.3402 | LR: 5.64e-04 | GradNorm: 11.058
  Batch   28/48 | Loss: 3.2178 | LR: 5.54e-04 | GradNorm: 3.132
  Batch   32/48 | Loss: 3.1664 | LR: 5.44e-04 | GradNorm: 1.996
  Batch   36/48 | Loss: 3.1582 | LR: 5.33e-04 | GradNorm: 1.924
  Batch   40/48 | Loss: 3.1298 | LR: 5.23e-04 | GradNorm: 0.940
  Batch   44/48 | Loss: 3.1260 | LR: 5.12e-04 | GradNorm: 3.637
Epoch 5/10: Train=18.71%, Val=10.64%, Gap=8.07%, LR=5.03e-04
  Batch    0/48 | Loss: 3.0810 | LR: 5.01e-04 | GradNorm: 3.526
  Batch    4/48 | Loss: 3.0494 | LR: 4.90e-04 | GradNorm: 3.666
  Batch    8/48 | Loss: 3.0329 | LR: 4.78e-04 | GradNorm: 1.140
  Batch   12/48 | Loss: 3.0841 | LR: 4.67e-04 | GradNorm: 2.688
  Batch   16/48 | Loss: 3.0796 | LR: 4.56e-04 | GradNorm: 2.628
  Batch   20/48 | Loss: 3.0194 | LR: 4.44e-04 | GradNorm: 1.796
  Batch   24/48 | Loss: 3.0365 | LR: 4.32e-04 | GradNorm: 2.655
  Batch   28/48 | Loss: 2.9652 | LR: 4.21e-04 | GradNorm: 2.230
  Batch   32/48 | Loss: 2.9501 | LR: 4.09e-04 | GradNorm: 1.601
  Batch   36/48 | Loss: 3.0193 | LR: 3.97e-04 | GradNorm: 2.231
  Batch   40/48 | Loss: 3.0157 | LR: 3.85e-04 | GradNorm: 3.065
  Batch   44/48 | Loss: 3.0545 | LR: 3.73e-04 | GradNorm: 2.359
Epoch 6/10: Train=21.88%, Val=13.78%, Gap=8.10%, LR=3.64e-04
  Batch    0/48 | Loss: 2.9729 | LR: 3.61e-04 | GradNorm: 1.696
  Batch    4/48 | Loss: 2.9642 | LR: 3.49e-04 | GradNorm: 2.749
  Batch    8/48 | Loss: 2.9529 | LR: 3.37e-04 | GradNorm: 2.683
  Batch   12/48 | Loss: 2.8914 | LR: 3.26e-04 | GradNorm: 2.678
  Batch   16/48 | Loss: 2.8947 | LR: 3.14e-04 | GradNorm: 1.427
  Batch   20/48 | Loss: 2.9321 | LR: 3.02e-04 | GradNorm: 2.008
  Batch   24/48 | Loss: 2.9273 | LR: 2.90e-04 | GradNorm: 2.498
  Batch   28/48 | Loss: 2.9356 | LR: 2.79e-04 | GradNorm: 2.118
  Batch   32/48 | Loss: 2.9316 | LR: 2.67e-04 | GradNorm: 3.038
  Batch   36/48 | Loss: 2.9339 | LR: 2.56e-04 | GradNorm: 3.062
  Batch   40/48 | Loss: 2.9000 | LR: 2.44e-04 | GradNorm: 3.452
  Batch   44/48 | Loss: 2.8499 | LR: 2.33e-04 | GradNorm: 2.720
Epoch 7/10: Train=26.32%, Val=15.81%, Gap=10.51%, LR=2.25e-04
  Batch    0/48 | Loss: 2.8877 | LR: 2.22e-04 | GradNorm: 3.506
  Batch    4/48 | Loss: 2.7942 | LR: 2.11e-04 | GradNorm: 2.852
  Batch    8/48 | Loss: 2.8239 | LR: 2.00e-04 | GradNorm: 3.744
  Batch   12/48 | Loss: 2.8525 | LR: 1.90e-04 | GradNorm: 2.752
  Batch   16/48 | Loss: 2.8907 | LR: 1.80e-04 | GradNorm: 3.550
  Batch   20/48 | Loss: 2.7905 | LR: 1.69e-04 | GradNorm: 3.188
  Batch   24/48 | Loss: 2.7892 | LR: 1.59e-04 | GradNorm: 2.453
  Batch   28/48 | Loss: 2.8188 | LR: 1.50e-04 | GradNorm: 3.892
  Batch   32/48 | Loss: 2.8152 | LR: 1.40e-04 | GradNorm: 2.577
  Batch   36/48 | Loss: 2.8114 | LR: 1.31e-04 | GradNorm: 2.637
  Batch   40/48 | Loss: 2.7370 | LR: 1.22e-04 | GradNorm: 4.259
  Batch   44/48 | Loss: 2.8119 | LR: 1.13e-04 | GradNorm: 4.204
Epoch 8/10: Train=29.38%, Val=18.94%, Gap=10.44%, LR=1.07e-04
  Batch    0/48 | Loss: 2.7395 | LR: 1.05e-04 | GradNorm: 4.405
  Batch    4/48 | Loss: 2.7533 | LR: 9.64e-05 | GradNorm: 5.168
  Batch    8/48 | Loss: 2.8158 | LR: 8.85e-05 | GradNorm: 3.332
  Batch   12/48 | Loss: 2.7599 | LR: 8.09e-05 | GradNorm: 3.651
  Batch   16/48 | Loss: 2.6920 | LR: 7.35e-05 | GradNorm: 3.367
  Batch   20/48 | Loss: 2.6904 | LR: 6.65e-05 | GradNorm: 1.189
  Batch   24/48 | Loss: 2.7498 | LR: 5.98e-05 | GradNorm: 3.498
  Batch   28/48 | Loss: 2.7443 | LR: 5.34e-05 | GradNorm: 1.499
  Batch   32/48 | Loss: 2.7227 | LR: 4.74e-05 | GradNorm: 2.477
  Batch   36/48 | Loss: 2.7056 | LR: 4.17e-05 | GradNorm: 1.170
  Batch   40/48 | Loss: 2.7022 | LR: 3.63e-05 | GradNorm: 1.750
  Batch   44/48 | Loss: 2.7392 | LR: 3.13e-05 | GradNorm: 2.612
Epoch 9/10: Train=31.89%, Val=19.17%, Gap=12.72%, LR=2.78e-05
  Batch    0/48 | Loss: 2.7116 | LR: 2.67e-05 | GradNorm: 3.118
  Batch    4/48 | Loss: 2.7271 | LR: 2.24e-05 | GradNorm: 2.037
  Batch    8/48 | Loss: 2.6746 | LR: 1.85e-05 | GradNorm: 2.022
  Batch   12/48 | Loss: 2.6955 | LR: 1.49e-05 | GradNorm: 2.197
  Batch   16/48 | Loss: 2.6940 | LR: 1.17e-05 | GradNorm: 1.352
  Batch   20/48 | Loss: 2.7025 | LR: 8.95e-06 | GradNorm: 2.410
  Batch   24/48 | Loss: 2.7137 | LR: 6.53e-06 | GradNorm: 1.480
  Batch   28/48 | Loss: 2.7206 | LR: 4.49e-06 | GradNorm: 1.124
  Batch   32/48 | Loss: 2.7586 | LR: 2.84e-06 | GradNorm: 1.643
  Batch   36/48 | Loss: 2.6651 | LR: 1.57e-06 | GradNorm: 1.635
  Batch   40/48 | Loss: 2.6755 | LR: 6.97e-07 | GradNorm: 1.224
  Batch   44/48 | Loss: 2.7031 | LR: 2.10e-07 | GradNorm: 2.259
Epoch 10/10: Train=33.04%, Val=19.83%, Gap=13.21%, LR=1.00e-07
Best validation accuracy: 19.83%
