=== W&B Sweep Run: LR=0.000729 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0007290612505804913
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000729
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9457 | LR: 1.48e-05 | GradNorm: 1.504
  Batch    4/48 | Loss: 3.9174 | LR: 4.49e-05 | GradNorm: 0.867
  Batch    8/48 | Loss: 3.9298 | LR: 7.50e-05 | GradNorm: 0.855
  Batch   12/48 | Loss: 3.9153 | LR: 1.05e-04 | GradNorm: 0.634
  Batch   16/48 | Loss: 3.9164 | LR: 1.35e-04 | GradNorm: 0.492
  Batch   20/48 | Loss: 3.9158 | LR: 1.65e-04 | GradNorm: 0.566
  Batch   24/48 | Loss: 3.9127 | LR: 1.95e-04 | GradNorm: 0.575
  Batch   28/48 | Loss: 3.9161 | LR: 2.25e-04 | GradNorm: 0.530
  Batch   32/48 | Loss: 3.9022 | LR: 2.55e-04 | GradNorm: 0.499
  Batch   36/48 | Loss: 3.8830 | LR: 2.85e-04 | GradNorm: 0.659
  Batch   40/48 | Loss: 3.8238 | LR: 3.16e-04 | GradNorm: 0.969
  Batch   44/48 | Loss: 3.8888 | LR: 3.46e-04 | GradNorm: 7.610
Epoch 1/10: Train=2.68%, Val=6.33%, Gap=-3.65%, LR=3.68e-04
  Batch    0/48 | Loss: 3.7736 | LR: 3.76e-04 | GradNorm: 0.874
  Batch    4/48 | Loss: 3.7436 | LR: 4.06e-04 | GradNorm: 0.544
  Batch    8/48 | Loss: 3.8771 | LR: 4.36e-04 | GradNorm: 5.844
  Batch   12/48 | Loss: 3.9899 | LR: 4.66e-04 | GradNorm: 3.741
  Batch   16/48 | Loss: 3.7644 | LR: 4.96e-04 | GradNorm: 1.007
  Batch   20/48 | Loss: 3.7600 | LR: 5.26e-04 | GradNorm: 2.009
  Batch   24/48 | Loss: 3.6835 | LR: 5.56e-04 | GradNorm: 1.255
  Batch   28/48 | Loss: 3.9085 | LR: 5.86e-04 | GradNorm: 5.256
  Batch   32/48 | Loss: 3.8237 | LR: 6.16e-04 | GradNorm: 3.050
  Batch   36/48 | Loss: 3.7917 | LR: 6.46e-04 | GradNorm: 1.666
  Batch   40/48 | Loss: 3.7435 | LR: 6.76e-04 | GradNorm: 1.929
  Batch   44/48 | Loss: 3.6626 | LR: 7.07e-04 | GradNorm: 10.725
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.85%, Val=8.02%, Gap=-2.17%, LR=7.29e-04
  Batch    0/48 | Loss: 3.6791 | LR: 7.29e-04 | GradNorm: 8.284
  Batch    4/48 | Loss: 3.6668 | LR: 7.29e-04 | GradNorm: 7.230
  Batch    8/48 | Loss: 3.6609 | LR: 7.28e-04 | GradNorm: 9.117
  Batch   12/48 | Loss: 3.5539 | LR: 7.27e-04 | GradNorm: 2.547
  Batch   16/48 | Loss: 3.8367 | LR: 7.26e-04 | GradNorm: 8.491
  Batch   20/48 | Loss: 3.5219 | LR: 7.24e-04 | GradNorm: 2.216
  Batch   24/48 | Loss: 3.5159 | LR: 7.21e-04 | GradNorm: 3.554
  Batch   28/48 | Loss: 3.4914 | LR: 7.19e-04 | GradNorm: 3.348
  Batch   32/48 | Loss: 3.5505 | LR: 7.16e-04 | GradNorm: 4.154
  Batch   36/48 | Loss: 3.4588 | LR: 7.12e-04 | GradNorm: 0.946
  Batch   40/48 | Loss: 3.4619 | LR: 7.09e-04 | GradNorm: 2.218
  Batch   44/48 | Loss: 3.4342 | LR: 7.05e-04 | GradNorm: 4.130
Epoch 3/10: Train=9.40%, Val=6.35%, Gap=3.05%, LR=7.01e-04
  Batch    0/48 | Loss: 3.5510 | LR: 7.00e-04 | GradNorm: 6.408
  Batch    4/48 | Loss: 3.4414 | LR: 6.95e-04 | GradNorm: 4.001
  Batch    8/48 | Loss: 3.3725 | LR: 6.90e-04 | GradNorm: 1.416
  Batch   12/48 | Loss: 3.3250 | LR: 6.85e-04 | GradNorm: 3.030
  Batch   16/48 | Loss: 3.3654 | LR: 6.79e-04 | GradNorm: 2.043
  Batch   20/48 | Loss: 3.3098 | LR: 6.73e-04 | GradNorm: 1.508
  Batch   24/48 | Loss: 3.4242 | LR: 6.66e-04 | GradNorm: 5.965
  Batch   28/48 | Loss: 3.3084 | LR: 6.59e-04 | GradNorm: 1.943
  Batch   32/48 | Loss: 3.4590 | LR: 6.52e-04 | GradNorm: 3.770
  Batch   36/48 | Loss: 3.3953 | LR: 6.44e-04 | GradNorm: 4.718
  Batch   40/48 | Loss: 3.3503 | LR: 6.37e-04 | GradNorm: 2.967
  Batch   44/48 | Loss: 3.2485 | LR: 6.29e-04 | GradNorm: 1.894
Epoch 4/10: Train=13.29%, Val=8.93%, Gap=4.36%, LR=6.22e-04
  Batch    0/48 | Loss: 3.2854 | LR: 6.20e-04 | GradNorm: 4.071
  Batch    4/48 | Loss: 3.2673 | LR: 6.12e-04 | GradNorm: 3.350
  Batch    8/48 | Loss: 3.2571 | LR: 6.03e-04 | GradNorm: 3.177
  Batch   12/48 | Loss: 3.2073 | LR: 5.93e-04 | GradNorm: 2.891
  Batch   16/48 | Loss: 3.2798 | LR: 5.84e-04 | GradNorm: 3.772
  Batch   20/48 | Loss: 3.1808 | LR: 5.74e-04 | GradNorm: 2.247
  Batch   24/48 | Loss: 3.2094 | LR: 5.65e-04 | GradNorm: 2.227
  Batch   28/48 | Loss: 3.1657 | LR: 5.55e-04 | GradNorm: 2.709
  Batch   32/48 | Loss: 3.1856 | LR: 5.44e-04 | GradNorm: 3.873
  Batch   36/48 | Loss: 3.2170 | LR: 5.34e-04 | GradNorm: 2.664
  Batch   40/48 | Loss: 3.1908 | LR: 5.23e-04 | GradNorm: 2.128
  Batch   44/48 | Loss: 3.1254 | LR: 5.12e-04 | GradNorm: 1.811
Epoch 5/10: Train=17.85%, Val=13.15%, Gap=4.70%, LR=5.04e-04
  Batch    0/48 | Loss: 3.1180 | LR: 5.01e-04 | GradNorm: 3.444
  Batch    4/48 | Loss: 3.0211 | LR: 4.90e-04 | GradNorm: 1.782
  Batch    8/48 | Loss: 3.0623 | LR: 4.79e-04 | GradNorm: 1.968
  Batch   12/48 | Loss: 3.0546 | LR: 4.68e-04 | GradNorm: 1.359
  Batch   16/48 | Loss: 3.0617 | LR: 4.56e-04 | GradNorm: 3.476
  Batch   20/48 | Loss: 3.0888 | LR: 4.44e-04 | GradNorm: 3.823
  Batch   24/48 | Loss: 3.1081 | LR: 4.33e-04 | GradNorm: 4.372
  Batch   28/48 | Loss: 2.9960 | LR: 4.21e-04 | GradNorm: 2.873
  Batch   32/48 | Loss: 2.9972 | LR: 4.09e-04 | GradNorm: 2.773
  Batch   36/48 | Loss: 3.0467 | LR: 3.97e-04 | GradNorm: 2.145
  Batch   40/48 | Loss: 3.0071 | LR: 3.85e-04 | GradNorm: 3.240
  Batch   44/48 | Loss: 3.0347 | LR: 3.74e-04 | GradNorm: 1.650
Epoch 6/10: Train=21.74%, Val=13.61%, Gap=8.13%, LR=3.65e-04
  Batch    0/48 | Loss: 2.9596 | LR: 3.62e-04 | GradNorm: 2.404
  Batch    4/48 | Loss: 2.9973 | LR: 3.50e-04 | GradNorm: 4.830
  Batch    8/48 | Loss: 2.9311 | LR: 3.38e-04 | GradNorm: 1.790
  Batch   12/48 | Loss: 2.8662 | LR: 3.26e-04 | GradNorm: 3.246
  Batch   16/48 | Loss: 2.8609 | LR: 3.14e-04 | GradNorm: 1.722
  Batch   20/48 | Loss: 2.8942 | LR: 3.02e-04 | GradNorm: 1.477
  Batch   24/48 | Loss: 2.9688 | LR: 2.91e-04 | GradNorm: 5.137
  Batch   28/48 | Loss: 2.8693 | LR: 2.79e-04 | GradNorm: 1.016
  Batch   32/48 | Loss: 2.8783 | LR: 2.67e-04 | GradNorm: 3.184
  Batch   36/48 | Loss: 2.8983 | LR: 2.56e-04 | GradNorm: 2.934
  Batch   40/48 | Loss: 2.8761 | LR: 2.45e-04 | GradNorm: 2.129
  Batch   44/48 | Loss: 2.8684 | LR: 2.33e-04 | GradNorm: 2.296
Epoch 7/10: Train=26.96%, Val=15.50%, Gap=11.46%, LR=2.25e-04
  Batch    0/48 | Loss: 2.8472 | LR: 2.22e-04 | GradNorm: 2.501
  Batch    4/48 | Loss: 2.7971 | LR: 2.11e-04 | GradNorm: 1.690
  Batch    8/48 | Loss: 2.8059 | LR: 2.01e-04 | GradNorm: 3.024
  Batch   12/48 | Loss: 2.8661 | LR: 1.90e-04 | GradNorm: 4.520
  Batch   16/48 | Loss: 2.8423 | LR: 1.80e-04 | GradNorm: 4.596
  Batch   20/48 | Loss: 2.7915 | LR: 1.70e-04 | GradNorm: 2.885
  Batch   24/48 | Loss: 2.7836 | LR: 1.60e-04 | GradNorm: 4.133
  Batch   28/48 | Loss: 2.7937 | LR: 1.50e-04 | GradNorm: 2.059
  Batch   32/48 | Loss: 2.7826 | LR: 1.40e-04 | GradNorm: 1.919
  Batch   36/48 | Loss: 2.7748 | LR: 1.31e-04 | GradNorm: 2.778
  Batch   40/48 | Loss: 2.7018 | LR: 1.22e-04 | GradNorm: 1.551
  Batch   44/48 | Loss: 2.7756 | LR: 1.13e-04 | GradNorm: 2.889
Epoch 8/10: Train=30.28%, Val=15.93%, Gap=14.35%, LR=1.07e-04
  Batch    0/48 | Loss: 2.7102 | LR: 1.05e-04 | GradNorm: 1.698
  Batch    4/48 | Loss: 2.7247 | LR: 9.65e-05 | GradNorm: 1.879
  Batch    8/48 | Loss: 2.8029 | LR: 8.86e-05 | GradNorm: 2.591
  Batch   12/48 | Loss: 2.7175 | LR: 8.10e-05 | GradNorm: 2.821
  Batch   16/48 | Loss: 2.6632 | LR: 7.36e-05 | GradNorm: 2.032
  Batch   20/48 | Loss: 2.6838 | LR: 6.66e-05 | GradNorm: 1.411
  Batch   24/48 | Loss: 2.7200 | LR: 5.99e-05 | GradNorm: 2.107
  Batch   28/48 | Loss: 2.6956 | LR: 5.35e-05 | GradNorm: 1.912
  Batch   32/48 | Loss: 2.7044 | LR: 4.75e-05 | GradNorm: 1.861
  Batch   36/48 | Loss: 2.7025 | LR: 4.17e-05 | GradNorm: 2.916
  Batch   40/48 | Loss: 2.6841 | LR: 3.64e-05 | GradNorm: 1.830
  Batch   44/48 | Loss: 2.7108 | LR: 3.14e-05 | GradNorm: 2.574
Epoch 9/10: Train=33.22%, Val=18.61%, Gap=14.61%, LR=2.78e-05
  Batch    0/48 | Loss: 2.6997 | LR: 2.67e-05 | GradNorm: 2.017
  Batch    4/48 | Loss: 2.6796 | LR: 2.24e-05 | GradNorm: 3.018
  Batch    8/48 | Loss: 2.6531 | LR: 1.85e-05 | GradNorm: 1.971
  Batch   12/48 | Loss: 2.6714 | LR: 1.49e-05 | GradNorm: 2.560
  Batch   16/48 | Loss: 2.6621 | LR: 1.18e-05 | GradNorm: 2.220
  Batch   20/48 | Loss: 2.6833 | LR: 8.96e-06 | GradNorm: 1.418
  Batch   24/48 | Loss: 2.6893 | LR: 6.53e-06 | GradNorm: 1.585
  Batch   28/48 | Loss: 2.7013 | LR: 4.49e-06 | GradNorm: 0.983
  Batch   32/48 | Loss: 2.7135 | LR: 2.84e-06 | GradNorm: 1.545
  Batch   36/48 | Loss: 2.6692 | LR: 1.57e-06 | GradNorm: 1.056
  Batch   40/48 | Loss: 2.6367 | LR: 6.98e-07 | GradNorm: 1.054
  Batch   44/48 | Loss: 2.6588 | LR: 2.10e-07 | GradNorm: 2.064
Epoch 10/10: Train=34.38%, Val=18.48%, Gap=15.90%, LR=1.00e-07
Best validation accuracy: 18.61%
