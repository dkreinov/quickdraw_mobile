=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0004467615783759472
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9440 | LR: 9.07e-06 | GradNorm: 1.612
  Batch    4/48 | Loss: 3.9227 | LR: 2.75e-05 | GradNorm: 0.879
  Batch    8/48 | Loss: 3.9166 | LR: 4.59e-05 | GradNorm: 0.673
  Batch   12/48 | Loss: 3.9119 | LR: 6.44e-05 | GradNorm: 0.641
  Batch   16/48 | Loss: 3.9195 | LR: 8.28e-05 | GradNorm: 0.632
  Batch   20/48 | Loss: 3.9089 | LR: 1.01e-04 | GradNorm: 0.534
  Batch   24/48 | Loss: 3.9145 | LR: 1.20e-04 | GradNorm: 0.638
  Batch   28/48 | Loss: 3.9162 | LR: 1.38e-04 | GradNorm: 0.599
  Batch   32/48 | Loss: 3.9040 | LR: 1.57e-04 | GradNorm: 0.523
  Batch   36/48 | Loss: 3.8894 | LR: 1.75e-04 | GradNorm: 0.538
  Batch   40/48 | Loss: 3.8514 | LR: 1.93e-04 | GradNorm: 0.960
  Batch   44/48 | Loss: 3.9265 | LR: 2.12e-04 | GradNorm: 3.390
Epoch 1/10: Train=2.62%, Val=2.48%, Gap=0.14%, LR=2.26e-04
  Batch    0/48 | Loss: 4.0027 | LR: 2.30e-04 | GradNorm: 3.228
  Batch    4/48 | Loss: 3.8537 | LR: 2.49e-04 | GradNorm: 1.733
  Batch    8/48 | Loss: 3.7840 | LR: 2.67e-04 | GradNorm: 0.777
  Batch   12/48 | Loss: 3.7330 | LR: 2.86e-04 | GradNorm: 1.554
  Batch   16/48 | Loss: 3.7409 | LR: 3.04e-04 | GradNorm: 2.352
  Batch   20/48 | Loss: 3.7222 | LR: 3.22e-04 | GradNorm: 3.546
  Batch   24/48 | Loss: 3.6511 | LR: 3.41e-04 | GradNorm: 2.118
  Batch   28/48 | Loss: 3.6707 | LR: 3.59e-04 | GradNorm: 2.904
  Batch   32/48 | Loss: 3.7326 | LR: 3.78e-04 | GradNorm: 4.181
  Batch   36/48 | Loss: 3.7893 | LR: 3.96e-04 | GradNorm: 6.022
  Batch   40/48 | Loss: 3.6651 | LR: 4.15e-04 | GradNorm: 1.587
  Batch   44/48 | Loss: 3.6188 | LR: 4.33e-04 | GradNorm: 3.387
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.48%, Val=8.76%, Gap=-2.28%, LR=4.47e-04
  Batch    0/48 | Loss: 3.5438 | LR: 4.47e-04 | GradNorm: 2.352
  Batch    4/48 | Loss: 3.5785 | LR: 4.47e-04 | GradNorm: 3.583
  Batch    8/48 | Loss: 3.5628 | LR: 4.46e-04 | GradNorm: 4.637
  Batch   12/48 | Loss: 3.5382 | LR: 4.45e-04 | GradNorm: 3.948
  Batch   16/48 | Loss: 3.4994 | LR: 4.45e-04 | GradNorm: 2.073
  Batch   20/48 | Loss: 3.4418 | LR: 4.43e-04 | GradNorm: 1.691
  Batch   24/48 | Loss: 3.4146 | LR: 4.42e-04 | GradNorm: 2.104
  Batch   28/48 | Loss: 3.3726 | LR: 4.41e-04 | GradNorm: 4.897
  Batch   32/48 | Loss: 3.3682 | LR: 4.39e-04 | GradNorm: 1.620
  Batch   36/48 | Loss: 3.3737 | LR: 4.37e-04 | GradNorm: 3.930
  Batch   40/48 | Loss: 3.3657 | LR: 4.34e-04 | GradNorm: 3.285
  Batch   44/48 | Loss: 3.3222 | LR: 4.32e-04 | GradNorm: 2.998
Epoch 3/10: Train=12.22%, Val=9.88%, Gap=2.34%, LR=4.30e-04
  Batch    0/48 | Loss: 3.2932 | LR: 4.29e-04 | GradNorm: 2.420
  Batch    4/48 | Loss: 3.3305 | LR: 4.26e-04 | GradNorm: 4.245
  Batch    8/48 | Loss: 3.2951 | LR: 4.23e-04 | GradNorm: 2.358
  Batch   12/48 | Loss: 3.2267 | LR: 4.20e-04 | GradNorm: 2.230
  Batch   16/48 | Loss: 3.3703 | LR: 4.16e-04 | GradNorm: 5.397
  Batch   20/48 | Loss: 3.2216 | LR: 4.12e-04 | GradNorm: 3.769
  Batch   24/48 | Loss: 3.2268 | LR: 4.08e-04 | GradNorm: 3.608
  Batch   28/48 | Loss: 3.1947 | LR: 4.04e-04 | GradNorm: 3.163
  Batch   32/48 | Loss: 3.1837 | LR: 3.99e-04 | GradNorm: 2.094
  Batch   36/48 | Loss: 3.1477 | LR: 3.95e-04 | GradNorm: 2.151
  Batch   40/48 | Loss: 3.1846 | LR: 3.90e-04 | GradNorm: 2.616
  Batch   44/48 | Loss: 3.1210 | LR: 3.85e-04 | GradNorm: 3.137
Epoch 4/10: Train=17.87%, Val=11.62%, Gap=6.25%, LR=3.81e-04
  Batch    0/48 | Loss: 3.1290 | LR: 3.80e-04 | GradNorm: 3.309
  Batch    4/48 | Loss: 3.0818 | LR: 3.75e-04 | GradNorm: 3.255
  Batch    8/48 | Loss: 3.0384 | LR: 3.69e-04 | GradNorm: 1.592
  Batch   12/48 | Loss: 3.0323 | LR: 3.64e-04 | GradNorm: 1.825
  Batch   16/48 | Loss: 3.0803 | LR: 3.58e-04 | GradNorm: 2.749
  Batch   20/48 | Loss: 3.0885 | LR: 3.52e-04 | GradNorm: 3.730
  Batch   24/48 | Loss: 3.0675 | LR: 3.46e-04 | GradNorm: 3.564
  Batch   28/48 | Loss: 3.0329 | LR: 3.40e-04 | GradNorm: 2.887
  Batch   32/48 | Loss: 2.9844 | LR: 3.34e-04 | GradNorm: 2.531
  Batch   36/48 | Loss: 3.0223 | LR: 3.27e-04 | GradNorm: 1.856
  Batch   40/48 | Loss: 3.0598 | LR: 3.21e-04 | GradNorm: 4.222
  Batch   44/48 | Loss: 2.9866 | LR: 3.14e-04 | GradNorm: 4.166
Epoch 5/10: Train=23.59%, Val=13.83%, Gap=9.76%, LR=3.09e-04
  Batch    0/48 | Loss: 2.9219 | LR: 3.07e-04 | GradNorm: 4.670
  Batch    4/48 | Loss: 2.8699 | LR: 3.00e-04 | GradNorm: 4.731
  Batch    8/48 | Loss: 2.8792 | LR: 2.93e-04 | GradNorm: 3.453
  Batch   12/48 | Loss: 2.8712 | LR: 2.87e-04 | GradNorm: 3.169
  Batch   16/48 | Loss: 2.8388 | LR: 2.79e-04 | GradNorm: 2.619
  Batch   20/48 | Loss: 2.8338 | LR: 2.72e-04 | GradNorm: 2.951
  Batch   24/48 | Loss: 2.8397 | LR: 2.65e-04 | GradNorm: 3.174
  Batch   28/48 | Loss: 2.8220 | LR: 2.58e-04 | GradNorm: 4.819
  Batch   32/48 | Loss: 2.7944 | LR: 2.51e-04 | GradNorm: 4.621
  Batch   36/48 | Loss: 2.8371 | LR: 2.44e-04 | GradNorm: 2.758
  Batch   40/48 | Loss: 2.7980 | LR: 2.36e-04 | GradNorm: 2.129
  Batch   44/48 | Loss: 2.8439 | LR: 2.29e-04 | GradNorm: 2.575
Epoch 6/10: Train=28.80%, Val=14.52%, Gap=14.28%, LR=2.23e-04
  Batch    0/48 | Loss: 2.7958 | LR: 2.22e-04 | GradNorm: 3.622
  Batch    4/48 | Loss: 2.7861 | LR: 2.14e-04 | GradNorm: 3.996
  Batch    8/48 | Loss: 2.7817 | LR: 2.07e-04 | GradNorm: 4.490
  Batch   12/48 | Loss: 2.6545 | LR: 2.00e-04 | GradNorm: 2.575
  Batch   16/48 | Loss: 2.7087 | LR: 1.92e-04 | GradNorm: 3.225
  Batch   20/48 | Loss: 2.7367 | LR: 1.85e-04 | GradNorm: 2.841
  Batch   24/48 | Loss: 2.7554 | LR: 1.78e-04 | GradNorm: 2.820
  Batch   28/48 | Loss: 2.7725 | LR: 1.71e-04 | GradNorm: 4.415
  Batch   32/48 | Loss: 2.7318 | LR: 1.64e-04 | GradNorm: 4.386
  Batch   36/48 | Loss: 2.7612 | LR: 1.57e-04 | GradNorm: 5.562
  Batch   40/48 | Loss: 2.7331 | LR: 1.50e-04 | GradNorm: 3.587
  Batch   44/48 | Loss: 2.6995 | LR: 1.43e-04 | GradNorm: 3.261
Epoch 7/10: Train=32.52%, Val=19.18%, Gap=13.34%, LR=1.38e-04
  Batch    0/48 | Loss: 2.6835 | LR: 1.36e-04 | GradNorm: 2.662
  Batch    4/48 | Loss: 2.6306 | LR: 1.30e-04 | GradNorm: 2.982
  Batch    8/48 | Loss: 2.6361 | LR: 1.23e-04 | GradNorm: 3.418
  Batch   12/48 | Loss: 2.6897 | LR: 1.17e-04 | GradNorm: 3.794
  Batch   16/48 | Loss: 2.6752 | LR: 1.10e-04 | GradNorm: 2.663
  Batch   20/48 | Loss: 2.5812 | LR: 1.04e-04 | GradNorm: 3.807
  Batch   24/48 | Loss: 2.5947 | LR: 9.78e-05 | GradNorm: 3.777
  Batch   28/48 | Loss: 2.6493 | LR: 9.19e-05 | GradNorm: 6.536
  Batch   32/48 | Loss: 2.6175 | LR: 8.60e-05 | GradNorm: 4.913
  Batch   36/48 | Loss: 2.6034 | LR: 8.03e-05 | GradNorm: 3.118
  Batch   40/48 | Loss: 2.5498 | LR: 7.48e-05 | GradNorm: 5.034
  Batch   44/48 | Loss: 2.5963 | LR: 6.94e-05 | GradNorm: 3.415
Epoch 8/10: Train=36.23%, Val=20.82%, Gap=15.41%, LR=6.55e-05
  Batch    0/48 | Loss: 2.5752 | LR: 6.42e-05 | GradNorm: 4.422
  Batch    4/48 | Loss: 2.5470 | LR: 5.92e-05 | GradNorm: 4.514
  Batch    8/48 | Loss: 2.6180 | LR: 5.43e-05 | GradNorm: 3.620
  Batch   12/48 | Loss: 2.5369 | LR: 4.96e-05 | GradNorm: 2.382
  Batch   16/48 | Loss: 2.5014 | LR: 4.51e-05 | GradNorm: 2.190
  Batch   20/48 | Loss: 2.5060 | LR: 4.08e-05 | GradNorm: 3.140
  Batch   24/48 | Loss: 2.5361 | LR: 3.67e-05 | GradNorm: 2.515
  Batch   28/48 | Loss: 2.5542 | LR: 3.28e-05 | GradNorm: 3.082
  Batch   32/48 | Loss: 2.5287 | LR: 2.91e-05 | GradNorm: 4.087
  Batch   36/48 | Loss: 2.5485 | LR: 2.56e-05 | GradNorm: 2.918
  Batch   40/48 | Loss: 2.5026 | LR: 2.23e-05 | GradNorm: 2.337
  Batch   44/48 | Loss: 2.5224 | LR: 1.93e-05 | GradNorm: 2.775
Epoch 9/10: Train=38.89%, Val=21.71%, Gap=17.18%, LR=1.71e-05
  Batch    0/48 | Loss: 2.5195 | LR: 1.64e-05 | GradNorm: 3.759
  Batch    4/48 | Loss: 2.5021 | LR: 1.38e-05 | GradNorm: 2.463
  Batch    8/48 | Loss: 2.4959 | LR: 1.14e-05 | GradNorm: 1.761
  Batch   12/48 | Loss: 2.4843 | LR: 9.19e-06 | GradNorm: 1.743
  Batch   16/48 | Loss: 2.4848 | LR: 7.24e-06 | GradNorm: 1.679
  Batch   20/48 | Loss: 2.5129 | LR: 5.53e-06 | GradNorm: 3.028
  Batch   24/48 | Loss: 2.5232 | LR: 4.04e-06 | GradNorm: 2.574
  Batch   28/48 | Loss: 2.5368 | LR: 2.79e-06 | GradNorm: 1.944
  Batch   32/48 | Loss: 2.5223 | LR: 1.78e-06 | GradNorm: 2.150
  Batch   36/48 | Loss: 2.5063 | LR: 1.00e-06 | GradNorm: 2.006
  Batch   40/48 | Loss: 2.4747 | LR: 4.66e-07 | GradNorm: 2.190
  Batch   44/48 | Loss: 2.4937 | LR: 1.67e-07 | GradNorm: 2.000
Epoch 10/10: Train=40.31%, Val=21.80%, Gap=18.51%, LR=1.00e-07
Best validation accuracy: 21.80%
