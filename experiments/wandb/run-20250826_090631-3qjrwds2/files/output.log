=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002686097375824937
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9407 | LR: 5.46e-06 | GradNorm: 1.405
  Batch    4/48 | Loss: 3.9254 | LR: 1.65e-05 | GradNorm: 0.943
  Batch    8/48 | Loss: 3.9210 | LR: 2.76e-05 | GradNorm: 0.880
  Batch   12/48 | Loss: 3.9111 | LR: 3.87e-05 | GradNorm: 0.623
  Batch   16/48 | Loss: 3.9222 | LR: 4.98e-05 | GradNorm: 0.685
  Batch   20/48 | Loss: 3.9088 | LR: 6.09e-05 | GradNorm: 0.580
  Batch   24/48 | Loss: 3.9104 | LR: 7.19e-05 | GradNorm: 0.668
  Batch   28/48 | Loss: 3.9172 | LR: 8.30e-05 | GradNorm: 0.641
  Batch   32/48 | Loss: 3.9055 | LR: 9.41e-05 | GradNorm: 0.544
  Batch   36/48 | Loss: 3.9023 | LR: 1.05e-04 | GradNorm: 0.527
  Batch   40/48 | Loss: 3.8898 | LR: 1.16e-04 | GradNorm: 0.626
  Batch   44/48 | Loss: 3.8512 | LR: 1.27e-04 | GradNorm: 0.996
Epoch 1/10: Train=2.49%, Val=3.95%, Gap=-1.46%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8240 | LR: 1.38e-04 | GradNorm: 3.359
  Batch    4/48 | Loss: 3.8009 | LR: 1.49e-04 | GradNorm: 3.652
  Batch    8/48 | Loss: 3.7644 | LR: 1.61e-04 | GradNorm: 2.314
  Batch   12/48 | Loss: 3.7552 | LR: 1.72e-04 | GradNorm: 6.909
  Batch   16/48 | Loss: 3.7732 | LR: 1.83e-04 | GradNorm: 4.890
  Batch   20/48 | Loss: 3.7371 | LR: 1.94e-04 | GradNorm: 3.940
  Batch   24/48 | Loss: 3.6836 | LR: 2.05e-04 | GradNorm: 1.739
  Batch   28/48 | Loss: 3.6849 | LR: 2.16e-04 | GradNorm: 4.261
  Batch   32/48 | Loss: 3.7360 | LR: 2.27e-04 | GradNorm: 12.599
  Batch   36/48 | Loss: 3.6436 | LR: 2.38e-04 | GradNorm: 3.381
  Batch   40/48 | Loss: 3.6304 | LR: 2.49e-04 | GradNorm: 2.004
  Batch   44/48 | Loss: 3.8006 | LR: 2.60e-04 | GradNorm: 7.801
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.33%, Val=5.41%, Gap=0.92%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6314 | LR: 2.69e-04 | GradNorm: 5.016
  Batch    4/48 | Loss: 3.6962 | LR: 2.68e-04 | GradNorm: 3.184
  Batch    8/48 | Loss: 3.6524 | LR: 2.68e-04 | GradNorm: 2.209
  Batch   12/48 | Loss: 3.7052 | LR: 2.68e-04 | GradNorm: 6.548
  Batch   16/48 | Loss: 3.8697 | LR: 2.67e-04 | GradNorm: 16.341
  Batch   20/48 | Loss: 3.5483 | LR: 2.67e-04 | GradNorm: 3.754
  Batch   24/48 | Loss: 3.5362 | LR: 2.66e-04 | GradNorm: 2.419
  Batch   28/48 | Loss: 3.5345 | LR: 2.65e-04 | GradNorm: 5.104
  Batch   32/48 | Loss: 3.5916 | LR: 2.64e-04 | GradNorm: 7.802
  Batch   36/48 | Loss: 3.5631 | LR: 2.63e-04 | GradNorm: 4.785
  Batch   40/48 | Loss: 3.4401 | LR: 2.61e-04 | GradNorm: 1.717
  Batch   44/48 | Loss: 3.4229 | LR: 2.60e-04 | GradNorm: 2.803
Epoch 3/10: Train=9.61%, Val=9.85%, Gap=-0.24%, LR=2.58e-04
  Batch    0/48 | Loss: 3.4235 | LR: 2.58e-04 | GradNorm: 3.909
  Batch    4/48 | Loss: 3.4015 | LR: 2.56e-04 | GradNorm: 3.351
  Batch    8/48 | Loss: 3.3707 | LR: 2.54e-04 | GradNorm: 3.363
  Batch   12/48 | Loss: 3.3010 | LR: 2.52e-04 | GradNorm: 2.075
  Batch   16/48 | Loss: 3.3224 | LR: 2.50e-04 | GradNorm: 4.872
  Batch   20/48 | Loss: 3.3686 | LR: 2.48e-04 | GradNorm: 5.688
  Batch   24/48 | Loss: 3.5144 | LR: 2.45e-04 | GradNorm: 9.136
  Batch   28/48 | Loss: 3.2875 | LR: 2.43e-04 | GradNorm: 2.289
  Batch   32/48 | Loss: 3.2937 | LR: 2.40e-04 | GradNorm: 2.456
  Batch   36/48 | Loss: 3.2837 | LR: 2.37e-04 | GradNorm: 3.065
  Batch   40/48 | Loss: 3.3014 | LR: 2.35e-04 | GradNorm: 2.875
  Batch   44/48 | Loss: 3.2600 | LR: 2.32e-04 | GradNorm: 3.178
Epoch 4/10: Train=15.32%, Val=16.61%, Gap=-1.29%, LR=2.29e-04
  Batch    0/48 | Loss: 3.2137 | LR: 2.29e-04 | GradNorm: 1.873
  Batch    4/48 | Loss: 3.1635 | LR: 2.25e-04 | GradNorm: 1.453
  Batch    8/48 | Loss: 3.1669 | LR: 2.22e-04 | GradNorm: 3.159
  Batch   12/48 | Loss: 3.1443 | LR: 2.19e-04 | GradNorm: 1.917
  Batch   16/48 | Loss: 3.2070 | LR: 2.15e-04 | GradNorm: 3.303
  Batch   20/48 | Loss: 3.1640 | LR: 2.12e-04 | GradNorm: 3.350
  Batch   24/48 | Loss: 3.1648 | LR: 2.08e-04 | GradNorm: 2.685
  Batch   28/48 | Loss: 3.1377 | LR: 2.04e-04 | GradNorm: 2.169
  Batch   32/48 | Loss: 3.0998 | LR: 2.01e-04 | GradNorm: 2.196
  Batch   36/48 | Loss: 3.1696 | LR: 1.97e-04 | GradNorm: 2.890
  Batch   40/48 | Loss: 3.1229 | LR: 1.93e-04 | GradNorm: 2.487
  Batch   44/48 | Loss: 3.0940 | LR: 1.89e-04 | GradNorm: 2.868
Epoch 5/10: Train=19.56%, Val=16.50%, Gap=3.06%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0613 | LR: 1.85e-04 | GradNorm: 3.784
  Batch    4/48 | Loss: 3.0553 | LR: 1.81e-04 | GradNorm: 5.418
  Batch    8/48 | Loss: 3.0613 | LR: 1.76e-04 | GradNorm: 3.671
  Batch   12/48 | Loss: 3.0273 | LR: 1.72e-04 | GradNorm: 2.695
  Batch   16/48 | Loss: 2.9859 | LR: 1.68e-04 | GradNorm: 2.386
  Batch   20/48 | Loss: 3.0144 | LR: 1.64e-04 | GradNorm: 5.717
  Batch   24/48 | Loss: 2.9941 | LR: 1.59e-04 | GradNorm: 5.484
  Batch   28/48 | Loss: 2.9358 | LR: 1.55e-04 | GradNorm: 2.785
  Batch   32/48 | Loss: 2.9797 | LR: 1.51e-04 | GradNorm: 6.121
  Batch   36/48 | Loss: 2.9923 | LR: 1.46e-04 | GradNorm: 3.786
  Batch   40/48 | Loss: 2.9618 | LR: 1.42e-04 | GradNorm: 6.786
  Batch   44/48 | Loss: 3.0236 | LR: 1.38e-04 | GradNorm: 5.929
Epoch 6/10: Train=24.18%, Val=17.77%, Gap=6.41%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9366 | LR: 1.33e-04 | GradNorm: 5.530
  Batch    4/48 | Loss: 2.9291 | LR: 1.29e-04 | GradNorm: 5.977
  Batch    8/48 | Loss: 2.9152 | LR: 1.24e-04 | GradNorm: 2.057
  Batch   12/48 | Loss: 2.8487 | LR: 1.20e-04 | GradNorm: 4.364
  Batch   16/48 | Loss: 2.8725 | LR: 1.16e-04 | GradNorm: 4.628
  Batch   20/48 | Loss: 2.9206 | LR: 1.11e-04 | GradNorm: 3.959
  Batch   24/48 | Loss: 2.9159 | LR: 1.07e-04 | GradNorm: 5.072
  Batch   28/48 | Loss: 2.8959 | LR: 1.03e-04 | GradNorm: 4.886
  Batch   32/48 | Loss: 2.9379 | LR: 9.85e-05 | GradNorm: 7.560
  Batch   36/48 | Loss: 2.9261 | LR: 9.43e-05 | GradNorm: 7.145
  Batch   40/48 | Loss: 2.8817 | LR: 9.02e-05 | GradNorm: 4.286
  Batch   44/48 | Loss: 2.8832 | LR: 8.60e-05 | GradNorm: 6.633
Epoch 7/10: Train=28.22%, Val=20.18%, Gap=8.04%, LR=8.30e-05
  Batch    0/48 | Loss: 2.8375 | LR: 8.20e-05 | GradNorm: 3.801
  Batch    4/48 | Loss: 2.8009 | LR: 7.79e-05 | GradNorm: 4.350
  Batch    8/48 | Loss: 2.8038 | LR: 7.40e-05 | GradNorm: 5.447
  Batch   12/48 | Loss: 2.8475 | LR: 7.01e-05 | GradNorm: 2.874
  Batch   16/48 | Loss: 2.8448 | LR: 6.63e-05 | GradNorm: 5.847
  Batch   20/48 | Loss: 2.7603 | LR: 6.25e-05 | GradNorm: 4.046
  Batch   24/48 | Loss: 2.7682 | LR: 5.89e-05 | GradNorm: 2.335
  Batch   28/48 | Loss: 2.8059 | LR: 5.53e-05 | GradNorm: 2.882
  Batch   32/48 | Loss: 2.7746 | LR: 5.18e-05 | GradNorm: 2.739
  Batch   36/48 | Loss: 2.7763 | LR: 4.83e-05 | GradNorm: 3.527
  Batch   40/48 | Loss: 2.7068 | LR: 4.50e-05 | GradNorm: 3.484
  Batch   44/48 | Loss: 2.7676 | LR: 4.18e-05 | GradNorm: 2.449
Epoch 8/10: Train=31.18%, Val=19.79%, Gap=11.39%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7364 | LR: 3.86e-05 | GradNorm: 3.587
  Batch    4/48 | Loss: 2.7354 | LR: 3.56e-05 | GradNorm: 7.585
  Batch    8/48 | Loss: 2.7988 | LR: 3.27e-05 | GradNorm: 4.452
  Batch   12/48 | Loss: 2.7298 | LR: 2.99e-05 | GradNorm: 2.912
  Batch   16/48 | Loss: 2.6782 | LR: 2.72e-05 | GradNorm: 3.894
  Batch   20/48 | Loss: 2.7123 | LR: 2.46e-05 | GradNorm: 3.490
  Batch   24/48 | Loss: 2.7257 | LR: 2.21e-05 | GradNorm: 2.569
  Batch   28/48 | Loss: 2.7259 | LR: 1.98e-05 | GradNorm: 4.370
  Batch   32/48 | Loss: 2.7276 | LR: 1.75e-05 | GradNorm: 3.827
  Batch   36/48 | Loss: 2.7104 | LR: 1.54e-05 | GradNorm: 3.226
  Batch   40/48 | Loss: 2.6947 | LR: 1.35e-05 | GradNorm: 3.384
  Batch   44/48 | Loss: 2.7075 | LR: 1.16e-05 | GradNorm: 1.498
Epoch 9/10: Train=33.27%, Val=20.02%, Gap=13.25%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7097 | LR: 9.90e-06 | GradNorm: 3.595
  Batch    4/48 | Loss: 2.7050 | LR: 8.32e-06 | GradNorm: 3.707
  Batch    8/48 | Loss: 2.6827 | LR: 6.88e-06 | GradNorm: 1.878
  Batch   12/48 | Loss: 2.6970 | LR: 5.57e-06 | GradNorm: 2.925
  Batch   16/48 | Loss: 2.6903 | LR: 4.39e-06 | GradNorm: 1.899
  Batch   20/48 | Loss: 2.7024 | LR: 3.36e-06 | GradNorm: 1.596
  Batch   24/48 | Loss: 2.6852 | LR: 2.47e-06 | GradNorm: 2.393
  Batch   28/48 | Loss: 2.7074 | LR: 1.72e-06 | GradNorm: 1.462
  Batch   32/48 | Loss: 2.7319 | LR: 1.11e-06 | GradNorm: 2.553
  Batch   36/48 | Loss: 2.6821 | LR: 6.43e-07 | GradNorm: 1.922
  Batch   40/48 | Loss: 2.6852 | LR: 3.20e-07 | GradNorm: 1.945
  Batch   44/48 | Loss: 2.6838 | LR: 1.40e-07 | GradNorm: 2.336
Epoch 10/10: Train=34.27%, Val=20.55%, Gap=13.72%, LR=1.00e-07
Best validation accuracy: 20.55%
