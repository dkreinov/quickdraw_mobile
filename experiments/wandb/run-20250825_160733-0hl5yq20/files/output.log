=== W&B Sweep Run: LR=0.001595 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0015952853047821675
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.001595
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9416 | LR: 3.24e-05 | GradNorm: 1.436
  Batch    4/48 | Loss: 3.9257 | LR: 9.82e-05 | GradNorm: 0.894
  Batch    8/48 | Loss: 3.9232 | LR: 1.64e-04 | GradNorm: 0.619
  Batch   12/48 | Loss: 3.9092 | LR: 2.30e-04 | GradNorm: 0.472
  Batch   16/48 | Loss: 3.9246 | LR: 2.96e-04 | GradNorm: 0.543
  Batch   20/48 | Loss: 3.9122 | LR: 3.61e-04 | GradNorm: 0.548
  Batch   24/48 | Loss: 3.8965 | LR: 4.27e-04 | GradNorm: 0.622
  Batch   28/48 | Loss: 3.8399 | LR: 4.93e-04 | GradNorm: 0.811
  Batch   32/48 | Loss: 3.7894 | LR: 5.59e-04 | GradNorm: 1.375
  Batch   36/48 | Loss: 4.0506 | LR: 6.25e-04 | GradNorm: 2.449
  Batch   40/48 | Loss: 3.8736 | LR: 6.90e-04 | GradNorm: 0.903
  Batch   44/48 | Loss: 3.7914 | LR: 7.56e-04 | GradNorm: 0.623
Epoch 1/10: Train=3.13%, Val=4.96%, Gap=-1.83%, LR=8.06e-04
  Batch    0/48 | Loss: 3.8590 | LR: 8.22e-04 | GradNorm: 2.361
  Batch    4/48 | Loss: 3.9260 | LR: 8.88e-04 | GradNorm: 1.873
  Batch    8/48 | Loss: 3.7714 | LR: 9.54e-04 | GradNorm: 0.715
  Batch   12/48 | Loss: 3.7876 | LR: 1.02e-03 | GradNorm: 2.682
  Batch   16/48 | Loss: 3.7197 | LR: 1.09e-03 | GradNorm: 0.828
  Batch   20/48 | Loss: 3.6860 | LR: 1.15e-03 | GradNorm: 0.676
  Batch   24/48 | Loss: 3.6695 | LR: 1.22e-03 | GradNorm: 1.407
  Batch   28/48 | Loss: 3.6810 | LR: 1.28e-03 | GradNorm: 1.015
  Batch   32/48 | Loss: 3.7768 | LR: 1.35e-03 | GradNorm: 1.723
  Batch   36/48 | Loss: 3.6845 | LR: 1.41e-03 | GradNorm: 1.108
  Batch   40/48 | Loss: 3.6488 | LR: 1.48e-03 | GradNorm: 1.671
  Batch   44/48 | Loss: 3.8631 | LR: 1.55e-03 | GradNorm: 7.805
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.86%, Val=8.00%, Gap=-2.14%, LR=1.60e-03
  Batch    0/48 | Loss: 3.6315 | LR: 1.60e-03 | GradNorm: 1.166
  Batch    4/48 | Loss: 3.6187 | LR: 1.59e-03 | GradNorm: 1.304
  Batch    8/48 | Loss: 3.8315 | LR: 1.59e-03 | GradNorm: 3.589
  Batch   12/48 | Loss: 3.6592 | LR: 1.59e-03 | GradNorm: 1.342
  Batch   16/48 | Loss: 3.6591 | LR: 1.59e-03 | GradNorm: 2.386
  Batch   20/48 | Loss: 3.6510 | LR: 1.58e-03 | GradNorm: 1.851
  Batch   24/48 | Loss: 3.5546 | LR: 1.58e-03 | GradNorm: 0.593
  Batch   28/48 | Loss: 3.5560 | LR: 1.57e-03 | GradNorm: 3.706
  Batch   32/48 | Loss: 3.5446 | LR: 1.57e-03 | GradNorm: 1.264
  Batch   36/48 | Loss: 3.5606 | LR: 1.56e-03 | GradNorm: 1.451
  Batch   40/48 | Loss: 4.5748 | LR: 1.55e-03 | GradNorm: 60.591
  Batch   44/48 | Loss: 3.4825 | LR: 1.54e-03 | GradNorm: 0.549
Epoch 3/10: Train=8.71%, Val=7.76%, Gap=0.95%, LR=1.53e-03
  Batch    0/48 | Loss: 3.4938 | LR: 1.53e-03 | GradNorm: 1.205
  Batch    4/48 | Loss: 3.4486 | LR: 1.52e-03 | GradNorm: 0.629
  Batch    8/48 | Loss: 3.4752 | LR: 1.51e-03 | GradNorm: 0.874
  Batch   12/48 | Loss: 3.4495 | LR: 1.50e-03 | GradNorm: 0.745
  Batch   16/48 | Loss: 3.5219 | LR: 1.49e-03 | GradNorm: 2.201
  Batch   20/48 | Loss: 3.4814 | LR: 1.47e-03 | GradNorm: 1.415
  Batch   24/48 | Loss: 3.4797 | LR: 1.46e-03 | GradNorm: 2.593
  Batch   28/48 | Loss: 3.4390 | LR: 1.44e-03 | GradNorm: 0.755
  Batch   32/48 | Loss: 3.5751 | LR: 1.43e-03 | GradNorm: 3.229
  Batch   36/48 | Loss: 3.5108 | LR: 1.41e-03 | GradNorm: 1.933
  Batch   40/48 | Loss: 3.5252 | LR: 1.39e-03 | GradNorm: 1.316
  Batch   44/48 | Loss: 3.5507 | LR: 1.38e-03 | GradNorm: 1.773
Epoch 4/10: Train=10.59%, Val=10.29%, Gap=0.30%, LR=1.36e-03
  Batch    0/48 | Loss: 3.4614 | LR: 1.36e-03 | GradNorm: 0.720
  Batch    4/48 | Loss: 3.4555 | LR: 1.34e-03 | GradNorm: 1.179
  Batch    8/48 | Loss: 3.4757 | LR: 1.32e-03 | GradNorm: 0.897
  Batch   12/48 | Loss: 3.4349 | LR: 1.30e-03 | GradNorm: 0.982
  Batch   16/48 | Loss: 3.5164 | LR: 1.28e-03 | GradNorm: 1.680
  Batch   20/48 | Loss: 3.4563 | LR: 1.26e-03 | GradNorm: 1.112
  Batch   24/48 | Loss: 3.4319 | LR: 1.24e-03 | GradNorm: 0.787
  Batch   28/48 | Loss: 3.3980 | LR: 1.21e-03 | GradNorm: 0.506
  Batch   32/48 | Loss: 3.3793 | LR: 1.19e-03 | GradNorm: 0.961
  Batch   36/48 | Loss: 3.3985 | LR: 1.17e-03 | GradNorm: 0.572
  Batch   40/48 | Loss: 3.4286 | LR: 1.14e-03 | GradNorm: 1.462
  Batch   44/48 | Loss: 3.3834 | LR: 1.12e-03 | GradNorm: 1.440
Epoch 5/10: Train=12.05%, Val=9.10%, Gap=2.95%, LR=1.10e-03
  Batch    0/48 | Loss: 3.3495 | LR: 1.10e-03 | GradNorm: 1.397
  Batch    4/48 | Loss: 3.2452 | LR: 1.07e-03 | GradNorm: 0.643
  Batch    8/48 | Loss: 3.2900 | LR: 1.05e-03 | GradNorm: 2.813
  Batch   12/48 | Loss: 3.4154 | LR: 1.02e-03 | GradNorm: 4.473
  Batch   16/48 | Loss: 3.3147 | LR: 9.98e-04 | GradNorm: 1.355
  Batch   20/48 | Loss: 3.2664 | LR: 9.72e-04 | GradNorm: 0.699
  Batch   24/48 | Loss: 3.2654 | LR: 9.47e-04 | GradNorm: 1.063
  Batch   28/48 | Loss: 3.2276 | LR: 9.21e-04 | GradNorm: 1.016
  Batch   32/48 | Loss: 3.2310 | LR: 8.95e-04 | GradNorm: 3.060
  Batch   36/48 | Loss: 3.2239 | LR: 8.69e-04 | GradNorm: 2.265
  Batch   40/48 | Loss: 3.2162 | LR: 8.43e-04 | GradNorm: 1.979
  Batch   44/48 | Loss: 3.2491 | LR: 8.17e-04 | GradNorm: 1.346
Epoch 6/10: Train=16.45%, Val=8.18%, Gap=8.27%, LR=7.98e-04
  Batch    0/48 | Loss: 3.1853 | LR: 7.91e-04 | GradNorm: 2.815
  Batch    4/48 | Loss: 3.1277 | LR: 7.65e-04 | GradNorm: 0.843
  Batch    8/48 | Loss: 3.2485 | LR: 7.39e-04 | GradNorm: 3.578
  Batch   12/48 | Loss: 3.1645 | LR: 7.13e-04 | GradNorm: 3.690
  Batch   16/48 | Loss: 3.1595 | LR: 6.87e-04 | GradNorm: 1.978
  Batch   20/48 | Loss: 3.1504 | LR: 6.61e-04 | GradNorm: 1.657
  Batch   24/48 | Loss: 3.1752 | LR: 6.36e-04 | GradNorm: 1.828
  Batch   28/48 | Loss: 3.0956 | LR: 6.10e-04 | GradNorm: 1.353
  Batch   32/48 | Loss: 3.1689 | LR: 5.85e-04 | GradNorm: 2.600
  Batch   36/48 | Loss: 3.1249 | LR: 5.60e-04 | GradNorm: 1.937
  Batch   40/48 | Loss: 3.1164 | LR: 5.35e-04 | GradNorm: 2.427
  Batch   44/48 | Loss: 3.1024 | LR: 5.11e-04 | GradNorm: 2.340
Epoch 7/10: Train=19.96%, Val=9.38%, Gap=10.58%, LR=4.92e-04
  Batch    0/48 | Loss: 3.1420 | LR: 4.86e-04 | GradNorm: 2.105
  Batch    4/48 | Loss: 3.0381 | LR: 4.63e-04 | GradNorm: 2.200
  Batch    8/48 | Loss: 3.0380 | LR: 4.39e-04 | GradNorm: 1.102
  Batch   12/48 | Loss: 3.1159 | LR: 4.16e-04 | GradNorm: 2.546
  Batch   16/48 | Loss: 3.0690 | LR: 3.93e-04 | GradNorm: 1.415
  Batch   20/48 | Loss: 3.0047 | LR: 3.71e-04 | GradNorm: 1.844
  Batch   24/48 | Loss: 2.9759 | LR: 3.49e-04 | GradNorm: 0.902
  Batch   28/48 | Loss: 3.0402 | LR: 3.28e-04 | GradNorm: 1.673
  Batch   32/48 | Loss: 3.0285 | LR: 3.07e-04 | GradNorm: 2.080
  Batch   36/48 | Loss: 3.0034 | LR: 2.87e-04 | GradNorm: 1.563
  Batch   40/48 | Loss: 2.9193 | LR: 2.67e-04 | GradNorm: 0.723
  Batch   44/48 | Loss: 2.9945 | LR: 2.48e-04 | GradNorm: 1.361
Epoch 8/10: Train=23.40%, Val=10.83%, Gap=12.57%, LR=2.34e-04
  Batch    0/48 | Loss: 2.9717 | LR: 2.29e-04 | GradNorm: 1.840
  Batch    4/48 | Loss: 2.9297 | LR: 2.11e-04 | GradNorm: 1.351
  Batch    8/48 | Loss: 2.9998 | LR: 1.94e-04 | GradNorm: 2.355
  Batch   12/48 | Loss: 2.9730 | LR: 1.77e-04 | GradNorm: 2.305
  Batch   16/48 | Loss: 2.8938 | LR: 1.61e-04 | GradNorm: 1.092
  Batch   20/48 | Loss: 2.8962 | LR: 1.46e-04 | GradNorm: 1.581
  Batch   24/48 | Loss: 2.9360 | LR: 1.31e-04 | GradNorm: 1.227
  Batch   28/48 | Loss: 2.9242 | LR: 1.17e-04 | GradNorm: 0.881
  Batch   32/48 | Loss: 2.9197 | LR: 1.04e-04 | GradNorm: 0.926
  Batch   36/48 | Loss: 2.9133 | LR: 9.12e-05 | GradNorm: 0.984
  Batch   40/48 | Loss: 2.8647 | LR: 7.95e-05 | GradNorm: 0.886
  Batch   44/48 | Loss: 2.9338 | LR: 6.85e-05 | GradNorm: 1.402
Epoch 9/10: Train=26.16%, Val=11.77%, Gap=14.39%, LR=6.08e-05
  Batch    0/48 | Loss: 2.9477 | LR: 5.83e-05 | GradNorm: 1.250
  Batch    4/48 | Loss: 2.8777 | LR: 4.89e-05 | GradNorm: 0.747
  Batch    8/48 | Loss: 2.8576 | LR: 4.04e-05 | GradNorm: 0.799
  Batch   12/48 | Loss: 2.8876 | LR: 3.26e-05 | GradNorm: 0.839
  Batch   16/48 | Loss: 2.8475 | LR: 2.56e-05 | GradNorm: 0.642
  Batch   20/48 | Loss: 2.8759 | LR: 1.95e-05 | GradNorm: 1.081
  Batch   24/48 | Loss: 2.8999 | LR: 1.42e-05 | GradNorm: 0.867
  Batch   28/48 | Loss: 2.9032 | LR: 9.72e-06 | GradNorm: 0.873
  Batch   32/48 | Loss: 2.9025 | LR: 6.10e-06 | GradNorm: 0.823
  Batch   36/48 | Loss: 2.8706 | LR: 3.33e-06 | GradNorm: 0.861
  Batch   40/48 | Loss: 2.8489 | LR: 1.41e-06 | GradNorm: 0.877
  Batch   44/48 | Loss: 2.8857 | LR: 3.40e-07 | GradNorm: 1.223
Epoch 10/10: Train=27.35%, Val=11.75%, Gap=15.60%, LR=1.00e-07
Best validation accuracy: 11.77%
