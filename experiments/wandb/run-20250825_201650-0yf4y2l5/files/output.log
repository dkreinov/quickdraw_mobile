=== W&B Sweep Run: LR=0.000291 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002905600968790519
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000291
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9623 | LR: 5.90e-06 | GradNorm: 1.579
  Batch    4/48 | Loss: 3.9229 | LR: 1.79e-05 | GradNorm: 1.034
  Batch    8/48 | Loss: 3.9255 | LR: 2.99e-05 | GradNorm: 0.949
  Batch   12/48 | Loss: 3.9193 | LR: 4.19e-05 | GradNorm: 0.727
  Batch   16/48 | Loss: 3.9223 | LR: 5.38e-05 | GradNorm: 0.661
  Batch   20/48 | Loss: 3.9149 | LR: 6.58e-05 | GradNorm: 0.624
  Batch   24/48 | Loss: 3.9110 | LR: 7.78e-05 | GradNorm: 0.655
  Batch   28/48 | Loss: 3.9146 | LR: 8.98e-05 | GradNorm: 0.566
  Batch   32/48 | Loss: 3.9082 | LR: 1.02e-04 | GradNorm: 0.521
  Batch   36/48 | Loss: 3.9105 | LR: 1.14e-04 | GradNorm: 0.548
  Batch   40/48 | Loss: 3.9023 | LR: 1.26e-04 | GradNorm: 0.570
  Batch   44/48 | Loss: 3.8890 | LR: 1.38e-04 | GradNorm: 0.658
Epoch 1/10: Train=2.50%, Val=4.33%, Gap=-1.83%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8462 | LR: 1.50e-04 | GradNorm: 0.879
  Batch    4/48 | Loss: 3.8612 | LR: 1.62e-04 | GradNorm: 7.245
  Batch    8/48 | Loss: 3.8667 | LR: 1.74e-04 | GradNorm: 10.300
  Batch   12/48 | Loss: 3.8331 | LR: 1.86e-04 | GradNorm: 3.144
  Batch   16/48 | Loss: 3.8810 | LR: 1.98e-04 | GradNorm: 3.838
  Batch   20/48 | Loss: 3.7843 | LR: 2.10e-04 | GradNorm: 1.783
  Batch   24/48 | Loss: 3.7680 | LR: 2.22e-04 | GradNorm: 2.993
  Batch   28/48 | Loss: 3.7649 | LR: 2.34e-04 | GradNorm: 1.902
  Batch   32/48 | Loss: 3.7337 | LR: 2.46e-04 | GradNorm: 2.309
  Batch   36/48 | Loss: 3.7259 | LR: 2.58e-04 | GradNorm: 2.548
  Batch   40/48 | Loss: 3.7542 | LR: 2.70e-04 | GradNorm: 3.155
  Batch   44/48 | Loss: 3.6830 | LR: 2.82e-04 | GradNorm: 3.456
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.31%, Val=7.94%, Gap=-2.63%, LR=2.91e-04
  Batch    0/48 | Loss: 3.6668 | LR: 2.91e-04 | GradNorm: 3.522
  Batch    4/48 | Loss: 3.7702 | LR: 2.90e-04 | GradNorm: 10.538
  Batch    8/48 | Loss: 3.5770 | LR: 2.90e-04 | GradNorm: 1.269
  Batch   12/48 | Loss: 3.6006 | LR: 2.90e-04 | GradNorm: 2.920
  Batch   16/48 | Loss: 3.6450 | LR: 2.89e-04 | GradNorm: 4.159
  Batch   20/48 | Loss: 3.5464 | LR: 2.88e-04 | GradNorm: 2.705
  Batch   24/48 | Loss: 3.5186 | LR: 2.88e-04 | GradNorm: 2.765
  Batch   28/48 | Loss: 3.4896 | LR: 2.86e-04 | GradNorm: 4.214
  Batch   32/48 | Loss: 3.4881 | LR: 2.85e-04 | GradNorm: 2.517
  Batch   36/48 | Loss: 3.4504 | LR: 2.84e-04 | GradNorm: 2.279
  Batch   40/48 | Loss: 3.4285 | LR: 2.82e-04 | GradNorm: 1.900
  Batch   44/48 | Loss: 3.4283 | LR: 2.81e-04 | GradNorm: 4.010
Epoch 3/10: Train=10.76%, Val=9.01%, Gap=1.75%, LR=2.80e-04
  Batch    0/48 | Loss: 3.3670 | LR: 2.79e-04 | GradNorm: 1.884
  Batch    4/48 | Loss: 3.3431 | LR: 2.77e-04 | GradNorm: 1.659
  Batch    8/48 | Loss: 3.3484 | LR: 2.75e-04 | GradNorm: 4.036
  Batch   12/48 | Loss: 3.2821 | LR: 2.73e-04 | GradNorm: 2.828
  Batch   16/48 | Loss: 3.2761 | LR: 2.71e-04 | GradNorm: 3.271
  Batch   20/48 | Loss: 3.3525 | LR: 2.68e-04 | GradNorm: 5.648
  Batch   24/48 | Loss: 3.3788 | LR: 2.65e-04 | GradNorm: 7.762
  Batch   28/48 | Loss: 3.3226 | LR: 2.63e-04 | GradNorm: 5.631
  Batch   32/48 | Loss: 3.2906 | LR: 2.60e-04 | GradNorm: 3.185
  Batch   36/48 | Loss: 3.2166 | LR: 2.57e-04 | GradNorm: 1.731
  Batch   40/48 | Loss: 3.2149 | LR: 2.54e-04 | GradNorm: 1.727
  Batch   44/48 | Loss: 3.2234 | LR: 2.51e-04 | GradNorm: 4.941
Epoch 4/10: Train=16.59%, Val=14.08%, Gap=2.51%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1795 | LR: 2.47e-04 | GradNorm: 3.271
  Batch    4/48 | Loss: 3.1284 | LR: 2.44e-04 | GradNorm: 2.236
  Batch    8/48 | Loss: 3.1128 | LR: 2.40e-04 | GradNorm: 1.951
  Batch   12/48 | Loss: 3.1094 | LR: 2.37e-04 | GradNorm: 3.346
  Batch   16/48 | Loss: 3.1730 | LR: 2.33e-04 | GradNorm: 4.391
  Batch   20/48 | Loss: 3.1244 | LR: 2.29e-04 | GradNorm: 3.340
  Batch   24/48 | Loss: 3.1405 | LR: 2.25e-04 | GradNorm: 2.357
  Batch   28/48 | Loss: 3.0827 | LR: 2.21e-04 | GradNorm: 2.974
  Batch   32/48 | Loss: 3.0578 | LR: 2.17e-04 | GradNorm: 3.559
  Batch   36/48 | Loss: 3.1166 | LR: 2.13e-04 | GradNorm: 2.064
  Batch   40/48 | Loss: 3.1206 | LR: 2.08e-04 | GradNorm: 3.237
  Batch   44/48 | Loss: 3.0792 | LR: 2.04e-04 | GradNorm: 3.708
Epoch 5/10: Train=21.36%, Val=14.42%, Gap=6.94%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0254 | LR: 2.00e-04 | GradNorm: 3.143
  Batch    4/48 | Loss: 2.9995 | LR: 1.95e-04 | GradNorm: 3.689
  Batch    8/48 | Loss: 2.9959 | LR: 1.91e-04 | GradNorm: 2.155
  Batch   12/48 | Loss: 2.9915 | LR: 1.86e-04 | GradNorm: 2.981
  Batch   16/48 | Loss: 2.9786 | LR: 1.82e-04 | GradNorm: 3.550
  Batch   20/48 | Loss: 2.9646 | LR: 1.77e-04 | GradNorm: 2.166
  Batch   24/48 | Loss: 2.9592 | LR: 1.72e-04 | GradNorm: 2.273
  Batch   28/48 | Loss: 2.9368 | LR: 1.68e-04 | GradNorm: 4.422
  Batch   32/48 | Loss: 2.9138 | LR: 1.63e-04 | GradNorm: 3.287
  Batch   36/48 | Loss: 2.9416 | LR: 1.58e-04 | GradNorm: 2.044
  Batch   40/48 | Loss: 2.9488 | LR: 1.54e-04 | GradNorm: 5.913
  Batch   44/48 | Loss: 2.9812 | LR: 1.49e-04 | GradNorm: 6.604
Epoch 6/10: Train=25.49%, Val=17.65%, Gap=7.84%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8906 | LR: 1.44e-04 | GradNorm: 3.889
  Batch    4/48 | Loss: 2.9198 | LR: 1.39e-04 | GradNorm: 7.852
  Batch    8/48 | Loss: 2.8873 | LR: 1.35e-04 | GradNorm: 4.910
  Batch   12/48 | Loss: 2.8558 | LR: 1.30e-04 | GradNorm: 9.523
  Batch   16/48 | Loss: 2.8354 | LR: 1.25e-04 | GradNorm: 4.040
  Batch   20/48 | Loss: 2.8525 | LR: 1.21e-04 | GradNorm: 4.658
  Batch   24/48 | Loss: 2.8824 | LR: 1.16e-04 | GradNorm: 5.884
  Batch   28/48 | Loss: 2.8753 | LR: 1.11e-04 | GradNorm: 6.841
  Batch   32/48 | Loss: 2.8724 | LR: 1.07e-04 | GradNorm: 6.706
  Batch   36/48 | Loss: 2.8857 | LR: 1.02e-04 | GradNorm: 5.380
  Batch   40/48 | Loss: 2.8360 | LR: 9.75e-05 | GradNorm: 5.534
  Batch   44/48 | Loss: 2.8099 | LR: 9.31e-05 | GradNorm: 6.000
Epoch 7/10: Train=29.94%, Val=18.43%, Gap=11.51%, LR=8.98e-05
  Batch    0/48 | Loss: 2.8484 | LR: 8.87e-05 | GradNorm: 6.483
  Batch    4/48 | Loss: 2.7655 | LR: 8.43e-05 | GradNorm: 5.070
  Batch    8/48 | Loss: 2.7847 | LR: 8.00e-05 | GradNorm: 3.831
  Batch   12/48 | Loss: 2.8253 | LR: 7.58e-05 | GradNorm: 4.109
  Batch   16/48 | Loss: 2.8195 | LR: 7.17e-05 | GradNorm: 3.846
  Batch   20/48 | Loss: 2.7146 | LR: 6.76e-05 | GradNorm: 3.255
  Batch   24/48 | Loss: 2.7266 | LR: 6.37e-05 | GradNorm: 3.978
  Batch   28/48 | Loss: 2.7589 | LR: 5.98e-05 | GradNorm: 4.411
  Batch   32/48 | Loss: 2.7358 | LR: 5.60e-05 | GradNorm: 2.551
  Batch   36/48 | Loss: 2.7203 | LR: 5.23e-05 | GradNorm: 3.627
  Batch   40/48 | Loss: 2.6700 | LR: 4.87e-05 | GradNorm: 4.610
  Batch   44/48 | Loss: 2.7365 | LR: 4.52e-05 | GradNorm: 4.927
Epoch 8/10: Train=33.03%, Val=21.99%, Gap=11.04%, LR=4.26e-05
  Batch    0/48 | Loss: 2.7083 | LR: 4.18e-05 | GradNorm: 2.590
  Batch    4/48 | Loss: 2.6957 | LR: 3.85e-05 | GradNorm: 3.174
  Batch    8/48 | Loss: 2.7520 | LR: 3.54e-05 | GradNorm: 3.821
  Batch   12/48 | Loss: 2.6852 | LR: 3.23e-05 | GradNorm: 2.821
  Batch   16/48 | Loss: 2.6301 | LR: 2.94e-05 | GradNorm: 3.324
  Batch   20/48 | Loss: 2.6463 | LR: 2.66e-05 | GradNorm: 2.436
  Batch   24/48 | Loss: 2.6850 | LR: 2.39e-05 | GradNorm: 3.131
  Batch   28/48 | Loss: 2.6752 | LR: 2.14e-05 | GradNorm: 3.103
  Batch   32/48 | Loss: 2.6534 | LR: 1.90e-05 | GradNorm: 2.170
  Batch   36/48 | Loss: 2.6484 | LR: 1.67e-05 | GradNorm: 2.377
  Batch   40/48 | Loss: 2.6222 | LR: 1.46e-05 | GradNorm: 2.225
  Batch   44/48 | Loss: 2.6642 | LR: 1.26e-05 | GradNorm: 2.501
Epoch 9/10: Train=35.53%, Val=22.09%, Gap=13.44%, LR=1.12e-05
  Batch    0/48 | Loss: 2.6568 | LR: 1.07e-05 | GradNorm: 3.485
  Batch    4/48 | Loss: 2.6382 | LR: 8.99e-06 | GradNorm: 2.655
  Batch    8/48 | Loss: 2.6152 | LR: 7.43e-06 | GradNorm: 1.769
  Batch   12/48 | Loss: 2.6253 | LR: 6.01e-06 | GradNorm: 2.409
  Batch   16/48 | Loss: 2.6322 | LR: 4.75e-06 | GradNorm: 2.105
  Batch   20/48 | Loss: 2.6480 | LR: 3.63e-06 | GradNorm: 2.624
  Batch   24/48 | Loss: 2.6310 | LR: 2.66e-06 | GradNorm: 3.704
  Batch   28/48 | Loss: 2.6659 | LR: 1.85e-06 | GradNorm: 1.563
  Batch   32/48 | Loss: 2.6532 | LR: 1.19e-06 | GradNorm: 2.769
  Batch   36/48 | Loss: 2.6455 | LR: 6.88e-07 | GradNorm: 2.142
  Batch   40/48 | Loss: 2.6114 | LR: 3.38e-07 | GradNorm: 2.346
  Batch   44/48 | Loss: 2.6360 | LR: 1.44e-07 | GradNorm: 2.856
Epoch 10/10: Train=36.75%, Val=22.27%, Gap=14.48%, LR=1.00e-07
Best validation accuracy: 22.27%
