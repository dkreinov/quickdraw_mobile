=== W&B Sweep Run: LR=0.000365 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003650803499228343
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000365
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9628 | LR: 7.42e-06 | GradNorm: 1.662
  Batch    4/48 | Loss: 3.9358 | LR: 2.25e-05 | GradNorm: 1.102
  Batch    8/48 | Loss: 3.9213 | LR: 3.75e-05 | GradNorm: 0.836
  Batch   12/48 | Loss: 3.9128 | LR: 5.26e-05 | GradNorm: 0.649
  Batch   16/48 | Loss: 3.9259 | LR: 6.77e-05 | GradNorm: 0.700
  Batch   20/48 | Loss: 3.9163 | LR: 8.27e-05 | GradNorm: 0.611
  Batch   24/48 | Loss: 3.9165 | LR: 9.78e-05 | GradNorm: 0.642
  Batch   28/48 | Loss: 3.9154 | LR: 1.13e-04 | GradNorm: 0.525
  Batch   32/48 | Loss: 3.9098 | LR: 1.28e-04 | GradNorm: 0.488
  Batch   36/48 | Loss: 3.9085 | LR: 1.43e-04 | GradNorm: 0.495
  Batch   40/48 | Loss: 3.8987 | LR: 1.58e-04 | GradNorm: 0.542
  Batch   44/48 | Loss: 3.8754 | LR: 1.73e-04 | GradNorm: 0.620
Epoch 1/10: Train=2.46%, Val=3.66%, Gap=-1.20%, LR=1.84e-04
  Batch    0/48 | Loss: 3.8511 | LR: 1.88e-04 | GradNorm: 2.326
  Batch    4/48 | Loss: 3.7846 | LR: 2.03e-04 | GradNorm: 0.787
  Batch    8/48 | Loss: 3.9153 | LR: 2.18e-04 | GradNorm: 4.437
  Batch   12/48 | Loss: 3.8498 | LR: 2.33e-04 | GradNorm: 3.520
  Batch   16/48 | Loss: 3.8387 | LR: 2.48e-04 | GradNorm: 3.147
  Batch   20/48 | Loss: 3.7597 | LR: 2.63e-04 | GradNorm: 1.422
  Batch   24/48 | Loss: 3.6827 | LR: 2.78e-04 | GradNorm: 1.294
  Batch   28/48 | Loss: 3.7065 | LR: 2.94e-04 | GradNorm: 3.548
  Batch   32/48 | Loss: 3.8661 | LR: 3.09e-04 | GradNorm: 6.531
  Batch   36/48 | Loss: 3.6686 | LR: 3.24e-04 | GradNorm: 2.665
  Batch   40/48 | Loss: 3.6068 | LR: 3.39e-04 | GradNorm: 0.608
  Batch   44/48 | Loss: 3.7025 | LR: 3.54e-04 | GradNorm: 5.788
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.09%, Val=8.13%, Gap=-2.04%, LR=3.65e-04
  Batch    0/48 | Loss: 3.5534 | LR: 3.65e-04 | GradNorm: 2.112
  Batch    4/48 | Loss: 3.6124 | LR: 3.65e-04 | GradNorm: 3.505
  Batch    8/48 | Loss: 3.6084 | LR: 3.65e-04 | GradNorm: 2.663
  Batch   12/48 | Loss: 3.5766 | LR: 3.64e-04 | GradNorm: 3.751
  Batch   16/48 | Loss: 3.5187 | LR: 3.63e-04 | GradNorm: 2.226
  Batch   20/48 | Loss: 3.4886 | LR: 3.62e-04 | GradNorm: 3.022
  Batch   24/48 | Loss: 3.4714 | LR: 3.61e-04 | GradNorm: 2.847
  Batch   28/48 | Loss: 3.4150 | LR: 3.60e-04 | GradNorm: 3.366
  Batch   32/48 | Loss: 3.4417 | LR: 3.58e-04 | GradNorm: 4.221
  Batch   36/48 | Loss: 3.3746 | LR: 3.57e-04 | GradNorm: 1.747
  Batch   40/48 | Loss: 3.3587 | LR: 3.55e-04 | GradNorm: 2.994
  Batch   44/48 | Loss: 3.3107 | LR: 3.53e-04 | GradNorm: 2.736
Epoch 3/10: Train=12.35%, Val=9.74%, Gap=2.61%, LR=3.51e-04
  Batch    0/48 | Loss: 3.3063 | LR: 3.51e-04 | GradNorm: 4.818
  Batch    4/48 | Loss: 3.2962 | LR: 3.48e-04 | GradNorm: 3.389
  Batch    8/48 | Loss: 3.2558 | LR: 3.46e-04 | GradNorm: 4.153
  Batch   12/48 | Loss: 3.2560 | LR: 3.43e-04 | GradNorm: 2.738
  Batch   16/48 | Loss: 3.2334 | LR: 3.40e-04 | GradNorm: 3.489
  Batch   20/48 | Loss: 3.2766 | LR: 3.37e-04 | GradNorm: 3.654
  Batch   24/48 | Loss: 3.2164 | LR: 3.33e-04 | GradNorm: 3.326
  Batch   28/48 | Loss: 3.1725 | LR: 3.30e-04 | GradNorm: 1.736
  Batch   32/48 | Loss: 3.2077 | LR: 3.26e-04 | GradNorm: 2.030
  Batch   36/48 | Loss: 3.1676 | LR: 3.23e-04 | GradNorm: 2.339
  Batch   40/48 | Loss: 3.2155 | LR: 3.19e-04 | GradNorm: 4.743
  Batch   44/48 | Loss: 3.1761 | LR: 3.15e-04 | GradNorm: 6.069
Epoch 4/10: Train=17.71%, Val=11.98%, Gap=5.73%, LR=3.12e-04
  Batch    0/48 | Loss: 3.1275 | LR: 3.11e-04 | GradNorm: 3.586
  Batch    4/48 | Loss: 3.0851 | LR: 3.06e-04 | GradNorm: 2.613
  Batch    8/48 | Loss: 3.1123 | LR: 3.02e-04 | GradNorm: 4.017
  Batch   12/48 | Loss: 3.1172 | LR: 2.97e-04 | GradNorm: 4.599
  Batch   16/48 | Loss: 3.1913 | LR: 2.92e-04 | GradNorm: 6.238
  Batch   20/48 | Loss: 3.0986 | LR: 2.88e-04 | GradNorm: 2.345
  Batch   24/48 | Loss: 3.1234 | LR: 2.83e-04 | GradNorm: 3.258
  Batch   28/48 | Loss: 3.0726 | LR: 2.78e-04 | GradNorm: 2.619
  Batch   32/48 | Loss: 3.0414 | LR: 2.73e-04 | GradNorm: 3.065
  Batch   36/48 | Loss: 3.1128 | LR: 2.67e-04 | GradNorm: 4.038
  Batch   40/48 | Loss: 3.0853 | LR: 2.62e-04 | GradNorm: 4.176
  Batch   44/48 | Loss: 3.0845 | LR: 2.57e-04 | GradNorm: 6.012
Epoch 5/10: Train=21.65%, Val=15.44%, Gap=6.21%, LR=2.52e-04
  Batch    0/48 | Loss: 3.0112 | LR: 2.51e-04 | GradNorm: 4.702
  Batch    4/48 | Loss: 2.9115 | LR: 2.45e-04 | GradNorm: 2.431
  Batch    8/48 | Loss: 2.9562 | LR: 2.40e-04 | GradNorm: 3.089
  Batch   12/48 | Loss: 2.9422 | LR: 2.34e-04 | GradNorm: 3.226
  Batch   16/48 | Loss: 2.9188 | LR: 2.28e-04 | GradNorm: 4.598
  Batch   20/48 | Loss: 2.9581 | LR: 2.23e-04 | GradNorm: 6.836
  Batch   24/48 | Loss: 2.8897 | LR: 2.17e-04 | GradNorm: 1.904
  Batch   28/48 | Loss: 2.8726 | LR: 2.11e-04 | GradNorm: 4.862
  Batch   32/48 | Loss: 2.8802 | LR: 2.05e-04 | GradNorm: 6.362
  Batch   36/48 | Loss: 2.9067 | LR: 1.99e-04 | GradNorm: 4.598
  Batch   40/48 | Loss: 2.8991 | LR: 1.93e-04 | GradNorm: 3.974
  Batch   44/48 | Loss: 2.9430 | LR: 1.87e-04 | GradNorm: 4.300
Epoch 6/10: Train=26.45%, Val=16.79%, Gap=9.66%, LR=1.83e-04
  Batch    0/48 | Loss: 2.9132 | LR: 1.81e-04 | GradNorm: 6.589
  Batch    4/48 | Loss: 2.8524 | LR: 1.75e-04 | GradNorm: 3.772
  Batch    8/48 | Loss: 2.8477 | LR: 1.69e-04 | GradNorm: 3.704
  Batch   12/48 | Loss: 2.7839 | LR: 1.63e-04 | GradNorm: 5.063
  Batch   16/48 | Loss: 2.7877 | LR: 1.57e-04 | GradNorm: 2.770
  Batch   20/48 | Loss: 2.8184 | LR: 1.51e-04 | GradNorm: 3.616
  Batch   24/48 | Loss: 2.8553 | LR: 1.46e-04 | GradNorm: 3.944
  Batch   28/48 | Loss: 2.8803 | LR: 1.40e-04 | GradNorm: 4.914
  Batch   32/48 | Loss: 2.8334 | LR: 1.34e-04 | GradNorm: 5.814
  Batch   36/48 | Loss: 2.8452 | LR: 1.28e-04 | GradNorm: 3.706
  Batch   40/48 | Loss: 2.8044 | LR: 1.23e-04 | GradNorm: 4.385
  Batch   44/48 | Loss: 2.8129 | LR: 1.17e-04 | GradNorm: 4.026
Epoch 7/10: Train=29.35%, Val=18.01%, Gap=11.34%, LR=1.13e-04
  Batch    0/48 | Loss: 2.7956 | LR: 1.11e-04 | GradNorm: 2.431
  Batch    4/48 | Loss: 2.7598 | LR: 1.06e-04 | GradNorm: 3.371
  Batch    8/48 | Loss: 2.7518 | LR: 1.01e-04 | GradNorm: 1.828
  Batch   12/48 | Loss: 2.7844 | LR: 9.53e-05 | GradNorm: 2.137
  Batch   16/48 | Loss: 2.8036 | LR: 9.01e-05 | GradNorm: 5.129
  Batch   20/48 | Loss: 2.7298 | LR: 8.50e-05 | GradNorm: 4.782
  Batch   24/48 | Loss: 2.7305 | LR: 8.00e-05 | GradNorm: 4.675
  Batch   28/48 | Loss: 2.7596 | LR: 7.51e-05 | GradNorm: 4.478
  Batch   32/48 | Loss: 2.7517 | LR: 7.03e-05 | GradNorm: 4.385
  Batch   36/48 | Loss: 2.7451 | LR: 6.57e-05 | GradNorm: 2.664
  Batch   40/48 | Loss: 2.6671 | LR: 6.11e-05 | GradNorm: 2.755
  Batch   44/48 | Loss: 2.7126 | LR: 5.68e-05 | GradNorm: 1.804
Epoch 8/10: Train=32.14%, Val=18.59%, Gap=13.55%, LR=5.36e-05
  Batch    0/48 | Loss: 2.6803 | LR: 5.25e-05 | GradNorm: 3.524
  Batch    4/48 | Loss: 2.6801 | LR: 4.84e-05 | GradNorm: 3.696
  Batch    8/48 | Loss: 2.7646 | LR: 4.44e-05 | GradNorm: 3.540
  Batch   12/48 | Loss: 2.7112 | LR: 4.06e-05 | GradNorm: 6.496
  Batch   16/48 | Loss: 2.6584 | LR: 3.69e-05 | GradNorm: 6.254
  Batch   20/48 | Loss: 2.6480 | LR: 3.34e-05 | GradNorm: 7.153
  Batch   24/48 | Loss: 2.6704 | LR: 3.00e-05 | GradNorm: 2.922
  Batch   28/48 | Loss: 2.6904 | LR: 2.68e-05 | GradNorm: 1.609
  Batch   32/48 | Loss: 2.6654 | LR: 2.38e-05 | GradNorm: 2.986
  Batch   36/48 | Loss: 2.6848 | LR: 2.09e-05 | GradNorm: 5.220
  Batch   40/48 | Loss: 2.6514 | LR: 1.83e-05 | GradNorm: 2.836
  Batch   44/48 | Loss: 2.6715 | LR: 1.58e-05 | GradNorm: 2.410
Epoch 9/10: Train=34.06%, Val=19.70%, Gap=14.36%, LR=1.40e-05
  Batch    0/48 | Loss: 2.6596 | LR: 1.34e-05 | GradNorm: 1.250
  Batch    4/48 | Loss: 2.6621 | LR: 1.13e-05 | GradNorm: 1.480
  Batch    8/48 | Loss: 2.6282 | LR: 9.31e-06 | GradNorm: 1.753
  Batch   12/48 | Loss: 2.6423 | LR: 7.53e-06 | GradNorm: 3.500
  Batch   16/48 | Loss: 2.6497 | LR: 5.94e-06 | GradNorm: 1.813
  Batch   20/48 | Loss: 2.6789 | LR: 4.53e-06 | GradNorm: 3.201
  Batch   24/48 | Loss: 2.6447 | LR: 3.32e-06 | GradNorm: 2.065
  Batch   28/48 | Loss: 2.6709 | LR: 2.30e-06 | GradNorm: 2.755
  Batch   32/48 | Loss: 2.6841 | LR: 1.47e-06 | GradNorm: 2.280
  Batch   36/48 | Loss: 2.6467 | LR: 8.38e-07 | GradNorm: 1.449
  Batch   40/48 | Loss: 2.6145 | LR: 3.99e-07 | GradNorm: 1.765
  Batch   44/48 | Loss: 2.6310 | LR: 1.55e-07 | GradNorm: 2.090
Epoch 10/10: Train=35.47%, Val=20.54%, Gap=14.93%, LR=1.00e-07
Best validation accuracy: 20.54%
