=== W&B Sweep Run: LR=0.000289 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00028924885490547647
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000289
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9612 | LR: 5.88e-06 | GradNorm: 1.655
  Batch    4/48 | Loss: 3.9314 | LR: 1.78e-05 | GradNorm: 1.053
  Batch    8/48 | Loss: 3.9209 | LR: 2.97e-05 | GradNorm: 0.817
  Batch   12/48 | Loss: 3.9107 | LR: 4.17e-05 | GradNorm: 0.652
  Batch   16/48 | Loss: 3.9257 | LR: 5.36e-05 | GradNorm: 0.741
  Batch   20/48 | Loss: 3.9104 | LR: 6.55e-05 | GradNorm: 0.577
  Batch   24/48 | Loss: 3.9112 | LR: 7.75e-05 | GradNorm: 0.614
  Batch   28/48 | Loss: 3.9162 | LR: 8.94e-05 | GradNorm: 0.591
  Batch   32/48 | Loss: 3.9060 | LR: 1.01e-04 | GradNorm: 0.488
  Batch   36/48 | Loss: 3.9109 | LR: 1.13e-04 | GradNorm: 0.587
  Batch   40/48 | Loss: 3.8969 | LR: 1.25e-04 | GradNorm: 0.559
  Batch   44/48 | Loss: 3.8809 | LR: 1.37e-04 | GradNorm: 0.861
Epoch 1/10: Train=2.34%, Val=4.93%, Gap=-2.59%, LR=1.46e-04
  Batch    0/48 | Loss: 3.8244 | LR: 1.49e-04 | GradNorm: 1.386
  Batch    4/48 | Loss: 3.8216 | LR: 1.61e-04 | GradNorm: 5.766
  Batch    8/48 | Loss: 3.8221 | LR: 1.73e-04 | GradNorm: 6.927
  Batch   12/48 | Loss: 3.7901 | LR: 1.85e-04 | GradNorm: 8.376
  Batch   16/48 | Loss: 3.7718 | LR: 1.97e-04 | GradNorm: 3.457
  Batch   20/48 | Loss: 3.7365 | LR: 2.09e-04 | GradNorm: 2.802
  Batch   24/48 | Loss: 3.6652 | LR: 2.21e-04 | GradNorm: 1.686
  Batch   28/48 | Loss: 3.7116 | LR: 2.33e-04 | GradNorm: 6.491
  Batch   32/48 | Loss: 3.6564 | LR: 2.45e-04 | GradNorm: 2.811
  Batch   36/48 | Loss: 3.6250 | LR: 2.56e-04 | GradNorm: 3.408
  Batch   40/48 | Loss: 3.7073 | LR: 2.68e-04 | GradNorm: 7.373
  Batch   44/48 | Loss: 3.5715 | LR: 2.80e-04 | GradNorm: 2.800
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.91%, Val=8.42%, Gap=-1.51%, LR=2.89e-04
  Batch    0/48 | Loss: 3.5635 | LR: 2.89e-04 | GradNorm: 6.783
  Batch    4/48 | Loss: 3.5706 | LR: 2.89e-04 | GradNorm: 4.406
  Batch    8/48 | Loss: 3.5643 | LR: 2.89e-04 | GradNorm: 10.614
  Batch   12/48 | Loss: 3.5049 | LR: 2.88e-04 | GradNorm: 2.326
  Batch   16/48 | Loss: 3.4971 | LR: 2.88e-04 | GradNorm: 4.252
  Batch   20/48 | Loss: 3.4639 | LR: 2.87e-04 | GradNorm: 3.796
  Batch   24/48 | Loss: 3.4856 | LR: 2.86e-04 | GradNorm: 6.293
  Batch   28/48 | Loss: 3.4194 | LR: 2.85e-04 | GradNorm: 4.909
  Batch   32/48 | Loss: 3.4204 | LR: 2.84e-04 | GradNorm: 4.015
  Batch   36/48 | Loss: 3.3970 | LR: 2.83e-04 | GradNorm: 2.703
  Batch   40/48 | Loss: 3.3571 | LR: 2.81e-04 | GradNorm: 2.481
  Batch   44/48 | Loss: 3.3528 | LR: 2.80e-04 | GradNorm: 3.363
Epoch 3/10: Train=11.86%, Val=10.11%, Gap=1.75%, LR=2.78e-04
  Batch    0/48 | Loss: 3.3317 | LR: 2.78e-04 | GradNorm: 4.304
  Batch    4/48 | Loss: 3.2938 | LR: 2.76e-04 | GradNorm: 2.718
  Batch    8/48 | Loss: 3.2780 | LR: 2.74e-04 | GradNorm: 3.608
  Batch   12/48 | Loss: 3.2215 | LR: 2.72e-04 | GradNorm: 2.536
  Batch   16/48 | Loss: 3.2594 | LR: 2.69e-04 | GradNorm: 4.954
  Batch   20/48 | Loss: 3.1946 | LR: 2.67e-04 | GradNorm: 1.812
  Batch   24/48 | Loss: 3.2198 | LR: 2.64e-04 | GradNorm: 4.143
  Batch   28/48 | Loss: 3.1978 | LR: 2.61e-04 | GradNorm: 3.895
  Batch   32/48 | Loss: 3.2521 | LR: 2.59e-04 | GradNorm: 7.069
  Batch   36/48 | Loss: 3.2024 | LR: 2.56e-04 | GradNorm: 6.008
  Batch   40/48 | Loss: 3.1783 | LR: 2.53e-04 | GradNorm: 3.523
  Batch   44/48 | Loss: 3.1344 | LR: 2.49e-04 | GradNorm: 3.011
Epoch 4/10: Train=17.43%, Val=12.69%, Gap=4.74%, LR=2.47e-04
  Batch    0/48 | Loss: 3.1651 | LR: 2.46e-04 | GradNorm: 5.243
  Batch    4/48 | Loss: 3.1369 | LR: 2.43e-04 | GradNorm: 6.148
  Batch    8/48 | Loss: 3.1024 | LR: 2.39e-04 | GradNorm: 4.615
  Batch   12/48 | Loss: 3.0613 | LR: 2.35e-04 | GradNorm: 2.310
  Batch   16/48 | Loss: 3.1279 | LR: 2.32e-04 | GradNorm: 4.405
  Batch   20/48 | Loss: 3.0614 | LR: 2.28e-04 | GradNorm: 2.711
  Batch   24/48 | Loss: 3.0900 | LR: 2.24e-04 | GradNorm: 4.301
  Batch   28/48 | Loss: 3.0191 | LR: 2.20e-04 | GradNorm: 3.862
  Batch   32/48 | Loss: 3.0062 | LR: 2.16e-04 | GradNorm: 4.764
  Batch   36/48 | Loss: 3.1012 | LR: 2.12e-04 | GradNorm: 7.938
  Batch   40/48 | Loss: 3.0643 | LR: 2.08e-04 | GradNorm: 6.981
  Batch   44/48 | Loss: 2.9650 | LR: 2.03e-04 | GradNorm: 3.518
Epoch 5/10: Train=22.70%, Val=15.34%, Gap=7.36%, LR=2.00e-04
  Batch    0/48 | Loss: 2.9701 | LR: 1.99e-04 | GradNorm: 7.001
  Batch    4/48 | Loss: 2.9130 | LR: 1.94e-04 | GradNorm: 5.546
  Batch    8/48 | Loss: 2.9188 | LR: 1.90e-04 | GradNorm: 3.866
  Batch   12/48 | Loss: 2.9461 | LR: 1.86e-04 | GradNorm: 7.991
  Batch   16/48 | Loss: 2.8976 | LR: 1.81e-04 | GradNorm: 3.817
  Batch   20/48 | Loss: 2.8813 | LR: 1.76e-04 | GradNorm: 5.852
  Batch   24/48 | Loss: 2.8851 | LR: 1.72e-04 | GradNorm: 5.232
  Batch   28/48 | Loss: 2.8002 | LR: 1.67e-04 | GradNorm: 4.165
  Batch   32/48 | Loss: 2.8245 | LR: 1.62e-04 | GradNorm: 2.926
  Batch   36/48 | Loss: 2.8980 | LR: 1.58e-04 | GradNorm: 5.256
  Batch   40/48 | Loss: 2.8210 | LR: 1.53e-04 | GradNorm: 3.410
  Batch   44/48 | Loss: 2.9024 | LR: 1.48e-04 | GradNorm: 4.577
Epoch 6/10: Train=27.35%, Val=18.53%, Gap=8.82%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8325 | LR: 1.43e-04 | GradNorm: 3.929
  Batch    4/48 | Loss: 2.8478 | LR: 1.39e-04 | GradNorm: 9.537
  Batch    8/48 | Loss: 2.8474 | LR: 1.34e-04 | GradNorm: 6.380
  Batch   12/48 | Loss: 2.7503 | LR: 1.29e-04 | GradNorm: 5.200
  Batch   16/48 | Loss: 2.7736 | LR: 1.25e-04 | GradNorm: 4.185
  Batch   20/48 | Loss: 2.7811 | LR: 1.20e-04 | GradNorm: 3.490
  Batch   24/48 | Loss: 2.8020 | LR: 1.15e-04 | GradNorm: 4.392
  Batch   28/48 | Loss: 2.8003 | LR: 1.11e-04 | GradNorm: 3.671
  Batch   32/48 | Loss: 2.7774 | LR: 1.06e-04 | GradNorm: 7.140
  Batch   36/48 | Loss: 2.7922 | LR: 1.02e-04 | GradNorm: 6.326
  Batch   40/48 | Loss: 2.7588 | LR: 9.71e-05 | GradNorm: 6.096
  Batch   44/48 | Loss: 2.7355 | LR: 9.26e-05 | GradNorm: 3.116
Epoch 7/10: Train=31.52%, Val=22.03%, Gap=9.49%, LR=8.93e-05
  Batch    0/48 | Loss: 2.7433 | LR: 8.83e-05 | GradNorm: 5.052
  Batch    4/48 | Loss: 2.6893 | LR: 8.39e-05 | GradNorm: 5.677
  Batch    8/48 | Loss: 2.6909 | LR: 7.97e-05 | GradNorm: 6.529
  Batch   12/48 | Loss: 2.7220 | LR: 7.55e-05 | GradNorm: 3.961
  Batch   16/48 | Loss: 2.7449 | LR: 7.14e-05 | GradNorm: 4.987
  Batch   20/48 | Loss: 2.6337 | LR: 6.73e-05 | GradNorm: 7.046
  Batch   24/48 | Loss: 2.6461 | LR: 6.34e-05 | GradNorm: 2.874
  Batch   28/48 | Loss: 2.6935 | LR: 5.95e-05 | GradNorm: 7.570
  Batch   32/48 | Loss: 2.6787 | LR: 5.57e-05 | GradNorm: 7.321
  Batch   36/48 | Loss: 2.6932 | LR: 5.20e-05 | GradNorm: 7.409
  Batch   40/48 | Loss: 2.6063 | LR: 4.85e-05 | GradNorm: 4.818
  Batch   44/48 | Loss: 2.6689 | LR: 4.50e-05 | GradNorm: 3.881
Epoch 8/10: Train=34.63%, Val=25.04%, Gap=9.59%, LR=4.24e-05
  Batch    0/48 | Loss: 2.6344 | LR: 4.16e-05 | GradNorm: 4.304
  Batch    4/48 | Loss: 2.6168 | LR: 3.83e-05 | GradNorm: 4.124
  Batch    8/48 | Loss: 2.6789 | LR: 3.52e-05 | GradNorm: 5.824
  Batch   12/48 | Loss: 2.6262 | LR: 3.22e-05 | GradNorm: 4.173
  Batch   16/48 | Loss: 2.5888 | LR: 2.93e-05 | GradNorm: 3.812
  Batch   20/48 | Loss: 2.5796 | LR: 2.65e-05 | GradNorm: 1.978
  Batch   24/48 | Loss: 2.6088 | LR: 2.38e-05 | GradNorm: 2.834
  Batch   28/48 | Loss: 2.6421 | LR: 2.13e-05 | GradNorm: 3.862
  Batch   32/48 | Loss: 2.6009 | LR: 1.89e-05 | GradNorm: 7.325
  Batch   36/48 | Loss: 2.5982 | LR: 1.66e-05 | GradNorm: 3.315
  Batch   40/48 | Loss: 2.5799 | LR: 1.45e-05 | GradNorm: 5.063
  Batch   44/48 | Loss: 2.5900 | LR: 1.25e-05 | GradNorm: 2.986
Epoch 9/10: Train=36.91%, Val=25.08%, Gap=11.83%, LR=1.11e-05
  Batch    0/48 | Loss: 2.5956 | LR: 1.07e-05 | GradNorm: 5.124
  Batch    4/48 | Loss: 2.6025 | LR: 8.95e-06 | GradNorm: 4.214
  Batch    8/48 | Loss: 2.5714 | LR: 7.40e-06 | GradNorm: 3.012
  Batch   12/48 | Loss: 2.5584 | LR: 5.99e-06 | GradNorm: 2.435
  Batch   16/48 | Loss: 2.5816 | LR: 4.72e-06 | GradNorm: 2.649
  Batch   20/48 | Loss: 2.5963 | LR: 3.61e-06 | GradNorm: 4.254
  Batch   24/48 | Loss: 2.5699 | LR: 2.65e-06 | GradNorm: 2.774
  Batch   28/48 | Loss: 2.6097 | LR: 1.84e-06 | GradNorm: 2.330
  Batch   32/48 | Loss: 2.6134 | LR: 1.19e-06 | GradNorm: 4.311
  Batch   36/48 | Loss: 2.5737 | LR: 6.85e-07 | GradNorm: 3.082
  Batch   40/48 | Loss: 2.5412 | LR: 3.37e-07 | GradNorm: 2.945
  Batch   44/48 | Loss: 2.5600 | LR: 1.44e-07 | GradNorm: 2.686
Epoch 10/10: Train=38.11%, Val=25.00%, Gap=13.11%, LR=1.00e-07
Best validation accuracy: 25.08%
