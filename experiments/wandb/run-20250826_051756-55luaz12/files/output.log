=== W&B Sweep Run: LR=0.000270 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002699746152719018
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000270
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9564 | LR: 5.48e-06 | GradNorm: 1.717
  Batch    4/48 | Loss: 3.9359 | LR: 1.66e-05 | GradNorm: 1.234
  Batch    8/48 | Loss: 3.9194 | LR: 2.78e-05 | GradNorm: 0.856
  Batch   12/48 | Loss: 3.9101 | LR: 3.89e-05 | GradNorm: 0.738
  Batch   16/48 | Loss: 3.9176 | LR: 5.00e-05 | GradNorm: 0.638
  Batch   20/48 | Loss: 3.9083 | LR: 6.12e-05 | GradNorm: 0.625
  Batch   24/48 | Loss: 3.9164 | LR: 7.23e-05 | GradNorm: 0.780
  Batch   28/48 | Loss: 3.9159 | LR: 8.34e-05 | GradNorm: 0.630
  Batch   32/48 | Loss: 3.9050 | LR: 9.46e-05 | GradNorm: 0.577
  Batch   36/48 | Loss: 3.8972 | LR: 1.06e-04 | GradNorm: 0.550
  Batch   40/48 | Loss: 3.8726 | LR: 1.17e-04 | GradNorm: 0.729
  Batch   44/48 | Loss: 3.8209 | LR: 1.28e-04 | GradNorm: 0.968
Epoch 1/10: Train=2.55%, Val=3.64%, Gap=-1.09%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8422 | LR: 1.39e-04 | GradNorm: 7.142
  Batch    4/48 | Loss: 3.8042 | LR: 1.50e-04 | GradNorm: 4.736
  Batch    8/48 | Loss: 3.7818 | LR: 1.61e-04 | GradNorm: 1.401
  Batch   12/48 | Loss: 3.7370 | LR: 1.73e-04 | GradNorm: 2.522
  Batch   16/48 | Loss: 3.7516 | LR: 1.84e-04 | GradNorm: 1.640
  Batch   20/48 | Loss: 3.7889 | LR: 1.95e-04 | GradNorm: 6.383
  Batch   24/48 | Loss: 3.7457 | LR: 2.06e-04 | GradNorm: 4.405
  Batch   28/48 | Loss: 3.7048 | LR: 2.17e-04 | GradNorm: 4.156
  Batch   32/48 | Loss: 3.6859 | LR: 2.28e-04 | GradNorm: 2.341
  Batch   36/48 | Loss: 3.7659 | LR: 2.39e-04 | GradNorm: 6.791
  Batch   40/48 | Loss: 3.6696 | LR: 2.50e-04 | GradNorm: 1.785
  Batch   44/48 | Loss: 3.6970 | LR: 2.62e-04 | GradNorm: 7.347
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.22%, Val=5.25%, Gap=0.97%, LR=2.70e-04
  Batch    0/48 | Loss: 3.7198 | LR: 2.70e-04 | GradNorm: 3.437
  Batch    4/48 | Loss: 3.6092 | LR: 2.70e-04 | GradNorm: 1.191
  Batch    8/48 | Loss: 3.6049 | LR: 2.70e-04 | GradNorm: 3.453
  Batch   12/48 | Loss: 3.6602 | LR: 2.69e-04 | GradNorm: 5.330
  Batch   16/48 | Loss: 3.5788 | LR: 2.69e-04 | GradNorm: 2.911
  Batch   20/48 | Loss: 3.5003 | LR: 2.68e-04 | GradNorm: 1.047
  Batch   24/48 | Loss: 3.5354 | LR: 2.67e-04 | GradNorm: 5.823
  Batch   28/48 | Loss: 3.5275 | LR: 2.66e-04 | GradNorm: 3.973
  Batch   32/48 | Loss: 3.5088 | LR: 2.65e-04 | GradNorm: 3.395
  Batch   36/48 | Loss: 3.4595 | LR: 2.64e-04 | GradNorm: 1.873
  Batch   40/48 | Loss: 3.4020 | LR: 2.62e-04 | GradNorm: 1.440
  Batch   44/48 | Loss: 3.5085 | LR: 2.61e-04 | GradNorm: 6.504
Epoch 3/10: Train=9.96%, Val=8.99%, Gap=0.97%, LR=2.60e-04
  Batch    0/48 | Loss: 3.4839 | LR: 2.59e-04 | GradNorm: 3.907
  Batch    4/48 | Loss: 3.3799 | LR: 2.57e-04 | GradNorm: 2.164
  Batch    8/48 | Loss: 3.3632 | LR: 2.56e-04 | GradNorm: 4.673
  Batch   12/48 | Loss: 3.2870 | LR: 2.54e-04 | GradNorm: 1.902
  Batch   16/48 | Loss: 3.3400 | LR: 2.51e-04 | GradNorm: 3.980
  Batch   20/48 | Loss: 3.2979 | LR: 2.49e-04 | GradNorm: 3.648
  Batch   24/48 | Loss: 3.2792 | LR: 2.47e-04 | GradNorm: 3.124
  Batch   28/48 | Loss: 3.2176 | LR: 2.44e-04 | GradNorm: 1.756
  Batch   32/48 | Loss: 3.3945 | LR: 2.41e-04 | GradNorm: 6.231
  Batch   36/48 | Loss: 3.3029 | LR: 2.39e-04 | GradNorm: 3.941
  Batch   40/48 | Loss: 3.3102 | LR: 2.36e-04 | GradNorm: 4.832
  Batch   44/48 | Loss: 3.2158 | LR: 2.33e-04 | GradNorm: 1.833
Epoch 4/10: Train=15.52%, Val=11.46%, Gap=4.06%, LR=2.30e-04
  Batch    0/48 | Loss: 3.1936 | LR: 2.30e-04 | GradNorm: 2.656
  Batch    4/48 | Loss: 3.1842 | LR: 2.26e-04 | GradNorm: 3.126
  Batch    8/48 | Loss: 3.1407 | LR: 2.23e-04 | GradNorm: 3.052
  Batch   12/48 | Loss: 3.1402 | LR: 2.20e-04 | GradNorm: 3.140
  Batch   16/48 | Loss: 3.1970 | LR: 2.16e-04 | GradNorm: 3.146
  Batch   20/48 | Loss: 3.1622 | LR: 2.13e-04 | GradNorm: 2.963
  Batch   24/48 | Loss: 3.1428 | LR: 2.09e-04 | GradNorm: 1.785
  Batch   28/48 | Loss: 3.1453 | LR: 2.05e-04 | GradNorm: 3.693
  Batch   32/48 | Loss: 3.1040 | LR: 2.02e-04 | GradNorm: 3.458
  Batch   36/48 | Loss: 3.1592 | LR: 1.98e-04 | GradNorm: 1.929
  Batch   40/48 | Loss: 3.1364 | LR: 1.94e-04 | GradNorm: 2.242
  Batch   44/48 | Loss: 3.1011 | LR: 1.90e-04 | GradNorm: 2.234
Epoch 5/10: Train=20.04%, Val=10.67%, Gap=9.37%, LR=1.87e-04
  Batch    0/48 | Loss: 3.0738 | LR: 1.86e-04 | GradNorm: 3.443
  Batch    4/48 | Loss: 3.0278 | LR: 1.82e-04 | GradNorm: 3.526
  Batch    8/48 | Loss: 3.0667 | LR: 1.77e-04 | GradNorm: 4.141
  Batch   12/48 | Loss: 3.0445 | LR: 1.73e-04 | GradNorm: 3.170
  Batch   16/48 | Loss: 3.0456 | LR: 1.69e-04 | GradNorm: 6.115
  Batch   20/48 | Loss: 3.0410 | LR: 1.65e-04 | GradNorm: 3.212
  Batch   24/48 | Loss: 3.0350 | LR: 1.60e-04 | GradNorm: 3.693
  Batch   28/48 | Loss: 2.9912 | LR: 1.56e-04 | GradNorm: 2.957
  Batch   32/48 | Loss: 2.9872 | LR: 1.52e-04 | GradNorm: 3.855
  Batch   36/48 | Loss: 3.0413 | LR: 1.47e-04 | GradNorm: 2.310
  Batch   40/48 | Loss: 3.0121 | LR: 1.43e-04 | GradNorm: 3.303
  Batch   44/48 | Loss: 3.0599 | LR: 1.38e-04 | GradNorm: 4.597
Epoch 6/10: Train=22.54%, Val=14.20%, Gap=8.34%, LR=1.35e-04
  Batch    0/48 | Loss: 2.9712 | LR: 1.34e-04 | GradNorm: 4.124
  Batch    4/48 | Loss: 2.9726 | LR: 1.30e-04 | GradNorm: 4.010
  Batch    8/48 | Loss: 2.9351 | LR: 1.25e-04 | GradNorm: 1.830
  Batch   12/48 | Loss: 2.9009 | LR: 1.21e-04 | GradNorm: 4.257
  Batch   16/48 | Loss: 2.8798 | LR: 1.16e-04 | GradNorm: 2.342
  Batch   20/48 | Loss: 2.9096 | LR: 1.12e-04 | GradNorm: 2.505
  Batch   24/48 | Loss: 2.9461 | LR: 1.08e-04 | GradNorm: 6.768
  Batch   28/48 | Loss: 2.9258 | LR: 1.03e-04 | GradNorm: 4.964
  Batch   32/48 | Loss: 2.9180 | LR: 9.90e-05 | GradNorm: 3.592
  Batch   36/48 | Loss: 2.9217 | LR: 9.48e-05 | GradNorm: 3.776
  Batch   40/48 | Loss: 2.9166 | LR: 9.06e-05 | GradNorm: 5.704
  Batch   44/48 | Loss: 2.8661 | LR: 8.65e-05 | GradNorm: 5.408
Epoch 7/10: Train=27.49%, Val=17.16%, Gap=10.33%, LR=8.34e-05
  Batch    0/48 | Loss: 2.9453 | LR: 8.24e-05 | GradNorm: 10.420
  Batch    4/48 | Loss: 2.8654 | LR: 7.83e-05 | GradNorm: 5.654
  Batch    8/48 | Loss: 2.8477 | LR: 7.44e-05 | GradNorm: 5.414
  Batch   12/48 | Loss: 2.8807 | LR: 7.05e-05 | GradNorm: 4.714
  Batch   16/48 | Loss: 2.8808 | LR: 6.66e-05 | GradNorm: 3.167
  Batch   20/48 | Loss: 2.7995 | LR: 6.28e-05 | GradNorm: 3.233
  Batch   24/48 | Loss: 2.8109 | LR: 5.92e-05 | GradNorm: 4.928
  Batch   28/48 | Loss: 2.8431 | LR: 5.55e-05 | GradNorm: 4.563
  Batch   32/48 | Loss: 2.8510 | LR: 5.20e-05 | GradNorm: 7.420
  Batch   36/48 | Loss: 2.8312 | LR: 4.86e-05 | GradNorm: 3.930
  Batch   40/48 | Loss: 2.7499 | LR: 4.52e-05 | GradNorm: 3.359
  Batch   44/48 | Loss: 2.7964 | LR: 4.20e-05 | GradNorm: 2.526
Epoch 8/10: Train=30.29%, Val=16.61%, Gap=13.68%, LR=3.96e-05
  Batch    0/48 | Loss: 2.7774 | LR: 3.88e-05 | GradNorm: 2.635
  Batch    4/48 | Loss: 2.7644 | LR: 3.58e-05 | GradNorm: 1.679
  Batch    8/48 | Loss: 2.8236 | LR: 3.29e-05 | GradNorm: 4.685
  Batch   12/48 | Loss: 2.7571 | LR: 3.00e-05 | GradNorm: 2.850
  Batch   16/48 | Loss: 2.7173 | LR: 2.73e-05 | GradNorm: 2.346
  Batch   20/48 | Loss: 2.7270 | LR: 2.47e-05 | GradNorm: 3.360
  Batch   24/48 | Loss: 2.7735 | LR: 2.22e-05 | GradNorm: 4.774
  Batch   28/48 | Loss: 2.7856 | LR: 1.99e-05 | GradNorm: 4.786
  Batch   32/48 | Loss: 2.7520 | LR: 1.76e-05 | GradNorm: 4.364
  Batch   36/48 | Loss: 2.7383 | LR: 1.55e-05 | GradNorm: 2.970
  Batch   40/48 | Loss: 2.7281 | LR: 1.35e-05 | GradNorm: 3.579
  Batch   44/48 | Loss: 2.7457 | LR: 1.17e-05 | GradNorm: 2.079
Epoch 9/10: Train=32.35%, Val=17.16%, Gap=15.19%, LR=1.04e-05
  Batch    0/48 | Loss: 2.7442 | LR: 9.95e-06 | GradNorm: 2.419
  Batch    4/48 | Loss: 2.7433 | LR: 8.36e-06 | GradNorm: 1.649
  Batch    8/48 | Loss: 2.7148 | LR: 6.91e-06 | GradNorm: 1.964
  Batch   12/48 | Loss: 2.7307 | LR: 5.59e-06 | GradNorm: 2.223
  Batch   16/48 | Loss: 2.7195 | LR: 4.42e-06 | GradNorm: 1.447
  Batch   20/48 | Loss: 2.7368 | LR: 3.38e-06 | GradNorm: 3.150
  Batch   24/48 | Loss: 2.7460 | LR: 2.48e-06 | GradNorm: 3.197
  Batch   28/48 | Loss: 2.7536 | LR: 1.73e-06 | GradNorm: 2.012
  Batch   32/48 | Loss: 2.7567 | LR: 1.11e-06 | GradNorm: 2.572
  Batch   36/48 | Loss: 2.7313 | LR: 6.46e-07 | GradNorm: 1.703
  Batch   40/48 | Loss: 2.7009 | LR: 3.21e-07 | GradNorm: 2.021
  Batch   44/48 | Loss: 2.7244 | LR: 1.41e-07 | GradNorm: 2.003
Epoch 10/10: Train=33.29%, Val=17.93%, Gap=15.36%, LR=1.00e-07
Best validation accuracy: 17.93%
