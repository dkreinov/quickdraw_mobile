=== W&B Sweep Run: LR=0.000289 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002891269373583749
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000289
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9514 | LR: 5.87e-06 | GradNorm: 1.687
  Batch    4/48 | Loss: 3.9293 | LR: 1.78e-05 | GradNorm: 1.001
  Batch    8/48 | Loss: 3.9176 | LR: 2.97e-05 | GradNorm: 0.741
  Batch   12/48 | Loss: 3.9134 | LR: 4.17e-05 | GradNorm: 0.701
  Batch   16/48 | Loss: 3.9213 | LR: 5.36e-05 | GradNorm: 0.649
  Batch   20/48 | Loss: 3.9104 | LR: 6.55e-05 | GradNorm: 0.623
  Batch   24/48 | Loss: 3.9128 | LR: 7.74e-05 | GradNorm: 0.689
  Batch   28/48 | Loss: 3.9193 | LR: 8.94e-05 | GradNorm: 0.670
  Batch   32/48 | Loss: 3.9090 | LR: 1.01e-04 | GradNorm: 0.546
  Batch   36/48 | Loss: 3.9042 | LR: 1.13e-04 | GradNorm: 0.578
  Batch   40/48 | Loss: 3.8853 | LR: 1.25e-04 | GradNorm: 0.588
  Batch   44/48 | Loss: 3.8567 | LR: 1.37e-04 | GradNorm: 1.045
Epoch 1/10: Train=2.48%, Val=4.31%, Gap=-1.83%, LR=1.46e-04
  Batch    0/48 | Loss: 3.8057 | LR: 1.49e-04 | GradNorm: 2.311
  Batch    4/48 | Loss: 3.8008 | LR: 1.61e-04 | GradNorm: 4.773
  Batch    8/48 | Loss: 3.7712 | LR: 1.73e-04 | GradNorm: 5.016
  Batch   12/48 | Loss: 3.7561 | LR: 1.85e-04 | GradNorm: 5.671
  Batch   16/48 | Loss: 3.7680 | LR: 1.97e-04 | GradNorm: 2.813
  Batch   20/48 | Loss: 3.7305 | LR: 2.09e-04 | GradNorm: 2.518
  Batch   24/48 | Loss: 3.6807 | LR: 2.21e-04 | GradNorm: 2.257
  Batch   28/48 | Loss: 3.6800 | LR: 2.32e-04 | GradNorm: 1.810
  Batch   32/48 | Loss: 3.6730 | LR: 2.44e-04 | GradNorm: 4.190
  Batch   36/48 | Loss: 3.6774 | LR: 2.56e-04 | GradNorm: 6.440
  Batch   40/48 | Loss: 3.6447 | LR: 2.68e-04 | GradNorm: 2.403
  Batch   44/48 | Loss: 3.6811 | LR: 2.80e-04 | GradNorm: 6.209
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.60%, Val=5.75%, Gap=0.85%, LR=2.89e-04
  Batch    0/48 | Loss: 3.5601 | LR: 2.89e-04 | GradNorm: 2.074
  Batch    4/48 | Loss: 3.6814 | LR: 2.89e-04 | GradNorm: 3.185
  Batch    8/48 | Loss: 3.5912 | LR: 2.89e-04 | GradNorm: 3.452
  Batch   12/48 | Loss: 3.5659 | LR: 2.88e-04 | GradNorm: 2.508
  Batch   16/48 | Loss: 3.5349 | LR: 2.88e-04 | GradNorm: 2.838
  Batch   20/48 | Loss: 3.4871 | LR: 2.87e-04 | GradNorm: 4.948
  Batch   24/48 | Loss: 3.4762 | LR: 2.86e-04 | GradNorm: 3.961
  Batch   28/48 | Loss: 3.4179 | LR: 2.85e-04 | GradNorm: 3.423
  Batch   32/48 | Loss: 3.4268 | LR: 2.84e-04 | GradNorm: 3.645
  Batch   36/48 | Loss: 3.4178 | LR: 2.83e-04 | GradNorm: 5.465
  Batch   40/48 | Loss: 3.3939 | LR: 2.81e-04 | GradNorm: 5.866
  Batch   44/48 | Loss: 3.3802 | LR: 2.79e-04 | GradNorm: 4.304
Epoch 3/10: Train=11.65%, Val=9.06%, Gap=2.59%, LR=2.78e-04
  Batch    0/48 | Loss: 3.3249 | LR: 2.78e-04 | GradNorm: 3.099
  Batch    4/48 | Loss: 3.3310 | LR: 2.76e-04 | GradNorm: 3.516
  Batch    8/48 | Loss: 3.2817 | LR: 2.74e-04 | GradNorm: 1.948
  Batch   12/48 | Loss: 3.2149 | LR: 2.72e-04 | GradNorm: 1.070
  Batch   16/48 | Loss: 3.2731 | LR: 2.69e-04 | GradNorm: 4.357
  Batch   20/48 | Loss: 3.2394 | LR: 2.67e-04 | GradNorm: 3.518
  Batch   24/48 | Loss: 3.2568 | LR: 2.64e-04 | GradNorm: 4.876
  Batch   28/48 | Loss: 3.2093 | LR: 2.61e-04 | GradNorm: 4.065
  Batch   32/48 | Loss: 3.2614 | LR: 2.59e-04 | GradNorm: 6.131
  Batch   36/48 | Loss: 3.2767 | LR: 2.56e-04 | GradNorm: 6.103
  Batch   40/48 | Loss: 3.2870 | LR: 2.52e-04 | GradNorm: 5.759
  Batch   44/48 | Loss: 3.1647 | LR: 2.49e-04 | GradNorm: 3.023
Epoch 4/10: Train=16.91%, Val=12.05%, Gap=4.86%, LR=2.47e-04
  Batch    0/48 | Loss: 3.1701 | LR: 2.46e-04 | GradNorm: 3.777
  Batch    4/48 | Loss: 3.2186 | LR: 2.43e-04 | GradNorm: 12.922
  Batch    8/48 | Loss: 3.2467 | LR: 2.39e-04 | GradNorm: 7.755
  Batch   12/48 | Loss: 3.1809 | LR: 2.35e-04 | GradNorm: 5.444
  Batch   16/48 | Loss: 3.1927 | LR: 2.32e-04 | GradNorm: 2.743
  Batch   20/48 | Loss: 3.1662 | LR: 2.28e-04 | GradNorm: 8.436
  Batch   24/48 | Loss: 3.2293 | LR: 2.24e-04 | GradNorm: 9.649
  Batch   28/48 | Loss: 3.2162 | LR: 2.20e-04 | GradNorm: 8.802
  Batch   32/48 | Loss: 3.1198 | LR: 2.16e-04 | GradNorm: 3.634
  Batch   36/48 | Loss: 3.1472 | LR: 2.12e-04 | GradNorm: 3.677
  Batch   40/48 | Loss: 3.1077 | LR: 2.07e-04 | GradNorm: 3.547
  Batch   44/48 | Loss: 3.0748 | LR: 2.03e-04 | GradNorm: 4.279
Epoch 5/10: Train=19.95%, Val=14.12%, Gap=5.83%, LR=2.00e-04
  Batch    0/48 | Loss: 3.0666 | LR: 1.99e-04 | GradNorm: 6.382
  Batch    4/48 | Loss: 2.9942 | LR: 1.94e-04 | GradNorm: 3.441
  Batch    8/48 | Loss: 3.0074 | LR: 1.90e-04 | GradNorm: 3.781
  Batch   12/48 | Loss: 3.0093 | LR: 1.85e-04 | GradNorm: 5.367
  Batch   16/48 | Loss: 2.9400 | LR: 1.81e-04 | GradNorm: 2.427
  Batch   20/48 | Loss: 2.9644 | LR: 1.76e-04 | GradNorm: 5.134
  Batch   24/48 | Loss: 2.9619 | LR: 1.72e-04 | GradNorm: 6.076
  Batch   28/48 | Loss: 2.9199 | LR: 1.67e-04 | GradNorm: 6.284
  Batch   32/48 | Loss: 2.9046 | LR: 1.62e-04 | GradNorm: 5.464
  Batch   36/48 | Loss: 2.9269 | LR: 1.58e-04 | GradNorm: 3.657
  Batch   40/48 | Loss: 2.9352 | LR: 1.53e-04 | GradNorm: 7.191
  Batch   44/48 | Loss: 2.9844 | LR: 1.48e-04 | GradNorm: 6.022
Epoch 6/10: Train=25.92%, Val=16.13%, Gap=9.79%, LR=1.45e-04
  Batch    0/48 | Loss: 2.8861 | LR: 1.43e-04 | GradNorm: 3.526
  Batch    4/48 | Loss: 2.9082 | LR: 1.39e-04 | GradNorm: 7.467
  Batch    8/48 | Loss: 2.8564 | LR: 1.34e-04 | GradNorm: 1.924
  Batch   12/48 | Loss: 2.8060 | LR: 1.29e-04 | GradNorm: 5.712
  Batch   16/48 | Loss: 2.8307 | LR: 1.25e-04 | GradNorm: 5.877
  Batch   20/48 | Loss: 2.8646 | LR: 1.20e-04 | GradNorm: 5.371
  Batch   24/48 | Loss: 2.8529 | LR: 1.15e-04 | GradNorm: 5.024
  Batch   28/48 | Loss: 2.8611 | LR: 1.11e-04 | GradNorm: 5.716
  Batch   32/48 | Loss: 2.8376 | LR: 1.06e-04 | GradNorm: 5.242
  Batch   36/48 | Loss: 2.8473 | LR: 1.02e-04 | GradNorm: 5.267
  Batch   40/48 | Loss: 2.8204 | LR: 9.70e-05 | GradNorm: 3.902
  Batch   44/48 | Loss: 2.7983 | LR: 9.26e-05 | GradNorm: 6.437
Epoch 7/10: Train=29.65%, Val=17.27%, Gap=12.38%, LR=8.93e-05
  Batch    0/48 | Loss: 2.7943 | LR: 8.82e-05 | GradNorm: 5.265
  Batch    4/48 | Loss: 2.7564 | LR: 8.39e-05 | GradNorm: 5.509
  Batch    8/48 | Loss: 2.7509 | LR: 7.96e-05 | GradNorm: 4.196
  Batch   12/48 | Loss: 2.7781 | LR: 7.54e-05 | GradNorm: 3.494
  Batch   16/48 | Loss: 2.8082 | LR: 7.13e-05 | GradNorm: 4.147
  Batch   20/48 | Loss: 2.7168 | LR: 6.73e-05 | GradNorm: 6.476
  Batch   24/48 | Loss: 2.7077 | LR: 6.33e-05 | GradNorm: 2.928
  Batch   28/48 | Loss: 2.7665 | LR: 5.95e-05 | GradNorm: 5.831
  Batch   32/48 | Loss: 2.7448 | LR: 5.57e-05 | GradNorm: 3.918
  Batch   36/48 | Loss: 2.7450 | LR: 5.20e-05 | GradNorm: 5.728
  Batch   40/48 | Loss: 2.6652 | LR: 4.84e-05 | GradNorm: 4.627
  Batch   44/48 | Loss: 2.7104 | LR: 4.50e-05 | GradNorm: 4.851
Epoch 8/10: Train=32.69%, Val=17.41%, Gap=15.28%, LR=4.24e-05
  Batch    0/48 | Loss: 2.7004 | LR: 4.16e-05 | GradNorm: 3.735
  Batch    4/48 | Loss: 2.6987 | LR: 3.83e-05 | GradNorm: 7.829
  Batch    8/48 | Loss: 2.7462 | LR: 3.52e-05 | GradNorm: 6.824
  Batch   12/48 | Loss: 2.6887 | LR: 3.22e-05 | GradNorm: 4.813
  Batch   16/48 | Loss: 2.6282 | LR: 2.92e-05 | GradNorm: 2.997
  Batch   20/48 | Loss: 2.6400 | LR: 2.65e-05 | GradNorm: 4.801
  Batch   24/48 | Loss: 2.6728 | LR: 2.38e-05 | GradNorm: 2.517
  Batch   28/48 | Loss: 2.6811 | LR: 2.13e-05 | GradNorm: 2.486
  Batch   32/48 | Loss: 2.6598 | LR: 1.89e-05 | GradNorm: 4.046
  Batch   36/48 | Loss: 2.6448 | LR: 1.66e-05 | GradNorm: 2.167
  Batch   40/48 | Loss: 2.6430 | LR: 1.45e-05 | GradNorm: 2.607
  Batch   44/48 | Loss: 2.6630 | LR: 1.25e-05 | GradNorm: 3.362
Epoch 9/10: Train=35.49%, Val=18.26%, Gap=17.23%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6585 | LR: 1.07e-05 | GradNorm: 2.833
  Batch    4/48 | Loss: 2.6601 | LR: 8.95e-06 | GradNorm: 2.809
  Batch    8/48 | Loss: 2.6185 | LR: 7.39e-06 | GradNorm: 4.462
  Batch   12/48 | Loss: 2.6251 | LR: 5.98e-06 | GradNorm: 3.250
  Batch   16/48 | Loss: 2.6253 | LR: 4.72e-06 | GradNorm: 1.636
  Batch   20/48 | Loss: 2.6423 | LR: 3.61e-06 | GradNorm: 3.994
  Batch   24/48 | Loss: 2.6444 | LR: 2.65e-06 | GradNorm: 3.577
  Batch   28/48 | Loss: 2.6685 | LR: 1.84e-06 | GradNorm: 3.822
  Batch   32/48 | Loss: 2.6462 | LR: 1.19e-06 | GradNorm: 4.637
  Batch   36/48 | Loss: 2.6429 | LR: 6.85e-07 | GradNorm: 1.898
  Batch   40/48 | Loss: 2.6079 | LR: 3.37e-07 | GradNorm: 2.878
  Batch   44/48 | Loss: 2.6176 | LR: 1.44e-07 | GradNorm: 3.481
Epoch 10/10: Train=36.45%, Val=18.20%, Gap=18.25%, LR=1.00e-07
Best validation accuracy: 18.26%
