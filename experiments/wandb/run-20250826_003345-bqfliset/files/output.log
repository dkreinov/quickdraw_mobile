=== W&B Sweep Run: LR=0.000365 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003649012405938241
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000365
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9535 | LR: 7.41e-06 | GradNorm: 1.755
  Batch    4/48 | Loss: 3.9262 | LR: 2.25e-05 | GradNorm: 1.056
  Batch    8/48 | Loss: 3.9209 | LR: 3.75e-05 | GradNorm: 0.862
  Batch   12/48 | Loss: 3.9125 | LR: 5.26e-05 | GradNorm: 0.600
  Batch   16/48 | Loss: 3.9186 | LR: 6.76e-05 | GradNorm: 0.614
  Batch   20/48 | Loss: 3.9165 | LR: 8.27e-05 | GradNorm: 0.652
  Batch   24/48 | Loss: 3.9133 | LR: 9.77e-05 | GradNorm: 0.653
  Batch   28/48 | Loss: 3.9164 | LR: 1.13e-04 | GradNorm: 0.567
  Batch   32/48 | Loss: 3.9074 | LR: 1.28e-04 | GradNorm: 0.512
  Batch   36/48 | Loss: 3.9012 | LR: 1.43e-04 | GradNorm: 0.507
  Batch   40/48 | Loss: 3.8861 | LR: 1.58e-04 | GradNorm: 0.614
  Batch   44/48 | Loss: 3.8483 | LR: 1.73e-04 | GradNorm: 1.464
Epoch 1/10: Train=2.40%, Val=2.02%, Gap=0.38%, LR=1.84e-04
  Batch    0/48 | Loss: 3.9301 | LR: 1.88e-04 | GradNorm: 4.516
  Batch    4/48 | Loss: 3.8213 | LR: 2.03e-04 | GradNorm: 2.773
  Batch    8/48 | Loss: 3.8322 | LR: 2.18e-04 | GradNorm: 4.474
  Batch   12/48 | Loss: 3.9188 | LR: 2.33e-04 | GradNorm: 5.484
  Batch   16/48 | Loss: 3.7464 | LR: 2.48e-04 | GradNorm: 0.627
  Batch   20/48 | Loss: 3.6935 | LR: 2.63e-04 | GradNorm: 1.254
  Batch   24/48 | Loss: 3.6079 | LR: 2.78e-04 | GradNorm: 6.343
  Batch   28/48 | Loss: 3.5724 | LR: 2.93e-04 | GradNorm: 1.313
  Batch   32/48 | Loss: 3.5833 | LR: 3.08e-04 | GradNorm: 3.415
  Batch   36/48 | Loss: 3.5719 | LR: 3.24e-04 | GradNorm: 3.979
  Batch   40/48 | Loss: 3.5438 | LR: 3.39e-04 | GradNorm: 2.758
  Batch   44/48 | Loss: 3.4710 | LR: 3.54e-04 | GradNorm: 2.807
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=8.01%, Val=9.29%, Gap=-1.28%, LR=3.65e-04
  Batch    0/48 | Loss: 3.4272 | LR: 3.65e-04 | GradNorm: 2.011
  Batch    4/48 | Loss: 3.4802 | LR: 3.65e-04 | GradNorm: 5.796
  Batch    8/48 | Loss: 3.4009 | LR: 3.64e-04 | GradNorm: 2.377
  Batch   12/48 | Loss: 3.4034 | LR: 3.64e-04 | GradNorm: 3.272
  Batch   16/48 | Loss: 3.3879 | LR: 3.63e-04 | GradNorm: 4.132
  Batch   20/48 | Loss: 3.3539 | LR: 3.62e-04 | GradNorm: 4.562
  Batch   24/48 | Loss: 3.3179 | LR: 3.61e-04 | GradNorm: 3.405
  Batch   28/48 | Loss: 3.2460 | LR: 3.60e-04 | GradNorm: 2.628
  Batch   32/48 | Loss: 3.2952 | LR: 3.58e-04 | GradNorm: 2.447
  Batch   36/48 | Loss: 3.2806 | LR: 3.57e-04 | GradNorm: 3.067
  Batch   40/48 | Loss: 3.3647 | LR: 3.55e-04 | GradNorm: 5.481
  Batch   44/48 | Loss: 3.2580 | LR: 3.53e-04 | GradNorm: 2.852
Epoch 3/10: Train=14.88%, Val=10.80%, Gap=4.08%, LR=3.51e-04
  Batch    0/48 | Loss: 3.2420 | LR: 3.50e-04 | GradNorm: 2.952
  Batch    4/48 | Loss: 3.2471 | LR: 3.48e-04 | GradNorm: 4.178
  Batch    8/48 | Loss: 3.2151 | LR: 3.45e-04 | GradNorm: 2.144
  Batch   12/48 | Loss: 3.2786 | LR: 3.43e-04 | GradNorm: 11.387
  Batch   16/48 | Loss: 3.2670 | LR: 3.40e-04 | GradNorm: 5.163
  Batch   20/48 | Loss: 3.1923 | LR: 3.37e-04 | GradNorm: 2.308
  Batch   24/48 | Loss: 3.2549 | LR: 3.33e-04 | GradNorm: 6.033
  Batch   28/48 | Loss: 3.1797 | LR: 3.30e-04 | GradNorm: 2.560
  Batch   32/48 | Loss: 3.2398 | LR: 3.26e-04 | GradNorm: 7.204
  Batch   36/48 | Loss: 3.2004 | LR: 3.23e-04 | GradNorm: 3.507
  Batch   40/48 | Loss: 3.1903 | LR: 3.19e-04 | GradNorm: 2.961
  Batch   44/48 | Loss: 3.1794 | LR: 3.15e-04 | GradNorm: 3.589
Epoch 4/10: Train=17.42%, Val=14.01%, Gap=3.41%, LR=3.11e-04
  Batch    0/48 | Loss: 3.1296 | LR: 3.10e-04 | GradNorm: 3.394
  Batch    4/48 | Loss: 3.0945 | LR: 3.06e-04 | GradNorm: 3.785
  Batch    8/48 | Loss: 3.0662 | LR: 3.02e-04 | GradNorm: 3.336
  Batch   12/48 | Loss: 3.0295 | LR: 2.97e-04 | GradNorm: 2.933
  Batch   16/48 | Loss: 3.1063 | LR: 2.92e-04 | GradNorm: 3.478
  Batch   20/48 | Loss: 3.0573 | LR: 2.88e-04 | GradNorm: 3.389
  Batch   24/48 | Loss: 3.0219 | LR: 2.83e-04 | GradNorm: 1.521
  Batch   28/48 | Loss: 3.0271 | LR: 2.78e-04 | GradNorm: 4.575
  Batch   32/48 | Loss: 3.0211 | LR: 2.72e-04 | GradNorm: 4.394
  Batch   36/48 | Loss: 3.0261 | LR: 2.67e-04 | GradNorm: 3.550
  Batch   40/48 | Loss: 2.9959 | LR: 2.62e-04 | GradNorm: 5.087
  Batch   44/48 | Loss: 2.9387 | LR: 2.56e-04 | GradNorm: 2.458
Epoch 5/10: Train=23.49%, Val=15.11%, Gap=8.38%, LR=2.52e-04
  Batch    0/48 | Loss: 2.8958 | LR: 2.51e-04 | GradNorm: 2.178
  Batch    4/48 | Loss: 2.8725 | LR: 2.45e-04 | GradNorm: 6.823
  Batch    8/48 | Loss: 2.9058 | LR: 2.40e-04 | GradNorm: 4.384
  Batch   12/48 | Loss: 2.8727 | LR: 2.34e-04 | GradNorm: 2.996
  Batch   16/48 | Loss: 2.8147 | LR: 2.28e-04 | GradNorm: 3.724
  Batch   20/48 | Loss: 2.8111 | LR: 2.22e-04 | GradNorm: 2.527
  Batch   24/48 | Loss: 2.8582 | LR: 2.17e-04 | GradNorm: 6.885
  Batch   28/48 | Loss: 2.7786 | LR: 2.11e-04 | GradNorm: 4.622
  Batch   32/48 | Loss: 2.7879 | LR: 2.05e-04 | GradNorm: 5.378
  Batch   36/48 | Loss: 2.8341 | LR: 1.99e-04 | GradNorm: 1.633
  Batch   40/48 | Loss: 2.8109 | LR: 1.93e-04 | GradNorm: 2.918
  Batch   44/48 | Loss: 2.8241 | LR: 1.87e-04 | GradNorm: 2.441
Epoch 6/10: Train=28.78%, Val=16.24%, Gap=12.54%, LR=1.83e-04
  Batch    0/48 | Loss: 2.7781 | LR: 1.81e-04 | GradNorm: 3.701
  Batch    4/48 | Loss: 2.7509 | LR: 1.75e-04 | GradNorm: 5.487
  Batch    8/48 | Loss: 2.7350 | LR: 1.69e-04 | GradNorm: 3.838
  Batch   12/48 | Loss: 2.6675 | LR: 1.63e-04 | GradNorm: 4.330
  Batch   16/48 | Loss: 2.7067 | LR: 1.57e-04 | GradNorm: 4.747
  Batch   20/48 | Loss: 2.7097 | LR: 1.51e-04 | GradNorm: 3.868
  Batch   24/48 | Loss: 2.7208 | LR: 1.45e-04 | GradNorm: 4.051
  Batch   28/48 | Loss: 2.7313 | LR: 1.40e-04 | GradNorm: 4.218
  Batch   32/48 | Loss: 2.7463 | LR: 1.34e-04 | GradNorm: 8.410
  Batch   36/48 | Loss: 2.7634 | LR: 1.28e-04 | GradNorm: 8.773
  Batch   40/48 | Loss: 2.7004 | LR: 1.22e-04 | GradNorm: 3.985
  Batch   44/48 | Loss: 2.6770 | LR: 1.17e-04 | GradNorm: 4.683
Epoch 7/10: Train=32.95%, Val=21.07%, Gap=11.88%, LR=1.13e-04
  Batch    0/48 | Loss: 2.6906 | LR: 1.11e-04 | GradNorm: 5.558
  Batch    4/48 | Loss: 2.6822 | LR: 1.06e-04 | GradNorm: 6.264
  Batch    8/48 | Loss: 2.6529 | LR: 1.00e-04 | GradNorm: 5.639
  Batch   12/48 | Loss: 2.6654 | LR: 9.52e-05 | GradNorm: 5.531
  Batch   16/48 | Loss: 2.6690 | LR: 9.00e-05 | GradNorm: 4.407
  Batch   20/48 | Loss: 2.5922 | LR: 8.49e-05 | GradNorm: 6.291
  Batch   24/48 | Loss: 2.5850 | LR: 7.99e-05 | GradNorm: 5.569
  Batch   28/48 | Loss: 2.6182 | LR: 7.50e-05 | GradNorm: 4.129
  Batch   32/48 | Loss: 2.6165 | LR: 7.03e-05 | GradNorm: 4.376
  Batch   36/48 | Loss: 2.6167 | LR: 6.56e-05 | GradNorm: 11.062
  Batch   40/48 | Loss: 2.5369 | LR: 6.11e-05 | GradNorm: 7.712
  Batch   44/48 | Loss: 2.6076 | LR: 5.67e-05 | GradNorm: 7.342
Epoch 8/10: Train=36.34%, Val=21.89%, Gap=14.45%, LR=5.35e-05
  Batch    0/48 | Loss: 2.5599 | LR: 5.25e-05 | GradNorm: 5.274
  Batch    4/48 | Loss: 2.5558 | LR: 4.84e-05 | GradNorm: 6.928
  Batch    8/48 | Loss: 2.6173 | LR: 4.44e-05 | GradNorm: 5.298
  Batch   12/48 | Loss: 2.5457 | LR: 4.06e-05 | GradNorm: 4.685
  Batch   16/48 | Loss: 2.5067 | LR: 3.69e-05 | GradNorm: 3.385
  Batch   20/48 | Loss: 2.5024 | LR: 3.34e-05 | GradNorm: 4.557
  Batch   24/48 | Loss: 2.5237 | LR: 3.00e-05 | GradNorm: 3.729
  Batch   28/48 | Loss: 2.5595 | LR: 2.68e-05 | GradNorm: 4.347
  Batch   32/48 | Loss: 2.5119 | LR: 2.38e-05 | GradNorm: 3.138
  Batch   36/48 | Loss: 2.5298 | LR: 2.09e-05 | GradNorm: 5.241
  Batch   40/48 | Loss: 2.4914 | LR: 1.83e-05 | GradNorm: 4.342
  Batch   44/48 | Loss: 2.5288 | LR: 1.57e-05 | GradNorm: 4.203
Epoch 9/10: Train=39.33%, Val=24.16%, Gap=15.17%, LR=1.40e-05
  Batch    0/48 | Loss: 2.4975 | LR: 1.34e-05 | GradNorm: 2.847
  Batch    4/48 | Loss: 2.5260 | LR: 1.13e-05 | GradNorm: 2.689
  Batch    8/48 | Loss: 2.4937 | LR: 9.31e-06 | GradNorm: 3.274
  Batch   12/48 | Loss: 2.4970 | LR: 7.53e-06 | GradNorm: 3.158
  Batch   16/48 | Loss: 2.5085 | LR: 5.93e-06 | GradNorm: 2.116
  Batch   20/48 | Loss: 2.5140 | LR: 4.53e-06 | GradNorm: 2.761
  Batch   24/48 | Loss: 2.5167 | LR: 3.32e-06 | GradNorm: 3.894
  Batch   28/48 | Loss: 2.5501 | LR: 2.30e-06 | GradNorm: 2.976
  Batch   32/48 | Loss: 2.5143 | LR: 1.47e-06 | GradNorm: 2.814
  Batch   36/48 | Loss: 2.5049 | LR: 8.38e-07 | GradNorm: 2.430
  Batch   40/48 | Loss: 2.4764 | LR: 3.99e-07 | GradNorm: 2.621
  Batch   44/48 | Loss: 2.4963 | LR: 1.55e-07 | GradNorm: 2.696
Epoch 10/10: Train=40.47%, Val=24.50%, Gap=15.97%, LR=1.00e-07
Best validation accuracy: 24.50%
