=== W&B Sweep Run: LR=0.000446 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044559837299798706
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000446
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9607 | LR: 9.05e-06 | GradNorm: 2.169
  Batch    4/48 | Loss: 3.9213 | LR: 2.74e-05 | GradNorm: 0.994
  Batch    8/48 | Loss: 3.9189 | LR: 4.58e-05 | GradNorm: 0.851
  Batch   12/48 | Loss: 3.9148 | LR: 6.42e-05 | GradNorm: 0.753
  Batch   16/48 | Loss: 3.9172 | LR: 8.26e-05 | GradNorm: 0.616
  Batch   20/48 | Loss: 3.9139 | LR: 1.01e-04 | GradNorm: 0.621
  Batch   24/48 | Loss: 3.9112 | LR: 1.19e-04 | GradNorm: 0.618
  Batch   28/48 | Loss: 3.9103 | LR: 1.38e-04 | GradNorm: 0.572
  Batch   32/48 | Loss: 3.8981 | LR: 1.56e-04 | GradNorm: 0.585
  Batch   36/48 | Loss: 3.8703 | LR: 1.74e-04 | GradNorm: 0.728
  Batch   40/48 | Loss: 3.8456 | LR: 1.93e-04 | GradNorm: 3.835
  Batch   44/48 | Loss: 3.8914 | LR: 2.11e-04 | GradNorm: 8.103
Epoch 1/10: Train=2.81%, Val=6.54%, Gap=-3.73%, LR=2.25e-04
  Batch    0/48 | Loss: 3.7837 | LR: 2.30e-04 | GradNorm: 4.949
  Batch    4/48 | Loss: 3.7538 | LR: 2.48e-04 | GradNorm: 2.979
  Batch    8/48 | Loss: 3.7541 | LR: 2.66e-04 | GradNorm: 4.203
  Batch   12/48 | Loss: 3.6777 | LR: 2.85e-04 | GradNorm: 3.340
  Batch   16/48 | Loss: 3.8764 | LR: 3.03e-04 | GradNorm: 7.439
  Batch   20/48 | Loss: 3.9261 | LR: 3.22e-04 | GradNorm: 2.623
  Batch   24/48 | Loss: 3.7693 | LR: 3.40e-04 | GradNorm: 2.375
  Batch   28/48 | Loss: 3.7835 | LR: 3.58e-04 | GradNorm: 3.094
  Batch   32/48 | Loss: 3.6972 | LR: 3.77e-04 | GradNorm: 1.167
  Batch   36/48 | Loss: 3.7971 | LR: 3.95e-04 | GradNorm: 3.632
  Batch   40/48 | Loss: 3.7668 | LR: 4.13e-04 | GradNorm: 4.347
  Batch   44/48 | Loss: 3.6527 | LR: 4.32e-04 | GradNorm: 2.363
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.10%, Val=8.64%, Gap=-2.54%, LR=4.46e-04
  Batch    0/48 | Loss: 3.5877 | LR: 4.46e-04 | GradNorm: 2.083
  Batch    4/48 | Loss: 3.5274 | LR: 4.45e-04 | GradNorm: 1.049
  Batch    8/48 | Loss: 3.4984 | LR: 4.45e-04 | GradNorm: 2.954
  Batch   12/48 | Loss: 3.5214 | LR: 4.44e-04 | GradNorm: 2.624
  Batch   16/48 | Loss: 3.4824 | LR: 4.43e-04 | GradNorm: 2.379
  Batch   20/48 | Loss: 3.3948 | LR: 4.42e-04 | GradNorm: 1.894
  Batch   24/48 | Loss: 3.3592 | LR: 4.41e-04 | GradNorm: 1.104
  Batch   28/48 | Loss: 3.3524 | LR: 4.39e-04 | GradNorm: 3.988
  Batch   32/48 | Loss: 3.4405 | LR: 4.38e-04 | GradNorm: 4.383
  Batch   36/48 | Loss: 3.3254 | LR: 4.35e-04 | GradNorm: 2.335
  Batch   40/48 | Loss: 3.4022 | LR: 4.33e-04 | GradNorm: 7.155
  Batch   44/48 | Loss: 3.3484 | LR: 4.31e-04 | GradNorm: 4.136
Epoch 3/10: Train=13.01%, Val=13.44%, Gap=-0.43%, LR=4.29e-04
  Batch    0/48 | Loss: 3.3300 | LR: 4.28e-04 | GradNorm: 2.601
  Batch    4/48 | Loss: 3.3154 | LR: 4.25e-04 | GradNorm: 4.139
  Batch    8/48 | Loss: 3.2560 | LR: 4.22e-04 | GradNorm: 1.958
  Batch   12/48 | Loss: 3.2273 | LR: 4.18e-04 | GradNorm: 3.106
  Batch   16/48 | Loss: 3.2535 | LR: 4.15e-04 | GradNorm: 4.185
  Batch   20/48 | Loss: 3.2686 | LR: 4.11e-04 | GradNorm: 5.143
  Batch   24/48 | Loss: 3.2521 | LR: 4.07e-04 | GradNorm: 3.669
  Batch   28/48 | Loss: 3.2326 | LR: 4.03e-04 | GradNorm: 3.692
  Batch   32/48 | Loss: 3.2408 | LR: 3.98e-04 | GradNorm: 2.767
  Batch   36/48 | Loss: 3.2161 | LR: 3.94e-04 | GradNorm: 3.482
  Batch   40/48 | Loss: 3.2391 | LR: 3.89e-04 | GradNorm: 3.337
  Batch   44/48 | Loss: 3.2849 | LR: 3.84e-04 | GradNorm: 7.631
Epoch 4/10: Train=16.48%, Val=11.73%, Gap=4.75%, LR=3.80e-04
  Batch    0/48 | Loss: 3.2290 | LR: 3.79e-04 | GradNorm: 4.370
  Batch    4/48 | Loss: 3.1661 | LR: 3.74e-04 | GradNorm: 3.272
  Batch    8/48 | Loss: 3.1432 | LR: 3.68e-04 | GradNorm: 3.549
  Batch   12/48 | Loss: 3.1145 | LR: 3.63e-04 | GradNorm: 2.890
  Batch   16/48 | Loss: 3.1625 | LR: 3.57e-04 | GradNorm: 2.490
  Batch   20/48 | Loss: 3.1127 | LR: 3.51e-04 | GradNorm: 2.277
  Batch   24/48 | Loss: 3.1318 | LR: 3.45e-04 | GradNorm: 2.629
  Batch   28/48 | Loss: 3.1558 | LR: 3.39e-04 | GradNorm: 4.837
  Batch   32/48 | Loss: 3.1815 | LR: 3.33e-04 | GradNorm: 5.808
  Batch   36/48 | Loss: 3.1862 | LR: 3.26e-04 | GradNorm: 3.565
  Batch   40/48 | Loss: 3.1224 | LR: 3.20e-04 | GradNorm: 2.430
  Batch   44/48 | Loss: 3.0636 | LR: 3.13e-04 | GradNorm: 2.430
Epoch 5/10: Train=19.74%, Val=13.07%, Gap=6.67%, LR=3.08e-04
  Batch    0/48 | Loss: 3.0381 | LR: 3.06e-04 | GradNorm: 2.524
  Batch    4/48 | Loss: 3.0643 | LR: 3.00e-04 | GradNorm: 4.728
  Batch    8/48 | Loss: 3.0400 | LR: 2.93e-04 | GradNorm: 2.810
  Batch   12/48 | Loss: 3.0250 | LR: 2.86e-04 | GradNorm: 2.271
  Batch   16/48 | Loss: 2.9982 | LR: 2.79e-04 | GradNorm: 4.057
  Batch   20/48 | Loss: 2.9974 | LR: 2.72e-04 | GradNorm: 2.036
  Batch   24/48 | Loss: 3.0053 | LR: 2.65e-04 | GradNorm: 2.440
  Batch   28/48 | Loss: 2.9541 | LR: 2.57e-04 | GradNorm: 2.982
  Batch   32/48 | Loss: 2.9621 | LR: 2.50e-04 | GradNorm: 2.941
  Batch   36/48 | Loss: 2.9796 | LR: 2.43e-04 | GradNorm: 2.642
  Batch   40/48 | Loss: 3.0168 | LR: 2.36e-04 | GradNorm: 4.978
  Batch   44/48 | Loss: 3.0398 | LR: 2.28e-04 | GradNorm: 4.555
Epoch 6/10: Train=23.18%, Val=14.28%, Gap=8.90%, LR=2.23e-04
  Batch    0/48 | Loss: 2.9591 | LR: 2.21e-04 | GradNorm: 2.829
  Batch    4/48 | Loss: 2.9052 | LR: 2.14e-04 | GradNorm: 2.396
  Batch    8/48 | Loss: 2.9267 | LR: 2.06e-04 | GradNorm: 3.723
  Batch   12/48 | Loss: 2.8510 | LR: 1.99e-04 | GradNorm: 3.581
  Batch   16/48 | Loss: 2.8628 | LR: 1.92e-04 | GradNorm: 3.882
  Batch   20/48 | Loss: 2.8911 | LR: 1.85e-04 | GradNorm: 2.744
  Batch   24/48 | Loss: 2.9201 | LR: 1.78e-04 | GradNorm: 4.450
  Batch   28/48 | Loss: 2.8956 | LR: 1.70e-04 | GradNorm: 3.282
  Batch   32/48 | Loss: 2.8868 | LR: 1.63e-04 | GradNorm: 3.847
  Batch   36/48 | Loss: 2.8637 | LR: 1.56e-04 | GradNorm: 1.596
  Batch   40/48 | Loss: 2.8727 | LR: 1.50e-04 | GradNorm: 4.497
  Batch   44/48 | Loss: 2.8942 | LR: 1.43e-04 | GradNorm: 6.582
Epoch 7/10: Train=28.02%, Val=17.63%, Gap=10.39%, LR=1.38e-04
  Batch    0/48 | Loss: 2.8387 | LR: 1.36e-04 | GradNorm: 6.093
  Batch    4/48 | Loss: 2.7881 | LR: 1.29e-04 | GradNorm: 2.889
  Batch    8/48 | Loss: 2.7735 | LR: 1.23e-04 | GradNorm: 2.148
  Batch   12/48 | Loss: 2.8345 | LR: 1.16e-04 | GradNorm: 2.848
  Batch   16/48 | Loss: 2.8373 | LR: 1.10e-04 | GradNorm: 4.525
  Batch   20/48 | Loss: 2.7510 | LR: 1.04e-04 | GradNorm: 3.877
  Batch   24/48 | Loss: 2.7445 | LR: 9.76e-05 | GradNorm: 2.756
  Batch   28/48 | Loss: 2.7750 | LR: 9.16e-05 | GradNorm: 2.259
  Batch   32/48 | Loss: 2.7897 | LR: 8.58e-05 | GradNorm: 2.975
  Batch   36/48 | Loss: 2.7599 | LR: 8.01e-05 | GradNorm: 2.632
  Batch   40/48 | Loss: 2.6965 | LR: 7.46e-05 | GradNorm: 3.072
  Batch   44/48 | Loss: 2.7632 | LR: 6.93e-05 | GradNorm: 5.812
Epoch 8/10: Train=31.31%, Val=17.78%, Gap=13.53%, LR=6.53e-05
  Batch    0/48 | Loss: 2.7063 | LR: 6.41e-05 | GradNorm: 1.598
  Batch    4/48 | Loss: 2.7001 | LR: 5.90e-05 | GradNorm: 2.103
  Batch    8/48 | Loss: 2.7667 | LR: 5.42e-05 | GradNorm: 2.205
  Batch   12/48 | Loss: 2.7084 | LR: 4.95e-05 | GradNorm: 2.066
  Batch   16/48 | Loss: 2.6498 | LR: 4.50e-05 | GradNorm: 2.261
  Batch   20/48 | Loss: 2.6865 | LR: 4.07e-05 | GradNorm: 2.933
  Batch   24/48 | Loss: 2.6970 | LR: 3.66e-05 | GradNorm: 2.031
  Batch   28/48 | Loss: 2.7187 | LR: 3.27e-05 | GradNorm: 2.445
  Batch   32/48 | Loss: 2.6868 | LR: 2.90e-05 | GradNorm: 1.775
  Batch   36/48 | Loss: 2.6778 | LR: 2.55e-05 | GradNorm: 3.291
  Batch   40/48 | Loss: 2.6625 | LR: 2.23e-05 | GradNorm: 3.179
  Batch   44/48 | Loss: 2.6859 | LR: 1.92e-05 | GradNorm: 2.761
Epoch 9/10: Train=33.90%, Val=19.30%, Gap=14.60%, LR=1.71e-05
  Batch    0/48 | Loss: 2.6950 | LR: 1.64e-05 | GradNorm: 3.080
  Batch    4/48 | Loss: 2.6881 | LR: 1.37e-05 | GradNorm: 3.357
  Batch    8/48 | Loss: 2.6231 | LR: 1.13e-05 | GradNorm: 2.333
  Batch   12/48 | Loss: 2.6498 | LR: 9.17e-06 | GradNorm: 3.120
  Batch   16/48 | Loss: 2.6628 | LR: 7.23e-06 | GradNorm: 2.635
  Batch   20/48 | Loss: 2.6522 | LR: 5.51e-06 | GradNorm: 2.291
  Batch   24/48 | Loss: 2.6698 | LR: 4.03e-06 | GradNorm: 3.036
  Batch   28/48 | Loss: 2.6893 | LR: 2.79e-06 | GradNorm: 2.614
  Batch   32/48 | Loss: 2.6940 | LR: 1.78e-06 | GradNorm: 2.018
  Batch   36/48 | Loss: 2.6555 | LR: 1.00e-06 | GradNorm: 1.558
  Batch   40/48 | Loss: 2.6486 | LR: 4.65e-07 | GradNorm: 1.665
  Batch   44/48 | Loss: 2.6566 | LR: 1.67e-07 | GradNorm: 2.173
Epoch 10/10: Train=34.76%, Val=19.20%, Gap=15.56%, LR=1.00e-07
Best validation accuracy: 19.30%
