=== LAMB Sweep Run ===
LR: 0.000800
Weight Decay: 0.1244
Warmup Epochs: 4
Using device: cuda
Available GPUs: 4
⏱️  Creating train dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Train dataset creation took: 0.46s
⏱️  Creating val dataset...
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
⏱️  Val dataset creation took: 0.43s

Loading train/val split...
Using pre-computed split (fast loading)
⏱️  Split loading took: 0.01s
⏱️  Subset creation took: 0.00s
⏱️  DataLoader creation took: 0.00s
⏱️  TOTAL data loading time: 0.02s

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 → 3 channel conversion
   Pretrained: True
   Drop path rate: 0.1
   Initialized single-channel weights from pretrained RGB weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs with LAMB optimizer
🔍 Debug Info:
   Optimizer requested: lamb
   ✅ LAMB import successful in wandb script
Setting up deterministic training (seed=42)
   TrainingConfig optimizer_name: lamb
   CUSTOM_OPTIMIZERS_AVAILABLE in TrainingConfig: True
Created LAMB optimizer:
   Learning rate: 0.000800
   Weight decay: 0.12437991378435705
   Optimizer type: LAMB
Created learning rate scheduler (step-based):
   Warmup steps: 192
   Total steps: 1440
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1638373680098561
Created AMP gradient scaler
Trainer initialized:
  Model: lamb_lr_0.000800_wd_0.1244
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_lamb_runs
Starting LAMB training for 30 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 4.3846 | LR: 1.21e-05 | GradNorm: 7.102
  Batch    4/48 | Loss: 4.3624 | LR: 2.86e-05 | GradNorm: 6.313
  Batch    8/48 | Loss: 4.3184 | LR: 4.51e-05 | GradNorm: 6.183
  Batch   12/48 | Loss: 4.2217 | LR: 6.16e-05 | GradNorm: 4.788
  Batch   16/48 | Loss: 4.1674 | LR: 7.81e-05 | GradNorm: 3.838
  Batch   20/48 | Loss: 4.1028 | LR: 9.46e-05 | GradNorm: 3.465
  Batch   24/48 | Loss: 4.0331 | LR: 1.11e-04 | GradNorm: 2.555
  Batch   28/48 | Loss: 3.9916 | LR: 1.28e-04 | GradNorm: 2.253
  Batch   32/48 | Loss: 3.9521 | LR: 1.44e-04 | GradNorm: 1.879
  Batch   36/48 | Loss: 3.9190 | LR: 1.61e-04 | GradNorm: 2.043
  Batch   40/48 | Loss: 3.8890 | LR: 1.77e-04 | GradNorm: 1.850
  Batch   44/48 | Loss: 3.8346 | LR: 1.94e-04 | GradNorm: 1.834
Epoch 1/30: Train=3.56%, Val=4.59%, Best=4.59% (E1), Gap=-1.03%, LR=2.06e-04
  Batch    0/48 | Loss: 3.7966 | LR: 2.10e-04 | GradNorm: 2.220
  Batch    4/48 | Loss: 3.7088 | LR: 2.27e-04 | GradNorm: 2.266
  Batch    8/48 | Loss: 3.6037 | LR: 2.43e-04 | GradNorm: 2.548
  Batch   12/48 | Loss: 3.5015 | LR: 2.60e-04 | GradNorm: 3.547
  Batch   16/48 | Loss: 3.4410 | LR: 2.76e-04 | GradNorm: 3.657
  Batch   20/48 | Loss: 3.3704 | LR: 2.93e-04 | GradNorm: 3.446
  Batch   24/48 | Loss: 3.2612 | LR: 3.09e-04 | GradNorm: 3.360
  Batch   28/48 | Loss: 3.1316 | LR: 3.26e-04 | GradNorm: 4.351
  Batch   32/48 | Loss: 3.0359 | LR: 3.42e-04 | GradNorm: 5.312
  Batch   36/48 | Loss: 2.9656 | LR: 3.59e-04 | GradNorm: 5.729
  Batch   40/48 | Loss: 2.8421 | LR: 3.75e-04 | GradNorm: 4.218
  Batch   44/48 | Loss: 2.7450 | LR: 3.92e-04 | GradNorm: 3.885
Epoch 2/30: Train=24.56%, Val=33.21%, Best=33.21% (E2), Gap=-8.65%, LR=4.04e-04
  Batch    0/48 | Loss: 2.6842 | LR: 4.08e-04 | GradNorm: 3.682
  Batch    4/48 | Loss: 2.6732 | LR: 4.25e-04 | GradNorm: 3.456
  Batch    8/48 | Loss: 2.5973 | LR: 4.41e-04 | GradNorm: 3.488
  Batch   12/48 | Loss: 2.5285 | LR: 4.58e-04 | GradNorm: 4.731
  Batch   16/48 | Loss: 2.4061 | LR: 4.74e-04 | GradNorm: 3.509
  Batch   20/48 | Loss: 2.3687 | LR: 4.91e-04 | GradNorm: 3.109
  Batch   24/48 | Loss: 2.3321 | LR: 5.07e-04 | GradNorm: 3.481
  Batch   28/48 | Loss: 2.2025 | LR: 5.24e-04 | GradNorm: 2.786
  Batch   32/48 | Loss: 2.2103 | LR: 5.40e-04 | GradNorm: 3.025
  Batch   36/48 | Loss: 2.1648 | LR: 5.57e-04 | GradNorm: 2.905
  Batch   40/48 | Loss: 2.1457 | LR: 5.73e-04 | GradNorm: 4.170
  Batch   44/48 | Loss: 2.1129 | LR: 5.90e-04 | GradNorm: 3.254
Epoch 3/30: Train=57.15%, Val=65.56%, Best=65.56% (E3), Gap=-8.41%, LR=6.02e-04
  Batch    0/48 | Loss: 2.0188 | LR: 6.06e-04 | GradNorm: 2.736
  Batch    4/48 | Loss: 1.9951 | LR: 6.23e-04 | GradNorm: 2.867
  Batch    8/48 | Loss: 1.9808 | LR: 6.39e-04 | GradNorm: 2.568
  Batch   12/48 | Loss: 1.9305 | LR: 6.56e-04 | GradNorm: 2.477
  Batch   16/48 | Loss: 1.9376 | LR: 6.72e-04 | GradNorm: 2.819
  Batch   20/48 | Loss: 1.8425 | LR: 6.89e-04 | GradNorm: 2.322
  Batch   24/48 | Loss: 1.8450 | LR: 7.05e-04 | GradNorm: 2.864
  Batch   28/48 | Loss: 1.8523 | LR: 7.22e-04 | GradNorm: 2.934
  Batch   32/48 | Loss: 1.8595 | LR: 7.38e-04 | GradNorm: 2.661
  Batch   36/48 | Loss: 1.8146 | LR: 7.55e-04 | GradNorm: 2.444
  Batch   40/48 | Loss: 1.8556 | LR: 7.71e-04 | GradNorm: 2.238
  Batch   44/48 | Loss: 1.7819 | LR: 7.88e-04 | GradNorm: 2.378
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 4/30: Train=72.93%, Val=74.92%, Best=74.92% (E4), Gap=-1.99%, LR=8.00e-04
  Batch    0/48 | Loss: 1.7196 | LR: 8.00e-04 | GradNorm: 2.010
  Batch    4/48 | Loss: 1.7537 | LR: 8.00e-04 | GradNorm: 2.324
  Batch    8/48 | Loss: 1.7594 | LR: 8.00e-04 | GradNorm: 2.375
  Batch   12/48 | Loss: 1.7193 | LR: 8.00e-04 | GradNorm: 2.025
  Batch   16/48 | Loss: 1.7289 | LR: 8.00e-04 | GradNorm: 2.222
  Batch   20/48 | Loss: 1.7084 | LR: 8.00e-04 | GradNorm: 2.126
  Batch   24/48 | Loss: 1.7494 | LR: 7.99e-04 | GradNorm: 2.233
  Batch   28/48 | Loss: 1.6646 | LR: 7.99e-04 | GradNorm: 1.702
  Batch   32/48 | Loss: 1.7031 | LR: 7.99e-04 | GradNorm: 2.141
  Batch   36/48 | Loss: 1.7461 | LR: 7.98e-04 | GradNorm: 1.911
  Batch   40/48 | Loss: 1.7125 | LR: 7.98e-04 | GradNorm: 2.387
  Batch   44/48 | Loss: 1.7151 | LR: 7.98e-04 | GradNorm: 2.027
Epoch 5/30: Train=78.91%, Val=77.71%, Best=77.71% (E5), Gap=1.20%, LR=7.97e-04
  Batch    0/48 | Loss: 1.6499 | LR: 7.97e-04 | GradNorm: 2.094
  Batch    4/48 | Loss: 1.6454 | LR: 7.97e-04 | GradNorm: 1.776
  Batch    8/48 | Loss: 1.6441 | LR: 7.96e-04 | GradNorm: 1.765
  Batch   12/48 | Loss: 1.6324 | LR: 7.95e-04 | GradNorm: 1.782
  Batch   16/48 | Loss: 1.6062 | LR: 7.95e-04 | GradNorm: 1.713
  Batch   20/48 | Loss: 1.5954 | LR: 7.94e-04 | GradNorm: 1.723
  Batch   24/48 | Loss: 1.6035 | LR: 7.93e-04 | GradNorm: 1.806
  Batch   28/48 | Loss: 1.5720 | LR: 7.93e-04 | GradNorm: 1.717
  Batch   32/48 | Loss: 1.6158 | LR: 7.92e-04 | GradNorm: 1.962
  Batch   36/48 | Loss: 1.6165 | LR: 7.91e-04 | GradNorm: 1.734
  Batch   40/48 | Loss: 1.6420 | LR: 7.90e-04 | GradNorm: 1.599
  Batch   44/48 | Loss: 1.6202 | LR: 7.89e-04 | GradNorm: 1.863
Epoch 6/30: Train=81.70%, Val=80.28%, Best=80.28% (E6), Gap=1.42%, LR=7.89e-04
  Batch    0/48 | Loss: 1.5898 | LR: 7.88e-04 | GradNorm: 1.781
  Batch    4/48 | Loss: 1.5921 | LR: 7.87e-04 | GradNorm: 1.804
  Batch    8/48 | Loss: 1.5525 | LR: 7.86e-04 | GradNorm: 1.753
  Batch   12/48 | Loss: 1.5664 | LR: 7.85e-04 | GradNorm: 1.641
  Batch   16/48 | Loss: 1.5321 | LR: 7.84e-04 | GradNorm: 1.545
  Batch   20/48 | Loss: 1.5854 | LR: 7.83e-04 | GradNorm: 1.595
  Batch   24/48 | Loss: 1.6317 | LR: 7.82e-04 | GradNorm: 1.775
  Batch   28/48 | Loss: 1.6026 | LR: 7.81e-04 | GradNorm: 1.567
  Batch   32/48 | Loss: 1.5856 | LR: 7.79e-04 | GradNorm: 1.560
  Batch   36/48 | Loss: 1.5623 | LR: 7.78e-04 | GradNorm: 1.576
  Batch   40/48 | Loss: 1.5552 | LR: 7.77e-04 | GradNorm: 1.522
  Batch   44/48 | Loss: 1.5657 | LR: 7.75e-04 | GradNorm: 1.699
