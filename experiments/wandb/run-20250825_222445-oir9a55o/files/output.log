=== W&B Sweep Run: LR=0.000290 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002903854394608982
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000290
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9461 | LR: 5.90e-06 | GradNorm: 1.504
  Batch    4/48 | Loss: 3.9210 | LR: 1.79e-05 | GradNorm: 0.943
  Batch    8/48 | Loss: 3.9285 | LR: 2.99e-05 | GradNorm: 0.946
  Batch   12/48 | Loss: 3.9136 | LR: 4.18e-05 | GradNorm: 0.680
  Batch   16/48 | Loss: 3.9154 | LR: 5.38e-05 | GradNorm: 0.620
  Batch   20/48 | Loss: 3.9189 | LR: 6.58e-05 | GradNorm: 0.681
  Batch   24/48 | Loss: 3.9116 | LR: 7.78e-05 | GradNorm: 0.635
  Batch   28/48 | Loss: 3.9174 | LR: 8.97e-05 | GradNorm: 0.612
  Batch   32/48 | Loss: 3.9060 | LR: 1.02e-04 | GradNorm: 0.516
  Batch   36/48 | Loss: 3.9076 | LR: 1.14e-04 | GradNorm: 0.579
  Batch   40/48 | Loss: 3.8916 | LR: 1.26e-04 | GradNorm: 0.570
  Batch   44/48 | Loss: 3.8584 | LR: 1.38e-04 | GradNorm: 0.785
Epoch 1/10: Train=2.58%, Val=4.50%, Gap=-1.92%, LR=1.47e-04
  Batch    0/48 | Loss: 3.8091 | LR: 1.50e-04 | GradNorm: 1.835
  Batch    4/48 | Loss: 3.8800 | LR: 1.62e-04 | GradNorm: 7.797
  Batch    8/48 | Loss: 3.8445 | LR: 1.74e-04 | GradNorm: 5.286
  Batch   12/48 | Loss: 3.8076 | LR: 1.86e-04 | GradNorm: 4.181
  Batch   16/48 | Loss: 3.8050 | LR: 1.98e-04 | GradNorm: 2.530
  Batch   20/48 | Loss: 3.8278 | LR: 2.10e-04 | GradNorm: 3.974
  Batch   24/48 | Loss: 3.7086 | LR: 2.22e-04 | GradNorm: 0.970
  Batch   28/48 | Loss: 3.7641 | LR: 2.33e-04 | GradNorm: 6.539
  Batch   32/48 | Loss: 3.7514 | LR: 2.45e-04 | GradNorm: 4.161
  Batch   36/48 | Loss: 3.7194 | LR: 2.57e-04 | GradNorm: 3.139
  Batch   40/48 | Loss: 3.6628 | LR: 2.69e-04 | GradNorm: 1.898
  Batch   44/48 | Loss: 3.6102 | LR: 2.81e-04 | GradNorm: 4.973
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.99%, Val=6.09%, Gap=-0.10%, LR=2.90e-04
  Batch    0/48 | Loss: 3.5470 | LR: 2.90e-04 | GradNorm: 1.702
  Batch    4/48 | Loss: 3.5978 | LR: 2.90e-04 | GradNorm: 3.858
  Batch    8/48 | Loss: 3.5470 | LR: 2.90e-04 | GradNorm: 5.307
  Batch   12/48 | Loss: 3.5313 | LR: 2.90e-04 | GradNorm: 2.836
  Batch   16/48 | Loss: 3.4740 | LR: 2.89e-04 | GradNorm: 1.306
  Batch   20/48 | Loss: 3.4518 | LR: 2.88e-04 | GradNorm: 3.478
  Batch   24/48 | Loss: 3.4082 | LR: 2.87e-04 | GradNorm: 1.721
  Batch   28/48 | Loss: 3.3789 | LR: 2.86e-04 | GradNorm: 6.070
  Batch   32/48 | Loss: 3.3921 | LR: 2.85e-04 | GradNorm: 2.462
  Batch   36/48 | Loss: 3.4667 | LR: 2.84e-04 | GradNorm: 6.908
  Batch   40/48 | Loss: 3.3394 | LR: 2.82e-04 | GradNorm: 2.688
  Batch   44/48 | Loss: 3.3376 | LR: 2.81e-04 | GradNorm: 2.827
Epoch 3/10: Train=12.62%, Val=13.74%, Gap=-1.12%, LR=2.79e-04
  Batch    0/48 | Loss: 3.3126 | LR: 2.79e-04 | GradNorm: 2.946
  Batch    4/48 | Loss: 3.3305 | LR: 2.77e-04 | GradNorm: 4.913
  Batch    8/48 | Loss: 3.2886 | LR: 2.75e-04 | GradNorm: 2.633
  Batch   12/48 | Loss: 3.2418 | LR: 2.73e-04 | GradNorm: 3.231
  Batch   16/48 | Loss: 3.2751 | LR: 2.70e-04 | GradNorm: 5.052
  Batch   20/48 | Loss: 3.2882 | LR: 2.68e-04 | GradNorm: 4.755
  Batch   24/48 | Loss: 3.2865 | LR: 2.65e-04 | GradNorm: 5.168
  Batch   28/48 | Loss: 3.1989 | LR: 2.63e-04 | GradNorm: 2.012
  Batch   32/48 | Loss: 3.2560 | LR: 2.60e-04 | GradNorm: 3.692
  Batch   36/48 | Loss: 3.1818 | LR: 2.57e-04 | GradNorm: 1.247
  Batch   40/48 | Loss: 3.2285 | LR: 2.54e-04 | GradNorm: 3.965
  Batch   44/48 | Loss: 3.2018 | LR: 2.50e-04 | GradNorm: 3.246
Epoch 4/10: Train=17.08%, Val=12.12%, Gap=4.96%, LR=2.48e-04
  Batch    0/48 | Loss: 3.1450 | LR: 2.47e-04 | GradNorm: 2.499
  Batch    4/48 | Loss: 3.1400 | LR: 2.44e-04 | GradNorm: 3.843
  Batch    8/48 | Loss: 3.1422 | LR: 2.40e-04 | GradNorm: 2.975
  Batch   12/48 | Loss: 3.1380 | LR: 2.36e-04 | GradNorm: 3.826
  Batch   16/48 | Loss: 3.2003 | LR: 2.33e-04 | GradNorm: 4.677
  Batch   20/48 | Loss: 3.1414 | LR: 2.29e-04 | GradNorm: 2.885
  Batch   24/48 | Loss: 3.1621 | LR: 2.25e-04 | GradNorm: 2.934
  Batch   28/48 | Loss: 3.0808 | LR: 2.21e-04 | GradNorm: 1.500
  Batch   32/48 | Loss: 3.0707 | LR: 2.17e-04 | GradNorm: 3.244
  Batch   36/48 | Loss: 3.1603 | LR: 2.13e-04 | GradNorm: 6.032
  Batch   40/48 | Loss: 3.1519 | LR: 2.08e-04 | GradNorm: 5.063
  Batch   44/48 | Loss: 3.0642 | LR: 2.04e-04 | GradNorm: 3.378
Epoch 5/10: Train=20.41%, Val=12.80%, Gap=7.61%, LR=2.01e-04
  Batch    0/48 | Loss: 3.0088 | LR: 2.00e-04 | GradNorm: 2.448
  Batch    4/48 | Loss: 2.9813 | LR: 1.95e-04 | GradNorm: 6.004
  Batch    8/48 | Loss: 2.9970 | LR: 1.91e-04 | GradNorm: 4.478
  Batch   12/48 | Loss: 3.0005 | LR: 1.86e-04 | GradNorm: 5.962
  Batch   16/48 | Loss: 2.9810 | LR: 1.82e-04 | GradNorm: 5.926
  Batch   20/48 | Loss: 2.9355 | LR: 1.77e-04 | GradNorm: 2.809
  Batch   24/48 | Loss: 2.9711 | LR: 1.72e-04 | GradNorm: 4.901
  Batch   28/48 | Loss: 2.8871 | LR: 1.68e-04 | GradNorm: 2.373
  Batch   32/48 | Loss: 2.8810 | LR: 1.63e-04 | GradNorm: 1.714
  Batch   36/48 | Loss: 2.9465 | LR: 1.58e-04 | GradNorm: 4.792
  Batch   40/48 | Loss: 2.8967 | LR: 1.54e-04 | GradNorm: 2.185
  Batch   44/48 | Loss: 2.9899 | LR: 1.49e-04 | GradNorm: 7.660
Epoch 6/10: Train=25.79%, Val=13.79%, Gap=12.00%, LR=1.45e-04
  Batch    0/48 | Loss: 2.9046 | LR: 1.44e-04 | GradNorm: 4.626
  Batch    4/48 | Loss: 2.8790 | LR: 1.39e-04 | GradNorm: 4.079
  Batch    8/48 | Loss: 2.8930 | LR: 1.35e-04 | GradNorm: 5.852
  Batch   12/48 | Loss: 2.8111 | LR: 1.30e-04 | GradNorm: 4.608
  Batch   16/48 | Loss: 2.8164 | LR: 1.25e-04 | GradNorm: 2.416
  Batch   20/48 | Loss: 2.8443 | LR: 1.20e-04 | GradNorm: 2.237
  Batch   24/48 | Loss: 2.8755 | LR: 1.16e-04 | GradNorm: 3.969
  Batch   28/48 | Loss: 2.8552 | LR: 1.11e-04 | GradNorm: 2.407
  Batch   32/48 | Loss: 2.8529 | LR: 1.07e-04 | GradNorm: 6.020
  Batch   36/48 | Loss: 2.8584 | LR: 1.02e-04 | GradNorm: 4.849
  Batch   40/48 | Loss: 2.8322 | LR: 9.75e-05 | GradNorm: 2.865
  Batch   44/48 | Loss: 2.8275 | LR: 9.30e-05 | GradNorm: 4.876
Epoch 7/10: Train=29.56%, Val=17.95%, Gap=11.61%, LR=8.97e-05
  Batch    0/48 | Loss: 2.8173 | LR: 8.86e-05 | GradNorm: 4.071
  Batch    4/48 | Loss: 2.7734 | LR: 8.43e-05 | GradNorm: 4.217
  Batch    8/48 | Loss: 2.7693 | LR: 8.00e-05 | GradNorm: 3.669
  Batch   12/48 | Loss: 2.8120 | LR: 7.58e-05 | GradNorm: 4.369
  Batch   16/48 | Loss: 2.8195 | LR: 7.16e-05 | GradNorm: 4.765
  Batch   20/48 | Loss: 2.7254 | LR: 6.76e-05 | GradNorm: 4.133
  Batch   24/48 | Loss: 2.7327 | LR: 6.36e-05 | GradNorm: 3.890
  Batch   28/48 | Loss: 2.7677 | LR: 5.97e-05 | GradNorm: 3.685
  Batch   32/48 | Loss: 2.7592 | LR: 5.59e-05 | GradNorm: 4.521
  Batch   36/48 | Loss: 2.7278 | LR: 5.23e-05 | GradNorm: 3.086
  Batch   40/48 | Loss: 2.6793 | LR: 4.87e-05 | GradNorm: 3.525
  Batch   44/48 | Loss: 2.7291 | LR: 4.52e-05 | GradNorm: 1.991
Epoch 8/10: Train=32.12%, Val=16.68%, Gap=15.44%, LR=4.26e-05
  Batch    0/48 | Loss: 2.6965 | LR: 4.18e-05 | GradNorm: 2.756
  Batch    4/48 | Loss: 2.6877 | LR: 3.85e-05 | GradNorm: 2.635
  Batch    8/48 | Loss: 2.7547 | LR: 3.53e-05 | GradNorm: 3.405
  Batch   12/48 | Loss: 2.6758 | LR: 3.23e-05 | GradNorm: 2.902
  Batch   16/48 | Loss: 2.6296 | LR: 2.94e-05 | GradNorm: 3.527
  Batch   20/48 | Loss: 2.6421 | LR: 2.66e-05 | GradNorm: 3.410
  Batch   24/48 | Loss: 2.6735 | LR: 2.39e-05 | GradNorm: 2.609
  Batch   28/48 | Loss: 2.6935 | LR: 2.14e-05 | GradNorm: 3.179
  Batch   32/48 | Loss: 2.6638 | LR: 1.90e-05 | GradNorm: 3.037
  Batch   36/48 | Loss: 2.6586 | LR: 1.67e-05 | GradNorm: 3.188
  Batch   40/48 | Loss: 2.6492 | LR: 1.45e-05 | GradNorm: 2.755
  Batch   44/48 | Loss: 2.6701 | LR: 1.26e-05 | GradNorm: 2.742
Epoch 9/10: Train=34.71%, Val=18.38%, Gap=16.33%, LR=1.11e-05
  Batch    0/48 | Loss: 2.6552 | LR: 1.07e-05 | GradNorm: 3.154
  Batch    4/48 | Loss: 2.6617 | LR: 8.99e-06 | GradNorm: 2.404
  Batch    8/48 | Loss: 2.6165 | LR: 7.43e-06 | GradNorm: 2.227
  Batch   12/48 | Loss: 2.6472 | LR: 6.01e-06 | GradNorm: 3.570
  Batch   16/48 | Loss: 2.6420 | LR: 4.74e-06 | GradNorm: 2.471
  Batch   20/48 | Loss: 2.6569 | LR: 3.63e-06 | GradNorm: 3.499
  Batch   24/48 | Loss: 2.6562 | LR: 2.66e-06 | GradNorm: 3.373
  Batch   28/48 | Loss: 2.6647 | LR: 1.85e-06 | GradNorm: 1.793
  Batch   32/48 | Loss: 2.6636 | LR: 1.19e-06 | GradNorm: 2.696
  Batch   36/48 | Loss: 2.6378 | LR: 6.87e-07 | GradNorm: 1.484
  Batch   40/48 | Loss: 2.6320 | LR: 3.38e-07 | GradNorm: 2.116
  Batch   44/48 | Loss: 2.6413 | LR: 1.44e-07 | GradNorm: 2.492
Epoch 10/10: Train=35.66%, Val=18.11%, Gap=17.55%, LR=1.00e-07
Best validation accuracy: 18.38%
