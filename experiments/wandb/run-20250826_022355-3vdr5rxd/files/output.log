=== W&B Sweep Run: LR=0.000393 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003927715599204928
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000393
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9528 | LR: 7.98e-06 | GradNorm: 1.714
  Batch    4/48 | Loss: 3.9244 | LR: 2.42e-05 | GradNorm: 1.068
  Batch    8/48 | Loss: 3.9275 | LR: 4.04e-05 | GradNorm: 1.031
  Batch   12/48 | Loss: 3.9215 | LR: 5.66e-05 | GradNorm: 0.766
  Batch   16/48 | Loss: 3.9195 | LR: 7.28e-05 | GradNorm: 0.604
  Batch   20/48 | Loss: 3.9127 | LR: 8.90e-05 | GradNorm: 0.557
  Batch   24/48 | Loss: 3.9137 | LR: 1.05e-04 | GradNorm: 0.615
  Batch   28/48 | Loss: 3.9151 | LR: 1.21e-04 | GradNorm: 0.521
  Batch   32/48 | Loss: 3.9046 | LR: 1.38e-04 | GradNorm: 0.506
  Batch   36/48 | Loss: 3.8985 | LR: 1.54e-04 | GradNorm: 0.490
  Batch   40/48 | Loss: 3.8756 | LR: 1.70e-04 | GradNorm: 0.580
  Batch   44/48 | Loss: 3.8635 | LR: 1.86e-04 | GradNorm: 3.114
Epoch 1/10: Train=2.59%, Val=4.52%, Gap=-1.93%, LR=1.98e-04
  Batch    0/48 | Loss: 3.8133 | LR: 2.02e-04 | GradNorm: 2.538
  Batch    4/48 | Loss: 3.8136 | LR: 2.19e-04 | GradNorm: 3.418
  Batch    8/48 | Loss: 3.8022 | LR: 2.35e-04 | GradNorm: 3.804
  Batch   12/48 | Loss: 3.7440 | LR: 2.51e-04 | GradNorm: 2.221
  Batch   16/48 | Loss: 3.7844 | LR: 2.67e-04 | GradNorm: 3.429
  Batch   20/48 | Loss: 3.7317 | LR: 2.83e-04 | GradNorm: 2.615
  Batch   24/48 | Loss: 3.7137 | LR: 3.00e-04 | GradNorm: 3.950
  Batch   28/48 | Loss: 3.7504 | LR: 3.16e-04 | GradNorm: 5.134
  Batch   32/48 | Loss: 3.7981 | LR: 3.32e-04 | GradNorm: 5.642
  Batch   36/48 | Loss: 3.7234 | LR: 3.48e-04 | GradNorm: 4.230
  Batch   40/48 | Loss: 3.6503 | LR: 3.64e-04 | GradNorm: 4.191
  Batch   44/48 | Loss: 3.5793 | LR: 3.81e-04 | GradNorm: 1.403
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.47%, Val=4.74%, Gap=1.73%, LR=3.93e-04
  Batch    0/48 | Loss: 3.8090 | LR: 3.93e-04 | GradNorm: 8.127
  Batch    4/48 | Loss: 3.6536 | LR: 3.93e-04 | GradNorm: 1.704
  Batch    8/48 | Loss: 3.5341 | LR: 3.92e-04 | GradNorm: 1.962
  Batch   12/48 | Loss: 3.5206 | LR: 3.92e-04 | GradNorm: 3.805
  Batch   16/48 | Loss: 3.6300 | LR: 3.91e-04 | GradNorm: 3.044
  Batch   20/48 | Loss: 3.5754 | LR: 3.90e-04 | GradNorm: 3.095
  Batch   24/48 | Loss: 3.5068 | LR: 3.89e-04 | GradNorm: 1.976
  Batch   28/48 | Loss: 3.4680 | LR: 3.87e-04 | GradNorm: 3.578
  Batch   32/48 | Loss: 3.4287 | LR: 3.86e-04 | GradNorm: 2.014
  Batch   36/48 | Loss: 3.4180 | LR: 3.84e-04 | GradNorm: 2.911
  Batch   40/48 | Loss: 3.3435 | LR: 3.82e-04 | GradNorm: 1.590
  Batch   44/48 | Loss: 3.3693 | LR: 3.80e-04 | GradNorm: 3.612
Epoch 3/10: Train=10.88%, Val=10.03%, Gap=0.85%, LR=3.78e-04
  Batch    0/48 | Loss: 3.3397 | LR: 3.77e-04 | GradNorm: 4.624
  Batch    4/48 | Loss: 3.2958 | LR: 3.75e-04 | GradNorm: 2.759
  Batch    8/48 | Loss: 3.2769 | LR: 3.72e-04 | GradNorm: 2.996
  Batch   12/48 | Loss: 3.2437 | LR: 3.69e-04 | GradNorm: 2.016
  Batch   16/48 | Loss: 3.2228 | LR: 3.66e-04 | GradNorm: 2.367
  Batch   20/48 | Loss: 3.1847 | LR: 3.62e-04 | GradNorm: 1.410
  Batch   24/48 | Loss: 3.2885 | LR: 3.59e-04 | GradNorm: 4.989
  Batch   28/48 | Loss: 3.2740 | LR: 3.55e-04 | GradNorm: 4.286
  Batch   32/48 | Loss: 3.2257 | LR: 3.51e-04 | GradNorm: 2.627
  Batch   36/48 | Loss: 3.1876 | LR: 3.47e-04 | GradNorm: 2.086
  Batch   40/48 | Loss: 3.2785 | LR: 3.43e-04 | GradNorm: 4.876
  Batch   44/48 | Loss: 3.2179 | LR: 3.39e-04 | GradNorm: 3.430
Epoch 4/10: Train=17.01%, Val=12.14%, Gap=4.87%, LR=3.35e-04
  Batch    0/48 | Loss: 3.1535 | LR: 3.34e-04 | GradNorm: 2.727
  Batch    4/48 | Loss: 3.0991 | LR: 3.29e-04 | GradNorm: 2.238
  Batch    8/48 | Loss: 3.1167 | LR: 3.25e-04 | GradNorm: 3.277
  Batch   12/48 | Loss: 3.0554 | LR: 3.20e-04 | GradNorm: 1.295
  Batch   16/48 | Loss: 3.1586 | LR: 3.15e-04 | GradNorm: 3.026
  Batch   20/48 | Loss: 3.0752 | LR: 3.09e-04 | GradNorm: 2.710
  Batch   24/48 | Loss: 3.0989 | LR: 3.04e-04 | GradNorm: 3.658
  Batch   28/48 | Loss: 3.0617 | LR: 2.99e-04 | GradNorm: 3.116
  Batch   32/48 | Loss: 3.0507 | LR: 2.93e-04 | GradNorm: 3.719
  Batch   36/48 | Loss: 3.0809 | LR: 2.88e-04 | GradNorm: 2.523
  Batch   40/48 | Loss: 3.0429 | LR: 2.82e-04 | GradNorm: 2.323
  Batch   44/48 | Loss: 3.0113 | LR: 2.76e-04 | GradNorm: 4.305
Epoch 5/10: Train=22.03%, Val=15.28%, Gap=6.75%, LR=2.72e-04
  Batch    0/48 | Loss: 2.9186 | LR: 2.70e-04 | GradNorm: 1.434
  Batch    4/48 | Loss: 2.9385 | LR: 2.64e-04 | GradNorm: 4.728
  Batch    8/48 | Loss: 3.0914 | LR: 2.58e-04 | GradNorm: 8.877
  Batch   12/48 | Loss: 3.0019 | LR: 2.52e-04 | GradNorm: 5.291
  Batch   16/48 | Loss: 2.8975 | LR: 2.46e-04 | GradNorm: 1.876
  Batch   20/48 | Loss: 2.8910 | LR: 2.39e-04 | GradNorm: 3.192
  Batch   24/48 | Loss: 2.9022 | LR: 2.33e-04 | GradNorm: 4.533
  Batch   28/48 | Loss: 2.8616 | LR: 2.27e-04 | GradNorm: 3.758
  Batch   32/48 | Loss: 2.8289 | LR: 2.20e-04 | GradNorm: 1.636
  Batch   36/48 | Loss: 2.8840 | LR: 2.14e-04 | GradNorm: 2.504
  Batch   40/48 | Loss: 2.8223 | LR: 2.08e-04 | GradNorm: 4.435
  Batch   44/48 | Loss: 2.8906 | LR: 2.01e-04 | GradNorm: 2.884
Epoch 6/10: Train=27.04%, Val=17.02%, Gap=10.02%, LR=1.96e-04
  Batch    0/48 | Loss: 2.8344 | LR: 1.95e-04 | GradNorm: 5.554
  Batch    4/48 | Loss: 2.8085 | LR: 1.88e-04 | GradNorm: 2.786
  Batch    8/48 | Loss: 2.8083 | LR: 1.82e-04 | GradNorm: 4.222
  Batch   12/48 | Loss: 2.7023 | LR: 1.76e-04 | GradNorm: 2.513
  Batch   16/48 | Loss: 2.7441 | LR: 1.69e-04 | GradNorm: 2.759
  Batch   20/48 | Loss: 2.7787 | LR: 1.63e-04 | GradNorm: 4.385
  Batch   24/48 | Loss: 2.7956 | LR: 1.57e-04 | GradNorm: 5.083
  Batch   28/48 | Loss: 2.7776 | LR: 1.50e-04 | GradNorm: 2.739
  Batch   32/48 | Loss: 2.7522 | LR: 1.44e-04 | GradNorm: 2.663
  Batch   36/48 | Loss: 2.7672 | LR: 1.38e-04 | GradNorm: 3.138
  Batch   40/48 | Loss: 2.7500 | LR: 1.32e-04 | GradNorm: 3.542
  Batch   44/48 | Loss: 2.7277 | LR: 1.26e-04 | GradNorm: 3.041
Epoch 7/10: Train=31.72%, Val=21.26%, Gap=10.46%, LR=1.21e-04
  Batch    0/48 | Loss: 2.7433 | LR: 1.20e-04 | GradNorm: 3.972
  Batch    4/48 | Loss: 2.6547 | LR: 1.14e-04 | GradNorm: 3.040
  Batch    8/48 | Loss: 2.6557 | LR: 1.08e-04 | GradNorm: 2.420
  Batch   12/48 | Loss: 2.7173 | LR: 1.02e-04 | GradNorm: 3.421
  Batch   16/48 | Loss: 2.7281 | LR: 9.69e-05 | GradNorm: 3.447
  Batch   20/48 | Loss: 2.6486 | LR: 9.14e-05 | GradNorm: 3.211
  Batch   24/48 | Loss: 2.6363 | LR: 8.60e-05 | GradNorm: 4.310
  Batch   28/48 | Loss: 2.6477 | LR: 8.08e-05 | GradNorm: 3.202
  Batch   32/48 | Loss: 2.6453 | LR: 7.56e-05 | GradNorm: 1.942
  Batch   36/48 | Loss: 2.6357 | LR: 7.06e-05 | GradNorm: 3.243
  Batch   40/48 | Loss: 2.5759 | LR: 6.58e-05 | GradNorm: 2.298
  Batch   44/48 | Loss: 2.6780 | LR: 6.11e-05 | GradNorm: 4.512
Epoch 8/10: Train=35.10%, Val=21.82%, Gap=13.28%, LR=5.76e-05
  Batch    0/48 | Loss: 2.6132 | LR: 5.65e-05 | GradNorm: 4.195
  Batch    4/48 | Loss: 2.5740 | LR: 5.20e-05 | GradNorm: 3.585
  Batch    8/48 | Loss: 2.6603 | LR: 4.78e-05 | GradNorm: 5.335
  Batch   12/48 | Loss: 2.5813 | LR: 4.37e-05 | GradNorm: 4.821
  Batch   16/48 | Loss: 2.5166 | LR: 3.97e-05 | GradNorm: 1.950
  Batch   20/48 | Loss: 2.5581 | LR: 3.59e-05 | GradNorm: 1.983
  Batch   24/48 | Loss: 2.5948 | LR: 3.23e-05 | GradNorm: 1.951
  Batch   28/48 | Loss: 2.5702 | LR: 2.89e-05 | GradNorm: 2.890
  Batch   32/48 | Loss: 2.5635 | LR: 2.56e-05 | GradNorm: 3.182
  Batch   36/48 | Loss: 2.5555 | LR: 2.25e-05 | GradNorm: 3.352
  Batch   40/48 | Loss: 2.5470 | LR: 1.96e-05 | GradNorm: 2.803
  Batch   44/48 | Loss: 2.5718 | LR: 1.69e-05 | GradNorm: 2.325
Epoch 9/10: Train=37.73%, Val=23.98%, Gap=13.75%, LR=1.50e-05
  Batch    0/48 | Loss: 2.5363 | LR: 1.44e-05 | GradNorm: 2.285
  Batch    4/48 | Loss: 2.5452 | LR: 1.21e-05 | GradNorm: 1.671
  Batch    8/48 | Loss: 2.5069 | LR: 1.00e-05 | GradNorm: 3.335
  Batch   12/48 | Loss: 2.5507 | LR: 8.09e-06 | GradNorm: 1.675
  Batch   16/48 | Loss: 2.5280 | LR: 6.38e-06 | GradNorm: 1.654
  Batch   20/48 | Loss: 2.5682 | LR: 4.87e-06 | GradNorm: 2.971
  Batch   24/48 | Loss: 2.5660 | LR: 3.57e-06 | GradNorm: 2.149
  Batch   28/48 | Loss: 2.5767 | LR: 2.47e-06 | GradNorm: 3.111
  Batch   32/48 | Loss: 2.5714 | LR: 1.58e-06 | GradNorm: 2.565
  Batch   36/48 | Loss: 2.5311 | LR: 8.95e-07 | GradNorm: 2.266
  Batch   40/48 | Loss: 2.5134 | LR: 4.22e-07 | GradNorm: 2.627
  Batch   44/48 | Loss: 2.5244 | LR: 1.59e-07 | GradNorm: 2.167
Epoch 10/10: Train=38.92%, Val=23.03%, Gap=15.89%, LR=1.00e-07
Best validation accuracy: 23.98%
