=== W&B Sweep Run: LR=0.000862 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.000861545742489255
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000862
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9551 | LR: 1.75e-05 | GradNorm: 1.530
  Batch    4/48 | Loss: 3.9187 | LR: 5.30e-05 | GradNorm: 0.831
  Batch    8/48 | Loss: 3.9257 | LR: 8.86e-05 | GradNorm: 0.757
  Batch   12/48 | Loss: 3.9136 | LR: 1.24e-04 | GradNorm: 0.553
  Batch   16/48 | Loss: 3.9166 | LR: 1.60e-04 | GradNorm: 0.526
  Batch   20/48 | Loss: 3.9129 | LR: 1.95e-04 | GradNorm: 0.575
  Batch   24/48 | Loss: 3.9021 | LR: 2.31e-04 | GradNorm: 0.583
  Batch   28/48 | Loss: 3.8681 | LR: 2.66e-04 | GradNorm: 0.612
  Batch   32/48 | Loss: 3.8184 | LR: 3.02e-04 | GradNorm: 1.024
  Batch   36/48 | Loss: 3.8053 | LR: 3.37e-04 | GradNorm: 3.927
  Batch   40/48 | Loss: 3.8123 | LR: 3.73e-04 | GradNorm: 4.478
  Batch   44/48 | Loss: 3.7621 | LR: 4.08e-04 | GradNorm: 1.943
Epoch 1/10: Train=3.17%, Val=4.90%, Gap=-1.73%, LR=4.35e-04
  Batch    0/48 | Loss: 3.7458 | LR: 4.44e-04 | GradNorm: 0.757
  Batch    4/48 | Loss: 3.8366 | LR: 4.80e-04 | GradNorm: 2.977
  Batch    8/48 | Loss: 3.7116 | LR: 5.15e-04 | GradNorm: 1.140
  Batch   12/48 | Loss: 3.8516 | LR: 5.51e-04 | GradNorm: 3.835
  Batch   16/48 | Loss: 3.8026 | LR: 5.86e-04 | GradNorm: 2.256
  Batch   20/48 | Loss: 3.7269 | LR: 6.22e-04 | GradNorm: 0.804
  Batch   24/48 | Loss: 3.6588 | LR: 6.57e-04 | GradNorm: 3.872
  Batch   28/48 | Loss: 3.6592 | LR: 6.93e-04 | GradNorm: 1.719
  Batch   32/48 | Loss: 3.7453 | LR: 7.28e-04 | GradNorm: 7.447
  Batch   36/48 | Loss: 3.8640 | LR: 7.64e-04 | GradNorm: 3.811
  Batch   40/48 | Loss: 3.6819 | LR: 7.99e-04 | GradNorm: 1.404
  Batch   44/48 | Loss: 3.8528 | LR: 8.35e-04 | GradNorm: 15.722
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.21%, Val=6.62%, Gap=-0.41%, LR=8.62e-04
  Batch    0/48 | Loss: 3.5590 | LR: 8.62e-04 | GradNorm: 0.940
  Batch    4/48 | Loss: 3.5929 | LR: 8.61e-04 | GradNorm: 0.839
  Batch    8/48 | Loss: 3.5945 | LR: 8.60e-04 | GradNorm: 2.407
  Batch   12/48 | Loss: 4.0389 | LR: 8.59e-04 | GradNorm: 30.231
  Batch   16/48 | Loss: 3.6512 | LR: 8.57e-04 | GradNorm: 0.778
  Batch   20/48 | Loss: 3.5623 | LR: 8.55e-04 | GradNorm: 1.216
  Batch   24/48 | Loss: 3.5555 | LR: 8.53e-04 | GradNorm: 0.900
  Batch   28/48 | Loss: 3.6393 | LR: 8.49e-04 | GradNorm: 2.506
  Batch   32/48 | Loss: 3.5467 | LR: 8.46e-04 | GradNorm: 0.756
  Batch   36/48 | Loss: 3.5746 | LR: 8.42e-04 | GradNorm: 1.165
  Batch   40/48 | Loss: 3.5734 | LR: 8.38e-04 | GradNorm: 1.438
  Batch   44/48 | Loss: 3.5077 | LR: 8.33e-04 | GradNorm: 0.752
Epoch 3/10: Train=8.09%, Val=6.30%, Gap=1.79%, LR=8.29e-04
  Batch    0/48 | Loss: 3.5213 | LR: 8.27e-04 | GradNorm: 1.819
  Batch    4/48 | Loss: 3.5695 | LR: 8.22e-04 | GradNorm: 1.780
  Batch    8/48 | Loss: 3.7067 | LR: 8.16e-04 | GradNorm: 6.381
  Batch   12/48 | Loss: 3.4833 | LR: 8.09e-04 | GradNorm: 1.057
  Batch   16/48 | Loss: 3.4381 | LR: 8.02e-04 | GradNorm: 0.736
  Batch   20/48 | Loss: 3.4617 | LR: 7.95e-04 | GradNorm: 1.225
  Batch   24/48 | Loss: 3.4976 | LR: 7.87e-04 | GradNorm: 2.285
  Batch   28/48 | Loss: 3.4134 | LR: 7.79e-04 | GradNorm: 1.123
  Batch   32/48 | Loss: 3.4008 | LR: 7.70e-04 | GradNorm: 0.613
  Batch   36/48 | Loss: 3.3815 | LR: 7.62e-04 | GradNorm: 0.569
  Batch   40/48 | Loss: 3.3603 | LR: 7.52e-04 | GradNorm: 1.370
  Batch   44/48 | Loss: 3.4094 | LR: 7.43e-04 | GradNorm: 2.528
Epoch 4/10: Train=11.09%, Val=5.73%, Gap=5.36%, LR=7.35e-04
  Batch    0/48 | Loss: 3.4749 | LR: 7.33e-04 | GradNorm: 3.462
  Batch    4/48 | Loss: 3.3685 | LR: 7.23e-04 | GradNorm: 1.337
  Batch    8/48 | Loss: 3.4253 | LR: 7.12e-04 | GradNorm: 1.312
  Batch   12/48 | Loss: 3.3381 | LR: 7.01e-04 | GradNorm: 0.986
  Batch   16/48 | Loss: 3.3272 | LR: 6.90e-04 | GradNorm: 1.107
  Batch   20/48 | Loss: 3.2776 | LR: 6.79e-04 | GradNorm: 2.033
  Batch   24/48 | Loss: 3.2648 | LR: 6.67e-04 | GradNorm: 2.272
  Batch   28/48 | Loss: 3.2100 | LR: 6.55e-04 | GradNorm: 1.185
  Batch   32/48 | Loss: 3.2706 | LR: 6.43e-04 | GradNorm: 3.440
  Batch   36/48 | Loss: 3.2411 | LR: 6.31e-04 | GradNorm: 1.956
  Batch   40/48 | Loss: 3.2334 | LR: 6.18e-04 | GradNorm: 2.011
  Batch   44/48 | Loss: 3.1885 | LR: 6.05e-04 | GradNorm: 2.033
Epoch 5/10: Train=15.99%, Val=9.18%, Gap=6.81%, LR=5.96e-04
  Batch    0/48 | Loss: 3.1536 | LR: 5.92e-04 | GradNorm: 2.047
  Batch    4/48 | Loss: 3.1035 | LR: 5.79e-04 | GradNorm: 3.104
  Batch    8/48 | Loss: 3.1000 | LR: 5.66e-04 | GradNorm: 1.585
  Batch   12/48 | Loss: 3.1041 | LR: 5.52e-04 | GradNorm: 2.244
  Batch   16/48 | Loss: 3.0801 | LR: 5.39e-04 | GradNorm: 2.136
  Batch   20/48 | Loss: 3.1199 | LR: 5.25e-04 | GradNorm: 3.167
  Batch   24/48 | Loss: 3.0659 | LR: 5.11e-04 | GradNorm: 1.094
  Batch   28/48 | Loss: 3.0889 | LR: 4.98e-04 | GradNorm: 3.135
  Batch   32/48 | Loss: 3.0977 | LR: 4.84e-04 | GradNorm: 3.004
  Batch   36/48 | Loss: 3.1326 | LR: 4.70e-04 | GradNorm: 3.217
  Batch   40/48 | Loss: 3.0368 | LR: 4.55e-04 | GradNorm: 1.237
  Batch   44/48 | Loss: 3.1101 | LR: 4.41e-04 | GradNorm: 1.604
Epoch 6/10: Train=20.95%, Val=11.41%, Gap=9.54%, LR=4.31e-04
  Batch    0/48 | Loss: 3.0288 | LR: 4.27e-04 | GradNorm: 1.104
  Batch    4/48 | Loss: 3.0449 | LR: 4.13e-04 | GradNorm: 3.567
  Batch    8/48 | Loss: 3.0101 | LR: 3.99e-04 | GradNorm: 1.927
  Batch   12/48 | Loss: 3.0014 | LR: 3.85e-04 | GradNorm: 4.475
  Batch   16/48 | Loss: 2.9645 | LR: 3.71e-04 | GradNorm: 1.674
  Batch   20/48 | Loss: 3.0662 | LR: 3.57e-04 | GradNorm: 3.993
  Batch   24/48 | Loss: 3.0053 | LR: 3.43e-04 | GradNorm: 1.283
  Batch   28/48 | Loss: 3.0205 | LR: 3.30e-04 | GradNorm: 2.329
  Batch   32/48 | Loss: 3.0274 | LR: 3.16e-04 | GradNorm: 1.919
  Batch   36/48 | Loss: 3.0274 | LR: 3.02e-04 | GradNorm: 2.327
  Batch   40/48 | Loss: 3.0034 | LR: 2.89e-04 | GradNorm: 1.604
  Batch   44/48 | Loss: 2.9459 | LR: 2.76e-04 | GradNorm: 1.381
Epoch 7/10: Train=23.91%, Val=15.26%, Gap=8.65%, LR=2.66e-04
  Batch    0/48 | Loss: 3.0096 | LR: 2.63e-04 | GradNorm: 4.298
  Batch    4/48 | Loss: 2.8946 | LR: 2.50e-04 | GradNorm: 2.270
  Batch    8/48 | Loss: 2.8963 | LR: 2.37e-04 | GradNorm: 1.724
  Batch   12/48 | Loss: 2.9658 | LR: 2.25e-04 | GradNorm: 4.002
  Batch   16/48 | Loss: 2.9327 | LR: 2.12e-04 | GradNorm: 1.818
  Batch   20/48 | Loss: 2.8423 | LR: 2.00e-04 | GradNorm: 1.609
  Batch   24/48 | Loss: 2.8278 | LR: 1.89e-04 | GradNorm: 2.392
  Batch   28/48 | Loss: 2.8677 | LR: 1.77e-04 | GradNorm: 1.290
  Batch   32/48 | Loss: 2.8556 | LR: 1.66e-04 | GradNorm: 1.957
  Batch   36/48 | Loss: 2.8574 | LR: 1.55e-04 | GradNorm: 2.339
  Batch   40/48 | Loss: 2.7545 | LR: 1.44e-04 | GradNorm: 1.433
  Batch   44/48 | Loss: 2.8491 | LR: 1.34e-04 | GradNorm: 1.394
Epoch 8/10: Train=28.39%, Val=14.79%, Gap=13.60%, LR=1.26e-04
  Batch    0/48 | Loss: 2.7798 | LR: 1.24e-04 | GradNorm: 2.497
  Batch    4/48 | Loss: 2.7680 | LR: 1.14e-04 | GradNorm: 1.775
  Batch    8/48 | Loss: 2.8401 | LR: 1.05e-04 | GradNorm: 1.660
  Batch   12/48 | Loss: 2.7572 | LR: 9.56e-05 | GradNorm: 0.918
  Batch   16/48 | Loss: 2.7275 | LR: 8.70e-05 | GradNorm: 1.630
  Batch   20/48 | Loss: 2.7117 | LR: 7.87e-05 | GradNorm: 1.194
  Batch   24/48 | Loss: 2.7482 | LR: 7.07e-05 | GradNorm: 0.848
  Batch   28/48 | Loss: 2.7644 | LR: 6.32e-05 | GradNorm: 1.091
  Batch   32/48 | Loss: 2.7341 | LR: 5.61e-05 | GradNorm: 2.414
  Batch   36/48 | Loss: 2.7549 | LR: 4.93e-05 | GradNorm: 2.785
  Batch   40/48 | Loss: 2.6959 | LR: 4.30e-05 | GradNorm: 1.150
  Batch   44/48 | Loss: 2.7473 | LR: 3.71e-05 | GradNorm: 2.969
Epoch 9/10: Train=31.89%, Val=16.18%, Gap=15.71%, LR=3.29e-05
  Batch    0/48 | Loss: 2.7240 | LR: 3.16e-05 | GradNorm: 1.107
  Batch    4/48 | Loss: 2.7025 | LR: 2.65e-05 | GradNorm: 1.065
  Batch    8/48 | Loss: 2.6887 | LR: 2.18e-05 | GradNorm: 0.942
  Batch   12/48 | Loss: 2.7066 | LR: 1.76e-05 | GradNorm: 0.964
  Batch   16/48 | Loss: 2.7149 | LR: 1.39e-05 | GradNorm: 0.874
  Batch   20/48 | Loss: 2.7059 | LR: 1.06e-05 | GradNorm: 1.874
  Batch   24/48 | Loss: 2.7041 | LR: 7.70e-06 | GradNorm: 0.821
  Batch   28/48 | Loss: 2.7287 | LR: 5.29e-06 | GradNorm: 1.000
  Batch   32/48 | Loss: 2.7286 | LR: 3.34e-06 | GradNorm: 1.317
  Batch   36/48 | Loss: 2.6966 | LR: 1.84e-06 | GradNorm: 1.068
  Batch   40/48 | Loss: 2.6878 | LR: 8.06e-07 | GradNorm: 1.059
  Batch   44/48 | Loss: 2.6837 | LR: 2.30e-07 | GradNorm: 1.793
Epoch 10/10: Train=33.30%, Val=15.83%, Gap=17.47%, LR=1.00e-07
Best validation accuracy: 16.18%
