=== W&B Sweep Run: LR=0.000393 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0003927428869244659
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000393
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9631 | LR: 7.98e-06 | GradNorm: 1.749
  Batch    4/48 | Loss: 3.9187 | LR: 2.42e-05 | GradNorm: 0.869
  Batch    8/48 | Loss: 3.9272 | LR: 4.04e-05 | GradNorm: 0.919
  Batch   12/48 | Loss: 3.9120 | LR: 5.66e-05 | GradNorm: 0.666
  Batch   16/48 | Loss: 3.9214 | LR: 7.28e-05 | GradNorm: 0.664
  Batch   20/48 | Loss: 3.9181 | LR: 8.90e-05 | GradNorm: 0.658
  Batch   24/48 | Loss: 3.9135 | LR: 1.05e-04 | GradNorm: 0.639
  Batch   28/48 | Loss: 3.9154 | LR: 1.21e-04 | GradNorm: 0.598
  Batch   32/48 | Loss: 3.9024 | LR: 1.38e-04 | GradNorm: 0.513
  Batch   36/48 | Loss: 3.8967 | LR: 1.54e-04 | GradNorm: 0.569
  Batch   40/48 | Loss: 3.8681 | LR: 1.70e-04 | GradNorm: 0.669
  Batch   44/48 | Loss: 3.8640 | LR: 1.86e-04 | GradNorm: 3.563
Epoch 1/10: Train=2.59%, Val=4.87%, Gap=-2.28%, LR=1.98e-04
  Batch    0/48 | Loss: 3.8142 | LR: 2.02e-04 | GradNorm: 4.202
  Batch    4/48 | Loss: 3.7760 | LR: 2.19e-04 | GradNorm: 2.287
  Batch    8/48 | Loss: 3.7796 | LR: 2.35e-04 | GradNorm: 3.643
  Batch   12/48 | Loss: 3.6994 | LR: 2.51e-04 | GradNorm: 2.160
  Batch   16/48 | Loss: 3.7216 | LR: 2.67e-04 | GradNorm: 2.507
  Batch   20/48 | Loss: 3.7222 | LR: 2.83e-04 | GradNorm: 3.392
  Batch   24/48 | Loss: 3.6888 | LR: 3.00e-04 | GradNorm: 3.854
  Batch   28/48 | Loss: 3.6634 | LR: 3.16e-04 | GradNorm: 3.231
  Batch   32/48 | Loss: 3.6292 | LR: 3.32e-04 | GradNorm: 3.203
  Batch   36/48 | Loss: 3.5765 | LR: 3.48e-04 | GradNorm: 1.039
  Batch   40/48 | Loss: 3.5833 | LR: 3.64e-04 | GradNorm: 0.851
  Batch   44/48 | Loss: 3.5581 | LR: 3.81e-04 | GradNorm: 3.586
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=7.21%, Val=5.17%, Gap=2.04%, LR=3.93e-04
  Batch    0/48 | Loss: 3.6066 | LR: 3.93e-04 | GradNorm: 4.774
  Batch    4/48 | Loss: 3.7557 | LR: 3.93e-04 | GradNorm: 6.892
  Batch    8/48 | Loss: 3.6120 | LR: 3.92e-04 | GradNorm: 2.397
  Batch   12/48 | Loss: 3.5377 | LR: 3.92e-04 | GradNorm: 1.261
  Batch   16/48 | Loss: 3.4784 | LR: 3.91e-04 | GradNorm: 1.617
  Batch   20/48 | Loss: 3.4872 | LR: 3.90e-04 | GradNorm: 2.760
  Batch   24/48 | Loss: 3.4562 | LR: 3.89e-04 | GradNorm: 3.874
  Batch   28/48 | Loss: 3.3813 | LR: 3.87e-04 | GradNorm: 2.452
  Batch   32/48 | Loss: 3.3807 | LR: 3.86e-04 | GradNorm: 3.733
  Batch   36/48 | Loss: 3.4066 | LR: 3.84e-04 | GradNorm: 4.827
  Batch   40/48 | Loss: 3.3212 | LR: 3.82e-04 | GradNorm: 2.573
  Batch   44/48 | Loss: 3.2879 | LR: 3.80e-04 | GradNorm: 2.574
Epoch 3/10: Train=12.23%, Val=9.37%, Gap=2.86%, LR=3.78e-04
  Batch    0/48 | Loss: 3.2559 | LR: 3.77e-04 | GradNorm: 2.586
  Batch    4/48 | Loss: 3.2632 | LR: 3.75e-04 | GradNorm: 2.358
  Batch    8/48 | Loss: 3.2315 | LR: 3.72e-04 | GradNorm: 2.123
  Batch   12/48 | Loss: 3.1780 | LR: 3.69e-04 | GradNorm: 2.141
  Batch   16/48 | Loss: 3.1566 | LR: 3.66e-04 | GradNorm: 1.307
  Batch   20/48 | Loss: 3.1465 | LR: 3.62e-04 | GradNorm: 2.613
  Batch   24/48 | Loss: 3.1563 | LR: 3.59e-04 | GradNorm: 3.106
  Batch   28/48 | Loss: 3.1631 | LR: 3.55e-04 | GradNorm: 3.265
  Batch   32/48 | Loss: 3.2225 | LR: 3.51e-04 | GradNorm: 15.449
  Batch   36/48 | Loss: 3.1277 | LR: 3.47e-04 | GradNorm: 2.625
  Batch   40/48 | Loss: 3.1394 | LR: 3.43e-04 | GradNorm: 2.341
  Batch   44/48 | Loss: 3.1266 | LR: 3.39e-04 | GradNorm: 4.521
Epoch 4/10: Train=19.12%, Val=11.14%, Gap=7.98%, LR=3.35e-04
  Batch    0/48 | Loss: 3.0928 | LR: 3.34e-04 | GradNorm: 3.068
  Batch    4/48 | Loss: 3.0405 | LR: 3.29e-04 | GradNorm: 4.543
  Batch    8/48 | Loss: 3.0748 | LR: 3.25e-04 | GradNorm: 4.152
  Batch   12/48 | Loss: 3.0185 | LR: 3.20e-04 | GradNorm: 3.132
  Batch   16/48 | Loss: 3.0890 | LR: 3.15e-04 | GradNorm: 4.033
  Batch   20/48 | Loss: 2.9893 | LR: 3.09e-04 | GradNorm: 2.037
  Batch   24/48 | Loss: 3.0045 | LR: 3.04e-04 | GradNorm: 1.291
  Batch   28/48 | Loss: 2.9643 | LR: 2.99e-04 | GradNorm: 5.741
  Batch   32/48 | Loss: 2.9200 | LR: 2.93e-04 | GradNorm: 2.826
  Batch   36/48 | Loss: 2.9940 | LR: 2.88e-04 | GradNorm: 5.068
  Batch   40/48 | Loss: 3.0191 | LR: 2.82e-04 | GradNorm: 6.896
  Batch   44/48 | Loss: 3.0131 | LR: 2.76e-04 | GradNorm: 5.858
Epoch 5/10: Train=24.93%, Val=18.09%, Gap=6.84%, LR=2.72e-04
  Batch    0/48 | Loss: 2.9138 | LR: 2.70e-04 | GradNorm: 5.625
  Batch    4/48 | Loss: 2.8597 | LR: 2.64e-04 | GradNorm: 5.917
  Batch    8/48 | Loss: 2.8227 | LR: 2.58e-04 | GradNorm: 2.358
  Batch   12/48 | Loss: 2.8306 | LR: 2.52e-04 | GradNorm: 4.126
  Batch   16/48 | Loss: 2.7965 | LR: 2.46e-04 | GradNorm: 4.936
  Batch   20/48 | Loss: 2.8286 | LR: 2.39e-04 | GradNorm: 8.597
  Batch   24/48 | Loss: 2.7860 | LR: 2.33e-04 | GradNorm: 4.383
  Batch   28/48 | Loss: 2.7691 | LR: 2.27e-04 | GradNorm: 6.606
  Batch   32/48 | Loss: 2.7491 | LR: 2.20e-04 | GradNorm: 5.939
  Batch   36/48 | Loss: 2.7875 | LR: 2.14e-04 | GradNorm: 4.155
  Batch   40/48 | Loss: 2.7444 | LR: 2.08e-04 | GradNorm: 3.257
  Batch   44/48 | Loss: 2.8057 | LR: 2.01e-04 | GradNorm: 5.626
Epoch 6/10: Train=31.07%, Val=18.46%, Gap=12.61%, LR=1.96e-04
  Batch    0/48 | Loss: 2.7247 | LR: 1.95e-04 | GradNorm: 5.295
  Batch    4/48 | Loss: 2.6994 | LR: 1.88e-04 | GradNorm: 5.434
  Batch    8/48 | Loss: 2.7035 | LR: 1.82e-04 | GradNorm: 5.717
  Batch   12/48 | Loss: 2.6397 | LR: 1.76e-04 | GradNorm: 6.318
  Batch   16/48 | Loss: 2.6404 | LR: 1.69e-04 | GradNorm: 6.132
  Batch   20/48 | Loss: 2.6690 | LR: 1.63e-04 | GradNorm: 5.510
  Batch   24/48 | Loss: 2.7135 | LR: 1.57e-04 | GradNorm: 6.973
  Batch   28/48 | Loss: 2.6876 | LR: 1.50e-04 | GradNorm: 4.050
  Batch   32/48 | Loss: 2.7537 | LR: 1.44e-04 | GradNorm: 13.902
  Batch   36/48 | Loss: 2.7276 | LR: 1.38e-04 | GradNorm: 5.833
  Batch   40/48 | Loss: 2.6813 | LR: 1.32e-04 | GradNorm: 5.896
  Batch   44/48 | Loss: 2.6645 | LR: 1.26e-04 | GradNorm: 6.051
Epoch 7/10: Train=34.81%, Val=22.57%, Gap=12.24%, LR=1.21e-04
  Batch    0/48 | Loss: 2.6605 | LR: 1.20e-04 | GradNorm: 3.950
  Batch    4/48 | Loss: 2.5492 | LR: 1.14e-04 | GradNorm: 2.024
  Batch    8/48 | Loss: 2.5892 | LR: 1.08e-04 | GradNorm: 5.582
  Batch   12/48 | Loss: 2.6314 | LR: 1.02e-04 | GradNorm: 8.812
  Batch   16/48 | Loss: 2.6533 | LR: 9.69e-05 | GradNorm: 2.604
  Batch   20/48 | Loss: 2.5802 | LR: 9.14e-05 | GradNorm: 6.652
  Batch   24/48 | Loss: 2.5709 | LR: 8.60e-05 | GradNorm: 4.165
  Batch   28/48 | Loss: 2.6091 | LR: 8.08e-05 | GradNorm: 7.140
  Batch   32/48 | Loss: 2.5993 | LR: 7.56e-05 | GradNorm: 5.600
  Batch   36/48 | Loss: 2.5723 | LR: 7.06e-05 | GradNorm: 9.600
  Batch   40/48 | Loss: 2.5074 | LR: 6.58e-05 | GradNorm: 2.629
  Batch   44/48 | Loss: 2.5619 | LR: 6.10e-05 | GradNorm: 3.309
Epoch 8/10: Train=37.75%, Val=23.96%, Gap=13.79%, LR=5.76e-05
  Batch    0/48 | Loss: 2.5457 | LR: 5.65e-05 | GradNorm: 6.068
  Batch    4/48 | Loss: 2.5419 | LR: 5.20e-05 | GradNorm: 6.138
  Batch    8/48 | Loss: 2.5870 | LR: 4.78e-05 | GradNorm: 8.147
  Batch   12/48 | Loss: 2.5079 | LR: 4.36e-05 | GradNorm: 2.872
  Batch   16/48 | Loss: 2.4545 | LR: 3.97e-05 | GradNorm: 4.410
  Batch   20/48 | Loss: 2.4770 | LR: 3.59e-05 | GradNorm: 2.423
  Batch   24/48 | Loss: 2.5192 | LR: 3.23e-05 | GradNorm: 5.671
  Batch   28/48 | Loss: 2.5311 | LR: 2.89e-05 | GradNorm: 8.370
  Batch   32/48 | Loss: 2.4919 | LR: 2.56e-05 | GradNorm: 7.136
  Batch   36/48 | Loss: 2.4912 | LR: 2.25e-05 | GradNorm: 2.832
  Batch   40/48 | Loss: 2.5003 | LR: 1.96e-05 | GradNorm: 5.286
  Batch   44/48 | Loss: 2.5093 | LR: 1.69e-05 | GradNorm: 2.655
Epoch 9/10: Train=40.26%, Val=24.10%, Gap=16.16%, LR=1.50e-05
  Batch    0/48 | Loss: 2.4800 | LR: 1.44e-05 | GradNorm: 2.775
  Batch    4/48 | Loss: 2.5027 | LR: 1.21e-05 | GradNorm: 3.865
  Batch    8/48 | Loss: 2.4618 | LR: 1.00e-05 | GradNorm: 3.054
  Batch   12/48 | Loss: 2.4607 | LR: 8.09e-06 | GradNorm: 4.112
  Batch   16/48 | Loss: 2.4731 | LR: 6.38e-06 | GradNorm: 3.884
  Batch   20/48 | Loss: 2.4768 | LR: 4.87e-06 | GradNorm: 3.615
  Batch   24/48 | Loss: 2.5097 | LR: 3.57e-06 | GradNorm: 3.862
  Batch   28/48 | Loss: 2.5147 | LR: 2.47e-06 | GradNorm: 3.786
  Batch   32/48 | Loss: 2.5153 | LR: 1.58e-06 | GradNorm: 3.182
  Batch   36/48 | Loss: 2.4620 | LR: 8.94e-07 | GradNorm: 3.902
  Batch   40/48 | Loss: 2.4544 | LR: 4.22e-07 | GradNorm: 3.021
  Batch   44/48 | Loss: 2.4679 | LR: 1.59e-07 | GradNorm: 2.568
Epoch 10/10: Train=41.38%, Val=24.52%, Gap=16.86%, LR=1.00e-07
Best validation accuracy: 24.52%
