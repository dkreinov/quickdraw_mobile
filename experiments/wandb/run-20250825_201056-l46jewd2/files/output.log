=== W&B Sweep Run: LR=0.000269 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.0002687386450287119
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000269
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9624 | LR: 5.46e-06 | GradNorm: 1.487
  Batch    4/48 | Loss: 3.9356 | LR: 1.65e-05 | GradNorm: 1.176
  Batch    8/48 | Loss: 3.9276 | LR: 2.76e-05 | GradNorm: 0.926
  Batch   12/48 | Loss: 3.9165 | LR: 3.87e-05 | GradNorm: 0.729
  Batch   16/48 | Loss: 3.9239 | LR: 4.98e-05 | GradNorm: 0.653
  Batch   20/48 | Loss: 3.9157 | LR: 6.09e-05 | GradNorm: 0.622
  Batch   24/48 | Loss: 3.9164 | LR: 7.20e-05 | GradNorm: 0.653
  Batch   28/48 | Loss: 3.9138 | LR: 8.31e-05 | GradNorm: 0.517
  Batch   32/48 | Loss: 3.9103 | LR: 9.41e-05 | GradNorm: 0.510
  Batch   36/48 | Loss: 3.9087 | LR: 1.05e-04 | GradNorm: 0.475
  Batch   40/48 | Loss: 3.9069 | LR: 1.16e-04 | GradNorm: 0.546
  Batch   44/48 | Loss: 3.8973 | LR: 1.27e-04 | GradNorm: 0.588
Epoch 1/10: Train=2.28%, Val=4.95%, Gap=-2.67%, LR=1.36e-04
  Batch    0/48 | Loss: 3.8703 | LR: 1.38e-04 | GradNorm: 0.663
  Batch    4/48 | Loss: 3.8253 | LR: 1.50e-04 | GradNorm: 1.141
  Batch    8/48 | Loss: 3.7650 | LR: 1.61e-04 | GradNorm: 2.813
  Batch   12/48 | Loss: 3.9212 | LR: 1.72e-04 | GradNorm: 6.471
  Batch   16/48 | Loss: 3.8965 | LR: 1.83e-04 | GradNorm: 6.316
  Batch   20/48 | Loss: 3.7705 | LR: 1.94e-04 | GradNorm: 3.366
  Batch   24/48 | Loss: 3.7134 | LR: 2.05e-04 | GradNorm: 1.441
  Batch   28/48 | Loss: 3.7521 | LR: 2.16e-04 | GradNorm: 3.892
  Batch   32/48 | Loss: 3.7359 | LR: 2.27e-04 | GradNorm: 3.772
  Batch   36/48 | Loss: 3.7118 | LR: 2.38e-04 | GradNorm: 4.008
  Batch   40/48 | Loss: 3.7586 | LR: 2.49e-04 | GradNorm: 4.331
  Batch   44/48 | Loss: 3.6487 | LR: 2.60e-04 | GradNorm: 1.685
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=5.82%, Val=5.01%, Gap=0.81%, LR=2.69e-04
  Batch    0/48 | Loss: 3.6055 | LR: 2.69e-04 | GradNorm: 2.073
  Batch    4/48 | Loss: 3.7980 | LR: 2.69e-04 | GradNorm: 5.350
  Batch    8/48 | Loss: 3.6572 | LR: 2.68e-04 | GradNorm: 3.497
  Batch   12/48 | Loss: 3.6068 | LR: 2.68e-04 | GradNorm: 1.363
  Batch   16/48 | Loss: 3.6234 | LR: 2.67e-04 | GradNorm: 5.159
  Batch   20/48 | Loss: 3.5488 | LR: 2.67e-04 | GradNorm: 2.291
  Batch   24/48 | Loss: 3.5392 | LR: 2.66e-04 | GradNorm: 2.189
  Batch   28/48 | Loss: 3.5503 | LR: 2.65e-04 | GradNorm: 5.039
  Batch   32/48 | Loss: 3.5438 | LR: 2.64e-04 | GradNorm: 4.056
  Batch   36/48 | Loss: 3.5204 | LR: 2.63e-04 | GradNorm: 2.796
  Batch   40/48 | Loss: 3.4445 | LR: 2.61e-04 | GradNorm: 1.520
  Batch   44/48 | Loss: 3.4146 | LR: 2.60e-04 | GradNorm: 1.077
Epoch 3/10: Train=10.07%, Val=6.44%, Gap=3.63%, LR=2.59e-04
  Batch    0/48 | Loss: 3.4223 | LR: 2.58e-04 | GradNorm: 3.133
  Batch    4/48 | Loss: 3.3886 | LR: 2.56e-04 | GradNorm: 3.378
  Batch    8/48 | Loss: 3.4209 | LR: 2.54e-04 | GradNorm: 5.822
  Batch   12/48 | Loss: 3.3505 | LR: 2.52e-04 | GradNorm: 3.877
  Batch   16/48 | Loss: 3.3238 | LR: 2.50e-04 | GradNorm: 1.978
  Batch   20/48 | Loss: 3.2943 | LR: 2.48e-04 | GradNorm: 2.106
  Batch   24/48 | Loss: 3.2654 | LR: 2.45e-04 | GradNorm: 1.689
  Batch   28/48 | Loss: 3.2399 | LR: 2.43e-04 | GradNorm: 3.037
  Batch   32/48 | Loss: 3.2668 | LR: 2.40e-04 | GradNorm: 4.121
  Batch   36/48 | Loss: 3.2443 | LR: 2.38e-04 | GradNorm: 3.988
  Batch   40/48 | Loss: 3.2315 | LR: 2.35e-04 | GradNorm: 3.032
  Batch   44/48 | Loss: 3.1823 | LR: 2.32e-04 | GradNorm: 3.509
Epoch 4/10: Train=16.41%, Val=10.39%, Gap=6.02%, LR=2.29e-04
  Batch    0/48 | Loss: 3.1859 | LR: 2.29e-04 | GradNorm: 3.322
  Batch    4/48 | Loss: 3.1428 | LR: 2.25e-04 | GradNorm: 2.119
  Batch    8/48 | Loss: 3.1997 | LR: 2.22e-04 | GradNorm: 4.841
  Batch   12/48 | Loss: 3.2048 | LR: 2.19e-04 | GradNorm: 7.478
  Batch   16/48 | Loss: 3.1873 | LR: 2.15e-04 | GradNorm: 3.425
  Batch   20/48 | Loss: 3.1771 | LR: 2.12e-04 | GradNorm: 3.163
  Batch   24/48 | Loss: 3.2771 | LR: 2.08e-04 | GradNorm: 9.611
  Batch   28/48 | Loss: 3.1536 | LR: 2.04e-04 | GradNorm: 2.872
  Batch   32/48 | Loss: 3.1212 | LR: 2.01e-04 | GradNorm: 4.298
  Batch   36/48 | Loss: 3.1667 | LR: 1.97e-04 | GradNorm: 1.831
  Batch   40/48 | Loss: 3.1502 | LR: 1.93e-04 | GradNorm: 1.833
  Batch   44/48 | Loss: 3.1260 | LR: 1.89e-04 | GradNorm: 2.000
Epoch 5/10: Train=19.70%, Val=12.22%, Gap=7.48%, LR=1.86e-04
  Batch    0/48 | Loss: 3.0843 | LR: 1.85e-04 | GradNorm: 4.095
  Batch    4/48 | Loss: 3.0335 | LR: 1.81e-04 | GradNorm: 2.881
  Batch    8/48 | Loss: 3.0457 | LR: 1.77e-04 | GradNorm: 2.510
  Batch   12/48 | Loss: 3.0801 | LR: 1.72e-04 | GradNorm: 5.964
  Batch   16/48 | Loss: 3.0141 | LR: 1.68e-04 | GradNorm: 2.935
  Batch   20/48 | Loss: 3.0489 | LR: 1.64e-04 | GradNorm: 4.630
  Batch   24/48 | Loss: 3.0217 | LR: 1.60e-04 | GradNorm: 5.059
  Batch   28/48 | Loss: 2.9869 | LR: 1.55e-04 | GradNorm: 4.256
  Batch   32/48 | Loss: 2.9762 | LR: 1.51e-04 | GradNorm: 3.040
  Batch   36/48 | Loss: 3.0122 | LR: 1.46e-04 | GradNorm: 4.133
  Batch   40/48 | Loss: 3.0082 | LR: 1.42e-04 | GradNorm: 3.754
  Batch   44/48 | Loss: 3.0395 | LR: 1.38e-04 | GradNorm: 3.804
Epoch 6/10: Train=23.67%, Val=14.44%, Gap=9.23%, LR=1.34e-04
  Batch    0/48 | Loss: 2.9751 | LR: 1.33e-04 | GradNorm: 4.160
  Batch    4/48 | Loss: 2.9590 | LR: 1.29e-04 | GradNorm: 4.080
  Batch    8/48 | Loss: 2.9239 | LR: 1.25e-04 | GradNorm: 2.594
  Batch   12/48 | Loss: 2.8727 | LR: 1.20e-04 | GradNorm: 4.047
  Batch   16/48 | Loss: 2.8709 | LR: 1.16e-04 | GradNorm: 3.117
  Batch   20/48 | Loss: 2.9064 | LR: 1.11e-04 | GradNorm: 2.849
  Batch   24/48 | Loss: 2.9145 | LR: 1.07e-04 | GradNorm: 3.018
  Batch   28/48 | Loss: 2.9478 | LR: 1.03e-04 | GradNorm: 4.939
  Batch   32/48 | Loss: 2.9160 | LR: 9.86e-05 | GradNorm: 4.514
  Batch   36/48 | Loss: 2.9332 | LR: 9.44e-05 | GradNorm: 5.649
  Batch   40/48 | Loss: 2.8973 | LR: 9.02e-05 | GradNorm: 4.149
  Batch   44/48 | Loss: 2.8471 | LR: 8.61e-05 | GradNorm: 3.824
Epoch 7/10: Train=28.45%, Val=17.54%, Gap=10.91%, LR=8.30e-05
  Batch    0/48 | Loss: 2.8534 | LR: 8.20e-05 | GradNorm: 3.285
  Batch    4/48 | Loss: 2.8157 | LR: 7.80e-05 | GradNorm: 4.689
  Batch    8/48 | Loss: 2.8206 | LR: 7.40e-05 | GradNorm: 3.710
  Batch   12/48 | Loss: 2.8577 | LR: 7.01e-05 | GradNorm: 5.260
  Batch   16/48 | Loss: 2.8760 | LR: 6.63e-05 | GradNorm: 3.542
  Batch   20/48 | Loss: 2.7924 | LR: 6.26e-05 | GradNorm: 5.692
  Batch   24/48 | Loss: 2.7940 | LR: 5.89e-05 | GradNorm: 3.905
  Batch   28/48 | Loss: 2.8299 | LR: 5.53e-05 | GradNorm: 4.803
  Batch   32/48 | Loss: 2.8173 | LR: 5.18e-05 | GradNorm: 4.200
  Batch   36/48 | Loss: 2.7924 | LR: 4.84e-05 | GradNorm: 4.485
  Batch   40/48 | Loss: 2.7296 | LR: 4.50e-05 | GradNorm: 3.597
  Batch   44/48 | Loss: 2.7890 | LR: 4.18e-05 | GradNorm: 3.953
Epoch 8/10: Train=31.51%, Val=17.32%, Gap=14.19%, LR=3.94e-05
  Batch    0/48 | Loss: 2.7589 | LR: 3.87e-05 | GradNorm: 3.978
  Batch    4/48 | Loss: 2.7607 | LR: 3.56e-05 | GradNorm: 1.941
  Batch    8/48 | Loss: 2.8013 | LR: 3.27e-05 | GradNorm: 4.563
  Batch   12/48 | Loss: 2.7507 | LR: 2.99e-05 | GradNorm: 3.027
  Batch   16/48 | Loss: 2.6872 | LR: 2.72e-05 | GradNorm: 2.481
  Batch   20/48 | Loss: 2.6832 | LR: 2.46e-05 | GradNorm: 3.653
  Batch   24/48 | Loss: 2.7377 | LR: 2.21e-05 | GradNorm: 4.636
  Batch   28/48 | Loss: 2.7646 | LR: 1.98e-05 | GradNorm: 6.194
  Batch   32/48 | Loss: 2.7340 | LR: 1.75e-05 | GradNorm: 5.831
  Batch   36/48 | Loss: 2.7354 | LR: 1.54e-05 | GradNorm: 4.550
  Batch   40/48 | Loss: 2.7127 | LR: 1.35e-05 | GradNorm: 5.198
  Batch   44/48 | Loss: 2.7320 | LR: 1.16e-05 | GradNorm: 3.165
Epoch 9/10: Train=33.75%, Val=18.87%, Gap=14.88%, LR=1.03e-05
  Batch    0/48 | Loss: 2.7355 | LR: 9.91e-06 | GradNorm: 3.320
  Batch    4/48 | Loss: 2.7470 | LR: 8.33e-06 | GradNorm: 2.407
  Batch    8/48 | Loss: 2.6947 | LR: 6.88e-06 | GradNorm: 4.595
  Batch   12/48 | Loss: 2.6989 | LR: 5.57e-06 | GradNorm: 4.430
  Batch   16/48 | Loss: 2.7048 | LR: 4.40e-06 | GradNorm: 2.362
  Batch   20/48 | Loss: 2.7126 | LR: 3.36e-06 | GradNorm: 4.369
  Batch   24/48 | Loss: 2.7167 | LR: 2.47e-06 | GradNorm: 2.876
  Batch   28/48 | Loss: 2.7467 | LR: 1.72e-06 | GradNorm: 3.373
  Batch   32/48 | Loss: 2.7374 | LR: 1.11e-06 | GradNorm: 3.056
  Batch   36/48 | Loss: 2.7107 | LR: 6.44e-07 | GradNorm: 2.092
  Batch   40/48 | Loss: 2.7024 | LR: 3.20e-07 | GradNorm: 2.433
  Batch   44/48 | Loss: 2.7078 | LR: 1.40e-07 | GradNorm: 2.892
Epoch 10/10: Train=34.51%, Val=18.95%, Gap=15.56%, LR=1.00e-07
Best validation accuracy: 18.95%
