=== W&B Sweep Run: LR=0.000447 ===
Using device: cuda
Auto-selected 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer', 'butterfly', 'camel', 'canoe', 'chair', 'compass', 'cookie', 'drums', 'eyeglasses', 'face', 'fan', 'fence', 'fish', 'flying saucer', 'grapes', 'hand', 'hat', 'horse', 'light bulb', 'lighthouse', 'line', 'marker', 'mountain', 'mouse', 'parachute', 'passport', 'pliers', 'potato', 'sea turtle', 'snowflake', 'spider', 'square', 'steak', 'swing set', 'sword', 'television', 'tennis racquet', 'toothbrush', 'train', 'umbrella', 'washing machine']
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000
Loading QuickDraw dataset from: ../data/quickdraw_parquet
Available classes: 344
Using 50 classes: ['aircraft carrier', 'arm', 'asparagus', 'backpack', 'banana', 'basketball', 'bottlecap', 'bread', 'broom', 'bulldozer']...
Using per-class Parquet format (recommended)...
  Loading 50 classes concurrently from per-class files...
    aircraft carrier: 1200 samples
    arm: 1200 samples
    asparagus: 1200 samples
    backpack: 1200 samples
    banana: 1200 samples
    basketball: 1200 samples
    bottlecap: 1200 samples
    bread: 1200 samples
    broom: 1200 samples
    bulldozer: 1200 samples
    butterfly: 1200 samples
    camel: 1200 samples
    canoe: 1200 samples
    chair: 1200 samples
    compass: 1200 samples
    cookie: 1200 samples
    drums: 1200 samples
    eyeglasses: 1200 samples
    face: 1200 samples
    fan: 1200 samples
    fence: 1200 samples
    fish: 1200 samples
    flying saucer: 1200 samples
    grapes: 1200 samples
    hand: 1200 samples
    hat: 1200 samples
    horse: 1200 samples
    light bulb: 1200 samples
    lighthouse: 1200 samples
    line: 1200 samples
    marker: 1200 samples
    mountain: 1200 samples
    mouse: 1200 samples
    parachute: 1200 samples
    passport: 1200 samples
    pliers: 1200 samples
    potato: 1200 samples
    sea turtle: 1200 samples
    snowflake: 1200 samples
    spider: 1200 samples
    square: 1200 samples
    steak: 1200 samples
    swing set: 1200 samples
    sword: 1200 samples
    television: 1200 samples
    tennis racquet: 1200 samples
    toothbrush: 1200 samples
    train: 1200 samples
    umbrella: 1200 samples
    washing machine: 1200 samples
  Per-class loading complete (concurrent): 60000 samples
Total samples: 60000

Loading train/val split...
Pre-computed split not found, computing on-the-fly...
Run 'python scripts/precompute_splits.py' to speed up future runs
  aircraft carrier: 1000 train, 200 val samples
  arm: 1000 train, 200 val samples
  asparagus: 1000 train, 200 val samples
  backpack: 1000 train, 200 val samples
  banana: 1000 train, 200 val samples
  basketball: 1000 train, 200 val samples
  bottlecap: 1000 train, 200 val samples
  bread: 1000 train, 200 val samples
  broom: 1000 train, 200 val samples
  bulldozer: 1000 train, 200 val samples
  butterfly: 1000 train, 200 val samples
  camel: 1000 train, 200 val samples
  canoe: 1000 train, 200 val samples
  chair: 1000 train, 200 val samples
  compass: 1000 train, 200 val samples
  cookie: 1000 train, 200 val samples
  drums: 1000 train, 200 val samples
  eyeglasses: 1000 train, 200 val samples
  face: 1000 train, 200 val samples
  fan: 1000 train, 200 val samples
  fence: 1000 train, 200 val samples
  fish: 1000 train, 200 val samples
  flying saucer: 1000 train, 200 val samples
  grapes: 1000 train, 200 val samples
  hand: 1000 train, 200 val samples
  hat: 1000 train, 200 val samples
  horse: 1000 train, 200 val samples
  light bulb: 1000 train, 200 val samples
  lighthouse: 1000 train, 200 val samples
  line: 1000 train, 200 val samples
  marker: 1000 train, 200 val samples
  mountain: 1000 train, 200 val samples
  mouse: 1000 train, 200 val samples
  parachute: 1000 train, 200 val samples
  passport: 1000 train, 200 val samples
  pliers: 1000 train, 200 val samples
  potato: 1000 train, 200 val samples
  sea turtle: 1000 train, 200 val samples
  snowflake: 1000 train, 200 val samples
  spider: 1000 train, 200 val samples
  square: 1000 train, 200 val samples
  steak: 1000 train, 200 val samples
  swing set: 1000 train, 200 val samples
  sword: 1000 train, 200 val samples
  television: 1000 train, 200 val samples
  tennis racquet: 1000 train, 200 val samples
  toothbrush: 1000 train, 200 val samples
  train: 1000 train, 200 val samples
  umbrella: 1000 train, 200 val samples
  washing machine: 1000 train, 200 val samples

Dataloaders created:
  Training: 48 batches (50000 samples)
  Validation: 10 batches (10000 samples)
Dataset: 50 classes, 48 train batches

Building model:
   Architecture: vit_tiny_patch16_224
   Input channels: 1 (grayscale)
   Output classes: 50
Creating vit_tiny_patch16_224 with 50 classes
   Single-channel input: 1 â†’ 3 channel conversion
   Pretrained: False
   Drop path rate: 0.1
   Random initialization for single-channel weights

Model info:
   Total parameters: 5,435,762
   Trainable parameters: 5,435,762
   Model size: 20.74 MB
Using 4 GPUs
Setting up deterministic training (seed=42)
Created AdamW optimizer:
   Learning rate: 0.00044651802919053104
   Weight decay: 0.05
   Decay params: 52
   No-decay params: 100
Created learning rate scheduler (step-based):
   Warmup steps: 96
   Total steps: 480
   Steps per epoch: 48
Created loss function:
   Type: CrossEntropyLoss
   Label smoothing: 0.1
Created AMP gradient scaler
Trainer initialized:
  Model: wandb_lr_0.000447
  Train batches: 48
  Val batches: 10
  Save directory: experiments/wandb_runs
Starting training for 10 epochs...
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Deterministic behavior was enabled with either `torch.use_deterministic_algorithms(True)` or `at::Context::setDeterministicAlgorithms(true)`, but this operation is not deterministic because it uses CuBLAS and you have CUDA >= 10.2. To enable deterministic behavior in this case, you must set an environment variable before running your PyTorch application: CUBLAS_WORKSPACE_CONFIG=:4096:8 or CUBLAS_WORKSPACE_CONFIG=:16:8. For more information, go to https://docs.nvidia.com/cuda/cublas/index.html#results-reproducibility (Triggered internally at /pytorch/aten/src/ATen/Context.cpp:233.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/autograd/graph.py:829: UserWarning: Memory Efficient attention defaults to a non-deterministic algorithm. To explicitly enable determinism call torch.use_deterministic_algorithms(True, warn_only=False). (Triggered internally at /pytorch/aten/src/ATen/native/transformers/cuda/attention_backward.cu:775.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  Batch    0/48 | Loss: 3.9441 | LR: 9.07e-06 | GradNorm: 1.412
  Batch    4/48 | Loss: 3.9208 | LR: 2.75e-05 | GradNorm: 1.001
  Batch    8/48 | Loss: 3.9279 | LR: 4.59e-05 | GradNorm: 0.955
  Batch   12/48 | Loss: 3.9148 | LR: 6.43e-05 | GradNorm: 0.688
  Batch   16/48 | Loss: 3.9208 | LR: 8.27e-05 | GradNorm: 0.606
  Batch   20/48 | Loss: 3.9163 | LR: 1.01e-04 | GradNorm: 0.630
  Batch   24/48 | Loss: 3.9119 | LR: 1.20e-04 | GradNorm: 0.590
  Batch   28/48 | Loss: 3.9180 | LR: 1.38e-04 | GradNorm: 0.557
  Batch   32/48 | Loss: 3.9105 | LR: 1.56e-04 | GradNorm: 0.503
  Batch   36/48 | Loss: 3.9061 | LR: 1.75e-04 | GradNorm: 0.547
  Batch   40/48 | Loss: 3.8860 | LR: 1.93e-04 | GradNorm: 0.577
  Batch   44/48 | Loss: 3.8427 | LR: 2.12e-04 | GradNorm: 0.905
Epoch 1/10: Train=2.57%, Val=5.83%, Gap=-3.26%, LR=2.25e-04
  Batch    0/48 | Loss: 3.7706 | LR: 2.30e-04 | GradNorm: 0.872
  Batch    4/48 | Loss: 3.9159 | LR: 2.49e-04 | GradNorm: 5.540
  Batch    8/48 | Loss: 3.9323 | LR: 2.67e-04 | GradNorm: 4.324
  Batch   12/48 | Loss: 3.8024 | LR: 2.85e-04 | GradNorm: 2.592
  Batch   16/48 | Loss: 3.7549 | LR: 3.04e-04 | GradNorm: 1.492
  Batch   20/48 | Loss: 3.8048 | LR: 3.22e-04 | GradNorm: 2.730
  Batch   24/48 | Loss: 3.7383 | LR: 3.41e-04 | GradNorm: 3.143
  Batch   28/48 | Loss: 3.6878 | LR: 3.59e-04 | GradNorm: 1.738
  Batch   32/48 | Loss: 3.6742 | LR: 3.77e-04 | GradNorm: 1.988
  Batch   36/48 | Loss: 3.6481 | LR: 3.96e-04 | GradNorm: 2.511
  Batch   40/48 | Loss: 3.6070 | LR: 4.14e-04 | GradNorm: 1.824
  Batch   44/48 | Loss: 3.5252 | LR: 4.33e-04 | GradNorm: 1.724
/localdrive/users/dkreinov/quickdraw-mobilevit-quant/.venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:209: UserWarning: The epoch parameter in `scheduler.step()` was not necessary and is being deprecated where possible. Please use `scheduler.step()` to step the scheduler. During the deprecation, if epoch is different from None, the closed form is used instead of the new chainable form, where available. Please open an issue if you are unable to replicate your use case: https://github.com/pytorch/pytorch/issues/new/choose.
  warnings.warn(EPOCH_DEPRECATION_WARNING, UserWarning)
Epoch 2/10: Train=6.62%, Val=6.70%, Gap=-0.08%, LR=4.47e-04
  Batch    0/48 | Loss: 3.5686 | LR: 4.47e-04 | GradNorm: 3.869
  Batch    4/48 | Loss: 3.6042 | LR: 4.46e-04 | GradNorm: 4.141
  Batch    8/48 | Loss: 3.4640 | LR: 4.46e-04 | GradNorm: 2.079
  Batch   12/48 | Loss: 3.4964 | LR: 4.45e-04 | GradNorm: 1.347
  Batch   16/48 | Loss: 3.4497 | LR: 4.44e-04 | GradNorm: 4.488
  Batch   20/48 | Loss: 3.4810 | LR: 4.43e-04 | GradNorm: 9.398
  Batch   24/48 | Loss: 3.3493 | LR: 4.42e-04 | GradNorm: 1.942
  Batch   28/48 | Loss: 3.3407 | LR: 4.40e-04 | GradNorm: 3.744
  Batch   32/48 | Loss: 3.3659 | LR: 4.38e-04 | GradNorm: 2.808
  Batch   36/48 | Loss: 3.3212 | LR: 4.36e-04 | GradNorm: 2.753
  Batch   40/48 | Loss: 3.3348 | LR: 4.34e-04 | GradNorm: 4.084
  Batch   44/48 | Loss: 3.3258 | LR: 4.32e-04 | GradNorm: 2.386
Epoch 3/10: Train=12.93%, Val=9.49%, Gap=3.44%, LR=4.30e-04
  Batch    0/48 | Loss: 3.3616 | LR: 4.29e-04 | GradNorm: 4.201
  Batch    4/48 | Loss: 3.2534 | LR: 4.26e-04 | GradNorm: 1.363
  Batch    8/48 | Loss: 3.2335 | LR: 4.23e-04 | GradNorm: 2.103
  Batch   12/48 | Loss: 3.2617 | LR: 4.19e-04 | GradNorm: 4.723
  Batch   16/48 | Loss: 3.3099 | LR: 4.16e-04 | GradNorm: 6.088
  Batch   20/48 | Loss: 3.2289 | LR: 4.12e-04 | GradNorm: 3.314
  Batch   24/48 | Loss: 3.3415 | LR: 4.08e-04 | GradNorm: 4.548
  Batch   28/48 | Loss: 3.2437 | LR: 4.04e-04 | GradNorm: 5.763
  Batch   32/48 | Loss: 3.2210 | LR: 3.99e-04 | GradNorm: 2.368
  Batch   36/48 | Loss: 3.2134 | LR: 3.95e-04 | GradNorm: 2.730
  Batch   40/48 | Loss: 3.2285 | LR: 3.90e-04 | GradNorm: 2.714
  Batch   44/48 | Loss: 3.1451 | LR: 3.85e-04 | GradNorm: 2.250
Epoch 4/10: Train=17.20%, Val=12.62%, Gap=4.58%, LR=3.81e-04
  Batch    0/48 | Loss: 3.1200 | LR: 3.80e-04 | GradNorm: 2.191
  Batch    4/48 | Loss: 3.1228 | LR: 3.75e-04 | GradNorm: 3.371
  Batch    8/48 | Loss: 3.0748 | LR: 3.69e-04 | GradNorm: 1.877
  Batch   12/48 | Loss: 3.0727 | LR: 3.63e-04 | GradNorm: 2.232
  Batch   16/48 | Loss: 3.1290 | LR: 3.58e-04 | GradNorm: 2.867
  Batch   20/48 | Loss: 3.0730 | LR: 3.52e-04 | GradNorm: 2.047
  Batch   24/48 | Loss: 3.0838 | LR: 3.46e-04 | GradNorm: 2.553
  Batch   28/48 | Loss: 3.1609 | LR: 3.40e-04 | GradNorm: 4.931
  Batch   32/48 | Loss: 3.0121 | LR: 3.33e-04 | GradNorm: 2.182
  Batch   36/48 | Loss: 3.0737 | LR: 3.27e-04 | GradNorm: 2.499
  Batch   40/48 | Loss: 3.0251 | LR: 3.20e-04 | GradNorm: 1.744
  Batch   44/48 | Loss: 3.0157 | LR: 3.14e-04 | GradNorm: 6.344
Epoch 5/10: Train=22.05%, Val=15.84%, Gap=6.21%, LR=3.09e-04
  Batch    0/48 | Loss: 2.9475 | LR: 3.07e-04 | GradNorm: 3.262
  Batch    4/48 | Loss: 2.8605 | LR: 3.00e-04 | GradNorm: 1.781
  Batch    8/48 | Loss: 2.9456 | LR: 2.93e-04 | GradNorm: 5.224
  Batch   12/48 | Loss: 2.9164 | LR: 2.86e-04 | GradNorm: 3.103
  Batch   16/48 | Loss: 2.8995 | LR: 2.79e-04 | GradNorm: 3.079
  Batch   20/48 | Loss: 2.8654 | LR: 2.72e-04 | GradNorm: 2.763
  Batch   24/48 | Loss: 2.9093 | LR: 2.65e-04 | GradNorm: 6.407
  Batch   28/48 | Loss: 2.8394 | LR: 2.58e-04 | GradNorm: 3.623
  Batch   32/48 | Loss: 2.8412 | LR: 2.51e-04 | GradNorm: 3.346
  Batch   36/48 | Loss: 2.8437 | LR: 2.43e-04 | GradNorm: 1.486
  Batch   40/48 | Loss: 2.8203 | LR: 2.36e-04 | GradNorm: 1.679
  Batch   44/48 | Loss: 2.8820 | LR: 2.29e-04 | GradNorm: 2.793
Epoch 6/10: Train=27.92%, Val=17.88%, Gap=10.04%, LR=2.23e-04
  Batch    0/48 | Loss: 2.8082 | LR: 2.21e-04 | GradNorm: 2.395
  Batch    4/48 | Loss: 2.8148 | LR: 2.14e-04 | GradNorm: 3.857
  Batch    8/48 | Loss: 2.7815 | LR: 2.07e-04 | GradNorm: 3.177
  Batch   12/48 | Loss: 2.7151 | LR: 2.00e-04 | GradNorm: 3.724
  Batch   16/48 | Loss: 2.7341 | LR: 1.92e-04 | GradNorm: 4.021
  Batch   20/48 | Loss: 2.7677 | LR: 1.85e-04 | GradNorm: 4.987
  Batch   24/48 | Loss: 2.8010 | LR: 1.78e-04 | GradNorm: 6.026
  Batch   28/48 | Loss: 2.7694 | LR: 1.71e-04 | GradNorm: 4.415
  Batch   32/48 | Loss: 2.7426 | LR: 1.64e-04 | GradNorm: 2.966
  Batch   36/48 | Loss: 2.7755 | LR: 1.57e-04 | GradNorm: 5.704
  Batch   40/48 | Loss: 2.7377 | LR: 1.50e-04 | GradNorm: 3.367
  Batch   44/48 | Loss: 2.7428 | LR: 1.43e-04 | GradNorm: 4.533
Epoch 7/10: Train=31.89%, Val=22.49%, Gap=9.40%, LR=1.38e-04
  Batch    0/48 | Loss: 2.7196 | LR: 1.36e-04 | GradNorm: 4.169
  Batch    4/48 | Loss: 2.6721 | LR: 1.30e-04 | GradNorm: 4.200
  Batch    8/48 | Loss: 2.6750 | LR: 1.23e-04 | GradNorm: 4.010
  Batch   12/48 | Loss: 2.6982 | LR: 1.16e-04 | GradNorm: 3.865
  Batch   16/48 | Loss: 2.7019 | LR: 1.10e-04 | GradNorm: 3.021
  Batch   20/48 | Loss: 2.6191 | LR: 1.04e-04 | GradNorm: 3.801
  Batch   24/48 | Loss: 2.6195 | LR: 9.78e-05 | GradNorm: 4.878
  Batch   28/48 | Loss: 2.6707 | LR: 9.18e-05 | GradNorm: 5.485
  Batch   32/48 | Loss: 2.6385 | LR: 8.60e-05 | GradNorm: 3.545
  Batch   36/48 | Loss: 2.6220 | LR: 8.03e-05 | GradNorm: 3.172
  Batch   40/48 | Loss: 2.5629 | LR: 7.48e-05 | GradNorm: 2.849
  Batch   44/48 | Loss: 2.6354 | LR: 6.94e-05 | GradNorm: 3.829
Epoch 8/10: Train=34.96%, Val=22.22%, Gap=12.74%, LR=6.55e-05
  Batch    0/48 | Loss: 2.5974 | LR: 6.42e-05 | GradNorm: 3.502
  Batch    4/48 | Loss: 2.5880 | LR: 5.92e-05 | GradNorm: 4.462
  Batch    8/48 | Loss: 2.6445 | LR: 5.43e-05 | GradNorm: 5.474
  Batch   12/48 | Loss: 2.5800 | LR: 4.96e-05 | GradNorm: 3.997
  Batch   16/48 | Loss: 2.5459 | LR: 4.51e-05 | GradNorm: 4.130
  Batch   20/48 | Loss: 2.5410 | LR: 4.08e-05 | GradNorm: 2.914
  Batch   24/48 | Loss: 2.5689 | LR: 3.67e-05 | GradNorm: 1.979
  Batch   28/48 | Loss: 2.5800 | LR: 3.28e-05 | GradNorm: 2.914
  Batch   32/48 | Loss: 2.5447 | LR: 2.91e-05 | GradNorm: 2.420
  Batch   36/48 | Loss: 2.5480 | LR: 2.56e-05 | GradNorm: 1.847
  Batch   40/48 | Loss: 2.5442 | LR: 2.23e-05 | GradNorm: 2.867
  Batch   44/48 | Loss: 2.5850 | LR: 1.92e-05 | GradNorm: 3.504
Epoch 9/10: Train=37.98%, Val=23.37%, Gap=14.61%, LR=1.71e-05
  Batch    0/48 | Loss: 2.5494 | LR: 1.64e-05 | GradNorm: 3.499
  Batch    4/48 | Loss: 2.5476 | LR: 1.38e-05 | GradNorm: 2.299
  Batch    8/48 | Loss: 2.5180 | LR: 1.14e-05 | GradNorm: 1.152
  Batch   12/48 | Loss: 2.5306 | LR: 9.19e-06 | GradNorm: 1.945
  Batch   16/48 | Loss: 2.5238 | LR: 7.24e-06 | GradNorm: 2.163
  Batch   20/48 | Loss: 2.5505 | LR: 5.52e-06 | GradNorm: 3.377
  Batch   24/48 | Loss: 2.5691 | LR: 4.04e-06 | GradNorm: 3.550
  Batch   28/48 | Loss: 2.5685 | LR: 2.79e-06 | GradNorm: 2.152
  Batch   32/48 | Loss: 2.5786 | LR: 1.78e-06 | GradNorm: 2.545
  Batch   36/48 | Loss: 2.5246 | LR: 1.00e-06 | GradNorm: 2.781
  Batch   40/48 | Loss: 2.5103 | LR: 4.66e-07 | GradNorm: 1.819
  Batch   44/48 | Loss: 2.5184 | LR: 1.67e-07 | GradNorm: 2.333
Epoch 10/10: Train=38.95%, Val=23.74%, Gap=15.21%, LR=1.00e-07
Best validation accuracy: 23.74%
